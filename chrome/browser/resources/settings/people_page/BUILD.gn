# Copyright 2018 The Chromium Authors. All rights reserved.
# Use of this source code is governed by a BSD-style license that can be
# found in the LICENSE file.

import("//third_party/closure_compiler/compile_js.gni")

js_type_check("closure_compile") {
  deps = [
    ":people_page",
    ":profile_info_browser_proxy",
    ":signout_dialog",
    ":sync_account_control",
    ":sync_browser_proxy",
    ":sync_controls",
    ":sync_page",
  ]

  if (!is_chromeos) {
    deps += [
      ":import_data_browser_proxy",
      ":import_data_dialog",
      ":manage_profile",
      ":manage_profile_browser_proxy",
    ]
  }

  if (is_chromeos) {
    deps += [ ":account_manager_browser_proxy" ]
  }
}

js_library("account_manager_browser_proxy") {
  deps = [ "//ui/webui/resources/js:cr" ]
}

js_library("import_data_browser_proxy") {
  deps = [ "//ui/webui/resources/js:cr" ]
}

js_library("manage_profile") {
  deps = [
    ":manage_profile_browser_proxy",
    ":sync_browser_proxy",
    "..:route",
    "..:router",
    "//ui/webui/resources/js:cr",
    "//ui/webui/resources/js:web_ui_listener_behavior",
  ]
}

js_library("manage_profile_browser_proxy") {
  deps = [
    "//ui/webui/resources/cr_elements/cr_profile_avatar_selector:cr_profile_avatar_selector",
    "//ui/webui/resources/js:cr",
  ]
}

js_library("people_page") {
  deps = [
    ":profile_info_browser_proxy",
    ":signout_dialog",
    ":sync_browser_proxy",
    "..:open_window_proxy",
    "..:page_visibility",
    "..:route",
    "..:router",
    "../settings_page:settings_animated_pages",
    "//ui/webui/resources/cr_components/chromeos/quick_unlock:lock_screen_constants",
    "//ui/webui/resources/cr_elements/chromeos/cr_picture:cr_png_behavior",
    "//ui/webui/resources/cr_elements/cr_toast:cr_toast",
    "//ui/webui/resources/js:assert",
    "//ui/webui/resources/js:i18n_behavior",
    "//ui/webui/resources/js:icon",
    "//ui/webui/resources/js:load_time_data",
    "//ui/webui/resources/js:web_ui_listener_behavior",
    "//ui/webui/resources/js/cr/ui:focus_without_ink",
  ]
}

js_library("profile_info_browser_proxy") {
  deps = [ "//ui/webui/resources/js:cr" ]
}

js_library("signout_dialog") {
  deps = [
    ":profile_info_browser_proxy",
    ":sync_browser_proxy",
    "//ui/webui/resources/cr_elements/cr_dialog:cr_dialog",
    "//ui/webui/resources/cr_elements/cr_expand_button:cr_expand_button",
    "//ui/webui/resources/js:i18n_behavior",
    "//ui/webui/resources/js:load_time_data",
    "//ui/webui/resources/js:util",
    "//ui/webui/resources/js:web_ui_listener_behavior",
  ]
}

js_library("sync_page") {
  deps = [
    ":sync_account_control",
    ":sync_browser_proxy",
    "..:page_visibility",
    "..:router",
    "../settings_page:settings_animated_pages",
    "//ui/webui/resources/cr_elements/cr_expand_button:cr_expand_button",
    "//ui/webui/resources/cr_elements/cr_input:cr_input",
    "//ui/webui/resources/js:assert",
    "//ui/webui/resources/js:load_time_data",
    "//ui/webui/resources/js:util",
    "//ui/webui/resources/js:web_ui_listener_behavior",
  ]
}

js_library("sync_browser_proxy") {
  deps = [
    "//ui/webui/resources/js:cr",
    "//ui/webui/resources/js:load_time_data",
  ]

  externs_list = [ "$externs_path/metrics_private.js" ]
}

js_library("sync_controls") {
  deps = [ "..:router" ]
}

js_library("import_data_dialog") {
  deps = [
    ":import_data_browser_proxy",
    "../controls:settings_checkbox",
    "../prefs:prefs_behavior",
    "//ui/webui/resources/js:i18n_behavior",
    "//ui/webui/resources/js:web_ui_listener_behavior",
  ]
}

js_library("sync_account_control") {
  deps = [
    ":profile_info_browser_proxy",
    ":sync_browser_proxy",
    "..:router",
    "../prefs:prefs_behavior",
    "//ui/webui/resources/cr_elements/cr_action_menu:cr_action_menu",
    "//ui/webui/resources/js:icon",
    "//ui/webui/resources/js:load_time_data",
    "//ui/webui/resources/js:web_ui_listener_behavior",
  ]
}

# TODO(crbug.com/1026426): Fix and enable.
#js_type_check("closure_compile_module") {
#  is_polymer3 = true
#  deps = [
#    ":account_manager_browser_proxy.m",
#    ":import_data_browser_proxy.m",
#    ":import_data_dialog.m",
#    ":manage_profile.m",
#    ":manage_profile_browser_proxy.m",
#    ":people_page.m",
#    ":profile_info_browser_proxy.m",
#    ":signout_dialog.m",
#    ":sync_account_control.m",
#    ":sync_browser_proxy.m",
#    ":sync_controls.m",
#    ":sync_page.m",
#  ]
#}

js_library("account_manager_browser_proxy.m") {
  sources = [ "$root_gen_dir/chrome/browser/resources/settings/people_page/account_manager_browser_proxy.m.js" ]
  deps = [
    # TODO: Fill those in.
  ]
  extra_deps = [ ":modulize" ]
}

js_library("import_data_browser_proxy.m") {
  sources = [ "$root_gen_dir/chrome/browser/resources/settings/people_page/import_data_browser_proxy.m.js" ]
  deps = [
    # TODO: Fill those in.
  ]
  extra_deps = [ ":modulize" ]
}

js_library("import_data_dialog.m") {
  sources = [ "$root_gen_dir/chrome/browser/resources/settings/people_page/import_data_dialog.m.js" ]
  deps = [
    # TODO: Fill those in.
  ]
  extra_deps = [ ":import_data_dialog_module" ]
}

js_library("manage_profile.m") {
  sources = [ "$root_gen_dir/chrome/browser/resources/settings/people_page/manage_profile.m.js" ]
  deps = [
    # TODO: Fill those in.
  ]
  extra_deps = [ ":manage_profile_module" ]
}

js_library("manage_profile_browser_proxy.m") {
  sources = [ "$root_gen_dir/chrome/browser/resources/settings/people_page/manage_profile_browser_proxy.m.js" ]
  deps = [
    # TODO: Fill those in.
  ]
  extra_deps = [ ":modulize" ]
}

js_library("people_page.m") {
  sources = [ "$root_gen_dir/chrome/browser/resources/settings/people_page/people_page.m.js" ]
  deps = [
    # TODO: Fill those in.
  ]
  extra_deps = [ ":people_page_module" ]
}

js_library("profile_info_browser_proxy.m") {
  sources = [ "$root_gen_dir/chrome/browser/resources/settings/people_page/profile_info_browser_proxy.m.js" ]
  deps = [
    # TODO: Fill those in.
  ]
  extra_deps = [ ":modulize" ]
}

js_library("signout_dialog.m") {
  sources = [ "$root_gen_dir/chrome/browser/resources/settings/people_page/signout_dialog.m.js" ]
  deps = [
    # TODO: Fill those in.
  ]
  extra_deps = [ ":signout_dialog_module" ]
}

js_library("sync_account_control.m") {
  sources = [ "$root_gen_dir/chrome/browser/resources/settings/people_page/sync_account_control.m.js" ]
  deps = [
    # TODO: Fill those in.
  ]
  extra_deps = [ ":sync_account_control_module" ]
}

js_library("sync_browser_proxy.m") {
  sources = [ "$root_gen_dir/chrome/browser/resources/settings/people_page/sync_browser_proxy.m.js" ]
  deps = [
    # TODO: Fill those in.
  ]
  extra_deps = [ ":modulize" ]
}

js_library("sync_controls.m") {
  sources = [ "$root_gen_dir/chrome/browser/resources/settings/people_page/sync_controls.m.js" ]
  deps = [
    # TODO: Fill those in.
  ]
  extra_deps = [ ":sync_controls_module" ]
}

js_library("sync_page.m") {
  sources = [ "$root_gen_dir/chrome/browser/resources/settings/people_page/sync_page.m.js" ]
  deps = [
    # TODO: Fill those in.
  ]
  extra_deps = [ ":sync_page_module" ]
}

import("//tools/polymer/polymer.gni")

group("polymer3_elements") {
  deps = [
    ":import_data_dialog_module",
    ":manage_profile_module",
    ":modulize",
    ":people_page_module",
    ":signout_dialog_module",
    ":sync_account_control_module",
    ":sync_controls_module",
    ":sync_page_module",
  ]
}

polymer_modulizer("import_data_dialog") {
  js_file = "import_data_dialog.js"
  html_file = "import_data_dialog.html"
  html_type = "dom-module"
}

polymer_modulizer("manage_profile") {
  js_file = "manage_profile.js"
  html_file = "manage_profile.html"
  html_type = "dom-module"
}

polymer_modulizer("people_page") {
  js_file = "people_page.js"
  html_file = "people_page.html"
  html_type = "dom-module"
}

polymer_modulizer("signout_dialog") {
  js_file = "signout_dialog.js"
  html_file = "signout_dialog.html"
  html_type = "dom-module"
}

polymer_modulizer("sync_account_control") {
  js_file = "sync_account_control.js"
  html_file = "sync_account_control.html"
  html_type = "dom-module"
}

polymer_modulizer("sync_controls") {
  js_file = "sync_controls.js"
  html_file = "sync_controls.html"
  html_type = "dom-module"
}

polymer_modulizer("sync_page") {
  js_file = "sync_page.js"
  html_file = "sync_page.html"
  html_type = "dom-module"
}

import("//ui/webui/resources/tools/js_modulizer.gni")

js_modulizer("modulize") {
  input_files = [
    "account_manager_browser_proxy.js",
    "import_data_browser_proxy.js",
    "manage_profile_browser_proxy.js",
    "profile_info_browser_proxy.js",
    "sync_browser_proxy.js",
  ]
}
