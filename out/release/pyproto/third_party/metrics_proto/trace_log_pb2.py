# -*- coding: utf-8 -*-
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: trace_log.proto

import sys
_b=sys.version_info[0]<3 and (lambda x:x) or (lambda x:x.encode('latin1'))
from google.protobuf import descriptor as _descriptor
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()




DESCRIPTOR = _descriptor.FileDescriptor(
  name='trace_log.proto',
  package='metrics',
  syntax='proto2',
  serialized_options=_b('\n\037org.chromium.components.metricsB\016TraceLogProtosH\003'),
  serialized_pb=_b('\n\x0ftrace_log.proto\x12\x07metrics\"\"\n\x08TraceLog\x12\x10\n\x08raw_data\x18\x01 \x01(\x0cJ\x04\x08\x03\x10\x04\x42\x33\n\x1forg.chromium.components.metricsB\x0eTraceLogProtosH\x03')
)




_TRACELOG = _descriptor.Descriptor(
  name='TraceLog',
  full_name='metrics.TraceLog',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='raw_data', full_name='metrics.TraceLog.raw_data', index=0,
      number=1, type=12, cpp_type=9, label=1,
      has_default_value=False, default_value=_b(""),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto2',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=28,
  serialized_end=62,
)

DESCRIPTOR.message_types_by_name['TraceLog'] = _TRACELOG
_sym_db.RegisterFileDescriptor(DESCRIPTOR)

TraceLog = _reflection.GeneratedProtocolMessageType('TraceLog', (_message.Message,), {
  'DESCRIPTOR' : _TRACELOG,
  '__module__' : 'trace_log_pb2'
  # @@protoc_insertion_point(class_scope:metrics.TraceLog)
  })
_sym_db.RegisterMessage(TraceLog)


DESCRIPTOR._options = None
# @@protoc_insertion_point(module_scope)
