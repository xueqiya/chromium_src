// services/viz/privileged/mojom/gl/gpu_host.mojom-test-utils.h is auto generated by mojom_bindings_generator.py, do not edit

// Copyright 2019 The Chromium Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.

#ifndef SERVICES_VIZ_PRIVILEGED_MOJOM_GL_GPU_HOST_MOJOM_TEST_UTILS_H_
#define SERVICES_VIZ_PRIVILEGED_MOJOM_GL_GPU_HOST_MOJOM_TEST_UTILS_H_

#include "services/viz/privileged/mojom/gl/gpu_host.mojom.h"


namespace viz {
namespace mojom {


class  GpuHostInterceptorForTesting : public GpuHost {
  virtual GpuHost* GetForwardingInterface() = 0;
  void DidInitialize(const ::gpu::GPUInfo& gpu_info, const ::gpu::GpuFeatureInfo& gpu_feature_info, const base::Optional<::gpu::GPUInfo>& gpu_info_for_hardware_gpu, const base::Optional<::gpu::GpuFeatureInfo>& gpu_feature_info_for_hardware_gpu, const ::gpu::GpuExtraInfo& gpu_extra_info) override;
  void DidFailInitialize() override;
  void DidCreateContextSuccessfully() override;
  void DidCreateOffscreenContext(const ::GURL& url) override;
  void DidDestroyOffscreenContext(const ::GURL& url) override;
  void DidDestroyChannel(int32_t client_id) override;
  void DidLoseContext(bool offscreen, ::gpu::error::ContextLostReason reason, const ::GURL& active_url) override;
  void DisableGpuCompositing() override;
  void StoreShaderToDisk(int32_t client_id, const std::string& key, const std::string& shader) override;
  void RecordLogMessage(int32_t severity, const std::string& header, const std::string& message) override;
};
class  GpuHostAsyncWaiter {
 public:
  explicit GpuHostAsyncWaiter(GpuHost* proxy);
  ~GpuHostAsyncWaiter();

 private:
  GpuHost* const proxy_;

  DISALLOW_COPY_AND_ASSIGN(GpuHostAsyncWaiter);
};




}  // namespace mojom
}  // namespace viz

#endif  // SERVICES_VIZ_PRIVILEGED_MOJOM_GL_GPU_HOST_MOJOM_TEST_UTILS_H_