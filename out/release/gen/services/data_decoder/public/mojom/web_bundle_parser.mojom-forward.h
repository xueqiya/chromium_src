// services/data_decoder/public/mojom/web_bundle_parser.mojom-forward.h is auto generated by mojom_bindings_generator.py, do not edit

// Copyright 2019 The Chromium Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.

#ifndef SERVICES_DATA_DECODER_PUBLIC_MOJOM_WEB_BUNDLE_PARSER_MOJOM_FORWARD_H_
#define SERVICES_DATA_DECODER_PUBLIC_MOJOM_WEB_BUNDLE_PARSER_MOJOM_FORWARD_H_

#include <stdint.h>

#include "mojo/public/cpp/bindings/struct_forward.h"

#include "mojo/public/cpp/bindings/deprecated_interface_types_forward.h"


#include "mojo/public/interfaces/bindings/native_struct.mojom-forward.h"






namespace data_decoder {
namespace mojom {
class BundleMetadataParseErrorDataView;

class BundleResponseParseErrorDataView;

class BundleMetadataDataView;

class BundleIndexValueDataView;

class BundleResponseLocationDataView;

class AugmentedCertificateDataView;

class VouchedSubsetDataView;

class SignedSubsetDataView;

class SubsetHashesValueDataView;

class ResourceIntegrityDataView;

class BundleResponseDataView;


enum class BundleParseErrorType : int32_t;
class BundleMetadataParseError;
using BundleMetadataParseErrorPtr = mojo::StructPtr<BundleMetadataParseError>;

class BundleResponseParseError;
using BundleResponseParseErrorPtr = mojo::InlinedStructPtr<BundleResponseParseError>;

class BundleMetadata;
using BundleMetadataPtr = mojo::StructPtr<BundleMetadata>;

class BundleIndexValue;
using BundleIndexValuePtr = mojo::StructPtr<BundleIndexValue>;

class BundleResponseLocation;
using BundleResponseLocationPtr = mojo::InlinedStructPtr<BundleResponseLocation>;

class AugmentedCertificate;
using AugmentedCertificatePtr = mojo::StructPtr<AugmentedCertificate>;

class VouchedSubset;
using VouchedSubsetPtr = mojo::StructPtr<VouchedSubset>;

class SignedSubset;
using SignedSubsetPtr = mojo::StructPtr<SignedSubset>;

class SubsetHashesValue;
using SubsetHashesValuePtr = mojo::StructPtr<SubsetHashesValue>;

class ResourceIntegrity;
using ResourceIntegrityPtr = mojo::StructPtr<ResourceIntegrity>;

class BundleResponse;
using BundleResponsePtr = mojo::StructPtr<BundleResponse>;

class WebBundleParserFactory;

using WebBundleParserFactoryPtr = mojo::InterfacePtr<WebBundleParserFactory>;
using WebBundleParserFactoryPtrInfo = mojo::InterfacePtrInfo<WebBundleParserFactory>;
using ThreadSafeWebBundleParserFactoryPtr =
    mojo::ThreadSafeInterfacePtr<WebBundleParserFactory>;

using WebBundleParserFactoryRequest = mojo::InterfaceRequest<WebBundleParserFactory>;

using WebBundleParserFactoryAssociatedPtr =
    mojo::AssociatedInterfacePtr<WebBundleParserFactory>;
using ThreadSafeWebBundleParserFactoryAssociatedPtr =
    mojo::ThreadSafeAssociatedInterfacePtr<WebBundleParserFactory>;
using WebBundleParserFactoryAssociatedPtrInfo =
    mojo::AssociatedInterfacePtrInfo<WebBundleParserFactory>;

using WebBundleParserFactoryAssociatedRequest =
    mojo::AssociatedInterfaceRequest<WebBundleParserFactory>;

class WebBundleParser;

using WebBundleParserPtr = mojo::InterfacePtr<WebBundleParser>;
using WebBundleParserPtrInfo = mojo::InterfacePtrInfo<WebBundleParser>;
using ThreadSafeWebBundleParserPtr =
    mojo::ThreadSafeInterfacePtr<WebBundleParser>;

using WebBundleParserRequest = mojo::InterfaceRequest<WebBundleParser>;

using WebBundleParserAssociatedPtr =
    mojo::AssociatedInterfacePtr<WebBundleParser>;
using ThreadSafeWebBundleParserAssociatedPtr =
    mojo::ThreadSafeAssociatedInterfacePtr<WebBundleParser>;
using WebBundleParserAssociatedPtrInfo =
    mojo::AssociatedInterfacePtrInfo<WebBundleParser>;

using WebBundleParserAssociatedRequest =
    mojo::AssociatedInterfaceRequest<WebBundleParser>;

class BundleDataSource;

using BundleDataSourcePtr = mojo::InterfacePtr<BundleDataSource>;
using BundleDataSourcePtrInfo = mojo::InterfacePtrInfo<BundleDataSource>;
using ThreadSafeBundleDataSourcePtr =
    mojo::ThreadSafeInterfacePtr<BundleDataSource>;

using BundleDataSourceRequest = mojo::InterfaceRequest<BundleDataSource>;

using BundleDataSourceAssociatedPtr =
    mojo::AssociatedInterfacePtr<BundleDataSource>;
using ThreadSafeBundleDataSourceAssociatedPtr =
    mojo::ThreadSafeAssociatedInterfacePtr<BundleDataSource>;
using BundleDataSourceAssociatedPtrInfo =
    mojo::AssociatedInterfacePtrInfo<BundleDataSource>;

using BundleDataSourceAssociatedRequest =
    mojo::AssociatedInterfaceRequest<BundleDataSource>;




}  // namespace mojom
}  // namespace data_decoder

#endif  // SERVICES_DATA_DECODER_PUBLIC_MOJOM_WEB_BUNDLE_PARSER_MOJOM_FORWARD_H_