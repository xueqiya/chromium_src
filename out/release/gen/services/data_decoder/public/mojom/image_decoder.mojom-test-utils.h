// services/data_decoder/public/mojom/image_decoder.mojom-test-utils.h is auto generated by mojom_bindings_generator.py, do not edit

// Copyright 2019 The Chromium Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.

#ifndef SERVICES_DATA_DECODER_PUBLIC_MOJOM_IMAGE_DECODER_MOJOM_TEST_UTILS_H_
#define SERVICES_DATA_DECODER_PUBLIC_MOJOM_IMAGE_DECODER_MOJOM_TEST_UTILS_H_

#include "services/data_decoder/public/mojom/image_decoder.mojom.h"


namespace data_decoder {
namespace mojom {


class  ImageDecoderInterceptorForTesting : public ImageDecoder {
  virtual ImageDecoder* GetForwardingInterface() = 0;
  void DecodeImage(const std::vector<uint8_t>& encoded_data, ImageCodec codec, bool shrink_to_fit, int64_t max_size_in_bytes, const ::gfx::Size& desired_image_frame_size, DecodeImageCallback callback) override;
  void DecodeAnimation(const std::vector<uint8_t>& encoded_data, bool shrink_to_fit, int64_t max_size_in_bytes, DecodeAnimationCallback callback) override;
};
class  ImageDecoderAsyncWaiter {
 public:
  explicit ImageDecoderAsyncWaiter(ImageDecoder* proxy);
  ~ImageDecoderAsyncWaiter();
  void DecodeImage(
      const std::vector<uint8_t>& encoded_data, ImageCodec codec, bool shrink_to_fit, int64_t max_size_in_bytes, const ::gfx::Size& desired_image_frame_size, ::SkBitmap* out_decoded_image);
  void DecodeAnimation(
      const std::vector<uint8_t>& encoded_data, bool shrink_to_fit, int64_t max_size_in_bytes, std::vector<AnimationFramePtr>* out_decoded_image);

 private:
  ImageDecoder* const proxy_;

  DISALLOW_COPY_AND_ASSIGN(ImageDecoderAsyncWaiter);
};




}  // namespace mojom
}  // namespace data_decoder

#endif  // SERVICES_DATA_DECODER_PUBLIC_MOJOM_IMAGE_DECODER_MOJOM_TEST_UTILS_H_