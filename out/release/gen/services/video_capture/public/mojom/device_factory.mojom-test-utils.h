// services/video_capture/public/mojom/device_factory.mojom-test-utils.h is auto generated by mojom_bindings_generator.py, do not edit

// Copyright 2019 The Chromium Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.

#ifndef SERVICES_VIDEO_CAPTURE_PUBLIC_MOJOM_DEVICE_FACTORY_MOJOM_TEST_UTILS_H_
#define SERVICES_VIDEO_CAPTURE_PUBLIC_MOJOM_DEVICE_FACTORY_MOJOM_TEST_UTILS_H_

#include "services/video_capture/public/mojom/device_factory.mojom.h"


namespace video_capture {
namespace mojom {


class  DeviceFactoryInterceptorForTesting : public DeviceFactory {
  virtual DeviceFactory* GetForwardingInterface() = 0;
  void GetDeviceInfos(GetDeviceInfosCallback callback) override;
  void CreateDevice(const std::string& device_id, mojo::PendingReceiver<::video_capture::mojom::Device> device_receiver, CreateDeviceCallback callback) override;
  void AddSharedMemoryVirtualDevice(const ::media::VideoCaptureDeviceInfo& device_info, mojo::PendingRemote<::video_capture::mojom::Producer> producer, bool send_buffer_handles_to_producer_as_raw_file_descriptors, mojo::PendingReceiver<::video_capture::mojom::SharedMemoryVirtualDevice> virtual_device_receiver) override;
  void AddTextureVirtualDevice(const ::media::VideoCaptureDeviceInfo& device_info, mojo::PendingReceiver<::video_capture::mojom::TextureVirtualDevice> virtual_device_receiver) override;
  void RegisterVirtualDevicesChangedObserver(mojo::PendingRemote<::video_capture::mojom::DevicesChangedObserver> observer, bool raise_event_if_virtual_devices_already_present) override;
};
class  DeviceFactoryAsyncWaiter {
 public:
  explicit DeviceFactoryAsyncWaiter(DeviceFactory* proxy);
  ~DeviceFactoryAsyncWaiter();
  void GetDeviceInfos(
      std::vector<::media::VideoCaptureDeviceInfo>* out_device_infos);
  void CreateDevice(
      const std::string& device_id, mojo::PendingReceiver<::video_capture::mojom::Device> device_receiver, DeviceAccessResultCode* out_result_code);

 private:
  DeviceFactory* const proxy_;

  DISALLOW_COPY_AND_ASSIGN(DeviceFactoryAsyncWaiter);
};




}  // namespace mojom
}  // namespace video_capture

#endif  // SERVICES_VIDEO_CAPTURE_PUBLIC_MOJOM_DEVICE_FACTORY_MOJOM_TEST_UTILS_H_