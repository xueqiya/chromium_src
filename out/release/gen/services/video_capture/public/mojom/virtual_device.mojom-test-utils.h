// services/video_capture/public/mojom/virtual_device.mojom-test-utils.h is auto generated by mojom_bindings_generator.py, do not edit

// Copyright 2019 The Chromium Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.

#ifndef SERVICES_VIDEO_CAPTURE_PUBLIC_MOJOM_VIRTUAL_DEVICE_MOJOM_TEST_UTILS_H_
#define SERVICES_VIDEO_CAPTURE_PUBLIC_MOJOM_VIRTUAL_DEVICE_MOJOM_TEST_UTILS_H_

#include "services/video_capture/public/mojom/virtual_device.mojom.h"


namespace video_capture {
namespace mojom {


class  SharedMemoryVirtualDeviceInterceptorForTesting : public SharedMemoryVirtualDevice {
  virtual SharedMemoryVirtualDevice* GetForwardingInterface() = 0;
  void RequestFrameBuffer(const ::gfx::Size& dimension, ::media::VideoPixelFormat pixel_format, ::media::mojom::PlaneStridesPtr strides, RequestFrameBufferCallback callback) override;
  void OnFrameReadyInBuffer(int32_t buffer_id, ::media::mojom::VideoFrameInfoPtr frame_info) override;
};
class  SharedMemoryVirtualDeviceAsyncWaiter {
 public:
  explicit SharedMemoryVirtualDeviceAsyncWaiter(SharedMemoryVirtualDevice* proxy);
  ~SharedMemoryVirtualDeviceAsyncWaiter();
  void RequestFrameBuffer(
      const ::gfx::Size& dimension, ::media::VideoPixelFormat pixel_format, ::media::mojom::PlaneStridesPtr strides, int32_t* out_buffer_id);

 private:
  SharedMemoryVirtualDevice* const proxy_;

  DISALLOW_COPY_AND_ASSIGN(SharedMemoryVirtualDeviceAsyncWaiter);
};


class  TextureVirtualDeviceInterceptorForTesting : public TextureVirtualDevice {
  virtual TextureVirtualDevice* GetForwardingInterface() = 0;
  void OnNewMailboxHolderBufferHandle(int32_t buffer_id, ::media::mojom::MailboxBufferHandleSetPtr mailbox_handles) override;
  void OnFrameReadyInBuffer(int32_t buffer_id, mojo::PendingRemote<::video_capture::mojom::ScopedAccessPermission> access_permission, ::media::mojom::VideoFrameInfoPtr frame_info) override;
  void OnBufferRetired(int32_t buffer_id) override;
};
class  TextureVirtualDeviceAsyncWaiter {
 public:
  explicit TextureVirtualDeviceAsyncWaiter(TextureVirtualDevice* proxy);
  ~TextureVirtualDeviceAsyncWaiter();

 private:
  TextureVirtualDevice* const proxy_;

  DISALLOW_COPY_AND_ASSIGN(TextureVirtualDeviceAsyncWaiter);
};




}  // namespace mojom
}  // namespace video_capture

#endif  // SERVICES_VIDEO_CAPTURE_PUBLIC_MOJOM_VIRTUAL_DEVICE_MOJOM_TEST_UTILS_H_