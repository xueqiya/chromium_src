// services/resource_coordinator/public/mojom/resource_coordinator_service.mojom-blink-test-utils.h is auto generated by mojom_bindings_generator.py, do not edit

// Copyright 2019 The Chromium Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.

#ifndef SERVICES_RESOURCE_COORDINATOR_PUBLIC_MOJOM_RESOURCE_COORDINATOR_SERVICE_MOJOM_BLINK_TEST_UTILS_H_
#define SERVICES_RESOURCE_COORDINATOR_PUBLIC_MOJOM_RESOURCE_COORDINATOR_SERVICE_MOJOM_BLINK_TEST_UTILS_H_

#include "services/resource_coordinator/public/mojom/resource_coordinator_service.mojom-blink.h"
#include "base/component_export.h"


namespace resource_coordinator {
namespace mojom {
namespace blink {


class COMPONENT_EXPORT(RESOURCE_COORDINATOR_PUBLIC_MOJOM_BLINK) ResourceCoordinatorServiceInterceptorForTesting : public ResourceCoordinatorService {
  virtual ResourceCoordinatorService* GetForwardingInterface() = 0;
  void BindMemoryInstrumentationCoordinatorController(mojo::PendingReceiver<::memory_instrumentation::mojom::blink::CoordinatorController> receiver) override;
  void RegisterHeapProfiler(mojo::PendingRemote<::memory_instrumentation::mojom::blink::HeapProfiler> profiler, mojo::PendingReceiver<::memory_instrumentation::mojom::blink::HeapProfilerHelper> helper_receiver) override;
};
class COMPONENT_EXPORT(RESOURCE_COORDINATOR_PUBLIC_MOJOM_BLINK) ResourceCoordinatorServiceAsyncWaiter {
 public:
  explicit ResourceCoordinatorServiceAsyncWaiter(ResourceCoordinatorService* proxy);
  ~ResourceCoordinatorServiceAsyncWaiter();

 private:
  ResourceCoordinatorService* const proxy_;

  DISALLOW_COPY_AND_ASSIGN(ResourceCoordinatorServiceAsyncWaiter);
};




}  // namespace blink
}  // namespace mojom
}  // namespace resource_coordinator

#endif  // SERVICES_RESOURCE_COORDINATOR_PUBLIC_MOJOM_RESOURCE_COORDINATOR_SERVICE_MOJOM_BLINK_TEST_UTILS_H_