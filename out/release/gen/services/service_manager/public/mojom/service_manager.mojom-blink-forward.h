// services/service_manager/public/mojom/service_manager.mojom-blink-forward.h is auto generated by mojom_bindings_generator.py, do not edit

// Copyright 2019 The Chromium Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.

#ifndef SERVICES_SERVICE_MANAGER_PUBLIC_MOJOM_SERVICE_MANAGER_MOJOM_BLINK_FORWARD_H_
#define SERVICES_SERVICE_MANAGER_PUBLIC_MOJOM_SERVICE_MANAGER_MOJOM_BLINK_FORWARD_H_

#include <stdint.h>

#include "mojo/public/cpp/bindings/struct_forward.h"

#include "mojo/public/cpp/bindings/deprecated_interface_types_forward.h"


#include "mojo/public/interfaces/bindings/native_struct.mojom-forward.h"




namespace service_manager {
namespace mojom {

enum class InstanceState : int32_t;
}  // namespace service_manager
}  // namespace mojom

namespace WTF {
template <typename T>
struct DefaultHash;
}

namespace WTF {
struct service_manager_mojom_internal_InstanceState_DataHashFn;

template <>
struct DefaultHash<::service_manager::mojom::InstanceState> {
  using Hash = service_manager_mojom_internal_InstanceState_DataHashFn;
};
}  // namespace WTF


namespace service_manager {
namespace mojom {
namespace blink {
using InstanceState = InstanceState;  // Alias for definition in the parent namespace.
class RunningServiceInfo;
using RunningServiceInfoPtr = mojo::StructPtr<RunningServiceInfo>;

class ServiceManagerListener;

using ServiceManagerListenerPtr = mojo::InterfacePtr<ServiceManagerListener>;
using ServiceManagerListenerPtrInfo = mojo::InterfacePtrInfo<ServiceManagerListener>;
using ThreadSafeServiceManagerListenerPtr =
    mojo::ThreadSafeInterfacePtr<ServiceManagerListener>;

using ServiceManagerListenerRequest = mojo::InterfaceRequest<ServiceManagerListener>;

using ServiceManagerListenerAssociatedPtr =
    mojo::AssociatedInterfacePtr<ServiceManagerListener>;
using ThreadSafeServiceManagerListenerAssociatedPtr =
    mojo::ThreadSafeAssociatedInterfacePtr<ServiceManagerListener>;
using ServiceManagerListenerAssociatedPtrInfo =
    mojo::AssociatedInterfacePtrInfo<ServiceManagerListener>;

using ServiceManagerListenerAssociatedRequest =
    mojo::AssociatedInterfaceRequest<ServiceManagerListener>;

class ServiceManager;

using ServiceManagerPtr = mojo::InterfacePtr<ServiceManager>;
using ServiceManagerPtrInfo = mojo::InterfacePtrInfo<ServiceManager>;
using ThreadSafeServiceManagerPtr =
    mojo::ThreadSafeInterfacePtr<ServiceManager>;

using ServiceManagerRequest = mojo::InterfaceRequest<ServiceManager>;

using ServiceManagerAssociatedPtr =
    mojo::AssociatedInterfacePtr<ServiceManager>;
using ThreadSafeServiceManagerAssociatedPtr =
    mojo::ThreadSafeAssociatedInterfacePtr<ServiceManager>;
using ServiceManagerAssociatedPtrInfo =
    mojo::AssociatedInterfacePtrInfo<ServiceManager>;

using ServiceManagerAssociatedRequest =
    mojo::AssociatedInterfaceRequest<ServiceManager>;




}  // namespace blink
}  // namespace mojom
}  // namespace service_manager

#endif  // SERVICES_SERVICE_MANAGER_PUBLIC_MOJOM_SERVICE_MANAGER_MOJOM_BLINK_FORWARD_H_