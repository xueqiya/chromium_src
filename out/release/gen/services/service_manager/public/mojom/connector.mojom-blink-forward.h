// services/service_manager/public/mojom/connector.mojom-blink-forward.h is auto generated by mojom_bindings_generator.py, do not edit

// Copyright 2019 The Chromium Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.

#ifndef SERVICES_SERVICE_MANAGER_PUBLIC_MOJOM_CONNECTOR_MOJOM_BLINK_FORWARD_H_
#define SERVICES_SERVICE_MANAGER_PUBLIC_MOJOM_CONNECTOR_MOJOM_BLINK_FORWARD_H_

#include <stdint.h>

#include "mojo/public/cpp/bindings/struct_forward.h"

#include "mojo/public/cpp/bindings/deprecated_interface_types_forward.h"


#include "mojo/public/interfaces/bindings/native_struct.mojom-forward.h"




namespace service_manager {
namespace mojom {

enum class ConnectResult : int32_t;

enum class BindInterfacePriority : int32_t;
}  // namespace service_manager
}  // namespace mojom

namespace WTF {
template <typename T>
struct DefaultHash;
}

namespace WTF {
struct service_manager_mojom_internal_ConnectResult_DataHashFn;

template <>
struct DefaultHash<::service_manager::mojom::ConnectResult> {
  using Hash = service_manager_mojom_internal_ConnectResult_DataHashFn;
};
}  // namespace WTF

namespace WTF {
struct service_manager_mojom_internal_BindInterfacePriority_DataHashFn;

template <>
struct DefaultHash<::service_manager::mojom::BindInterfacePriority> {
  using Hash = service_manager_mojom_internal_BindInterfacePriority_DataHashFn;
};
}  // namespace WTF


namespace service_manager {
namespace mojom {
namespace blink {
using ConnectResult = ConnectResult;  // Alias for definition in the parent namespace.
using BindInterfacePriority = BindInterfacePriority;  // Alias for definition in the parent namespace.
class Identity;
using IdentityPtr = mojo::StructPtr<Identity>;

class ServiceInfo;
using ServiceInfoPtr = mojo::InlinedStructPtr<ServiceInfo>;

class ProcessMetadata;

using ProcessMetadataPtr = mojo::InterfacePtr<ProcessMetadata>;
using ProcessMetadataPtrInfo = mojo::InterfacePtrInfo<ProcessMetadata>;
using ThreadSafeProcessMetadataPtr =
    mojo::ThreadSafeInterfacePtr<ProcessMetadata>;

using ProcessMetadataRequest = mojo::InterfaceRequest<ProcessMetadata>;

using ProcessMetadataAssociatedPtr =
    mojo::AssociatedInterfacePtr<ProcessMetadata>;
using ThreadSafeProcessMetadataAssociatedPtr =
    mojo::ThreadSafeAssociatedInterfacePtr<ProcessMetadata>;
using ProcessMetadataAssociatedPtrInfo =
    mojo::AssociatedInterfacePtrInfo<ProcessMetadata>;

using ProcessMetadataAssociatedRequest =
    mojo::AssociatedInterfaceRequest<ProcessMetadata>;

class Connector;

using ConnectorPtr = mojo::InterfacePtr<Connector>;
using ConnectorPtrInfo = mojo::InterfacePtrInfo<Connector>;
using ThreadSafeConnectorPtr =
    mojo::ThreadSafeInterfacePtr<Connector>;

using ConnectorRequest = mojo::InterfaceRequest<Connector>;

using ConnectorAssociatedPtr =
    mojo::AssociatedInterfacePtr<Connector>;
using ThreadSafeConnectorAssociatedPtr =
    mojo::ThreadSafeAssociatedInterfacePtr<Connector>;
using ConnectorAssociatedPtrInfo =
    mojo::AssociatedInterfacePtrInfo<Connector>;

using ConnectorAssociatedRequest =
    mojo::AssociatedInterfaceRequest<Connector>;




}  // namespace blink
}  // namespace mojom
}  // namespace service_manager

#endif  // SERVICES_SERVICE_MANAGER_PUBLIC_MOJOM_CONNECTOR_MOJOM_BLINK_FORWARD_H_