// services/device/public/mojom/device_service.mojom-test-utils.h is auto generated by mojom_bindings_generator.py, do not edit

// Copyright 2019 The Chromium Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.

#ifndef SERVICES_DEVICE_PUBLIC_MOJOM_DEVICE_SERVICE_MOJOM_TEST_UTILS_H_
#define SERVICES_DEVICE_PUBLIC_MOJOM_DEVICE_SERVICE_MOJOM_TEST_UTILS_H_

#include "services/device/public/mojom/device_service.mojom.h"


namespace device {
namespace mojom {


class  DeviceServiceInterceptorForTesting : public DeviceService {
  virtual DeviceService* GetForwardingInterface() = 0;
  void BindFingerprint(mojo::PendingReceiver<::device::mojom::Fingerprint> receiver) override;
  void BindGeolocationConfig(mojo::PendingReceiver<::device::mojom::GeolocationConfig> receiver) override;
  void BindGeolocationContext(mojo::PendingReceiver<::device::mojom::GeolocationContext> receiver) override;
  void BindGeolocationControl(mojo::PendingReceiver<::device::mojom::GeolocationControl> receiver) override;
  void BindBatteryMonitor(mojo::PendingReceiver<::device::mojom::BatteryMonitor> receiver) override;
  void BindNFCProvider(mojo::PendingReceiver<::device::mojom::NFCProvider> receiver) override;
  void BindVibrationManager(mojo::PendingReceiver<::device::mojom::VibrationManager> receiver) override;
  void BindPowerMonitor(mojo::PendingReceiver<::device::mojom::PowerMonitor> receiver) override;
  void BindPublicIpAddressGeolocationProvider(mojo::PendingReceiver<::device::mojom::PublicIpAddressGeolocationProvider> receiver) override;
  void BindScreenOrientationListener(mojo::PendingReceiver<::device::mojom::ScreenOrientationListener> receiver) override;
  void BindSensorProvider(mojo::PendingReceiver<::device::mojom::SensorProvider> receiver) override;
  void BindSerialPortManager(mojo::PendingReceiver<::device::mojom::SerialPortManager> receiver) override;
  void BindTimeZoneMonitor(mojo::PendingReceiver<::device::mojom::TimeZoneMonitor> receiver) override;
  void BindWakeLockProvider(mojo::PendingReceiver<::device::mojom::WakeLockProvider> receiver) override;
  void BindUsbDeviceManager(mojo::PendingReceiver<::device::mojom::UsbDeviceManager> receiver) override;
  void BindUsbDeviceManagerTest(mojo::PendingReceiver<::device::mojom::UsbDeviceManagerTest> receiver) override;
};
class  DeviceServiceAsyncWaiter {
 public:
  explicit DeviceServiceAsyncWaiter(DeviceService* proxy);
  ~DeviceServiceAsyncWaiter();

 private:
  DeviceService* const proxy_;

  DISALLOW_COPY_AND_ASSIGN(DeviceServiceAsyncWaiter);
};




}  // namespace mojom
}  // namespace device

#endif  // SERVICES_DEVICE_PUBLIC_MOJOM_DEVICE_SERVICE_MOJOM_TEST_UTILS_H_