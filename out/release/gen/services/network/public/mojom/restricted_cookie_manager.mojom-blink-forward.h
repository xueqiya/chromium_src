// services/network/public/mojom/restricted_cookie_manager.mojom-blink-forward.h is auto generated by mojom_bindings_generator.py, do not edit

// Copyright 2019 The Chromium Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.

#ifndef SERVICES_NETWORK_PUBLIC_MOJOM_RESTRICTED_COOKIE_MANAGER_MOJOM_BLINK_FORWARD_H_
#define SERVICES_NETWORK_PUBLIC_MOJOM_RESTRICTED_COOKIE_MANAGER_MOJOM_BLINK_FORWARD_H_

#include <stdint.h>

#include "mojo/public/cpp/bindings/struct_forward.h"

#include "mojo/public/cpp/bindings/deprecated_interface_types_forward.h"


#include "mojo/public/interfaces/bindings/native_struct.mojom-forward.h"




namespace network {
namespace mojom {

enum class CookieMatchType : int32_t;

enum class RestrictedCookieManagerRole : int32_t;
}  // namespace network
}  // namespace mojom

namespace WTF {
template <typename T>
struct DefaultHash;
}

namespace WTF {
struct network_mojom_internal_CookieMatchType_DataHashFn;

template <>
struct DefaultHash<::network::mojom::CookieMatchType> {
  using Hash = network_mojom_internal_CookieMatchType_DataHashFn;
};
}  // namespace WTF

namespace WTF {
struct network_mojom_internal_RestrictedCookieManagerRole_DataHashFn;

template <>
struct DefaultHash<::network::mojom::RestrictedCookieManagerRole> {
  using Hash = network_mojom_internal_RestrictedCookieManagerRole_DataHashFn;
};
}  // namespace WTF


namespace network {
namespace mojom {
namespace blink {
using CookieMatchType = CookieMatchType;  // Alias for definition in the parent namespace.
using RestrictedCookieManagerRole = RestrictedCookieManagerRole;  // Alias for definition in the parent namespace.
class CookieManagerGetOptions;
using CookieManagerGetOptionsPtr = mojo::InlinedStructPtr<CookieManagerGetOptions>;

class RestrictedCookieManager;

using RestrictedCookieManagerPtr = mojo::InterfacePtr<RestrictedCookieManager>;
using RestrictedCookieManagerPtrInfo = mojo::InterfacePtrInfo<RestrictedCookieManager>;
using ThreadSafeRestrictedCookieManagerPtr =
    mojo::ThreadSafeInterfacePtr<RestrictedCookieManager>;

using RestrictedCookieManagerRequest = mojo::InterfaceRequest<RestrictedCookieManager>;

using RestrictedCookieManagerAssociatedPtr =
    mojo::AssociatedInterfacePtr<RestrictedCookieManager>;
using ThreadSafeRestrictedCookieManagerAssociatedPtr =
    mojo::ThreadSafeAssociatedInterfacePtr<RestrictedCookieManager>;
using RestrictedCookieManagerAssociatedPtrInfo =
    mojo::AssociatedInterfacePtrInfo<RestrictedCookieManager>;

using RestrictedCookieManagerAssociatedRequest =
    mojo::AssociatedInterfaceRequest<RestrictedCookieManager>;




}  // namespace blink
}  // namespace mojom
}  // namespace network

#endif  // SERVICES_NETWORK_PUBLIC_MOJOM_RESTRICTED_COOKIE_MANAGER_MOJOM_BLINK_FORWARD_H_