// services/network/public/mojom/websocket.mojom-blink-forward.h is auto generated by mojom_bindings_generator.py, do not edit

// Copyright 2019 The Chromium Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.

#ifndef SERVICES_NETWORK_PUBLIC_MOJOM_WEBSOCKET_MOJOM_BLINK_FORWARD_H_
#define SERVICES_NETWORK_PUBLIC_MOJOM_WEBSOCKET_MOJOM_BLINK_FORWARD_H_

#include <stdint.h>

#include "mojo/public/cpp/bindings/struct_forward.h"

#include "mojo/public/cpp/bindings/deprecated_interface_types_forward.h"


#include "mojo/public/interfaces/bindings/native_struct.mojom-forward.h"




namespace network {
namespace mojom {

enum class WebSocketMessageType : int32_t;
}  // namespace network
}  // namespace mojom

namespace WTF {
template <typename T>
struct DefaultHash;
}

namespace WTF {
struct network_mojom_internal_WebSocketMessageType_DataHashFn;

template <>
struct DefaultHash<::network::mojom::WebSocketMessageType> {
  using Hash = network_mojom_internal_WebSocketMessageType_DataHashFn;
};
}  // namespace WTF


namespace network {
namespace mojom {
namespace blink {
using WebSocketMessageType = WebSocketMessageType;  // Alias for definition in the parent namespace.
class HttpHeader;
using HttpHeaderPtr = mojo::InlinedStructPtr<HttpHeader>;

class WebSocketHandshakeRequest;
using WebSocketHandshakeRequestPtr = mojo::StructPtr<WebSocketHandshakeRequest>;

class WebSocketHandshakeResponse;
using WebSocketHandshakeResponsePtr = mojo::StructPtr<WebSocketHandshakeResponse>;

class AuthenticationHandler;

using AuthenticationHandlerPtr = mojo::InterfacePtr<AuthenticationHandler>;
using AuthenticationHandlerPtrInfo = mojo::InterfacePtrInfo<AuthenticationHandler>;
using ThreadSafeAuthenticationHandlerPtr =
    mojo::ThreadSafeInterfacePtr<AuthenticationHandler>;

using AuthenticationHandlerRequest = mojo::InterfaceRequest<AuthenticationHandler>;

using AuthenticationHandlerAssociatedPtr =
    mojo::AssociatedInterfacePtr<AuthenticationHandler>;
using ThreadSafeAuthenticationHandlerAssociatedPtr =
    mojo::ThreadSafeAssociatedInterfacePtr<AuthenticationHandler>;
using AuthenticationHandlerAssociatedPtrInfo =
    mojo::AssociatedInterfacePtrInfo<AuthenticationHandler>;

using AuthenticationHandlerAssociatedRequest =
    mojo::AssociatedInterfaceRequest<AuthenticationHandler>;

class WebSocketHandshakeClient;

using WebSocketHandshakeClientPtr = mojo::InterfacePtr<WebSocketHandshakeClient>;
using WebSocketHandshakeClientPtrInfo = mojo::InterfacePtrInfo<WebSocketHandshakeClient>;
using ThreadSafeWebSocketHandshakeClientPtr =
    mojo::ThreadSafeInterfacePtr<WebSocketHandshakeClient>;

using WebSocketHandshakeClientRequest = mojo::InterfaceRequest<WebSocketHandshakeClient>;

using WebSocketHandshakeClientAssociatedPtr =
    mojo::AssociatedInterfacePtr<WebSocketHandshakeClient>;
using ThreadSafeWebSocketHandshakeClientAssociatedPtr =
    mojo::ThreadSafeAssociatedInterfacePtr<WebSocketHandshakeClient>;
using WebSocketHandshakeClientAssociatedPtrInfo =
    mojo::AssociatedInterfacePtrInfo<WebSocketHandshakeClient>;

using WebSocketHandshakeClientAssociatedRequest =
    mojo::AssociatedInterfaceRequest<WebSocketHandshakeClient>;

class WebSocketClient;

using WebSocketClientPtr = mojo::InterfacePtr<WebSocketClient>;
using WebSocketClientPtrInfo = mojo::InterfacePtrInfo<WebSocketClient>;
using ThreadSafeWebSocketClientPtr =
    mojo::ThreadSafeInterfacePtr<WebSocketClient>;

using WebSocketClientRequest = mojo::InterfaceRequest<WebSocketClient>;

using WebSocketClientAssociatedPtr =
    mojo::AssociatedInterfacePtr<WebSocketClient>;
using ThreadSafeWebSocketClientAssociatedPtr =
    mojo::ThreadSafeAssociatedInterfacePtr<WebSocketClient>;
using WebSocketClientAssociatedPtrInfo =
    mojo::AssociatedInterfacePtrInfo<WebSocketClient>;

using WebSocketClientAssociatedRequest =
    mojo::AssociatedInterfaceRequest<WebSocketClient>;

class WebSocket;

using WebSocketPtr = mojo::InterfacePtr<WebSocket>;
using WebSocketPtrInfo = mojo::InterfacePtrInfo<WebSocket>;
using ThreadSafeWebSocketPtr =
    mojo::ThreadSafeInterfacePtr<WebSocket>;

using WebSocketRequest = mojo::InterfaceRequest<WebSocket>;

using WebSocketAssociatedPtr =
    mojo::AssociatedInterfacePtr<WebSocket>;
using ThreadSafeWebSocketAssociatedPtr =
    mojo::ThreadSafeAssociatedInterfacePtr<WebSocket>;
using WebSocketAssociatedPtrInfo =
    mojo::AssociatedInterfacePtrInfo<WebSocket>;

using WebSocketAssociatedRequest =
    mojo::AssociatedInterfaceRequest<WebSocket>;




}  // namespace blink
}  // namespace mojom
}  // namespace network

#endif  // SERVICES_NETWORK_PUBLIC_MOJOM_WEBSOCKET_MOJOM_BLINK_FORWARD_H_