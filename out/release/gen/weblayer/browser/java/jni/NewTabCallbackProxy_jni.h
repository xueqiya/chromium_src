// Copyright 2014 The Chromium Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.


// This file is autogenerated by
//     base/android/jni_generator/jni_generator.py
// For
//     org/chromium/weblayer_private/NewTabCallbackProxy

#ifndef org_chromium_weblayer_private_NewTabCallbackProxy_JNI
#define org_chromium_weblayer_private_NewTabCallbackProxy_JNI

#include <jni.h>

#include "../../../../../../../base/android/jni_generator/jni_generator_helper.h"


// Step 1: Forward declarations.

JNI_REGISTRATION_EXPORT extern const char
    kClassPath_org_chromium_weblayer_1private_NewTabCallbackProxy[];
const char kClassPath_org_chromium_weblayer_1private_NewTabCallbackProxy[] =
    "org/chromium/weblayer_private/NewTabCallbackProxy";
// Leaking this jclass as we cannot use LazyInstance from some threads.
JNI_REGISTRATION_EXPORT std::atomic<jclass>
    g_org_chromium_weblayer_1private_NewTabCallbackProxy_clazz(nullptr);
#ifndef org_chromium_weblayer_1private_NewTabCallbackProxy_clazz_defined
#define org_chromium_weblayer_1private_NewTabCallbackProxy_clazz_defined
inline jclass org_chromium_weblayer_1private_NewTabCallbackProxy_clazz(JNIEnv* env) {
  return base::android::LazyGetClass(env,
      kClassPath_org_chromium_weblayer_1private_NewTabCallbackProxy,
      &g_org_chromium_weblayer_1private_NewTabCallbackProxy_clazz);
}
#endif


// Step 2: Constants (optional).


// Step 3: Method stubs.
namespace weblayer {

static jlong JNI_NewTabCallbackProxy_CreateNewTabCallbackProxy(JNIEnv* env, const
    base::android::JavaParamRef<jobject>& proxy,
    jlong tab);

JNI_GENERATOR_EXPORT jlong Java_J_N_Mm1ByG3d(
    JNIEnv* env,
    jclass jcaller,
    jobject proxy,
    jlong tab) {
  return JNI_NewTabCallbackProxy_CreateNewTabCallbackProxy(env,
      base::android::JavaParamRef<jobject>(env, proxy), tab);
}

static void JNI_NewTabCallbackProxy_DeleteNewTabCallbackProxy(JNIEnv* env, jlong proxy);

JNI_GENERATOR_EXPORT void Java_J_N_MxkBiJzp(
    JNIEnv* env,
    jclass jcaller,
    jlong proxy) {
  return JNI_NewTabCallbackProxy_DeleteNewTabCallbackProxy(env, proxy);
}


static std::atomic<jmethodID>
    g_org_chromium_weblayer_1private_NewTabCallbackProxy_onNewTab(nullptr);
static void Java_NewTabCallbackProxy_onNewTab(JNIEnv* env, const base::android::JavaRef<jobject>&
    obj, jlong nativeTab,
    JniIntWrapper mode) {
  jclass clazz = org_chromium_weblayer_1private_NewTabCallbackProxy_clazz(env);
  CHECK_CLAZZ(env, obj.obj(),
      org_chromium_weblayer_1private_NewTabCallbackProxy_clazz(env));

  jni_generator::JniJavaCallContextChecked call_context;
  call_context.Init<
      base::android::MethodID::TYPE_INSTANCE>(
          env,
          clazz,
          "onNewTab",
          "(JI)V",
          &g_org_chromium_weblayer_1private_NewTabCallbackProxy_onNewTab);

     env->CallVoidMethod(obj.obj(),
          call_context.base.method_id, nativeTab, as_jint(mode));
}

static std::atomic<jmethodID>
    g_org_chromium_weblayer_1private_NewTabCallbackProxy_onCloseTab(nullptr);
static void Java_NewTabCallbackProxy_onCloseTab(JNIEnv* env, const base::android::JavaRef<jobject>&
    obj) {
  jclass clazz = org_chromium_weblayer_1private_NewTabCallbackProxy_clazz(env);
  CHECK_CLAZZ(env, obj.obj(),
      org_chromium_weblayer_1private_NewTabCallbackProxy_clazz(env));

  jni_generator::JniJavaCallContextChecked call_context;
  call_context.Init<
      base::android::MethodID::TYPE_INSTANCE>(
          env,
          clazz,
          "onCloseTab",
          "()V",
          &g_org_chromium_weblayer_1private_NewTabCallbackProxy_onCloseTab);

     env->CallVoidMethod(obj.obj(),
          call_context.base.method_id);
}

}  // namespace weblayer

// Step 4: Generated test functions (optional).


#endif  // org_chromium_weblayer_private_NewTabCallbackProxy_JNI
