// Copyright 2014 The Chromium Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.


// This file is autogenerated by
//     base/android/jni_generator/jni_generator.py
// For
//     org/chromium/weblayer_private/ExternalNavigationHandler

#ifndef org_chromium_weblayer_private_ExternalNavigationHandler_JNI
#define org_chromium_weblayer_private_ExternalNavigationHandler_JNI

#include <jni.h>

#include "../../../../../../../base/android/jni_generator/jni_generator_helper.h"


// Step 1: Forward declarations.

JNI_REGISTRATION_EXPORT extern const char
    kClassPath_org_chromium_weblayer_1private_ExternalNavigationHandler[];
const char kClassPath_org_chromium_weblayer_1private_ExternalNavigationHandler[] =
    "org/chromium/weblayer_private/ExternalNavigationHandler";
// Leaking this jclass as we cannot use LazyInstance from some threads.
JNI_REGISTRATION_EXPORT std::atomic<jclass>
    g_org_chromium_weblayer_1private_ExternalNavigationHandler_clazz(nullptr);
#ifndef org_chromium_weblayer_1private_ExternalNavigationHandler_clazz_defined
#define org_chromium_weblayer_1private_ExternalNavigationHandler_clazz_defined
inline jclass org_chromium_weblayer_1private_ExternalNavigationHandler_clazz(JNIEnv* env) {
  return base::android::LazyGetClass(env,
      kClassPath_org_chromium_weblayer_1private_ExternalNavigationHandler,
      &g_org_chromium_weblayer_1private_ExternalNavigationHandler_clazz);
}
#endif


// Step 2: Constants (optional).


// Step 3: Method stubs.
namespace weblayer {


static std::atomic<jmethodID>
    g_org_chromium_weblayer_1private_ExternalNavigationHandler_shouldOverrideUrlLoading(nullptr);
static jboolean Java_ExternalNavigationHandler_shouldOverrideUrlLoading(JNIEnv* env, const
    base::android::JavaRef<jstring>& url,
    jboolean hasUserGesture,
    jboolean isRedirect,
    jboolean isMainFrame) {
  jclass clazz = org_chromium_weblayer_1private_ExternalNavigationHandler_clazz(env);
  CHECK_CLAZZ(env, clazz,
      org_chromium_weblayer_1private_ExternalNavigationHandler_clazz(env), false);

  jni_generator::JniJavaCallContextChecked call_context;
  call_context.Init<
      base::android::MethodID::TYPE_STATIC>(
          env,
          clazz,
          "shouldOverrideUrlLoading",
          "(Ljava/lang/String;ZZZ)Z",
          &g_org_chromium_weblayer_1private_ExternalNavigationHandler_shouldOverrideUrlLoading);

  jboolean ret =
      env->CallStaticBooleanMethod(clazz,
          call_context.base.method_id, url.obj(), hasUserGesture, isRedirect, isMainFrame);
  return ret;
}

}  // namespace weblayer

// Step 4: Generated test functions (optional).


#endif  // org_chromium_weblayer_private_ExternalNavigationHandler_JNI
