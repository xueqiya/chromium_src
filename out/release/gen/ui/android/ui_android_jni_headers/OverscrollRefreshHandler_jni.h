// Copyright 2014 The Chromium Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.


// This file is autogenerated by
//     base/android/jni_generator/jni_generator.py
// For
//     org/chromium/ui/OverscrollRefreshHandler

#ifndef org_chromium_ui_OverscrollRefreshHandler_JNI
#define org_chromium_ui_OverscrollRefreshHandler_JNI

#include <jni.h>

#include "../../../../../../base/android/jni_generator/jni_generator_helper.h"


// Step 1: Forward declarations.

JNI_REGISTRATION_EXPORT extern const char kClassPath_org_chromium_ui_OverscrollRefreshHandler[];
const char kClassPath_org_chromium_ui_OverscrollRefreshHandler[] =
    "org/chromium/ui/OverscrollRefreshHandler";
// Leaking this jclass as we cannot use LazyInstance from some threads.
JNI_REGISTRATION_EXPORT std::atomic<jclass>
    g_org_chromium_ui_OverscrollRefreshHandler_clazz(nullptr);
#ifndef org_chromium_ui_OverscrollRefreshHandler_clazz_defined
#define org_chromium_ui_OverscrollRefreshHandler_clazz_defined
inline jclass org_chromium_ui_OverscrollRefreshHandler_clazz(JNIEnv* env) {
  return base::android::LazyGetClass(env, kClassPath_org_chromium_ui_OverscrollRefreshHandler,
      &g_org_chromium_ui_OverscrollRefreshHandler_clazz);
}
#endif


// Step 2: Constants (optional).


// Step 3: Method stubs.

static std::atomic<jmethodID> g_org_chromium_ui_OverscrollRefreshHandler_start(nullptr);
static jboolean Java_OverscrollRefreshHandler_start(JNIEnv* env, const
    base::android::JavaRef<jobject>& obj, JniIntWrapper type,
    jfloat startX,
    jfloat startY,
    jboolean navigateForward) {
  jclass clazz = org_chromium_ui_OverscrollRefreshHandler_clazz(env);
  CHECK_CLAZZ(env, obj.obj(),
      org_chromium_ui_OverscrollRefreshHandler_clazz(env), false);

  jni_generator::JniJavaCallContextChecked call_context;
  call_context.Init<
      base::android::MethodID::TYPE_INSTANCE>(
          env,
          clazz,
          "start",
          "(IFFZ)Z",
          &g_org_chromium_ui_OverscrollRefreshHandler_start);

  jboolean ret =
      env->CallBooleanMethod(obj.obj(),
          call_context.base.method_id, as_jint(type), startX, startY, navigateForward);
  return ret;
}

static std::atomic<jmethodID> g_org_chromium_ui_OverscrollRefreshHandler_pull(nullptr);
static void Java_OverscrollRefreshHandler_pull(JNIEnv* env, const base::android::JavaRef<jobject>&
    obj, jfloat xDelta,
    jfloat yDelta) {
  jclass clazz = org_chromium_ui_OverscrollRefreshHandler_clazz(env);
  CHECK_CLAZZ(env, obj.obj(),
      org_chromium_ui_OverscrollRefreshHandler_clazz(env));

  jni_generator::JniJavaCallContextChecked call_context;
  call_context.Init<
      base::android::MethodID::TYPE_INSTANCE>(
          env,
          clazz,
          "pull",
          "(FF)V",
          &g_org_chromium_ui_OverscrollRefreshHandler_pull);

     env->CallVoidMethod(obj.obj(),
          call_context.base.method_id, xDelta, yDelta);
}

static std::atomic<jmethodID> g_org_chromium_ui_OverscrollRefreshHandler_release(nullptr);
static void Java_OverscrollRefreshHandler_release(JNIEnv* env, const
    base::android::JavaRef<jobject>& obj, jboolean allowRefresh) {
  jclass clazz = org_chromium_ui_OverscrollRefreshHandler_clazz(env);
  CHECK_CLAZZ(env, obj.obj(),
      org_chromium_ui_OverscrollRefreshHandler_clazz(env));

  jni_generator::JniJavaCallContextChecked call_context;
  call_context.Init<
      base::android::MethodID::TYPE_INSTANCE>(
          env,
          clazz,
          "release",
          "(Z)V",
          &g_org_chromium_ui_OverscrollRefreshHandler_release);

     env->CallVoidMethod(obj.obj(),
          call_context.base.method_id, allowRefresh);
}

static std::atomic<jmethodID> g_org_chromium_ui_OverscrollRefreshHandler_reset(nullptr);
static void Java_OverscrollRefreshHandler_reset(JNIEnv* env, const base::android::JavaRef<jobject>&
    obj) {
  jclass clazz = org_chromium_ui_OverscrollRefreshHandler_clazz(env);
  CHECK_CLAZZ(env, obj.obj(),
      org_chromium_ui_OverscrollRefreshHandler_clazz(env));

  jni_generator::JniJavaCallContextChecked call_context;
  call_context.Init<
      base::android::MethodID::TYPE_INSTANCE>(
          env,
          clazz,
          "reset",
          "()V",
          &g_org_chromium_ui_OverscrollRefreshHandler_reset);

     env->CallVoidMethod(obj.obj(),
          call_context.base.method_id);
}

// Step 4: Generated test functions (optional).


#endif  // org_chromium_ui_OverscrollRefreshHandler_JNI
