// gpu/ipc/common/vulkan_types.mojom.externs.js is auto generated by mojom_bindings_generator.py, do not edit

// Copyright 2018 The Chromium Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.



/** @enum {number} */
gpu.mojom.VkPhysicalDeviceType = {};
gpu.mojom.VkPhysicalDeviceType.OTHER;
gpu.mojom.VkPhysicalDeviceType.INTEGRATED_GPU;
gpu.mojom.VkPhysicalDeviceType.DISCRETE_GPU;
gpu.mojom.VkPhysicalDeviceType.VIRTUAL_GPU;
gpu.mojom.VkPhysicalDeviceType.CPU;
gpu.mojom.VkPhysicalDeviceType.INVALID_VALUE;
goog.provide('gpu.mojom.VkExtensionProperties');

gpu.mojom.VkExtensionProperties = class {
  constructor() {
    /** @type { !string } */
    this.extensionName;
    /** @type { !number } */
    this.specVersion;
  }
};

goog.provide('gpu.mojom.VkLayerProperties');

gpu.mojom.VkLayerProperties = class {
  constructor() {
    /** @type { !string } */
    this.layerName;
    /** @type { !number } */
    this.specVersion;
    /** @type { !number } */
    this.implementationVersion;
    /** @type { !string } */
    this.description;
  }
};

goog.provide('gpu.mojom.VkPhysicalDeviceLimits');

gpu.mojom.VkPhysicalDeviceLimits = class {
  constructor() {
    /** @type { !number } */
    this.maxImageDimension1D;
    /** @type { !number } */
    this.maxImageDimension2D;
    /** @type { !number } */
    this.maxImageDimension3D;
    /** @type { !number } */
    this.maxImageDimensionCube;
    /** @type { !number } */
    this.maxImageArrayLayers;
    /** @type { !number } */
    this.maxTexelBufferElements;
    /** @type { !number } */
    this.maxUniformBufferRange;
    /** @type { !number } */
    this.maxStorageBufferRange;
    /** @type { !number } */
    this.maxPushConstantsSize;
    /** @type { !number } */
    this.maxMemoryAllocationCount;
    /** @type { !number } */
    this.maxSamplerAllocationCount;
    /** @type { !number } */
    this.maxBoundDescriptorSets;
    /** @type { !number } */
    this.bufferImageGranularity;
    /** @type { !number } */
    this.sparseAddressSpaceSize;
    /** @type { !number } */
    this.maxPerStageDescriptorSamplers;
    /** @type { !number } */
    this.maxPerStageDescriptorUniformBuffers;
    /** @type { !number } */
    this.maxPerStageDescriptorStorageBuffers;
    /** @type { !number } */
    this.maxPerStageDescriptorSampledImages;
    /** @type { !number } */
    this.maxPerStageDescriptorStorageImages;
    /** @type { !number } */
    this.maxPerStageDescriptorInputAttachments;
    /** @type { !number } */
    this.maxPerStageResources;
    /** @type { !number } */
    this.maxDescriptorSetSamplers;
    /** @type { !number } */
    this.maxDescriptorSetUniformBuffers;
    /** @type { !number } */
    this.maxDescriptorSetUniformBuffersDynamic;
    /** @type { !number } */
    this.maxDescriptorSetStorageBuffers;
    /** @type { !number } */
    this.maxDescriptorSetStorageBuffersDynamic;
    /** @type { !number } */
    this.maxDescriptorSetSampledImages;
    /** @type { !number } */
    this.maxDescriptorSetStorageImages;
    /** @type { !number } */
    this.maxDescriptorSetInputAttachments;
    /** @type { !number } */
    this.maxVertexInputAttributes;
    /** @type { !number } */
    this.maxVertexInputBindings;
    /** @type { !number } */
    this.maxVertexInputAttributeOffset;
    /** @type { !number } */
    this.maxVertexInputBindingStride;
    /** @type { !number } */
    this.maxVertexOutputComponents;
    /** @type { !number } */
    this.maxTessellationGenerationLevel;
    /** @type { !number } */
    this.maxTessellationPatchSize;
    /** @type { !number } */
    this.maxTessellationControlPerVertexInputComponents;
    /** @type { !number } */
    this.maxTessellationControlPerVertexOutputComponents;
    /** @type { !number } */
    this.maxTessellationControlPerPatchOutputComponents;
    /** @type { !number } */
    this.maxTessellationControlTotalOutputComponents;
    /** @type { !number } */
    this.maxTessellationEvaluationInputComponents;
    /** @type { !number } */
    this.maxTessellationEvaluationOutputComponents;
    /** @type { !number } */
    this.maxGeometryShaderInvocations;
    /** @type { !number } */
    this.maxGeometryInputComponents;
    /** @type { !number } */
    this.maxGeometryOutputComponents;
    /** @type { !number } */
    this.maxGeometryOutputVertices;
    /** @type { !number } */
    this.maxGeometryTotalOutputComponents;
    /** @type { !number } */
    this.maxFragmentInputComponents;
    /** @type { !number } */
    this.maxFragmentOutputAttachments;
    /** @type { !number } */
    this.maxFragmentDualSrcAttachments;
    /** @type { !number } */
    this.maxFragmentCombinedOutputResources;
    /** @type { !number } */
    this.maxComputeSharedMemorySize;
    /** @type { !Array<number> } */
    this.maxComputeWorkGroupCount;
    /** @type { !number } */
    this.maxComputeWorkGroupInvocations;
    /** @type { !number } */
    this.subPixelPrecisionBits;
    /** @type { !Array<number> } */
    this.maxComputeWorkGroupSize;
    /** @type { !number } */
    this.subTexelPrecisionBits;
    /** @type { !number } */
    this.mipmapPrecisionBits;
    /** @type { !number } */
    this.maxDrawIndexedIndexValue;
    /** @type { !number } */
    this.maxDrawIndirectCount;
    /** @type { !number } */
    this.maxSamplerLodBias;
    /** @type { !number } */
    this.maxSamplerAnisotropy;
    /** @type { !number } */
    this.maxViewports;
    /** @type { !number } */
    this.viewportSubPixelBits;
    /** @type { !Array<number> } */
    this.maxViewportDimensions;
    /** @type { !Array<number> } */
    this.viewportBoundsRange;
    /** @type { !number } */
    this.minMemoryMapAlignment;
    /** @type { !number } */
    this.minTexelBufferOffsetAlignment;
    /** @type { !number } */
    this.minUniformBufferOffsetAlignment;
    /** @type { !number } */
    this.minStorageBufferOffsetAlignment;
    /** @type { !number } */
    this.minTexelOffset;
    /** @type { !number } */
    this.maxTexelOffset;
    /** @type { !number } */
    this.minTexelGatherOffset;
    /** @type { !number } */
    this.maxTexelGatherOffset;
    /** @type { !number } */
    this.minInterpolationOffset;
    /** @type { !number } */
    this.maxInterpolationOffset;
    /** @type { !number } */
    this.subPixelInterpolationOffsetBits;
    /** @type { !number } */
    this.maxFramebufferWidth;
    /** @type { !number } */
    this.maxFramebufferHeight;
    /** @type { !number } */
    this.maxFramebufferLayers;
    /** @type { !number } */
    this.framebufferColorSampleCounts;
    /** @type { !number } */
    this.framebufferDepthSampleCounts;
    /** @type { !number } */
    this.framebufferStencilSampleCounts;
    /** @type { !number } */
    this.framebufferNoAttachmentsSampleCounts;
    /** @type { !number } */
    this.maxColorAttachments;
    /** @type { !number } */
    this.sampledImageColorSampleCounts;
    /** @type { !number } */
    this.sampledImageIntegerSampleCounts;
    /** @type { !number } */
    this.sampledImageDepthSampleCounts;
    /** @type { !number } */
    this.sampledImageStencilSampleCounts;
    /** @type { !number } */
    this.storageImageSampleCounts;
    /** @type { !number } */
    this.maxSampleMaskWords;
    /** @type { !boolean } */
    this.timestampComputeAndGraphics;
    /** @type { !boolean } */
    this.strictLines;
    /** @type { !boolean } */
    this.standardSampleLocations;
    /** @type { !number } */
    this.timestampPeriod;
    /** @type { !number } */
    this.maxClipDistances;
    /** @type { !number } */
    this.maxCullDistances;
    /** @type { !number } */
    this.maxCombinedClipAndCullDistances;
    /** @type { !number } */
    this.discreteQueuePriorities;
    /** @type { !number } */
    this.pointSizeGranularity;
    /** @type { !Array<number> } */
    this.pointSizeRange;
    /** @type { !Array<number> } */
    this.lineWidthRange;
    /** @type { !number } */
    this.lineWidthGranularity;
    /** @type { !number } */
    this.optimalBufferCopyOffsetAlignment;
    /** @type { !number } */
    this.optimalBufferCopyRowPitchAlignment;
    /** @type { !number } */
    this.nonCoherentAtomSize;
  }
};

goog.provide('gpu.mojom.VkPhysicalDeviceSparseProperties');

gpu.mojom.VkPhysicalDeviceSparseProperties = class {
  constructor() {
    /** @type { !boolean } */
    this.residencyStandard2DBlockShape;
    /** @type { !boolean } */
    this.residencyStandard2DMultisampleBlockShape;
    /** @type { !boolean } */
    this.residencyStandard3DBlockShape;
    /** @type { !boolean } */
    this.residencyAlignedMipSize;
    /** @type { !boolean } */
    this.residencyNonResidentStrict;
  }
};

goog.provide('gpu.mojom.VkPhysicalDeviceProperties');

gpu.mojom.VkPhysicalDeviceProperties = class {
  constructor() {
    /** @type { !number } */
    this.apiVersion;
    /** @type { !number } */
    this.driverVersion;
    /** @type { !number } */
    this.vendorID;
    /** @type { !number } */
    this.deviceID;
    /** @type { !gpu.mojom.VkPhysicalDeviceType } */
    this.deviceType;
    /** @type { !string } */
    this.deviceName;
    /** @type { !Array<number> } */
    this.pipelineCacheUUID;
    /** @type { !gpu.mojom.VkPhysicalDeviceLimits } */
    this.limits;
    /** @type { !gpu.mojom.VkPhysicalDeviceSparseProperties } */
    this.sparseProperties;
  }
};

goog.provide('gpu.mojom.VkPhysicalDeviceFeatures');

gpu.mojom.VkPhysicalDeviceFeatures = class {
  constructor() {
    /** @type { !boolean } */
    this.robustBufferAccess;
    /** @type { !boolean } */
    this.fullDrawIndexUint32;
    /** @type { !boolean } */
    this.imageCubeArray;
    /** @type { !boolean } */
    this.independentBlend;
    /** @type { !boolean } */
    this.geometryShader;
    /** @type { !boolean } */
    this.tessellationShader;
    /** @type { !boolean } */
    this.sampleRateShading;
    /** @type { !boolean } */
    this.dualSrcBlend;
    /** @type { !boolean } */
    this.logicOp;
    /** @type { !boolean } */
    this.multiDrawIndirect;
    /** @type { !boolean } */
    this.drawIndirectFirstInstance;
    /** @type { !boolean } */
    this.depthClamp;
    /** @type { !boolean } */
    this.depthBiasClamp;
    /** @type { !boolean } */
    this.fillModeNonSolid;
    /** @type { !boolean } */
    this.depthBounds;
    /** @type { !boolean } */
    this.wideLines;
    /** @type { !boolean } */
    this.largePoints;
    /** @type { !boolean } */
    this.alphaToOne;
    /** @type { !boolean } */
    this.multiViewport;
    /** @type { !boolean } */
    this.samplerAnisotropy;
    /** @type { !boolean } */
    this.textureCompressionETC2;
    /** @type { !boolean } */
    this.textureCompressionASTCLDR;
    /** @type { !boolean } */
    this.textureCompressionBC;
    /** @type { !boolean } */
    this.occlusionQueryPrecise;
    /** @type { !boolean } */
    this.pipelineStatisticsQuery;
    /** @type { !boolean } */
    this.vertexPipelineStoresAndAtomics;
    /** @type { !boolean } */
    this.fragmentStoresAndAtomics;
    /** @type { !boolean } */
    this.shaderTessellationAndGeometryPointSize;
    /** @type { !boolean } */
    this.shaderImageGatherExtended;
    /** @type { !boolean } */
    this.shaderStorageImageExtendedFormats;
    /** @type { !boolean } */
    this.shaderStorageImageMultisample;
    /** @type { !boolean } */
    this.shaderStorageImageReadWithoutFormat;
    /** @type { !boolean } */
    this.shaderStorageImageWriteWithoutFormat;
    /** @type { !boolean } */
    this.shaderUniformBufferArrayDynamicIndexing;
    /** @type { !boolean } */
    this.shaderSampledImageArrayDynamicIndexing;
    /** @type { !boolean } */
    this.shaderStorageBufferArrayDynamicIndexing;
    /** @type { !boolean } */
    this.shaderStorageImageArrayDynamicIndexing;
    /** @type { !boolean } */
    this.shaderClipDistance;
    /** @type { !boolean } */
    this.shaderCullDistance;
    /** @type { !boolean } */
    this.shaderFloat64;
    /** @type { !boolean } */
    this.shaderInt64;
    /** @type { !boolean } */
    this.shaderInt16;
    /** @type { !boolean } */
    this.shaderResourceResidency;
    /** @type { !boolean } */
    this.shaderResourceMinLod;
    /** @type { !boolean } */
    this.sparseBinding;
    /** @type { !boolean } */
    this.sparseResidencyBuffer;
    /** @type { !boolean } */
    this.sparseResidencyImage2D;
    /** @type { !boolean } */
    this.sparseResidencyImage3D;
    /** @type { !boolean } */
    this.sparseResidency2Samples;
    /** @type { !boolean } */
    this.sparseResidency4Samples;
    /** @type { !boolean } */
    this.sparseResidency8Samples;
    /** @type { !boolean } */
    this.sparseResidency16Samples;
    /** @type { !boolean } */
    this.sparseResidencyAliased;
    /** @type { !boolean } */
    this.variableMultisampleRate;
    /** @type { !boolean } */
    this.inheritedQueries;
  }
};

goog.provide('gpu.mojom.VkExtent3D');

gpu.mojom.VkExtent3D = class {
  constructor() {
    /** @type { !number } */
    this.width;
    /** @type { !number } */
    this.height;
    /** @type { !number } */
    this.depth;
  }
};

goog.provide('gpu.mojom.VkQueueFamilyProperties');

gpu.mojom.VkQueueFamilyProperties = class {
  constructor() {
    /** @type { !number } */
    this.queueFlags;
    /** @type { !number } */
    this.queueCount;
    /** @type { !number } */
    this.timestampValidBits;
    /** @type { !gpu.mojom.VkExtent3D } */
    this.minImageTransferGranularity;
  }
};
