// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: protos/perfetto/trace/profiling/heap_graph.proto

#ifndef GOOGLE_PROTOBUF_INCLUDED_protos_2fperfetto_2ftrace_2fprofiling_2fheap_5fgraph_2eproto
#define GOOGLE_PROTOBUF_INCLUDED_protos_2fperfetto_2ftrace_2fprofiling_2fheap_5fgraph_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3009000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3009000 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata_lite.h>
#include <google/protobuf/message_lite.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/generated_enum_util.h>
#include "protos/perfetto/trace/profiling/profile_common.pb.h"
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_protos_2fperfetto_2ftrace_2fprofiling_2fheap_5fgraph_2eproto
PROTOBUF_NAMESPACE_OPEN
namespace internal {
class AnyMetadata;
}  // namespace internal
PROTOBUF_NAMESPACE_CLOSE

// Internal implementation detail -- do not use these members.
struct TableStruct_protos_2fperfetto_2ftrace_2fprofiling_2fheap_5fgraph_2eproto {
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTableField entries[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::AuxillaryParseTableField aux[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTable schema[6]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::FieldMetadata field_metadata[];
  static const ::PROTOBUF_NAMESPACE_ID::internal::SerializationTable serialization_table[];
  static const ::PROTOBUF_NAMESPACE_ID::uint32 offsets[];
};
namespace perfetto {
namespace protos {
class DeobfuscationMapping;
class DeobfuscationMappingDefaultTypeInternal;
extern DeobfuscationMappingDefaultTypeInternal _DeobfuscationMapping_default_instance_;
class HeapGraph;
class HeapGraphDefaultTypeInternal;
extern HeapGraphDefaultTypeInternal _HeapGraph_default_instance_;
class HeapGraphObject;
class HeapGraphObjectDefaultTypeInternal;
extern HeapGraphObjectDefaultTypeInternal _HeapGraphObject_default_instance_;
class HeapGraphRoot;
class HeapGraphRootDefaultTypeInternal;
extern HeapGraphRootDefaultTypeInternal _HeapGraphRoot_default_instance_;
class ObfuscatedClass;
class ObfuscatedClassDefaultTypeInternal;
extern ObfuscatedClassDefaultTypeInternal _ObfuscatedClass_default_instance_;
class ObfuscatedMember;
class ObfuscatedMemberDefaultTypeInternal;
extern ObfuscatedMemberDefaultTypeInternal _ObfuscatedMember_default_instance_;
}  // namespace protos
}  // namespace perfetto
PROTOBUF_NAMESPACE_OPEN
template<> ::perfetto::protos::DeobfuscationMapping* Arena::CreateMaybeMessage<::perfetto::protos::DeobfuscationMapping>(Arena*);
template<> ::perfetto::protos::HeapGraph* Arena::CreateMaybeMessage<::perfetto::protos::HeapGraph>(Arena*);
template<> ::perfetto::protos::HeapGraphObject* Arena::CreateMaybeMessage<::perfetto::protos::HeapGraphObject>(Arena*);
template<> ::perfetto::protos::HeapGraphRoot* Arena::CreateMaybeMessage<::perfetto::protos::HeapGraphRoot>(Arena*);
template<> ::perfetto::protos::ObfuscatedClass* Arena::CreateMaybeMessage<::perfetto::protos::ObfuscatedClass>(Arena*);
template<> ::perfetto::protos::ObfuscatedMember* Arena::CreateMaybeMessage<::perfetto::protos::ObfuscatedMember>(Arena*);
PROTOBUF_NAMESPACE_CLOSE
namespace perfetto {
namespace protos {

enum HeapGraphRoot_Type : int {
  HeapGraphRoot_Type_ROOT_UNKNOWN = 0,
  HeapGraphRoot_Type_ROOT_JNI_GLOBAL = 1,
  HeapGraphRoot_Type_ROOT_JNI_LOCAL = 2,
  HeapGraphRoot_Type_ROOT_JAVA_FRAME = 3,
  HeapGraphRoot_Type_ROOT_NATIVE_STACK = 4,
  HeapGraphRoot_Type_ROOT_STICKY_CLASS = 5,
  HeapGraphRoot_Type_ROOT_THREAD_BLOCK = 6,
  HeapGraphRoot_Type_ROOT_MONITOR_USED = 7,
  HeapGraphRoot_Type_ROOT_THREAD_OBJECT = 8,
  HeapGraphRoot_Type_ROOT_INTERNED_STRING = 9,
  HeapGraphRoot_Type_ROOT_FINALIZING = 10,
  HeapGraphRoot_Type_ROOT_DEBUGGER = 11,
  HeapGraphRoot_Type_ROOT_REFERENCE_CLEANUP = 12,
  HeapGraphRoot_Type_ROOT_VM_INTERNAL = 13,
  HeapGraphRoot_Type_ROOT_JNI_MONITOR = 14
};
bool HeapGraphRoot_Type_IsValid(int value);
constexpr HeapGraphRoot_Type HeapGraphRoot_Type_Type_MIN = HeapGraphRoot_Type_ROOT_UNKNOWN;
constexpr HeapGraphRoot_Type HeapGraphRoot_Type_Type_MAX = HeapGraphRoot_Type_ROOT_JNI_MONITOR;
constexpr int HeapGraphRoot_Type_Type_ARRAYSIZE = HeapGraphRoot_Type_Type_MAX + 1;

const std::string& HeapGraphRoot_Type_Name(HeapGraphRoot_Type value);
template<typename T>
inline const std::string& HeapGraphRoot_Type_Name(T enum_t_value) {
  static_assert(::std::is_same<T, HeapGraphRoot_Type>::value ||
    ::std::is_integral<T>::value,
    "Incorrect type passed to function HeapGraphRoot_Type_Name.");
  return HeapGraphRoot_Type_Name(static_cast<HeapGraphRoot_Type>(enum_t_value));
}
bool HeapGraphRoot_Type_Parse(
    const std::string& name, HeapGraphRoot_Type* value);
// ===================================================================

class ObfuscatedMember :
    public ::PROTOBUF_NAMESPACE_ID::MessageLite /* @@protoc_insertion_point(class_definition:perfetto.protos.ObfuscatedMember) */ {
 public:
  ObfuscatedMember();
  virtual ~ObfuscatedMember();

  ObfuscatedMember(const ObfuscatedMember& from);
  ObfuscatedMember(ObfuscatedMember&& from) noexcept
    : ObfuscatedMember() {
    *this = ::std::move(from);
  }

  inline ObfuscatedMember& operator=(const ObfuscatedMember& from) {
    CopyFrom(from);
    return *this;
  }
  inline ObfuscatedMember& operator=(ObfuscatedMember&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const std::string& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline std::string* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ObfuscatedMember& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ObfuscatedMember* internal_default_instance() {
    return reinterpret_cast<const ObfuscatedMember*>(
               &_ObfuscatedMember_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(ObfuscatedMember& a, ObfuscatedMember& b) {
    a.Swap(&b);
  }
  inline void Swap(ObfuscatedMember* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline ObfuscatedMember* New() const final {
    return CreateMaybeMessage<ObfuscatedMember>(nullptr);
  }

  ObfuscatedMember* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<ObfuscatedMember>(arena);
  }
  void CheckTypeAndMergeFrom(const ::PROTOBUF_NAMESPACE_ID::MessageLite& from)
    final;
  void CopyFrom(const ObfuscatedMember& from);
  void MergeFrom(const ObfuscatedMember& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  #else
  bool MergePartialFromCodedStream(
      ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const final;
  void DiscardUnknownFields();
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(ObfuscatedMember* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "perfetto.protos.ObfuscatedMember";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  std::string GetTypeName() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kObfuscatedNameFieldNumber = 1,
    kDeobfuscatedNameFieldNumber = 2,
  };
  // optional string obfuscated_name = 1;
  bool has_obfuscated_name() const;
  void clear_obfuscated_name();
  const std::string& obfuscated_name() const;
  void set_obfuscated_name(const std::string& value);
  void set_obfuscated_name(std::string&& value);
  void set_obfuscated_name(const char* value);
  void set_obfuscated_name(const char* value, size_t size);
  std::string* mutable_obfuscated_name();
  std::string* release_obfuscated_name();
  void set_allocated_obfuscated_name(std::string* obfuscated_name);

  // optional string deobfuscated_name = 2;
  bool has_deobfuscated_name() const;
  void clear_deobfuscated_name();
  const std::string& deobfuscated_name() const;
  void set_deobfuscated_name(const std::string& value);
  void set_deobfuscated_name(std::string&& value);
  void set_deobfuscated_name(const char* value);
  void set_deobfuscated_name(const char* value, size_t size);
  std::string* mutable_deobfuscated_name();
  std::string* release_deobfuscated_name();
  void set_allocated_deobfuscated_name(std::string* deobfuscated_name);

  // @@protoc_insertion_point(class_scope:perfetto.protos.ObfuscatedMember)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArenaLite _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr obfuscated_name_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr deobfuscated_name_;
  friend struct ::TableStruct_protos_2fperfetto_2ftrace_2fprofiling_2fheap_5fgraph_2eproto;
};
// -------------------------------------------------------------------

class ObfuscatedClass :
    public ::PROTOBUF_NAMESPACE_ID::MessageLite /* @@protoc_insertion_point(class_definition:perfetto.protos.ObfuscatedClass) */ {
 public:
  ObfuscatedClass();
  virtual ~ObfuscatedClass();

  ObfuscatedClass(const ObfuscatedClass& from);
  ObfuscatedClass(ObfuscatedClass&& from) noexcept
    : ObfuscatedClass() {
    *this = ::std::move(from);
  }

  inline ObfuscatedClass& operator=(const ObfuscatedClass& from) {
    CopyFrom(from);
    return *this;
  }
  inline ObfuscatedClass& operator=(ObfuscatedClass&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const std::string& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline std::string* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ObfuscatedClass& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ObfuscatedClass* internal_default_instance() {
    return reinterpret_cast<const ObfuscatedClass*>(
               &_ObfuscatedClass_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  friend void swap(ObfuscatedClass& a, ObfuscatedClass& b) {
    a.Swap(&b);
  }
  inline void Swap(ObfuscatedClass* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline ObfuscatedClass* New() const final {
    return CreateMaybeMessage<ObfuscatedClass>(nullptr);
  }

  ObfuscatedClass* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<ObfuscatedClass>(arena);
  }
  void CheckTypeAndMergeFrom(const ::PROTOBUF_NAMESPACE_ID::MessageLite& from)
    final;
  void CopyFrom(const ObfuscatedClass& from);
  void MergeFrom(const ObfuscatedClass& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  #else
  bool MergePartialFromCodedStream(
      ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const final;
  void DiscardUnknownFields();
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(ObfuscatedClass* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "perfetto.protos.ObfuscatedClass";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  std::string GetTypeName() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kObfuscatedMembersFieldNumber = 3,
    kObfuscatedNameFieldNumber = 1,
    kDeobfuscatedNameFieldNumber = 2,
  };
  // repeated .perfetto.protos.ObfuscatedMember obfuscated_members = 3;
  int obfuscated_members_size() const;
  void clear_obfuscated_members();
  ::perfetto::protos::ObfuscatedMember* mutable_obfuscated_members(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::perfetto::protos::ObfuscatedMember >*
      mutable_obfuscated_members();
  const ::perfetto::protos::ObfuscatedMember& obfuscated_members(int index) const;
  ::perfetto::protos::ObfuscatedMember* add_obfuscated_members();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::perfetto::protos::ObfuscatedMember >&
      obfuscated_members() const;

  // optional string obfuscated_name = 1;
  bool has_obfuscated_name() const;
  void clear_obfuscated_name();
  const std::string& obfuscated_name() const;
  void set_obfuscated_name(const std::string& value);
  void set_obfuscated_name(std::string&& value);
  void set_obfuscated_name(const char* value);
  void set_obfuscated_name(const char* value, size_t size);
  std::string* mutable_obfuscated_name();
  std::string* release_obfuscated_name();
  void set_allocated_obfuscated_name(std::string* obfuscated_name);

  // optional string deobfuscated_name = 2;
  bool has_deobfuscated_name() const;
  void clear_deobfuscated_name();
  const std::string& deobfuscated_name() const;
  void set_deobfuscated_name(const std::string& value);
  void set_deobfuscated_name(std::string&& value);
  void set_deobfuscated_name(const char* value);
  void set_deobfuscated_name(const char* value, size_t size);
  std::string* mutable_deobfuscated_name();
  std::string* release_deobfuscated_name();
  void set_allocated_deobfuscated_name(std::string* deobfuscated_name);

  // @@protoc_insertion_point(class_scope:perfetto.protos.ObfuscatedClass)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArenaLite _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::perfetto::protos::ObfuscatedMember > obfuscated_members_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr obfuscated_name_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr deobfuscated_name_;
  friend struct ::TableStruct_protos_2fperfetto_2ftrace_2fprofiling_2fheap_5fgraph_2eproto;
};
// -------------------------------------------------------------------

class DeobfuscationMapping :
    public ::PROTOBUF_NAMESPACE_ID::MessageLite /* @@protoc_insertion_point(class_definition:perfetto.protos.DeobfuscationMapping) */ {
 public:
  DeobfuscationMapping();
  virtual ~DeobfuscationMapping();

  DeobfuscationMapping(const DeobfuscationMapping& from);
  DeobfuscationMapping(DeobfuscationMapping&& from) noexcept
    : DeobfuscationMapping() {
    *this = ::std::move(from);
  }

  inline DeobfuscationMapping& operator=(const DeobfuscationMapping& from) {
    CopyFrom(from);
    return *this;
  }
  inline DeobfuscationMapping& operator=(DeobfuscationMapping&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const std::string& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline std::string* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const DeobfuscationMapping& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const DeobfuscationMapping* internal_default_instance() {
    return reinterpret_cast<const DeobfuscationMapping*>(
               &_DeobfuscationMapping_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  friend void swap(DeobfuscationMapping& a, DeobfuscationMapping& b) {
    a.Swap(&b);
  }
  inline void Swap(DeobfuscationMapping* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline DeobfuscationMapping* New() const final {
    return CreateMaybeMessage<DeobfuscationMapping>(nullptr);
  }

  DeobfuscationMapping* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<DeobfuscationMapping>(arena);
  }
  void CheckTypeAndMergeFrom(const ::PROTOBUF_NAMESPACE_ID::MessageLite& from)
    final;
  void CopyFrom(const DeobfuscationMapping& from);
  void MergeFrom(const DeobfuscationMapping& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  #else
  bool MergePartialFromCodedStream(
      ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const final;
  void DiscardUnknownFields();
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(DeobfuscationMapping* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "perfetto.protos.DeobfuscationMapping";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  std::string GetTypeName() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kObfuscatedClassesFieldNumber = 3,
    kPackageNameFieldNumber = 1,
    kVersionCodeFieldNumber = 2,
  };
  // repeated .perfetto.protos.ObfuscatedClass obfuscated_classes = 3;
  int obfuscated_classes_size() const;
  void clear_obfuscated_classes();
  ::perfetto::protos::ObfuscatedClass* mutable_obfuscated_classes(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::perfetto::protos::ObfuscatedClass >*
      mutable_obfuscated_classes();
  const ::perfetto::protos::ObfuscatedClass& obfuscated_classes(int index) const;
  ::perfetto::protos::ObfuscatedClass* add_obfuscated_classes();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::perfetto::protos::ObfuscatedClass >&
      obfuscated_classes() const;

  // optional string package_name = 1;
  bool has_package_name() const;
  void clear_package_name();
  const std::string& package_name() const;
  void set_package_name(const std::string& value);
  void set_package_name(std::string&& value);
  void set_package_name(const char* value);
  void set_package_name(const char* value, size_t size);
  std::string* mutable_package_name();
  std::string* release_package_name();
  void set_allocated_package_name(std::string* package_name);

  // optional int64 version_code = 2;
  bool has_version_code() const;
  void clear_version_code();
  ::PROTOBUF_NAMESPACE_ID::int64 version_code() const;
  void set_version_code(::PROTOBUF_NAMESPACE_ID::int64 value);

  // @@protoc_insertion_point(class_scope:perfetto.protos.DeobfuscationMapping)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArenaLite _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::perfetto::protos::ObfuscatedClass > obfuscated_classes_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr package_name_;
  ::PROTOBUF_NAMESPACE_ID::int64 version_code_;
  friend struct ::TableStruct_protos_2fperfetto_2ftrace_2fprofiling_2fheap_5fgraph_2eproto;
};
// -------------------------------------------------------------------

class HeapGraphRoot :
    public ::PROTOBUF_NAMESPACE_ID::MessageLite /* @@protoc_insertion_point(class_definition:perfetto.protos.HeapGraphRoot) */ {
 public:
  HeapGraphRoot();
  virtual ~HeapGraphRoot();

  HeapGraphRoot(const HeapGraphRoot& from);
  HeapGraphRoot(HeapGraphRoot&& from) noexcept
    : HeapGraphRoot() {
    *this = ::std::move(from);
  }

  inline HeapGraphRoot& operator=(const HeapGraphRoot& from) {
    CopyFrom(from);
    return *this;
  }
  inline HeapGraphRoot& operator=(HeapGraphRoot&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const std::string& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline std::string* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const HeapGraphRoot& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const HeapGraphRoot* internal_default_instance() {
    return reinterpret_cast<const HeapGraphRoot*>(
               &_HeapGraphRoot_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    3;

  friend void swap(HeapGraphRoot& a, HeapGraphRoot& b) {
    a.Swap(&b);
  }
  inline void Swap(HeapGraphRoot* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline HeapGraphRoot* New() const final {
    return CreateMaybeMessage<HeapGraphRoot>(nullptr);
  }

  HeapGraphRoot* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<HeapGraphRoot>(arena);
  }
  void CheckTypeAndMergeFrom(const ::PROTOBUF_NAMESPACE_ID::MessageLite& from)
    final;
  void CopyFrom(const HeapGraphRoot& from);
  void MergeFrom(const HeapGraphRoot& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  #else
  bool MergePartialFromCodedStream(
      ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const final;
  void DiscardUnknownFields();
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(HeapGraphRoot* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "perfetto.protos.HeapGraphRoot";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  std::string GetTypeName() const final;

  // nested types ----------------------------------------------------

  typedef HeapGraphRoot_Type Type;
  static constexpr Type ROOT_UNKNOWN =
    HeapGraphRoot_Type_ROOT_UNKNOWN;
  static constexpr Type ROOT_JNI_GLOBAL =
    HeapGraphRoot_Type_ROOT_JNI_GLOBAL;
  static constexpr Type ROOT_JNI_LOCAL =
    HeapGraphRoot_Type_ROOT_JNI_LOCAL;
  static constexpr Type ROOT_JAVA_FRAME =
    HeapGraphRoot_Type_ROOT_JAVA_FRAME;
  static constexpr Type ROOT_NATIVE_STACK =
    HeapGraphRoot_Type_ROOT_NATIVE_STACK;
  static constexpr Type ROOT_STICKY_CLASS =
    HeapGraphRoot_Type_ROOT_STICKY_CLASS;
  static constexpr Type ROOT_THREAD_BLOCK =
    HeapGraphRoot_Type_ROOT_THREAD_BLOCK;
  static constexpr Type ROOT_MONITOR_USED =
    HeapGraphRoot_Type_ROOT_MONITOR_USED;
  static constexpr Type ROOT_THREAD_OBJECT =
    HeapGraphRoot_Type_ROOT_THREAD_OBJECT;
  static constexpr Type ROOT_INTERNED_STRING =
    HeapGraphRoot_Type_ROOT_INTERNED_STRING;
  static constexpr Type ROOT_FINALIZING =
    HeapGraphRoot_Type_ROOT_FINALIZING;
  static constexpr Type ROOT_DEBUGGER =
    HeapGraphRoot_Type_ROOT_DEBUGGER;
  static constexpr Type ROOT_REFERENCE_CLEANUP =
    HeapGraphRoot_Type_ROOT_REFERENCE_CLEANUP;
  static constexpr Type ROOT_VM_INTERNAL =
    HeapGraphRoot_Type_ROOT_VM_INTERNAL;
  static constexpr Type ROOT_JNI_MONITOR =
    HeapGraphRoot_Type_ROOT_JNI_MONITOR;
  static inline bool Type_IsValid(int value) {
    return HeapGraphRoot_Type_IsValid(value);
  }
  static constexpr Type Type_MIN =
    HeapGraphRoot_Type_Type_MIN;
  static constexpr Type Type_MAX =
    HeapGraphRoot_Type_Type_MAX;
  static constexpr int Type_ARRAYSIZE =
    HeapGraphRoot_Type_Type_ARRAYSIZE;
  template<typename T>
  static inline const std::string& Type_Name(T enum_t_value) {
    static_assert(::std::is_same<T, Type>::value ||
      ::std::is_integral<T>::value,
      "Incorrect type passed to function Type_Name.");
    return HeapGraphRoot_Type_Name(enum_t_value);
  }
  static inline bool Type_Parse(const std::string& name,
      Type* value) {
    return HeapGraphRoot_Type_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  enum : int {
    kObjectIdsFieldNumber = 1,
    kRootTypeFieldNumber = 2,
  };
  // repeated uint64 object_ids = 1 [packed = true];
  int object_ids_size() const;
  void clear_object_ids();
  ::PROTOBUF_NAMESPACE_ID::uint64 object_ids(int index) const;
  void set_object_ids(int index, ::PROTOBUF_NAMESPACE_ID::uint64 value);
  void add_object_ids(::PROTOBUF_NAMESPACE_ID::uint64 value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint64 >&
      object_ids() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint64 >*
      mutable_object_ids();

  // optional .perfetto.protos.HeapGraphRoot.Type root_type = 2;
  bool has_root_type() const;
  void clear_root_type();
  ::perfetto::protos::HeapGraphRoot_Type root_type() const;
  void set_root_type(::perfetto::protos::HeapGraphRoot_Type value);

  // @@protoc_insertion_point(class_scope:perfetto.protos.HeapGraphRoot)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArenaLite _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint64 > object_ids_;
  mutable std::atomic<int> _object_ids_cached_byte_size_;
  int root_type_;
  friend struct ::TableStruct_protos_2fperfetto_2ftrace_2fprofiling_2fheap_5fgraph_2eproto;
};
// -------------------------------------------------------------------

class HeapGraphObject :
    public ::PROTOBUF_NAMESPACE_ID::MessageLite /* @@protoc_insertion_point(class_definition:perfetto.protos.HeapGraphObject) */ {
 public:
  HeapGraphObject();
  virtual ~HeapGraphObject();

  HeapGraphObject(const HeapGraphObject& from);
  HeapGraphObject(HeapGraphObject&& from) noexcept
    : HeapGraphObject() {
    *this = ::std::move(from);
  }

  inline HeapGraphObject& operator=(const HeapGraphObject& from) {
    CopyFrom(from);
    return *this;
  }
  inline HeapGraphObject& operator=(HeapGraphObject&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const std::string& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline std::string* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const HeapGraphObject& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const HeapGraphObject* internal_default_instance() {
    return reinterpret_cast<const HeapGraphObject*>(
               &_HeapGraphObject_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    4;

  friend void swap(HeapGraphObject& a, HeapGraphObject& b) {
    a.Swap(&b);
  }
  inline void Swap(HeapGraphObject* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline HeapGraphObject* New() const final {
    return CreateMaybeMessage<HeapGraphObject>(nullptr);
  }

  HeapGraphObject* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<HeapGraphObject>(arena);
  }
  void CheckTypeAndMergeFrom(const ::PROTOBUF_NAMESPACE_ID::MessageLite& from)
    final;
  void CopyFrom(const HeapGraphObject& from);
  void MergeFrom(const HeapGraphObject& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  #else
  bool MergePartialFromCodedStream(
      ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const final;
  void DiscardUnknownFields();
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(HeapGraphObject* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "perfetto.protos.HeapGraphObject";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  std::string GetTypeName() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kReferenceFieldIdFieldNumber = 4,
    kReferenceObjectIdFieldNumber = 5,
    kIdFieldNumber = 1,
    kTypeIdFieldNumber = 2,
    kSelfSizeFieldNumber = 3,
  };
  // repeated uint64 reference_field_id = 4 [packed = true];
  int reference_field_id_size() const;
  void clear_reference_field_id();
  ::PROTOBUF_NAMESPACE_ID::uint64 reference_field_id(int index) const;
  void set_reference_field_id(int index, ::PROTOBUF_NAMESPACE_ID::uint64 value);
  void add_reference_field_id(::PROTOBUF_NAMESPACE_ID::uint64 value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint64 >&
      reference_field_id() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint64 >*
      mutable_reference_field_id();

  // repeated uint64 reference_object_id = 5 [packed = true];
  int reference_object_id_size() const;
  void clear_reference_object_id();
  ::PROTOBUF_NAMESPACE_ID::uint64 reference_object_id(int index) const;
  void set_reference_object_id(int index, ::PROTOBUF_NAMESPACE_ID::uint64 value);
  void add_reference_object_id(::PROTOBUF_NAMESPACE_ID::uint64 value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint64 >&
      reference_object_id() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint64 >*
      mutable_reference_object_id();

  // optional uint64 id = 1;
  bool has_id() const;
  void clear_id();
  ::PROTOBUF_NAMESPACE_ID::uint64 id() const;
  void set_id(::PROTOBUF_NAMESPACE_ID::uint64 value);

  // optional uint64 type_id = 2;
  bool has_type_id() const;
  void clear_type_id();
  ::PROTOBUF_NAMESPACE_ID::uint64 type_id() const;
  void set_type_id(::PROTOBUF_NAMESPACE_ID::uint64 value);

  // optional uint64 self_size = 3;
  bool has_self_size() const;
  void clear_self_size();
  ::PROTOBUF_NAMESPACE_ID::uint64 self_size() const;
  void set_self_size(::PROTOBUF_NAMESPACE_ID::uint64 value);

  // @@protoc_insertion_point(class_scope:perfetto.protos.HeapGraphObject)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArenaLite _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint64 > reference_field_id_;
  mutable std::atomic<int> _reference_field_id_cached_byte_size_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint64 > reference_object_id_;
  mutable std::atomic<int> _reference_object_id_cached_byte_size_;
  ::PROTOBUF_NAMESPACE_ID::uint64 id_;
  ::PROTOBUF_NAMESPACE_ID::uint64 type_id_;
  ::PROTOBUF_NAMESPACE_ID::uint64 self_size_;
  friend struct ::TableStruct_protos_2fperfetto_2ftrace_2fprofiling_2fheap_5fgraph_2eproto;
};
// -------------------------------------------------------------------

class HeapGraph :
    public ::PROTOBUF_NAMESPACE_ID::MessageLite /* @@protoc_insertion_point(class_definition:perfetto.protos.HeapGraph) */ {
 public:
  HeapGraph();
  virtual ~HeapGraph();

  HeapGraph(const HeapGraph& from);
  HeapGraph(HeapGraph&& from) noexcept
    : HeapGraph() {
    *this = ::std::move(from);
  }

  inline HeapGraph& operator=(const HeapGraph& from) {
    CopyFrom(from);
    return *this;
  }
  inline HeapGraph& operator=(HeapGraph&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const std::string& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline std::string* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const HeapGraph& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const HeapGraph* internal_default_instance() {
    return reinterpret_cast<const HeapGraph*>(
               &_HeapGraph_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    5;

  friend void swap(HeapGraph& a, HeapGraph& b) {
    a.Swap(&b);
  }
  inline void Swap(HeapGraph* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline HeapGraph* New() const final {
    return CreateMaybeMessage<HeapGraph>(nullptr);
  }

  HeapGraph* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<HeapGraph>(arena);
  }
  void CheckTypeAndMergeFrom(const ::PROTOBUF_NAMESPACE_ID::MessageLite& from)
    final;
  void CopyFrom(const HeapGraph& from);
  void MergeFrom(const HeapGraph& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  #else
  bool MergePartialFromCodedStream(
      ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const final;
  void DiscardUnknownFields();
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(HeapGraph* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "perfetto.protos.HeapGraph";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  std::string GetTypeName() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kObjectsFieldNumber = 2,
    kTypeNamesFieldNumber = 3,
    kFieldNamesFieldNumber = 4,
    kRootsFieldNumber = 7,
    kPidFieldNumber = 1,
    kContinuedFieldNumber = 5,
    kIndexFieldNumber = 6,
  };
  // repeated .perfetto.protos.HeapGraphObject objects = 2;
  int objects_size() const;
  void clear_objects();
  ::perfetto::protos::HeapGraphObject* mutable_objects(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::perfetto::protos::HeapGraphObject >*
      mutable_objects();
  const ::perfetto::protos::HeapGraphObject& objects(int index) const;
  ::perfetto::protos::HeapGraphObject* add_objects();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::perfetto::protos::HeapGraphObject >&
      objects() const;

  // repeated .perfetto.protos.InternedString type_names = 3;
  int type_names_size() const;
  void clear_type_names();
  ::perfetto::protos::InternedString* mutable_type_names(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::perfetto::protos::InternedString >*
      mutable_type_names();
  const ::perfetto::protos::InternedString& type_names(int index) const;
  ::perfetto::protos::InternedString* add_type_names();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::perfetto::protos::InternedString >&
      type_names() const;

  // repeated .perfetto.protos.InternedString field_names = 4;
  int field_names_size() const;
  void clear_field_names();
  ::perfetto::protos::InternedString* mutable_field_names(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::perfetto::protos::InternedString >*
      mutable_field_names();
  const ::perfetto::protos::InternedString& field_names(int index) const;
  ::perfetto::protos::InternedString* add_field_names();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::perfetto::protos::InternedString >&
      field_names() const;

  // repeated .perfetto.protos.HeapGraphRoot roots = 7;
  int roots_size() const;
  void clear_roots();
  ::perfetto::protos::HeapGraphRoot* mutable_roots(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::perfetto::protos::HeapGraphRoot >*
      mutable_roots();
  const ::perfetto::protos::HeapGraphRoot& roots(int index) const;
  ::perfetto::protos::HeapGraphRoot* add_roots();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::perfetto::protos::HeapGraphRoot >&
      roots() const;

  // optional int32 pid = 1;
  bool has_pid() const;
  void clear_pid();
  ::PROTOBUF_NAMESPACE_ID::int32 pid() const;
  void set_pid(::PROTOBUF_NAMESPACE_ID::int32 value);

  // optional bool continued = 5;
  bool has_continued() const;
  void clear_continued();
  bool continued() const;
  void set_continued(bool value);

  // optional uint64 index = 6;
  bool has_index() const;
  void clear_index();
  ::PROTOBUF_NAMESPACE_ID::uint64 index() const;
  void set_index(::PROTOBUF_NAMESPACE_ID::uint64 value);

  // @@protoc_insertion_point(class_scope:perfetto.protos.HeapGraph)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArenaLite _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::perfetto::protos::HeapGraphObject > objects_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::perfetto::protos::InternedString > type_names_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::perfetto::protos::InternedString > field_names_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::perfetto::protos::HeapGraphRoot > roots_;
  ::PROTOBUF_NAMESPACE_ID::int32 pid_;
  bool continued_;
  ::PROTOBUF_NAMESPACE_ID::uint64 index_;
  friend struct ::TableStruct_protos_2fperfetto_2ftrace_2fprofiling_2fheap_5fgraph_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// ObfuscatedMember

// optional string obfuscated_name = 1;
inline bool ObfuscatedMember::has_obfuscated_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ObfuscatedMember::clear_obfuscated_name() {
  obfuscated_name_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000001u;
}
inline const std::string& ObfuscatedMember::obfuscated_name() const {
  // @@protoc_insertion_point(field_get:perfetto.protos.ObfuscatedMember.obfuscated_name)
  return obfuscated_name_.GetNoArena();
}
inline void ObfuscatedMember::set_obfuscated_name(const std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  obfuscated_name_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:perfetto.protos.ObfuscatedMember.obfuscated_name)
}
inline void ObfuscatedMember::set_obfuscated_name(std::string&& value) {
  _has_bits_[0] |= 0x00000001u;
  obfuscated_name_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:perfetto.protos.ObfuscatedMember.obfuscated_name)
}
inline void ObfuscatedMember::set_obfuscated_name(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000001u;
  obfuscated_name_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:perfetto.protos.ObfuscatedMember.obfuscated_name)
}
inline void ObfuscatedMember::set_obfuscated_name(const char* value, size_t size) {
  _has_bits_[0] |= 0x00000001u;
  obfuscated_name_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:perfetto.protos.ObfuscatedMember.obfuscated_name)
}
inline std::string* ObfuscatedMember::mutable_obfuscated_name() {
  _has_bits_[0] |= 0x00000001u;
  // @@protoc_insertion_point(field_mutable:perfetto.protos.ObfuscatedMember.obfuscated_name)
  return obfuscated_name_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* ObfuscatedMember::release_obfuscated_name() {
  // @@protoc_insertion_point(field_release:perfetto.protos.ObfuscatedMember.obfuscated_name)
  if (!has_obfuscated_name()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  return obfuscated_name_.ReleaseNonDefaultNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void ObfuscatedMember::set_allocated_obfuscated_name(std::string* obfuscated_name) {
  if (obfuscated_name != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  obfuscated_name_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), obfuscated_name);
  // @@protoc_insertion_point(field_set_allocated:perfetto.protos.ObfuscatedMember.obfuscated_name)
}

// optional string deobfuscated_name = 2;
inline bool ObfuscatedMember::has_deobfuscated_name() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ObfuscatedMember::clear_deobfuscated_name() {
  deobfuscated_name_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000002u;
}
inline const std::string& ObfuscatedMember::deobfuscated_name() const {
  // @@protoc_insertion_point(field_get:perfetto.protos.ObfuscatedMember.deobfuscated_name)
  return deobfuscated_name_.GetNoArena();
}
inline void ObfuscatedMember::set_deobfuscated_name(const std::string& value) {
  _has_bits_[0] |= 0x00000002u;
  deobfuscated_name_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:perfetto.protos.ObfuscatedMember.deobfuscated_name)
}
inline void ObfuscatedMember::set_deobfuscated_name(std::string&& value) {
  _has_bits_[0] |= 0x00000002u;
  deobfuscated_name_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:perfetto.protos.ObfuscatedMember.deobfuscated_name)
}
inline void ObfuscatedMember::set_deobfuscated_name(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000002u;
  deobfuscated_name_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:perfetto.protos.ObfuscatedMember.deobfuscated_name)
}
inline void ObfuscatedMember::set_deobfuscated_name(const char* value, size_t size) {
  _has_bits_[0] |= 0x00000002u;
  deobfuscated_name_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:perfetto.protos.ObfuscatedMember.deobfuscated_name)
}
inline std::string* ObfuscatedMember::mutable_deobfuscated_name() {
  _has_bits_[0] |= 0x00000002u;
  // @@protoc_insertion_point(field_mutable:perfetto.protos.ObfuscatedMember.deobfuscated_name)
  return deobfuscated_name_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* ObfuscatedMember::release_deobfuscated_name() {
  // @@protoc_insertion_point(field_release:perfetto.protos.ObfuscatedMember.deobfuscated_name)
  if (!has_deobfuscated_name()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000002u;
  return deobfuscated_name_.ReleaseNonDefaultNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void ObfuscatedMember::set_allocated_deobfuscated_name(std::string* deobfuscated_name) {
  if (deobfuscated_name != nullptr) {
    _has_bits_[0] |= 0x00000002u;
  } else {
    _has_bits_[0] &= ~0x00000002u;
  }
  deobfuscated_name_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), deobfuscated_name);
  // @@protoc_insertion_point(field_set_allocated:perfetto.protos.ObfuscatedMember.deobfuscated_name)
}

// -------------------------------------------------------------------

// ObfuscatedClass

// optional string obfuscated_name = 1;
inline bool ObfuscatedClass::has_obfuscated_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ObfuscatedClass::clear_obfuscated_name() {
  obfuscated_name_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000001u;
}
inline const std::string& ObfuscatedClass::obfuscated_name() const {
  // @@protoc_insertion_point(field_get:perfetto.protos.ObfuscatedClass.obfuscated_name)
  return obfuscated_name_.GetNoArena();
}
inline void ObfuscatedClass::set_obfuscated_name(const std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  obfuscated_name_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:perfetto.protos.ObfuscatedClass.obfuscated_name)
}
inline void ObfuscatedClass::set_obfuscated_name(std::string&& value) {
  _has_bits_[0] |= 0x00000001u;
  obfuscated_name_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:perfetto.protos.ObfuscatedClass.obfuscated_name)
}
inline void ObfuscatedClass::set_obfuscated_name(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000001u;
  obfuscated_name_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:perfetto.protos.ObfuscatedClass.obfuscated_name)
}
inline void ObfuscatedClass::set_obfuscated_name(const char* value, size_t size) {
  _has_bits_[0] |= 0x00000001u;
  obfuscated_name_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:perfetto.protos.ObfuscatedClass.obfuscated_name)
}
inline std::string* ObfuscatedClass::mutable_obfuscated_name() {
  _has_bits_[0] |= 0x00000001u;
  // @@protoc_insertion_point(field_mutable:perfetto.protos.ObfuscatedClass.obfuscated_name)
  return obfuscated_name_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* ObfuscatedClass::release_obfuscated_name() {
  // @@protoc_insertion_point(field_release:perfetto.protos.ObfuscatedClass.obfuscated_name)
  if (!has_obfuscated_name()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  return obfuscated_name_.ReleaseNonDefaultNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void ObfuscatedClass::set_allocated_obfuscated_name(std::string* obfuscated_name) {
  if (obfuscated_name != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  obfuscated_name_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), obfuscated_name);
  // @@protoc_insertion_point(field_set_allocated:perfetto.protos.ObfuscatedClass.obfuscated_name)
}

// optional string deobfuscated_name = 2;
inline bool ObfuscatedClass::has_deobfuscated_name() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ObfuscatedClass::clear_deobfuscated_name() {
  deobfuscated_name_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000002u;
}
inline const std::string& ObfuscatedClass::deobfuscated_name() const {
  // @@protoc_insertion_point(field_get:perfetto.protos.ObfuscatedClass.deobfuscated_name)
  return deobfuscated_name_.GetNoArena();
}
inline void ObfuscatedClass::set_deobfuscated_name(const std::string& value) {
  _has_bits_[0] |= 0x00000002u;
  deobfuscated_name_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:perfetto.protos.ObfuscatedClass.deobfuscated_name)
}
inline void ObfuscatedClass::set_deobfuscated_name(std::string&& value) {
  _has_bits_[0] |= 0x00000002u;
  deobfuscated_name_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:perfetto.protos.ObfuscatedClass.deobfuscated_name)
}
inline void ObfuscatedClass::set_deobfuscated_name(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000002u;
  deobfuscated_name_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:perfetto.protos.ObfuscatedClass.deobfuscated_name)
}
inline void ObfuscatedClass::set_deobfuscated_name(const char* value, size_t size) {
  _has_bits_[0] |= 0x00000002u;
  deobfuscated_name_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:perfetto.protos.ObfuscatedClass.deobfuscated_name)
}
inline std::string* ObfuscatedClass::mutable_deobfuscated_name() {
  _has_bits_[0] |= 0x00000002u;
  // @@protoc_insertion_point(field_mutable:perfetto.protos.ObfuscatedClass.deobfuscated_name)
  return deobfuscated_name_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* ObfuscatedClass::release_deobfuscated_name() {
  // @@protoc_insertion_point(field_release:perfetto.protos.ObfuscatedClass.deobfuscated_name)
  if (!has_deobfuscated_name()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000002u;
  return deobfuscated_name_.ReleaseNonDefaultNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void ObfuscatedClass::set_allocated_deobfuscated_name(std::string* deobfuscated_name) {
  if (deobfuscated_name != nullptr) {
    _has_bits_[0] |= 0x00000002u;
  } else {
    _has_bits_[0] &= ~0x00000002u;
  }
  deobfuscated_name_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), deobfuscated_name);
  // @@protoc_insertion_point(field_set_allocated:perfetto.protos.ObfuscatedClass.deobfuscated_name)
}

// repeated .perfetto.protos.ObfuscatedMember obfuscated_members = 3;
inline int ObfuscatedClass::obfuscated_members_size() const {
  return obfuscated_members_.size();
}
inline void ObfuscatedClass::clear_obfuscated_members() {
  obfuscated_members_.Clear();
}
inline ::perfetto::protos::ObfuscatedMember* ObfuscatedClass::mutable_obfuscated_members(int index) {
  // @@protoc_insertion_point(field_mutable:perfetto.protos.ObfuscatedClass.obfuscated_members)
  return obfuscated_members_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::perfetto::protos::ObfuscatedMember >*
ObfuscatedClass::mutable_obfuscated_members() {
  // @@protoc_insertion_point(field_mutable_list:perfetto.protos.ObfuscatedClass.obfuscated_members)
  return &obfuscated_members_;
}
inline const ::perfetto::protos::ObfuscatedMember& ObfuscatedClass::obfuscated_members(int index) const {
  // @@protoc_insertion_point(field_get:perfetto.protos.ObfuscatedClass.obfuscated_members)
  return obfuscated_members_.Get(index);
}
inline ::perfetto::protos::ObfuscatedMember* ObfuscatedClass::add_obfuscated_members() {
  // @@protoc_insertion_point(field_add:perfetto.protos.ObfuscatedClass.obfuscated_members)
  return obfuscated_members_.Add();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::perfetto::protos::ObfuscatedMember >&
ObfuscatedClass::obfuscated_members() const {
  // @@protoc_insertion_point(field_list:perfetto.protos.ObfuscatedClass.obfuscated_members)
  return obfuscated_members_;
}

// -------------------------------------------------------------------

// DeobfuscationMapping

// optional string package_name = 1;
inline bool DeobfuscationMapping::has_package_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void DeobfuscationMapping::clear_package_name() {
  package_name_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000001u;
}
inline const std::string& DeobfuscationMapping::package_name() const {
  // @@protoc_insertion_point(field_get:perfetto.protos.DeobfuscationMapping.package_name)
  return package_name_.GetNoArena();
}
inline void DeobfuscationMapping::set_package_name(const std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  package_name_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:perfetto.protos.DeobfuscationMapping.package_name)
}
inline void DeobfuscationMapping::set_package_name(std::string&& value) {
  _has_bits_[0] |= 0x00000001u;
  package_name_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:perfetto.protos.DeobfuscationMapping.package_name)
}
inline void DeobfuscationMapping::set_package_name(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000001u;
  package_name_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:perfetto.protos.DeobfuscationMapping.package_name)
}
inline void DeobfuscationMapping::set_package_name(const char* value, size_t size) {
  _has_bits_[0] |= 0x00000001u;
  package_name_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:perfetto.protos.DeobfuscationMapping.package_name)
}
inline std::string* DeobfuscationMapping::mutable_package_name() {
  _has_bits_[0] |= 0x00000001u;
  // @@protoc_insertion_point(field_mutable:perfetto.protos.DeobfuscationMapping.package_name)
  return package_name_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* DeobfuscationMapping::release_package_name() {
  // @@protoc_insertion_point(field_release:perfetto.protos.DeobfuscationMapping.package_name)
  if (!has_package_name()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  return package_name_.ReleaseNonDefaultNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void DeobfuscationMapping::set_allocated_package_name(std::string* package_name) {
  if (package_name != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  package_name_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), package_name);
  // @@protoc_insertion_point(field_set_allocated:perfetto.protos.DeobfuscationMapping.package_name)
}

// optional int64 version_code = 2;
inline bool DeobfuscationMapping::has_version_code() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void DeobfuscationMapping::clear_version_code() {
  version_code_ = PROTOBUF_LONGLONG(0);
  _has_bits_[0] &= ~0x00000002u;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 DeobfuscationMapping::version_code() const {
  // @@protoc_insertion_point(field_get:perfetto.protos.DeobfuscationMapping.version_code)
  return version_code_;
}
inline void DeobfuscationMapping::set_version_code(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _has_bits_[0] |= 0x00000002u;
  version_code_ = value;
  // @@protoc_insertion_point(field_set:perfetto.protos.DeobfuscationMapping.version_code)
}

// repeated .perfetto.protos.ObfuscatedClass obfuscated_classes = 3;
inline int DeobfuscationMapping::obfuscated_classes_size() const {
  return obfuscated_classes_.size();
}
inline void DeobfuscationMapping::clear_obfuscated_classes() {
  obfuscated_classes_.Clear();
}
inline ::perfetto::protos::ObfuscatedClass* DeobfuscationMapping::mutable_obfuscated_classes(int index) {
  // @@protoc_insertion_point(field_mutable:perfetto.protos.DeobfuscationMapping.obfuscated_classes)
  return obfuscated_classes_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::perfetto::protos::ObfuscatedClass >*
DeobfuscationMapping::mutable_obfuscated_classes() {
  // @@protoc_insertion_point(field_mutable_list:perfetto.protos.DeobfuscationMapping.obfuscated_classes)
  return &obfuscated_classes_;
}
inline const ::perfetto::protos::ObfuscatedClass& DeobfuscationMapping::obfuscated_classes(int index) const {
  // @@protoc_insertion_point(field_get:perfetto.protos.DeobfuscationMapping.obfuscated_classes)
  return obfuscated_classes_.Get(index);
}
inline ::perfetto::protos::ObfuscatedClass* DeobfuscationMapping::add_obfuscated_classes() {
  // @@protoc_insertion_point(field_add:perfetto.protos.DeobfuscationMapping.obfuscated_classes)
  return obfuscated_classes_.Add();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::perfetto::protos::ObfuscatedClass >&
DeobfuscationMapping::obfuscated_classes() const {
  // @@protoc_insertion_point(field_list:perfetto.protos.DeobfuscationMapping.obfuscated_classes)
  return obfuscated_classes_;
}

// -------------------------------------------------------------------

// HeapGraphRoot

// repeated uint64 object_ids = 1 [packed = true];
inline int HeapGraphRoot::object_ids_size() const {
  return object_ids_.size();
}
inline void HeapGraphRoot::clear_object_ids() {
  object_ids_.Clear();
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 HeapGraphRoot::object_ids(int index) const {
  // @@protoc_insertion_point(field_get:perfetto.protos.HeapGraphRoot.object_ids)
  return object_ids_.Get(index);
}
inline void HeapGraphRoot::set_object_ids(int index, ::PROTOBUF_NAMESPACE_ID::uint64 value) {
  object_ids_.Set(index, value);
  // @@protoc_insertion_point(field_set:perfetto.protos.HeapGraphRoot.object_ids)
}
inline void HeapGraphRoot::add_object_ids(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  object_ids_.Add(value);
  // @@protoc_insertion_point(field_add:perfetto.protos.HeapGraphRoot.object_ids)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint64 >&
HeapGraphRoot::object_ids() const {
  // @@protoc_insertion_point(field_list:perfetto.protos.HeapGraphRoot.object_ids)
  return object_ids_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint64 >*
HeapGraphRoot::mutable_object_ids() {
  // @@protoc_insertion_point(field_mutable_list:perfetto.protos.HeapGraphRoot.object_ids)
  return &object_ids_;
}

// optional .perfetto.protos.HeapGraphRoot.Type root_type = 2;
inline bool HeapGraphRoot::has_root_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void HeapGraphRoot::clear_root_type() {
  root_type_ = 0;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::perfetto::protos::HeapGraphRoot_Type HeapGraphRoot::root_type() const {
  // @@protoc_insertion_point(field_get:perfetto.protos.HeapGraphRoot.root_type)
  return static_cast< ::perfetto::protos::HeapGraphRoot_Type >(root_type_);
}
inline void HeapGraphRoot::set_root_type(::perfetto::protos::HeapGraphRoot_Type value) {
  assert(::perfetto::protos::HeapGraphRoot_Type_IsValid(value));
  _has_bits_[0] |= 0x00000001u;
  root_type_ = value;
  // @@protoc_insertion_point(field_set:perfetto.protos.HeapGraphRoot.root_type)
}

// -------------------------------------------------------------------

// HeapGraphObject

// optional uint64 id = 1;
inline bool HeapGraphObject::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void HeapGraphObject::clear_id() {
  id_ = PROTOBUF_ULONGLONG(0);
  _has_bits_[0] &= ~0x00000001u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 HeapGraphObject::id() const {
  // @@protoc_insertion_point(field_get:perfetto.protos.HeapGraphObject.id)
  return id_;
}
inline void HeapGraphObject::set_id(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _has_bits_[0] |= 0x00000001u;
  id_ = value;
  // @@protoc_insertion_point(field_set:perfetto.protos.HeapGraphObject.id)
}

// optional uint64 type_id = 2;
inline bool HeapGraphObject::has_type_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void HeapGraphObject::clear_type_id() {
  type_id_ = PROTOBUF_ULONGLONG(0);
  _has_bits_[0] &= ~0x00000002u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 HeapGraphObject::type_id() const {
  // @@protoc_insertion_point(field_get:perfetto.protos.HeapGraphObject.type_id)
  return type_id_;
}
inline void HeapGraphObject::set_type_id(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _has_bits_[0] |= 0x00000002u;
  type_id_ = value;
  // @@protoc_insertion_point(field_set:perfetto.protos.HeapGraphObject.type_id)
}

// optional uint64 self_size = 3;
inline bool HeapGraphObject::has_self_size() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void HeapGraphObject::clear_self_size() {
  self_size_ = PROTOBUF_ULONGLONG(0);
  _has_bits_[0] &= ~0x00000004u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 HeapGraphObject::self_size() const {
  // @@protoc_insertion_point(field_get:perfetto.protos.HeapGraphObject.self_size)
  return self_size_;
}
inline void HeapGraphObject::set_self_size(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _has_bits_[0] |= 0x00000004u;
  self_size_ = value;
  // @@protoc_insertion_point(field_set:perfetto.protos.HeapGraphObject.self_size)
}

// repeated uint64 reference_field_id = 4 [packed = true];
inline int HeapGraphObject::reference_field_id_size() const {
  return reference_field_id_.size();
}
inline void HeapGraphObject::clear_reference_field_id() {
  reference_field_id_.Clear();
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 HeapGraphObject::reference_field_id(int index) const {
  // @@protoc_insertion_point(field_get:perfetto.protos.HeapGraphObject.reference_field_id)
  return reference_field_id_.Get(index);
}
inline void HeapGraphObject::set_reference_field_id(int index, ::PROTOBUF_NAMESPACE_ID::uint64 value) {
  reference_field_id_.Set(index, value);
  // @@protoc_insertion_point(field_set:perfetto.protos.HeapGraphObject.reference_field_id)
}
inline void HeapGraphObject::add_reference_field_id(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  reference_field_id_.Add(value);
  // @@protoc_insertion_point(field_add:perfetto.protos.HeapGraphObject.reference_field_id)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint64 >&
HeapGraphObject::reference_field_id() const {
  // @@protoc_insertion_point(field_list:perfetto.protos.HeapGraphObject.reference_field_id)
  return reference_field_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint64 >*
HeapGraphObject::mutable_reference_field_id() {
  // @@protoc_insertion_point(field_mutable_list:perfetto.protos.HeapGraphObject.reference_field_id)
  return &reference_field_id_;
}

// repeated uint64 reference_object_id = 5 [packed = true];
inline int HeapGraphObject::reference_object_id_size() const {
  return reference_object_id_.size();
}
inline void HeapGraphObject::clear_reference_object_id() {
  reference_object_id_.Clear();
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 HeapGraphObject::reference_object_id(int index) const {
  // @@protoc_insertion_point(field_get:perfetto.protos.HeapGraphObject.reference_object_id)
  return reference_object_id_.Get(index);
}
inline void HeapGraphObject::set_reference_object_id(int index, ::PROTOBUF_NAMESPACE_ID::uint64 value) {
  reference_object_id_.Set(index, value);
  // @@protoc_insertion_point(field_set:perfetto.protos.HeapGraphObject.reference_object_id)
}
inline void HeapGraphObject::add_reference_object_id(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  reference_object_id_.Add(value);
  // @@protoc_insertion_point(field_add:perfetto.protos.HeapGraphObject.reference_object_id)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint64 >&
HeapGraphObject::reference_object_id() const {
  // @@protoc_insertion_point(field_list:perfetto.protos.HeapGraphObject.reference_object_id)
  return reference_object_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint64 >*
HeapGraphObject::mutable_reference_object_id() {
  // @@protoc_insertion_point(field_mutable_list:perfetto.protos.HeapGraphObject.reference_object_id)
  return &reference_object_id_;
}

// -------------------------------------------------------------------

// HeapGraph

// optional int32 pid = 1;
inline bool HeapGraph::has_pid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void HeapGraph::clear_pid() {
  pid_ = 0;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 HeapGraph::pid() const {
  // @@protoc_insertion_point(field_get:perfetto.protos.HeapGraph.pid)
  return pid_;
}
inline void HeapGraph::set_pid(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000001u;
  pid_ = value;
  // @@protoc_insertion_point(field_set:perfetto.protos.HeapGraph.pid)
}

// repeated .perfetto.protos.HeapGraphObject objects = 2;
inline int HeapGraph::objects_size() const {
  return objects_.size();
}
inline void HeapGraph::clear_objects() {
  objects_.Clear();
}
inline ::perfetto::protos::HeapGraphObject* HeapGraph::mutable_objects(int index) {
  // @@protoc_insertion_point(field_mutable:perfetto.protos.HeapGraph.objects)
  return objects_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::perfetto::protos::HeapGraphObject >*
HeapGraph::mutable_objects() {
  // @@protoc_insertion_point(field_mutable_list:perfetto.protos.HeapGraph.objects)
  return &objects_;
}
inline const ::perfetto::protos::HeapGraphObject& HeapGraph::objects(int index) const {
  // @@protoc_insertion_point(field_get:perfetto.protos.HeapGraph.objects)
  return objects_.Get(index);
}
inline ::perfetto::protos::HeapGraphObject* HeapGraph::add_objects() {
  // @@protoc_insertion_point(field_add:perfetto.protos.HeapGraph.objects)
  return objects_.Add();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::perfetto::protos::HeapGraphObject >&
HeapGraph::objects() const {
  // @@protoc_insertion_point(field_list:perfetto.protos.HeapGraph.objects)
  return objects_;
}

// repeated .perfetto.protos.HeapGraphRoot roots = 7;
inline int HeapGraph::roots_size() const {
  return roots_.size();
}
inline void HeapGraph::clear_roots() {
  roots_.Clear();
}
inline ::perfetto::protos::HeapGraphRoot* HeapGraph::mutable_roots(int index) {
  // @@protoc_insertion_point(field_mutable:perfetto.protos.HeapGraph.roots)
  return roots_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::perfetto::protos::HeapGraphRoot >*
HeapGraph::mutable_roots() {
  // @@protoc_insertion_point(field_mutable_list:perfetto.protos.HeapGraph.roots)
  return &roots_;
}
inline const ::perfetto::protos::HeapGraphRoot& HeapGraph::roots(int index) const {
  // @@protoc_insertion_point(field_get:perfetto.protos.HeapGraph.roots)
  return roots_.Get(index);
}
inline ::perfetto::protos::HeapGraphRoot* HeapGraph::add_roots() {
  // @@protoc_insertion_point(field_add:perfetto.protos.HeapGraph.roots)
  return roots_.Add();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::perfetto::protos::HeapGraphRoot >&
HeapGraph::roots() const {
  // @@protoc_insertion_point(field_list:perfetto.protos.HeapGraph.roots)
  return roots_;
}

// repeated .perfetto.protos.InternedString type_names = 3;
inline int HeapGraph::type_names_size() const {
  return type_names_.size();
}
inline ::perfetto::protos::InternedString* HeapGraph::mutable_type_names(int index) {
  // @@protoc_insertion_point(field_mutable:perfetto.protos.HeapGraph.type_names)
  return type_names_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::perfetto::protos::InternedString >*
HeapGraph::mutable_type_names() {
  // @@protoc_insertion_point(field_mutable_list:perfetto.protos.HeapGraph.type_names)
  return &type_names_;
}
inline const ::perfetto::protos::InternedString& HeapGraph::type_names(int index) const {
  // @@protoc_insertion_point(field_get:perfetto.protos.HeapGraph.type_names)
  return type_names_.Get(index);
}
inline ::perfetto::protos::InternedString* HeapGraph::add_type_names() {
  // @@protoc_insertion_point(field_add:perfetto.protos.HeapGraph.type_names)
  return type_names_.Add();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::perfetto::protos::InternedString >&
HeapGraph::type_names() const {
  // @@protoc_insertion_point(field_list:perfetto.protos.HeapGraph.type_names)
  return type_names_;
}

// repeated .perfetto.protos.InternedString field_names = 4;
inline int HeapGraph::field_names_size() const {
  return field_names_.size();
}
inline ::perfetto::protos::InternedString* HeapGraph::mutable_field_names(int index) {
  // @@protoc_insertion_point(field_mutable:perfetto.protos.HeapGraph.field_names)
  return field_names_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::perfetto::protos::InternedString >*
HeapGraph::mutable_field_names() {
  // @@protoc_insertion_point(field_mutable_list:perfetto.protos.HeapGraph.field_names)
  return &field_names_;
}
inline const ::perfetto::protos::InternedString& HeapGraph::field_names(int index) const {
  // @@protoc_insertion_point(field_get:perfetto.protos.HeapGraph.field_names)
  return field_names_.Get(index);
}
inline ::perfetto::protos::InternedString* HeapGraph::add_field_names() {
  // @@protoc_insertion_point(field_add:perfetto.protos.HeapGraph.field_names)
  return field_names_.Add();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::perfetto::protos::InternedString >&
HeapGraph::field_names() const {
  // @@protoc_insertion_point(field_list:perfetto.protos.HeapGraph.field_names)
  return field_names_;
}

// optional bool continued = 5;
inline bool HeapGraph::has_continued() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void HeapGraph::clear_continued() {
  continued_ = false;
  _has_bits_[0] &= ~0x00000002u;
}
inline bool HeapGraph::continued() const {
  // @@protoc_insertion_point(field_get:perfetto.protos.HeapGraph.continued)
  return continued_;
}
inline void HeapGraph::set_continued(bool value) {
  _has_bits_[0] |= 0x00000002u;
  continued_ = value;
  // @@protoc_insertion_point(field_set:perfetto.protos.HeapGraph.continued)
}

// optional uint64 index = 6;
inline bool HeapGraph::has_index() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void HeapGraph::clear_index() {
  index_ = PROTOBUF_ULONGLONG(0);
  _has_bits_[0] &= ~0x00000004u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 HeapGraph::index() const {
  // @@protoc_insertion_point(field_get:perfetto.protos.HeapGraph.index)
  return index_;
}
inline void HeapGraph::set_index(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _has_bits_[0] |= 0x00000004u;
  index_ = value;
  // @@protoc_insertion_point(field_set:perfetto.protos.HeapGraph.index)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace protos
}  // namespace perfetto

PROTOBUF_NAMESPACE_OPEN

template <> struct is_proto_enum< ::perfetto::protos::HeapGraphRoot_Type> : ::std::true_type {};

PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // GOOGLE_PROTOBUF_INCLUDED_GOOGLE_PROTOBUF_INCLUDED_protos_2fperfetto_2ftrace_2fprofiling_2fheap_5fgraph_2eproto
