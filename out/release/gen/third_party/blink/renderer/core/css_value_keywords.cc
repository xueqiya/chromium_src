// Generated by third_party/blink/renderer/build/scripts/gperf.py
/* C++ code produced by gperf version 3.1 */
/* Command-line: gperf --key-positions='*' -P -n -m 50 -D -Q CSSValueStringPool  */

#if !((' ' == 32) && ('!' == 33) && ('"' == 34) && ('#' == 35) \
      && ('%' == 37) && ('&' == 38) && ('\'' == 39) && ('(' == 40) \
      && (')' == 41) && ('*' == 42) && ('+' == 43) && (',' == 44) \
      && ('-' == 45) && ('.' == 46) && ('/' == 47) && ('0' == 48) \
      && ('1' == 49) && ('2' == 50) && ('3' == 51) && ('4' == 52) \
      && ('5' == 53) && ('6' == 54) && ('7' == 55) && ('8' == 56) \
      && ('9' == 57) && (':' == 58) && (';' == 59) && ('<' == 60) \
      && ('=' == 61) && ('>' == 62) && ('?' == 63) && ('A' == 65) \
      && ('B' == 66) && ('C' == 67) && ('D' == 68) && ('E' == 69) \
      && ('F' == 70) && ('G' == 71) && ('H' == 72) && ('I' == 73) \
      && ('J' == 74) && ('K' == 75) && ('L' == 76) && ('M' == 77) \
      && ('N' == 78) && ('O' == 79) && ('P' == 80) && ('Q' == 81) \
      && ('R' == 82) && ('S' == 83) && ('T' == 84) && ('U' == 85) \
      && ('V' == 86) && ('W' == 87) && ('X' == 88) && ('Y' == 89) \
      && ('Z' == 90) && ('[' == 91) && ('\\' == 92) && (']' == 93) \
      && ('^' == 94) && ('_' == 95) && ('a' == 97) && ('b' == 98) \
      && ('c' == 99) && ('d' == 100) && ('e' == 101) && ('f' == 102) \
      && ('g' == 103) && ('h' == 104) && ('i' == 105) && ('j' == 106) \
      && ('k' == 107) && ('l' == 108) && ('m' == 109) && ('n' == 110) \
      && ('o' == 111) && ('p' == 112) && ('q' == 113) && ('r' == 114) \
      && ('s' == 115) && ('t' == 116) && ('u' == 117) && ('v' == 118) \
      && ('w' == 119) && ('x' == 120) && ('y' == 121) && ('z' == 122) \
      && ('{' == 123) && ('|' == 124) && ('}' == 125) && ('~' == 126))
/* The character set is not based on ISO-646.  */
#error "gperf generated tables don't work with this execution character set. Please report a bug to <bug-gperf@gnu.org>."
#endif


// Copyright (c) 2014 The Chromium Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.

#include "third_party/blink/renderer/core/css_value_keywords.h"

#include <string.h>
#include "third_party/blink/renderer/core/css/hash_tools.h"

#ifdef _MSC_VER
// Disable the warnings from casting a 64-bit pointer to 32-bit long
// warning C4302: 'type cast': truncation from 'char (*)[28]' to 'long'
// warning C4311: 'type cast': pointer truncation from 'char (*)[18]' to 'long'
#pragma warning(disable : 4302 4311)
#endif

namespace blink {
static const char valueListStringPool[] = {
  "inherit\0"
  "initial\0"
  "none\0"
  "hidden\0"
  "inset\0"
  "groove\0"
  "outset\0"
  "ridge\0"
  "dotted\0"
  "dashed\0"
  "solid\0"
  "double\0"
  "caption\0"
  "icon\0"
  "menu\0"
  "message-box\0"
  "small-caption\0"
  "-webkit-mini-control\0"
  "-webkit-small-control\0"
  "-webkit-control\0"
  "status-bar\0"
  "italic\0"
  "oblique\0"
  "all\0"
  "common-ligatures\0"
  "no-common-ligatures\0"
  "discretionary-ligatures\0"
  "no-discretionary-ligatures\0"
  "historical-ligatures\0"
  "no-historical-ligatures\0"
  "contextual\0"
  "no-contextual\0"
  "small-caps\0"
  "all-small-caps\0"
  "petite-caps\0"
  "all-petite-caps\0"
  "unicase\0"
  "titling-caps\0"
  "jis78\0"
  "jis83\0"
  "jis90\0"
  "jis04\0"
  "simplified\0"
  "traditional\0"
  "full-width\0"
  "proportional-width\0"
  "ruby\0"
  "lining-nums\0"
  "oldstyle-nums\0"
  "proportional-nums\0"
  "tabular-nums\0"
  "diagonal-fractions\0"
  "stacked-fractions\0"
  "ordinal\0"
  "slashed-zero\0"
  "normal\0"
  "bold\0"
  "bolder\0"
  "lighter\0"
  "ultra-condensed\0"
  "extra-condensed\0"
  "condensed\0"
  "semi-condensed\0"
  "semi-expanded\0"
  "expanded\0"
  "extra-expanded\0"
  "ultra-expanded\0"
  "xx-small\0"
  "x-small\0"
  "small\0"
  "medium\0"
  "large\0"
  "x-large\0"
  "xx-large\0"
  "xxx-large\0"
  "smaller\0"
  "larger\0"
  "-webkit-xxx-large\0"
  "serif\0"
  "sans-serif\0"
  "cursive\0"
  "fantasy\0"
  "monospace\0"
  "-webkit-body\0"
  "-webkit-pictograph\0"
  "swap\0"
  "fallback\0"
  "optional\0"
  "aqua\0"
  "black\0"
  "blue\0"
  "fuchsia\0"
  "gray\0"
  "green\0"
  "lime\0"
  "maroon\0"
  "navy\0"
  "olive\0"
  "orange\0"
  "purple\0"
  "red\0"
  "silver\0"
  "teal\0"
  "white\0"
  "yellow\0"
  "transparent\0"
  "-webkit-link\0"
  "-webkit-activelink\0"
  "activeborder\0"
  "activecaption\0"
  "activetext\0"
  "appworkspace\0"
  "background\0"
  "buttonface\0"
  "buttonhighlight\0"
  "buttonshadow\0"
  "buttontext\0"
  "canvas\0"
  "canvastext\0"
  "captiontext\0"
  "field\0"
  "fieldtext\0"
  "graytext\0"
  "highlight\0"
  "highlighttext\0"
  "inactiveborder\0"
  "inactivecaption\0"
  "inactivecaptiontext\0"
  "infobackground\0"
  "infotext\0"
  "linktext\0"
  "menutext\0"
  "scrollbar\0"
  "threeddarkshadow\0"
  "threedface\0"
  "threedhighlight\0"
  "threedlightshadow\0"
  "threedshadow\0"
  "visitedtext\0"
  "window\0"
  "windowframe\0"
  "windowtext\0"
  "-internal-active-list-box-selection\0"
  "-internal-active-list-box-selection-text\0"
  "-internal-inactive-list-box-selection\0"
  "-internal-inactive-list-box-selection-text\0"
  "-webkit-focus-ring-color\0"
  "currentcolor\0"
  "grey\0"
  "-internal-quirk-inherit\0"
  "repeat\0"
  "repeat-x\0"
  "repeat-y\0"
  "no-repeat\0"
  "clear\0"
  "copy\0"
  "source-over\0"
  "source-in\0"
  "source-out\0"
  "source-atop\0"
  "destination-over\0"
  "destination-in\0"
  "destination-out\0"
  "destination-atop\0"
  "xor\0"
  "plus-lighter\0"
  "baseline\0"
  "middle\0"
  "sub\0"
  "super\0"
  "text-top\0"
  "text-bottom\0"
  "top\0"
  "bottom\0"
  "-webkit-baseline-middle\0"
  "-webkit-auto\0"
  "left\0"
  "right\0"
  "inline-start\0"
  "inline-end\0"
  "center\0"
  "justify\0"
  "-webkit-left\0"
  "-webkit-right\0"
  "-webkit-center\0"
  "-webkit-match-parent\0"
  "-internal-center\0"
  "inter-word\0"
  "distribute\0"
  "outside\0"
  "inside\0"
  "disc\0"
  "circle\0"
  "square\0"
  "decimal\0"
  "decimal-leading-zero\0"
  "arabic-indic\0"
  "bengali\0"
  "cambodian\0"
  "khmer\0"
  "devanagari\0"
  "gujarati\0"
  "gurmukhi\0"
  "kannada\0"
  "lao\0"
  "malayalam\0"
  "mongolian\0"
  "myanmar\0"
  "oriya\0"
  "persian\0"
  "urdu\0"
  "telugu\0"
  "tibetan\0"
  "thai\0"
  "lower-roman\0"
  "upper-roman\0"
  "lower-greek\0"
  "lower-alpha\0"
  "lower-latin\0"
  "upper-alpha\0"
  "upper-latin\0"
  "cjk-earthly-branch\0"
  "cjk-heavenly-stem\0"
  "ethiopic-halehame\0"
  "ethiopic-halehame-am\0"
  "ethiopic-halehame-ti-er\0"
  "ethiopic-halehame-ti-et\0"
  "hangul\0"
  "hangul-consonant\0"
  "korean-hangul-formal\0"
  "korean-hanja-formal\0"
  "korean-hanja-informal\0"
  "hebrew\0"
  "armenian\0"
  "lower-armenian\0"
  "upper-armenian\0"
  "georgian\0"
  "cjk-ideographic\0"
  "simp-chinese-formal\0"
  "simp-chinese-informal\0"
  "trad-chinese-formal\0"
  "trad-chinese-informal\0"
  "hiragana\0"
  "katakana\0"
  "hiragana-iroha\0"
  "katakana-iroha\0"
  "inline\0"
  "block\0"
  "flow-root\0"
  "list-item\0"
  "inline-block\0"
  "table\0"
  "inline-table\0"
  "table-row-group\0"
  "table-header-group\0"
  "table-footer-group\0"
  "table-row\0"
  "table-column-group\0"
  "table-column\0"
  "table-cell\0"
  "table-caption\0"
  "-webkit-box\0"
  "-webkit-inline-box\0"
  "flex\0"
  "inline-flex\0"
  "grid\0"
  "inline-grid\0"
  "math\0"
  "inline-math\0"
  "contents\0"
  "-webkit-flex\0"
  "-webkit-inline-flex\0"
  "layout\0"
  "inline-layout\0"
  "auto\0"
  "crosshair\0"
  "default\0"
  "pointer\0"
  "move\0"
  "vertical-text\0"
  "cell\0"
  "context-menu\0"
  "alias\0"
  "progress\0"
  "no-drop\0"
  "not-allowed\0"
  "zoom-in\0"
  "zoom-out\0"
  "e-resize\0"
  "ne-resize\0"
  "nw-resize\0"
  "n-resize\0"
  "se-resize\0"
  "sw-resize\0"
  "s-resize\0"
  "w-resize\0"
  "ew-resize\0"
  "ns-resize\0"
  "nesw-resize\0"
  "nwse-resize\0"
  "col-resize\0"
  "row-resize\0"
  "text\0"
  "wait\0"
  "help\0"
  "all-scroll\0"
  "grab\0"
  "grabbing\0"
  "-webkit-grab\0"
  "-webkit-grabbing\0"
  "-webkit-zoom-in\0"
  "-webkit-zoom-out\0"
  "ltr\0"
  "rtl\0"
  "capitalize\0"
  "uppercase\0"
  "lowercase\0"
  "visible\0"
  "collapse\0"
  "a3\0"
  "a4\0"
  "a5\0"
  "above\0"
  "absolute\0"
  "always\0"
  "avoid\0"
  "b4\0"
  "b5\0"
  "below\0"
  "bidi-override\0"
  "blink\0"
  "both\0"
  "break-spaces\0"
  "close-quote\0"
  "embed\0"
  "fixed\0"
  "hand\0"
  "hide\0"
  "isolate\0"
  "isolate-override\0"
  "plaintext\0"
  "-webkit-isolate\0"
  "-webkit-isolate-override\0"
  "-webkit-plaintext\0"
  "landscape\0"
  "ledger\0"
  "legal\0"
  "letter\0"
  "line-through\0"
  "local\0"
  "no-close-quote\0"
  "no-open-quote\0"
  "nowrap\0"
  "open-quote\0"
  "overlay\0"
  "overline\0"
  "portrait\0"
  "pre\0"
  "pre-line\0"
  "pre-wrap\0"
  "relative\0"
  "scroll\0"
  "separate\0"
  "show\0"
  "static\0"
  "thick\0"
  "thin\0"
  "underline\0"
  "wavy\0"
  "-webkit-nowrap\0"
  "stretch\0"
  "start\0"
  "end\0"
  "clone\0"
  "slice\0"
  "reverse\0"
  "horizontal\0"
  "vertical\0"
  "inline-axis\0"
  "block-axis\0"
  "flex-start\0"
  "flex-end\0"
  "space-between\0"
  "space-around\0"
  "space-evenly\0"
  "unsafe\0"
  "safe\0"
  "row\0"
  "row-reverse\0"
  "column\0"
  "column-reverse\0"
  "wrap\0"
  "wrap-reverse\0"
  "auto-flow\0"
  "dense\0"
  "read-only\0"
  "read-write\0"
  "read-write-plaintext-only\0"
  "element\0"
  "-webkit-min-content\0"
  "-webkit-max-content\0"
  "-webkit-fill-available\0"
  "-webkit-fit-content\0"
  "min-content\0"
  "max-content\0"
  "fit-content\0"
  "clip\0"
  "ellipsis\0"
  "break-all\0"
  "keep-all\0"
  "break-word\0"
  "space\0"
  "loose\0"
  "strict\0"
  "after-white-space\0"
  "anywhere\0"
  "manual\0"
  "checkbox\0"
  "radio\0"
  "push-button\0"
  "square-button\0"
  "button\0"
  "inner-spin-button\0"
  "listbox\0"
  "media-slider\0"
  "media-sliderthumb\0"
  "media-volume-slider\0"
  "media-volume-sliderthumb\0"
  "-internal-media-control\0"
  "menulist\0"
  "menulist-button\0"
  "meter\0"
  "progress-bar\0"
  "slider-horizontal\0"
  "slider-vertical\0"
  "sliderthumb-horizontal\0"
  "sliderthumb-vertical\0"
  "searchfield\0"
  "searchfield-cancel-button\0"
  "textfield\0"
  "textarea\0"
  "round\0"
  "border\0"
  "border-box\0"
  "content\0"
  "content-box\0"
  "padding\0"
  "padding-box\0"
  "margin-box\0"
  "contain\0"
  "cover\0"
  "logical\0"
  "visual\0"
  "alternate\0"
  "alternate-reverse\0"
  "forwards\0"
  "backwards\0"
  "infinite\0"
  "running\0"
  "paused\0"
  "flat\0"
  "preserve-3d\0"
  "fill-box\0"
  "view-box\0"
  "ease\0"
  "linear\0"
  "ease-in\0"
  "ease-out\0"
  "ease-in-out\0"
  "jump-both\0"
  "jump-end\0"
  "jump-none\0"
  "jump-start\0"
  "step-start\0"
  "step-end\0"
  "steps\0"
  "frames\0"
  "cubic-bezier\0"
  "document\0"
  "reset\0"
  "zoom\0"
  "visiblepainted\0"
  "visiblefill\0"
  "visiblestroke\0"
  "painted\0"
  "fill\0"
  "stroke\0"
  "bounding-box\0"
  "spell-out\0"
  "digits\0"
  "literal-punctuation\0"
  "no-punctuation\0"
  "antialiased\0"
  "subpixel-antialiased\0"
  "optimizespeed\0"
  "optimizelegibility\0"
  "geometricprecision\0"
  "crispedges\0"
  "economy\0"
  "exact\0"
  "lr\0"
  "rl\0"
  "tb\0"
  "lr-tb\0"
  "rl-tb\0"
  "tb-rl\0"
  "horizontal-tb\0"
  "vertical-rl\0"
  "vertical-lr\0"
  "after\0"
  "before\0"
  "over\0"
  "under\0"
  "filled\0"
  "open\0"
  "dot\0"
  "double-circle\0"
  "triangle\0"
  "sesame\0"
  "ellipse\0"
  "closest-side\0"
  "closest-corner\0"
  "farthest-side\0"
  "farthest-corner\0"
  "mixed\0"
  "sideways\0"
  "sideways-right\0"
  "upright\0"
  "vertical-right\0"
  "on\0"
  "off\0"
  "optimizequality\0"
  "pixelated\0"
  "-webkit-optimize-contrast\0"
  "from-image\0"
  "nonzero\0"
  "evenodd\0"
  "at\0"
  "alphabetic\0"
  "fullscreen\0"
  "standalone\0"
  "minimal-ui\0"
  "browser\0"
  "sticky\0"
  "coarse\0"
  "fine\0"
  "on-demand\0"
  "hover\0"
  "multiply\0"
  "screen\0"
  "darken\0"
  "lighten\0"
  "color-dodge\0"
  "color-burn\0"
  "hard-light\0"
  "soft-light\0"
  "difference\0"
  "exclusion\0"
  "hue\0"
  "saturation\0"
  "color\0"
  "luminosity\0"
  "scale-down\0"
  "balance\0"
  "drag\0"
  "no-drag\0"
  "span\0"
  "minmax\0"
  "each-line\0"
  "progressive\0"
  "interlace\0"
  "markers\0"
  "-internal-extend-to-zoom\0"
  "pan-x\0"
  "pan-y\0"
  "pan-left\0"
  "pan-right\0"
  "pan-up\0"
  "pan-down\0"
  "manipulation\0"
  "pinch-zoom\0"
  "last-baseline\0"
  "first-baseline\0"
  "first\0"
  "last\0"
  "self-start\0"
  "self-end\0"
  "legacy\0"
  "smooth\0"
  "scroll-position\0"
  "revert\0"
  "unset\0"
  "linear-gradient\0"
  "radial-gradient\0"
  "conic-gradient\0"
  "repeating-linear-gradient\0"
  "repeating-radial-gradient\0"
  "repeating-conic-gradient\0"
  "paint\0"
  "-webkit-cross-fade\0"
  "-webkit-gradient\0"
  "-webkit-linear-gradient\0"
  "-webkit-radial-gradient\0"
  "-webkit-repeating-linear-gradient\0"
  "-webkit-repeating-radial-gradient\0"
  "-webkit-image-set\0"
  "from\0"
  "to\0"
  "color-stop\0"
  "radial\0"
  "attr\0"
  "counter\0"
  "counters\0"
  "rect\0"
  "polygon\0"
  "format\0"
  "invert\0"
  "grayscale\0"
  "sepia\0"
  "saturate\0"
  "hue-rotate\0"
  "opacity\0"
  "brightness\0"
  "contrast\0"
  "blur\0"
  "drop-shadow\0"
  "url\0"
  "rgb\0"
  "rgba\0"
  "hsl\0"
  "hsla\0"
  "-internal-light-dark-color\0"
  "matrix\0"
  "matrix3d\0"
  "perspective\0"
  "rotate\0"
  "rotateX\0"
  "rotateY\0"
  "rotateZ\0"
  "rotate3d\0"
  "scale\0"
  "scaleX\0"
  "scaleY\0"
  "scaleZ\0"
  "scale3d\0"
  "skew\0"
  "skewX\0"
  "skewY\0"
  "translate\0"
  "translateX\0"
  "translateY\0"
  "translateZ\0"
  "translate3d\0"
  "x\0"
  "y\0"
  "z\0"
  "path\0"
  "ray\0"
  "sides\0"
  "calc\0"
  "-webkit-calc\0"
  "min\0"
  "max\0"
  "clamp\0"
  "mandatory\0"
  "proximity\0"
  "style\0"
  "size\0"
  "auto-fill\0"
  "auto-fit\0"
  "var\0"
  "-internal-variable-value\0"
  "env\0"
  "avoid-page\0"
  "page\0"
  "recto\0"
  "verso\0"
  "avoid-column\0"
  "p3\0"
  "rec2020\0"
  "true\0"
  "false\0"
  "no-preference\0"
  "dark\0"
  "light\0"
  "only\0"
  "reduce\0"
  "active\0"
  "back-button\0"
  "invisible\0"
  "skip-activation\0"
  "skip-viewport-activation\0"
  "fabricated\0"
  "aliceblue\0"
  "antiquewhite\0"
  "aquamarine\0"
  "azure\0"
  "beige\0"
  "bisque\0"
  "blanchedalmond\0"
  "blueviolet\0"
  "brown\0"
  "burlywood\0"
  "cadetblue\0"
  "chartreuse\0"
  "chocolate\0"
  "coral\0"
  "cornflowerblue\0"
  "cornsilk\0"
  "crimson\0"
  "cyan\0"
  "darkblue\0"
  "darkcyan\0"
  "darkgoldenrod\0"
  "darkgray\0"
  "darkgreen\0"
  "darkgrey\0"
  "darkkhaki\0"
  "darkmagenta\0"
  "darkolivegreen\0"
  "darkorange\0"
  "darkorchid\0"
  "darkred\0"
  "darksalmon\0"
  "darkseagreen\0"
  "darkslateblue\0"
  "darkslategray\0"
  "darkslategrey\0"
  "darkturquoise\0"
  "darkviolet\0"
  "deeppink\0"
  "deepskyblue\0"
  "dimgray\0"
  "dimgrey\0"
  "dodgerblue\0"
  "firebrick\0"
  "floralwhite\0"
  "forestgreen\0"
  "gainsboro\0"
  "ghostwhite\0"
  "gold\0"
  "goldenrod\0"
  "greenyellow\0"
  "honeydew\0"
  "hotpink\0"
  "indianred\0"
  "indigo\0"
  "ivory\0"
  "khaki\0"
  "lavender\0"
  "lavenderblush\0"
  "lawngreen\0"
  "lemonchiffon\0"
  "lightblue\0"
  "lightcoral\0"
  "lightcyan\0"
  "lightgoldenrodyellow\0"
  "lightgray\0"
  "lightgreen\0"
  "lightgrey\0"
  "lightpink\0"
  "lightsalmon\0"
  "lightseagreen\0"
  "lightskyblue\0"
  "lightslategray\0"
  "lightslategrey\0"
  "lightsteelblue\0"
  "lightyellow\0"
  "limegreen\0"
  "linen\0"
  "magenta\0"
  "mediumaquamarine\0"
  "mediumblue\0"
  "mediumorchid\0"
  "mediumpurple\0"
  "mediumseagreen\0"
  "mediumslateblue\0"
  "mediumspringgreen\0"
  "mediumturquoise\0"
  "mediumvioletred\0"
  "midnightblue\0"
  "mintcream\0"
  "mistyrose\0"
  "moccasin\0"
  "navajowhite\0"
  "oldlace\0"
  "olivedrab\0"
  "orangered\0"
  "orchid\0"
  "palegoldenrod\0"
  "palegreen\0"
  "paleturquoise\0"
  "palevioletred\0"
  "papayawhip\0"
  "peachpuff\0"
  "peru\0"
  "pink\0"
  "plum\0"
  "powderblue\0"
  "rebeccapurple\0"
  "rosybrown\0"
  "royalblue\0"
  "saddlebrown\0"
  "salmon\0"
  "sandybrown\0"
  "seagreen\0"
  "seashell\0"
  "sienna\0"
  "skyblue\0"
  "slateblue\0"
  "slategray\0"
  "slategrey\0"
  "snow\0"
  "springgreen\0"
  "steelblue\0"
  "tan\0"
  "thistle\0"
  "tomato\0"
  "turquoise\0"
  "violet\0"
  "wheat\0"
  "whitesmoke\0"
  "yellowgreen\0"
  "alpha\0"
  "luminance\0"
  "accumulate\0"
  "new\0"
  "srgb\0"
  "linearrgb\0"
  "butt\0"
  "miter\0"
  "bevel\0"
  "before-edge\0"
  "after-edge\0"
  "central\0"
  "text-before-edge\0"
  "text-after-edge\0"
  "ideographic\0"
  "hanging\0"
  "mathematical\0"
  "use-script\0"
  "no-change\0"
  "reset-size\0"
  "dynamic\0"
  "non-scaling-stroke\0"
};

static const uint16_t valueListStringOffsets[] = {
  0,
  8,
  16,
  21,
  28,
  34,
  41,
  48,
  54,
  61,
  68,
  74,
  81,
  89,
  94,
  99,
  111,
  125,
  146,
  168,
  184,
  195,
  202,
  210,
  214,
  231,
  251,
  275,
  302,
  323,
  347,
  358,
  372,
  383,
  398,
  410,
  426,
  434,
  447,
  453,
  459,
  465,
  471,
  482,
  494,
  505,
  524,
  529,
  541,
  555,
  573,
  586,
  605,
  623,
  631,
  644,
  651,
  656,
  663,
  671,
  687,
  703,
  713,
  728,
  742,
  751,
  766,
  781,
  790,
  798,
  804,
  811,
  817,
  825,
  834,
  844,
  852,
  859,
  877,
  883,
  894,
  902,
  910,
  920,
  933,
  952,
  957,
  966,
  975,
  980,
  986,
  991,
  999,
  1004,
  1010,
  1015,
  1022,
  1027,
  1033,
  1040,
  1047,
  1051,
  1058,
  1063,
  1069,
  1076,
  1088,
  1101,
  1120,
  1133,
  1147,
  1158,
  1171,
  1182,
  1193,
  1209,
  1222,
  1233,
  1240,
  1251,
  1263,
  1269,
  1279,
  1288,
  1298,
  1312,
  1327,
  1343,
  1363,
  1378,
  1387,
  1396,
  1405,
  1415,
  1432,
  1443,
  1459,
  1477,
  1490,
  1502,
  1509,
  1521,
  1532,
  1568,
  1609,
  1647,
  1690,
  1715,
  1728,
  1733,
  1757,
  1764,
  1773,
  1782,
  1792,
  1798,
  1803,
  1815,
  1825,
  1836,
  1848,
  1865,
  1880,
  1896,
  1913,
  1917,
  1930,
  1939,
  1946,
  1950,
  1956,
  1965,
  1977,
  1981,
  1988,
  2012,
  2025,
  2030,
  2036,
  2049,
  2060,
  2067,
  2075,
  2088,
  2102,
  2117,
  2138,
  2155,
  2166,
  2177,
  2185,
  2192,
  2197,
  2204,
  2211,
  2219,
  2240,
  2253,
  2261,
  2271,
  2277,
  2288,
  2297,
  2306,
  2314,
  2318,
  2328,
  2338,
  2346,
  2352,
  2360,
  2365,
  2372,
  2380,
  2385,
  2397,
  2409,
  2421,
  2433,
  2445,
  2457,
  2469,
  2488,
  2506,
  2524,
  2545,
  2569,
  2593,
  2600,
  2617,
  2638,
  2658,
  2680,
  2687,
  2696,
  2711,
  2726,
  2735,
  2751,
  2771,
  2793,
  2813,
  2835,
  2844,
  2853,
  2868,
  2883,
  2890,
  2896,
  2906,
  2916,
  2929,
  2935,
  2948,
  2964,
  2983,
  3002,
  3012,
  3031,
  3044,
  3055,
  3069,
  3081,
  3100,
  3105,
  3117,
  3122,
  3134,
  3139,
  3151,
  3160,
  3173,
  3193,
  3200,
  3214,
  3219,
  3229,
  3237,
  3245,
  3250,
  3264,
  3269,
  3282,
  3288,
  3297,
  3305,
  3317,
  3325,
  3334,
  3343,
  3353,
  3363,
  3372,
  3382,
  3392,
  3401,
  3410,
  3420,
  3430,
  3442,
  3454,
  3465,
  3476,
  3481,
  3486,
  3491,
  3502,
  3507,
  3516,
  3529,
  3546,
  3562,
  3579,
  3583,
  3587,
  3598,
  3608,
  3618,
  3626,
  3635,
  3638,
  3641,
  3644,
  3650,
  3659,
  3666,
  3672,
  3675,
  3678,
  3684,
  3698,
  3704,
  3709,
  3722,
  3734,
  3740,
  3746,
  3751,
  3756,
  3764,
  3781,
  3791,
  3807,
  3832,
  3850,
  3860,
  3867,
  3873,
  3880,
  3893,
  3899,
  3914,
  3928,
  3935,
  3946,
  3954,
  3963,
  3972,
  3976,
  3985,
  3994,
  4003,
  4010,
  4019,
  4024,
  4031,
  4037,
  4042,
  4052,
  4057,
  4072,
  4080,
  4086,
  4090,
  4096,
  4102,
  4110,
  4121,
  4130,
  4142,
  4153,
  4164,
  4173,
  4187,
  4200,
  4213,
  4220,
  4225,
  4229,
  4241,
  4248,
  4263,
  4268,
  4281,
  4291,
  4297,
  4307,
  4318,
  4344,
  4352,
  4372,
  4392,
  4415,
  4435,
  4447,
  4459,
  4471,
  4476,
  4485,
  4495,
  4504,
  4515,
  4521,
  4527,
  4534,
  4552,
  4561,
  4568,
  4577,
  4583,
  4595,
  4609,
  4616,
  4634,
  4642,
  4655,
  4673,
  4693,
  4718,
  4742,
  4751,
  4767,
  4773,
  4786,
  4804,
  4820,
  4843,
  4864,
  4876,
  4902,
  4912,
  4921,
  4927,
  4934,
  4945,
  4953,
  4965,
  4973,
  4985,
  4996,
  5004,
  5010,
  5018,
  5025,
  5035,
  5053,
  5062,
  5072,
  5081,
  5089,
  5096,
  5101,
  5113,
  5122,
  5131,
  5136,
  5143,
  5151,
  5160,
  5172,
  5182,
  5191,
  5201,
  5212,
  5223,
  5232,
  5238,
  5245,
  5258,
  5267,
  5273,
  5278,
  5293,
  5305,
  5319,
  5327,
  5332,
  5339,
  5352,
  5362,
  5369,
  5389,
  5404,
  5416,
  5437,
  5451,
  5470,
  5489,
  5500,
  5508,
  5514,
  5517,
  5520,
  5523,
  5529,
  5535,
  5541,
  5555,
  5567,
  5579,
  5585,
  5592,
  5597,
  5603,
  5610,
  5615,
  5619,
  5633,
  5642,
  5649,
  5657,
  5670,
  5685,
  5699,
  5715,
  5721,
  5730,
  5745,
  5753,
  5768,
  5771,
  5775,
  5791,
  5801,
  5827,
  5838,
  5846,
  5854,
  5857,
  5868,
  5879,
  5890,
  5901,
  5909,
  5916,
  5923,
  5928,
  5938,
  5944,
  5953,
  5960,
  5967,
  5975,
  5987,
  5998,
  6009,
  6020,
  6031,
  6041,
  6045,
  6056,
  6062,
  6073,
  6084,
  6092,
  6097,
  6105,
  6110,
  6117,
  6127,
  6139,
  6149,
  6157,
  6182,
  6188,
  6194,
  6203,
  6213,
  6220,
  6229,
  6242,
  6253,
  6267,
  6282,
  6288,
  6293,
  6304,
  6313,
  6320,
  6327,
  6343,
  6350,
  6356,
  6372,
  6388,
  6403,
  6429,
  6455,
  6480,
  6486,
  6505,
  6522,
  6546,
  6570,
  6604,
  6638,
  6656,
  6661,
  6664,
  6675,
  6682,
  6687,
  6695,
  6704,
  6709,
  6717,
  6724,
  6731,
  6741,
  6747,
  6756,
  6767,
  6775,
  6786,
  6795,
  6800,
  6812,
  6816,
  6820,
  6825,
  6829,
  6834,
  6861,
  6868,
  6877,
  6889,
  6896,
  6904,
  6912,
  6920,
  6929,
  6935,
  6942,
  6949,
  6956,
  6964,
  6969,
  6975,
  6981,
  6991,
  7002,
  7013,
  7024,
  7036,
  7038,
  7040,
  7042,
  7047,
  7051,
  7057,
  7062,
  7075,
  7079,
  7083,
  7089,
  7099,
  7109,
  7115,
  7120,
  7130,
  7139,
  7143,
  7168,
  7172,
  7183,
  7188,
  7194,
  7200,
  7213,
  7216,
  7224,
  7229,
  7235,
  7249,
  7254,
  7260,
  7265,
  7272,
  7279,
  7291,
  7301,
  7317,
  7342,
  7353,
  7363,
  7376,
  7387,
  7393,
  7399,
  7406,
  7421,
  7432,
  7438,
  7448,
  7458,
  7469,
  7479,
  7485,
  7500,
  7509,
  7517,
  7522,
  7531,
  7540,
  7554,
  7563,
  7573,
  7582,
  7592,
  7604,
  7619,
  7630,
  7641,
  7649,
  7660,
  7673,
  7687,
  7701,
  7715,
  7729,
  7740,
  7749,
  7761,
  7769,
  7777,
  7788,
  7798,
  7810,
  7822,
  7832,
  7843,
  7848,
  7858,
  7870,
  7879,
  7887,
  7897,
  7904,
  7910,
  7916,
  7925,
  7939,
  7949,
  7962,
  7972,
  7983,
  7993,
  8014,
  8024,
  8035,
  8045,
  8055,
  8067,
  8081,
  8094,
  8109,
  8124,
  8139,
  8151,
  8161,
  8167,
  8175,
  8192,
  8203,
  8216,
  8229,
  8244,
  8260,
  8278,
  8294,
  8310,
  8323,
  8333,
  8343,
  8352,
  8364,
  8372,
  8382,
  8392,
  8399,
  8413,
  8423,
  8437,
  8451,
  8462,
  8472,
  8477,
  8482,
  8487,
  8498,
  8512,
  8522,
  8532,
  8544,
  8551,
  8562,
  8571,
  8580,
  8587,
  8595,
  8605,
  8615,
  8625,
  8630,
  8642,
  8652,
  8656,
  8664,
  8671,
  8681,
  8688,
  8694,
  8705,
  8717,
  8723,
  8733,
  8744,
  8748,
  8753,
  8763,
  8768,
  8774,
  8780,
  8792,
  8803,
  8811,
  8828,
  8844,
  8856,
  8864,
  8877,
  8888,
  8898,
  8909,
  8917,
};

/* maximum key range = 6232, duplicates = 0 */

class CSSValueKeywordsHash
{
private:
  static inline unsigned int value_hash_function (const char *str, size_t len);
public:
  static const struct Value *findValueImpl (const char *str, size_t len);
};

inline unsigned int
CSSValueKeywordsHash::value_hash_function (const char *str, size_t len)
{
  static const unsigned short asso_values[] =
    {
      6259, 6259, 6259, 6259, 6259, 6259, 6259, 6259, 6259, 6259,
      6259, 6259, 6259, 6259, 6259, 6259, 6259, 6259, 6259, 6259,
      6259, 6259, 6259, 6259, 6259, 6259, 6259, 6259, 6259, 6259,
      6259, 6259, 6259, 6259, 6259, 6259, 6259, 6259, 6259, 6259,
      6259, 6259, 6259, 6259, 6259,   98,   69,   51,   12, 6259,
        11,   29,   15,   14, 6259, 6259,   11,   11,   11,   12,
      6259, 6259, 6259, 6259, 6259, 6259, 6259, 6259, 6259, 6259,
      6259, 6259, 6259, 6259, 6259, 6259, 6259, 6259, 6259, 6259,
      6259, 6259, 6259, 6259, 6259, 6259, 6259, 6259, 6259, 6259,
      6259, 6259, 6259, 6259, 6259, 6259, 6259,   12,  353,  140,
        71,   11,  667,   14,  457,   13,  955,  567,   57,   15,
        11,   20,  234, 2009,   12,   53,   11,  189,  114, 1701,
       889, 1446,  310,  405,   11, 6259, 6259, 6259, 6259, 6259,
      6259, 6259, 6259, 6259, 6259, 6259, 6259, 6259, 6259, 6259,
      6259, 6259, 6259, 6259, 6259, 6259, 6259, 6259, 6259, 6259,
      6259, 6259, 6259, 6259, 6259, 6259, 6259, 6259, 6259, 6259,
      6259, 6259, 6259, 6259, 6259, 6259, 6259, 6259, 6259, 6259,
      6259, 6259, 6259, 6259, 6259, 6259, 6259, 6259, 6259, 6259,
      6259, 6259, 6259, 6259, 6259, 6259, 6259, 6259, 6259, 6259,
      6259, 6259, 6259, 6259, 6259, 6259, 6259, 6259, 6259, 6259,
      6259, 6259, 6259, 6259, 6259, 6259, 6259, 6259, 6259, 6259,
      6259, 6259, 6259, 6259, 6259, 6259, 6259, 6259, 6259, 6259,
      6259, 6259, 6259, 6259, 6259, 6259, 6259, 6259, 6259, 6259,
      6259, 6259, 6259, 6259, 6259, 6259, 6259, 6259, 6259, 6259,
      6259, 6259, 6259, 6259, 6259, 6259, 6259, 6259, 6259, 6259,
      6259, 6259, 6259, 6259, 6259, 6259, 6259, 6259
    };
  unsigned int hval = 0;

  switch (len)
    {
      default:
        hval += asso_values[static_cast<unsigned char>(str[41])];
        FALLTHROUGH;
      case 41:
        hval += asso_values[static_cast<unsigned char>(str[40])];
        FALLTHROUGH;
      case 40:
        hval += asso_values[static_cast<unsigned char>(str[39])];
        FALLTHROUGH;
      case 39:
        hval += asso_values[static_cast<unsigned char>(str[38])];
        FALLTHROUGH;
      case 38:
        hval += asso_values[static_cast<unsigned char>(str[37])];
        FALLTHROUGH;
      case 37:
        hval += asso_values[static_cast<unsigned char>(str[36])];
        FALLTHROUGH;
      case 36:
        hval += asso_values[static_cast<unsigned char>(str[35])];
        FALLTHROUGH;
      case 35:
        hval += asso_values[static_cast<unsigned char>(str[34])];
        FALLTHROUGH;
      case 34:
        hval += asso_values[static_cast<unsigned char>(str[33])];
        FALLTHROUGH;
      case 33:
        hval += asso_values[static_cast<unsigned char>(str[32])];
        FALLTHROUGH;
      case 32:
        hval += asso_values[static_cast<unsigned char>(str[31])];
        FALLTHROUGH;
      case 31:
        hval += asso_values[static_cast<unsigned char>(str[30])];
        FALLTHROUGH;
      case 30:
        hval += asso_values[static_cast<unsigned char>(str[29])];
        FALLTHROUGH;
      case 29:
        hval += asso_values[static_cast<unsigned char>(str[28])];
        FALLTHROUGH;
      case 28:
        hval += asso_values[static_cast<unsigned char>(str[27])];
        FALLTHROUGH;
      case 27:
        hval += asso_values[static_cast<unsigned char>(str[26])];
        FALLTHROUGH;
      case 26:
        hval += asso_values[static_cast<unsigned char>(str[25])];
        FALLTHROUGH;
      case 25:
        hval += asso_values[static_cast<unsigned char>(str[24])];
        FALLTHROUGH;
      case 24:
        hval += asso_values[static_cast<unsigned char>(str[23])];
        FALLTHROUGH;
      case 23:
        hval += asso_values[static_cast<unsigned char>(str[22])];
        FALLTHROUGH;
      case 22:
        hval += asso_values[static_cast<unsigned char>(str[21])];
        FALLTHROUGH;
      case 21:
        hval += asso_values[static_cast<unsigned char>(str[20])];
        FALLTHROUGH;
      case 20:
        hval += asso_values[static_cast<unsigned char>(str[19])];
        FALLTHROUGH;
      case 19:
        hval += asso_values[static_cast<unsigned char>(str[18])];
        FALLTHROUGH;
      case 18:
        hval += asso_values[static_cast<unsigned char>(str[17])];
        FALLTHROUGH;
      case 17:
        hval += asso_values[static_cast<unsigned char>(str[16])];
        FALLTHROUGH;
      case 16:
        hval += asso_values[static_cast<unsigned char>(str[15])];
        FALLTHROUGH;
      case 15:
        hval += asso_values[static_cast<unsigned char>(str[14])];
        FALLTHROUGH;
      case 14:
        hval += asso_values[static_cast<unsigned char>(str[13])];
        FALLTHROUGH;
      case 13:
        hval += asso_values[static_cast<unsigned char>(str[12])];
        FALLTHROUGH;
      case 12:
        hval += asso_values[static_cast<unsigned char>(str[11])];
        FALLTHROUGH;
      case 11:
        hval += asso_values[static_cast<unsigned char>(str[10]+1)];
        FALLTHROUGH;
      case 10:
        hval += asso_values[static_cast<unsigned char>(str[9])];
        FALLTHROUGH;
      case 9:
        hval += asso_values[static_cast<unsigned char>(str[8])];
        FALLTHROUGH;
      case 8:
        hval += asso_values[static_cast<unsigned char>(str[7])];
        FALLTHROUGH;
      case 7:
        hval += asso_values[static_cast<unsigned char>(str[6])];
        FALLTHROUGH;
      case 6:
        hval += asso_values[static_cast<unsigned char>(str[5])];
        FALLTHROUGH;
      case 5:
        hval += asso_values[static_cast<unsigned char>(str[4])];
        FALLTHROUGH;
      case 4:
        hval += asso_values[static_cast<unsigned char>(str[3]+2)];
        FALLTHROUGH;
      case 3:
        hval += asso_values[static_cast<unsigned char>(str[2])];
        FALLTHROUGH;
      case 2:
        hval += asso_values[static_cast<unsigned char>(str[1])];
        FALLTHROUGH;
      case 1:
        hval += asso_values[static_cast<unsigned char>(str[0]+1)];
        break;
    }
  return hval;
}

struct CSSValueStringPool_t
  {
    char CSSValueStringPool_str0[sizeof("lr")];
    char CSSValueStringPool_str1[sizeof("min")];
    char CSSValueStringPool_str2[sizeof("ltr")];
    char CSSValueStringPool_str3[sizeof("dot")];
    char CSSValueStringPool_str4[sizeof("lao")];
    char CSSValueStringPool_str5[sizeof("drag")];
    char CSSValueStringPool_str6[sizeof("dark")];
    char CSSValueStringPool_str7[sizeof("fine")];
    char CSSValueStringPool_str8[sizeof("start")];
    char CSSValueStringPool_str9[sizeof("lime")];
    char CSSValueStringPool_str10[sizeof("meter")];
    char CSSValueStringPool_str11[sizeof("miter")];
    char CSSValueStringPool_str12[sizeof("large")];
    char CSSValueStringPool_str13[sizeof("linen")];
    char CSSValueStringPool_str14[sizeof("none")];
    char CSSValueStringPool_str15[sizeof("from")];
    char CSSValueStringPool_str16[sizeof("darken")];
    char CSSValueStringPool_str17[sizeof("larger")];
    char CSSValueStringPool_str18[sizeof("linear")];
    char CSSValueStringPool_str19[sizeof("magenta")];
    char CSSValueStringPool_str20[sizeof("hanging")];
    char CSSValueStringPool_str21[sizeof("disc")];
    char CSSValueStringPool_str22[sizeof("format")];
    char CSSValueStringPool_str23[sizeof("seagreen")];
    char CSSValueStringPool_str24[sizeof("help")];
    char CSSValueStringPool_str25[sizeof("fill")];
    char CSSValueStringPool_str26[sizeof("steps")];
    char CSSValueStringPool_str27[sizeof("slice")];
    char CSSValueStringPool_str28[sizeof("nonzero")];
    char CSSValueStringPool_str29[sizeof("small")];
    char CSSValueStringPool_str30[sizeof("srgb")];
    char CSSValueStringPool_str31[sizeof("darkgreen")];
    char CSSValueStringPool_str32[sizeof("rl")];
    char CSSValueStringPool_str33[sizeof("hide")];
    char CSSValueStringPool_str34[sizeof("limegreen")];
    char CSSValueStringPool_str35[sizeof("field")];
    char CSSValueStringPool_str36[sizeof("rtl")];
    char CSSValueStringPool_str37[sizeof("frames")];
    char CSSValueStringPool_str38[sizeof("hsl")];
    char CSSValueStringPool_str39[sizeof("markers")];
    char CSSValueStringPool_str40[sizeof("smaller")];
    char CSSValueStringPool_str41[sizeof("darkorange")];
    char CSSValueStringPool_str42[sizeof("salmon")];
    char CSSValueStringPool_str43[sizeof("ledger")];
    char CSSValueStringPool_str44[sizeof("red")];
    char CSSValueStringPool_str45[sizeof("normal")];
    char CSSValueStringPool_str46[sizeof("reset")];
    char CSSValueStringPool_str47[sizeof("darkred")];
    char CSSValueStringPool_str48[sizeof("cell")];
    char CSSValueStringPool_str49[sizeof("calc")];
    char CSSValueStringPool_str50[sizeof("clip")];
    char CSSValueStringPool_str51[sizeof("b5")];
    char CSSValueStringPool_str52[sizeof("b4")];
    char CSSValueStringPool_str53[sizeof("move")];
    char CSSValueStringPool_str54[sizeof("ridge")];
    char CSSValueStringPool_str55[sizeof("sides")];
    char CSSValueStringPool_str56[sizeof("mongolian")];
    char CSSValueStringPool_str57[sizeof("hover")];
    char CSSValueStringPool_str58[sizeof("letter")];
    char CSSValueStringPool_str59[sizeof("circle")];
    char CSSValueStringPool_str60[sizeof("filled")];
    char CSSValueStringPool_str61[sizeof("coarse")];
    char CSSValueStringPool_str62[sizeof("url")];
    char CSSValueStringPool_str63[sizeof("scale")];
    char CSSValueStringPool_str64[sizeof("beige")];
    char CSSValueStringPool_str65[sizeof("forestgreen")];
    char CSSValueStringPool_str66[sizeof("last")];
    char CSSValueStringPool_str67[sizeof("flat")];
    char CSSValueStringPool_str68[sizeof("screen")];
    char CSSValueStringPool_str69[sizeof("crimson")];
    char CSSValueStringPool_str70[sizeof("unset")];
    char CSSValueStringPool_str71[sizeof("to")];
    char CSSValueStringPool_str72[sizeof("tan")];
    char CSSValueStringPool_str73[sizeof("hue")];
    char CSSValueStringPool_str74[sizeof("revert")];
    char CSSValueStringPool_str75[sizeof("darksalmon")];
    char CSSValueStringPool_str76[sizeof("under")];
    char CSSValueStringPool_str77[sizeof("teal")];
    char CSSValueStringPool_str78[sizeof("unicase")];
    char CSSValueStringPool_str79[sizeof("hiragana")];
    char CSSValueStringPool_str80[sizeof("from-image")];
    char CSSValueStringPool_str81[sizeof("center")];
    char CSSValueStringPool_str82[sizeof("cover")];
    char CSSValueStringPool_str83[sizeof("dense")];
    char CSSValueStringPool_str84[sizeof("step-end")];
    char CSSValueStringPool_str85[sizeof("legal")];
    char CSSValueStringPool_str86[sizeof("dotted")];
    char CSSValueStringPool_str87[sizeof("first")];
    char CSSValueStringPool_str88[sizeof("sesame")];
    char CSSValueStringPool_str89[sizeof("step-start")];
    char CSSValueStringPool_str90[sizeof("on")];
    char CSSValueStringPool_str91[sizeof("rotate")];
    char CSSValueStringPool_str92[sizeof("content")];
    char CSSValueStringPool_str93[sizeof("contain")];
    char CSSValueStringPool_str94[sizeof("rec2020")];
    char CSSValueStringPool_str95[sizeof("loose")];
    char CSSValueStringPool_str96[sizeof("bengali")];
    char CSSValueStringPool_str97[sizeof("lavender")];
    char CSSValueStringPool_str98[sizeof("hsla")];
    char CSSValueStringPool_str99[sizeof("reverse")];
    char CSSValueStringPool_str100[sizeof("linear-gradient")];
    char CSSValueStringPool_str101[sizeof("moccasin")];
    char CSSValueStringPool_str102[sizeof("darkviolet")];
    char CSSValueStringPool_str103[sizeof("space")];
    char CSSValueStringPool_str104[sizeof("false")];
    char CSSValueStringPool_str105[sizeof("scale3d")];
    char CSSValueStringPool_str106[sizeof("central")];
    char CSSValueStringPool_str107[sizeof("clear")];
    char CSSValueStringPool_str108[sizeof("sienna")];
    char CSSValueStringPool_str109[sizeof("hangul")];
    char CSSValueStringPool_str110[sizeof("cambodian")];
    char CSSValueStringPool_str111[sizeof("coral")];
    char CSSValueStringPool_str112[sizeof("static")];
    char CSSValueStringPool_str113[sizeof("contents")];
    char CSSValueStringPool_str114[sizeof("contrast")];
    char CSSValueStringPool_str115[sizeof("y")];
    char CSSValueStringPool_str116[sizeof("baseline")];
    char CSSValueStringPool_str117[sizeof("underline")];
    char CSSValueStringPool_str118[sizeof("keep-all")];
    char CSSValueStringPool_str119[sizeof("rect")];
    char CSSValueStringPool_str120[sizeof("bottom")];
    char CSSValueStringPool_str121[sizeof("repeat")];
    char CSSValueStringPool_str122[sizeof("bevel")];
    char CSSValueStringPool_str123[sizeof("recto")];
    char CSSValueStringPool_str124[sizeof("mintcream")];
    char CSSValueStringPool_str125[sizeof("hue-rotate")];
    char CSSValueStringPool_str126[sizeof("list-item")];
    char CSSValueStringPool_str127[sizeof("rotate3d")];
    char CSSValueStringPool_str128[sizeof("size")];
    char CSSValueStringPool_str129[sizeof("devanagari")];
    char CSSValueStringPool_str130[sizeof("double")];
    char CSSValueStringPool_str131[sizeof("at")];
    char CSSValueStringPool_str132[sizeof("darkolivegreen")];
    char CSSValueStringPool_str133[sizeof("a5")];
    char CSSValueStringPool_str134[sizeof("a4")];
    char CSSValueStringPool_str135[sizeof("over")];
    char CSSValueStringPool_str136[sizeof("local")];
    char CSSValueStringPool_str137[sizeof("darkgoldenrod")];
    char CSSValueStringPool_str138[sizeof("a3")];
    char CSSValueStringPool_str139[sizeof("attr")];
    char CSSValueStringPool_str140[sizeof("flex")];
    char CSSValueStringPool_str141[sizeof("clone")];
    char CSSValueStringPool_str142[sizeof("clamp")];
    char CSSValueStringPool_str143[sizeof("tomato")];
    char CSSValueStringPool_str144[sizeof("blur")];
    char CSSValueStringPool_str145[sizeof("blue")];
    char CSSValueStringPool_str146[sizeof("true")];
    char CSSValueStringPool_str147[sizeof("z")];
    char CSSValueStringPool_str148[sizeof("kannada")];
    char CSSValueStringPool_str149[sizeof("relative")];
    char CSSValueStringPool_str150[sizeof("destination-in")];
    char CSSValueStringPool_str151[sizeof("rgb")];
    char CSSValueStringPool_str152[sizeof("no-repeat")];
    char CSSValueStringPool_str153[sizeof("armenian")];
    char CSSValueStringPool_str154[sizeof("separate")];
    char CSSValueStringPool_str155[sizeof("top")];
    char CSSValueStringPool_str156[sizeof("triangle")];
    char CSSValueStringPool_str157[sizeof("standalone")];
    char CSSValueStringPool_str158[sizeof("butt")];
    char CSSValueStringPool_str159[sizeof("linearrgb")];
    char CSSValueStringPool_str160[sizeof("bisque")];
    char CSSValueStringPool_str161[sizeof("super")];
    char CSSValueStringPool_str162[sizeof("overline")];
    char CSSValueStringPool_str163[sizeof("zoom")];
    char CSSValueStringPool_str164[sizeof("all")];
    char CSSValueStringPool_str165[sizeof("collapse")];
    char CSSValueStringPool_str166[sizeof("caption")];
    char CSSValueStringPool_str167[sizeof("darkmagenta")];
    char CSSValueStringPool_str168[sizeof("min-content")];
    char CSSValueStringPool_str169[sizeof("fit-content")];
    char CSSValueStringPool_str170[sizeof("button")];
    char CSSValueStringPool_str171[sizeof("span")];
    char CSSValueStringPool_str172[sizeof("alternate")];
    char CSSValueStringPool_str173[sizeof("scalez")];
    char CSSValueStringPool_str174[sizeof("source-in")];
    char CSSValueStringPool_str175[sizeof("green")];
    char CSSValueStringPool_str176[sizeof("fullscreen")];
    char CSSValueStringPool_str177[sizeof("balance")];
    char CSSValueStringPool_str178[sizeof("orange")];
    char CSSValueStringPool_str179[sizeof("s-resize")];
    char CSSValueStringPool_str180[sizeof("running")];
    char CSSValueStringPool_str181[sizeof("se-resize")];
    char CSSValueStringPool_str182[sizeof("n-resize")];
    char CSSValueStringPool_str183[sizeof("-internal-center")];
    char CSSValueStringPool_str184[sizeof("oldlace")];
    char CSSValueStringPool_str185[sizeof("ne-resize")];
    char CSSValueStringPool_str186[sizeof("tb")];
    char CSSValueStringPool_str187[sizeof("destination-over")];
    char CSSValueStringPool_str188[sizeof("counter")];
    char CSSValueStringPool_str189[sizeof("georgian")];
    char CSSValueStringPool_str190[sizeof("navy")];
    char CSSValueStringPool_str191[sizeof("grab")];
    char CSSValueStringPool_str192[sizeof("sub")];
    char CSSValueStringPool_str193[sizeof("khaki")];
    char CSSValueStringPool_str194[sizeof("khmer")];
    char CSSValueStringPool_str195[sizeof("rotatez")];
    char CSSValueStringPool_str196[sizeof("rgba")];
    char CSSValueStringPool_str197[sizeof("round")];
    char CSSValueStringPool_str198[sizeof("table")];
    char CSSValueStringPool_str199[sizeof("ns-resize")];
    char CSSValueStringPool_str200[sizeof("flex-end")];
    char CSSValueStringPool_str201[sizeof("zoom-in")];
    char CSSValueStringPool_str202[sizeof("flex-start")];
    char CSSValueStringPool_str203[sizeof("translate")];
    char CSSValueStringPool_str204[sizeof("lr-tb")];
    char CSSValueStringPool_str205[sizeof("closest-side")];
    char CSSValueStringPool_str206[sizeof("cursive")];
    char CSSValueStringPool_str207[sizeof("counters")];
    char CSSValueStringPool_str208[sizeof("tibetan")];
    char CSSValueStringPool_str209[sizeof("destination-out")];
    char CSSValueStringPool_str210[sizeof("col-resize")];
    char CSSValueStringPool_str211[sizeof("orangered")];
    char CSSValueStringPool_str212[sizeof("alias")];
    char CSSValueStringPool_str213[sizeof("background")];
    char CSSValueStringPool_str214[sizeof("blueviolet")];
    char CSSValueStringPool_str215[sizeof("reset-size")];
    char CSSValueStringPool_str216[sizeof("translate3d")];
    char CSSValueStringPool_str217[sizeof("hangul-consonant")];
    char CSSValueStringPool_str218[sizeof("spell-out")];
    char CSSValueStringPool_str219[sizeof("small-caps")];
    char CSSValueStringPool_str220[sizeof("outset")];
    char CSSValueStringPool_str221[sizeof("hotpink")];
    char CSSValueStringPool_str222[sizeof("fabricated")];
    char CSSValueStringPool_str223[sizeof("no-change")];
    char CSSValueStringPool_str224[sizeof("jis78")];
    char CSSValueStringPool_str225[sizeof("stretch")];
    char CSSValueStringPool_str226[sizeof("jis90")];
    char CSSValueStringPool_str227[sizeof("no-common-ligatures")];
    char CSSValueStringPool_str228[sizeof("jis04")];
    char CSSValueStringPool_str229[sizeof("darkblue")];
    char CSSValueStringPool_str230[sizeof("destination-atop")];
    char CSSValueStringPool_str231[sizeof("digits")];
    char CSSValueStringPool_str232[sizeof("chocolate")];
    char CSSValueStringPool_str233[sizeof("jis83")];
    char CSSValueStringPool_str234[sizeof("rl-tb")];
    char CSSValueStringPool_str235[sizeof("oriya")];
    char CSSValueStringPool_str236[sizeof("source-over")];
    char CSSValueStringPool_str237[sizeof("crispedges")];
    char CSSValueStringPool_str238[sizeof("use-script")];
    char CSSValueStringPool_str239[sizeof("source-out")];
    char CSSValueStringPool_str240[sizeof("space-around")];
    char CSSValueStringPool_str241[sizeof("hand")];
    char CSSValueStringPool_str242[sizeof("safe")];
    char CSSValueStringPool_str243[sizeof("only")];
    char CSSValueStringPool_str244[sizeof("tb-rl")];
    char CSSValueStringPool_str245[sizeof("open")];
    char CSSValueStringPool_str246[sizeof("steelblue")];
    char CSSValueStringPool_str247[sizeof("outside")];
    char CSSValueStringPool_str248[sizeof("radio")];
    char CSSValueStringPool_str249[sizeof("solid")];
    char CSSValueStringPool_str250[sizeof("self-end")];
    char CSSValueStringPool_str251[sizeof("turquoise")];
    char CSSValueStringPool_str252[sizeof("copy")];
    char CSSValueStringPool_str253[sizeof("self-start")];
    char CSSValueStringPool_str254[sizeof("ease")];
    char CSSValueStringPool_str255[sizeof("dodgerblue")];
    char CSSValueStringPool_str256[sizeof("end")];
    char CSSValueStringPool_str257[sizeof("strict")];
    char CSSValueStringPool_str258[sizeof("closest-corner")];
    char CSSValueStringPool_str259[sizeof("double-circle")];
    char CSSValueStringPool_str260[sizeof("darkslateblue")];
    char CSSValueStringPool_str261[sizeof("darkorchid")];
    char CSSValueStringPool_str262[sizeof("radial")];
    char CSSValueStringPool_str263[sizeof("brightness")];
    char CSSValueStringPool_str264[sizeof("currentcolor")];
    char CSSValueStringPool_str265[sizeof("distribute")];
    char CSSValueStringPool_str266[sizeof("zoom-out")];
    char CSSValueStringPool_str267[sizeof("upper-roman")];
    char CSSValueStringPool_str268[sizeof("hidden")];
    char CSSValueStringPool_str269[sizeof("black")];
    char CSSValueStringPool_str270[sizeof("element")];
    char CSSValueStringPool_str271[sizeof("cadetblue")];
    char CSSValueStringPool_str272[sizeof("env")];
    char CSSValueStringPool_str273[sizeof("block")];
    char CSSValueStringPool_str274[sizeof("repeating-linear-gradient")];
    char CSSValueStringPool_str275[sizeof("seashell")];
    char CSSValueStringPool_str276[sizeof("left")];
    char CSSValueStringPool_str277[sizeof("upper-armenian")];
    char CSSValueStringPool_str278[sizeof("decimal")];
    char CSSValueStringPool_str279[sizeof("slateblue")];
    char CSSValueStringPool_str280[sizeof("first-baseline")];
    char CSSValueStringPool_str281[sizeof("upper-latin")];
    char CSSValueStringPool_str282[sizeof("katakana")];
    char CSSValueStringPool_str283[sizeof("uppercase")];
    char CSSValueStringPool_str284[sizeof("logical")];
    char CSSValueStringPool_str285[sizeof("middle")];
    char CSSValueStringPool_str286[sizeof("sepia")];
    char CSSValueStringPool_str287[sizeof("chartreuse")];
    char CSSValueStringPool_str288[sizeof("crosshair")];
    char CSSValueStringPool_str289[sizeof("darkseagreen")];
    char CSSValueStringPool_str290[sizeof("no-drag")];
    char CSSValueStringPool_str291[sizeof("alternate-reverse")];
    char CSSValueStringPool_str292[sizeof("all-scroll")];
    char CSSValueStringPool_str293[sizeof("border")];
    char CSSValueStringPool_str294[sizeof("medium")];
    char CSSValueStringPool_str295[sizeof("status-bar")];
    char CSSValueStringPool_str296[sizeof("ease-in")];
    char CSSValueStringPool_str297[sizeof("deeppink")];
    char CSSValueStringPool_str298[sizeof("azure")];
    char CSSValueStringPool_str299[sizeof("hiragana-iroha")];
    char CSSValueStringPool_str300[sizeof("simplified")];
    char CSSValueStringPool_str301[sizeof("bold")];
    char CSSValueStringPool_str302[sizeof("grey")];
    char CSSValueStringPool_str303[sizeof("gray")];
    char CSSValueStringPool_str304[sizeof("historical-ligatures")];
    char CSSValueStringPool_str305[sizeof("thin")];
    char CSSValueStringPool_str306[sizeof("-internal-media-control")];
    char CSSValueStringPool_str307[sizeof("translatez")];
    char CSSValueStringPool_str308[sizeof("bolder")];
    char CSSValueStringPool_str309[sizeof("max")];
    char CSSValueStringPool_str310[sizeof("springgreen")];
    char CSSValueStringPool_str311[sizeof("wrap")];
    char CSSValueStringPool_str312[sizeof("condensed")];
    char CSSValueStringPool_str313[sizeof("thistle")];
    char CSSValueStringPool_str314[sizeof("jump-none")];
    char CSSValueStringPool_str315[sizeof("no-punctuation")];
    char CSSValueStringPool_str316[sizeof("table-cell")];
    char CSSValueStringPool_str317[sizeof("repeating-radial-gradient")];
    char CSSValueStringPool_str318[sizeof("grabbing")];
    char CSSValueStringPool_str319[sizeof("matrix")];
    char CSSValueStringPool_str320[sizeof("lining-nums")];
    char CSSValueStringPool_str321[sizeof("minmax")];
    char CSSValueStringPool_str322[sizeof("ordinal")];
    char CSSValueStringPool_str323[sizeof("radial-gradient")];
    char CSSValueStringPool_str324[sizeof("common-ligatures")];
    char CSSValueStringPool_str325[sizeof("transparent")];
    char CSSValueStringPool_str326[sizeof("luminance")];
    char CSSValueStringPool_str327[sizeof("jump-end")];
    char CSSValueStringPool_str328[sizeof("traditional")];
    char CSSValueStringPool_str329[sizeof("linktext")];
    char CSSValueStringPool_str330[sizeof("repeating-conic-gradient")];
    char CSSValueStringPool_str331[sizeof("jump-start")];
    char CSSValueStringPool_str332[sizeof("minimal-ui")];
    char CSSValueStringPool_str333[sizeof("math")];
    char CSSValueStringPool_str334[sizeof("silver")];
    char CSSValueStringPool_str335[sizeof("unsafe")];
    char CSSValueStringPool_str336[sizeof("mixed")];
    char CSSValueStringPool_str337[sizeof("ruby")];
    char CSSValueStringPool_str338[sizeof("fixed")];
    char CSSValueStringPool_str339[sizeof("light")];
    char CSSValueStringPool_str340[sizeof("back-button")];
    char CSSValueStringPool_str341[sizeof("blink")];
    char CSSValueStringPool_str342[sizeof("cornsilk")];
    char CSSValueStringPool_str343[sizeof("wait")];
    char CSSValueStringPool_str344[sizeof("lighten")];
    char CSSValueStringPool_str345[sizeof("lighter")];
    char CSSValueStringPool_str346[sizeof("horizontal")];
    char CSSValueStringPool_str347[sizeof("mediumseagreen")];
    char CSSValueStringPool_str348[sizeof("fieldtext")];
    char CSSValueStringPool_str349[sizeof("inset")];
    char CSSValueStringPool_str350[sizeof("no-preference")];
    char CSSValueStringPool_str351[sizeof("right")];
    char CSSValueStringPool_str352[sizeof("matrix3d")];
    char CSSValueStringPool_str353[sizeof("canvas")];
    char CSSValueStringPool_str354[sizeof("aliceblue")];
    char CSSValueStringPool_str355[sizeof("after")];
    char CSSValueStringPool_str356[sizeof("ease-out")];
    char CSSValueStringPool_str357[sizeof("lightgreen")];
    char CSSValueStringPool_str358[sizeof("no-drop")];
    char CSSValueStringPool_str359[sizeof("isolate")];
    char CSSValueStringPool_str360[sizeof("scalex")];
    char CSSValueStringPool_str361[sizeof("sans-serif")];
    char CSSValueStringPool_str362[sizeof("literal-punctuation")];
    char CSSValueStringPool_str363[sizeof("default")];
    char CSSValueStringPool_str364[sizeof("break-all")];
    char CSSValueStringPool_str365[sizeof("table-column")];
    char CSSValueStringPool_str366[sizeof("semi-condensed")];
    char CSSValueStringPool_str367[sizeof("antialiased")];
    char CSSValueStringPool_str368[sizeof("dashed")];
    char CSSValueStringPool_str369[sizeof("invert")];
    char CSSValueStringPool_str370[sizeof("embed")];
    char CSSValueStringPool_str371[sizeof("avoid")];
    char CSSValueStringPool_str372[sizeof("both")];
    char CSSValueStringPool_str373[sizeof("on-demand")];
    char CSSValueStringPool_str374[sizeof("rotatex")];
    char CSSValueStringPool_str375[sizeof("firebrick")];
    char CSSValueStringPool_str376[sizeof("italic")];
    char CSSValueStringPool_str377[sizeof("optional")];
    char CSSValueStringPool_str378[sizeof("grid")];
    char CSSValueStringPool_str379[sizeof("landscape")];
    char CSSValueStringPool_str380[sizeof("grayscale")];
    char CSSValueStringPool_str381[sizeof("fallback")];
    char CSSValueStringPool_str382[sizeof("gainsboro")];
    char CSSValueStringPool_str383[sizeof("initial")];
    char CSSValueStringPool_str384[sizeof("e-resize")];
    char CSSValueStringPool_str385[sizeof("all-small-caps")];
    char CSSValueStringPool_str386[sizeof("lightsalmon")];
    char CSSValueStringPool_str387[sizeof("evenodd")];
    char CSSValueStringPool_str388[sizeof("active")];
    char CSSValueStringPool_str389[sizeof("gold")];
    char CSSValueStringPool_str390[sizeof("farthest-corner")];
    char CSSValueStringPool_str391[sizeof("text")];
    char CSSValueStringPool_str392[sizeof("olive")];
    char CSSValueStringPool_str393[sizeof("wrap-reverse")];
    char CSSValueStringPool_str394[sizeof("interlace")];
    char CSSValueStringPool_str395[sizeof("thai")];
    char CSSValueStringPool_str396[sizeof("diagonal-fractions")];
    char CSSValueStringPool_str397[sizeof("thick")];
    char CSSValueStringPool_str398[sizeof("geometricprecision")];
    char CSSValueStringPool_str399[sizeof("lightcoral")];
    char CSSValueStringPool_str400[sizeof("textarea")];
    char CSSValueStringPool_str401[sizeof("after-edge")];
    char CSSValueStringPool_str402[sizeof("serif")];
    char CSSValueStringPool_str403[sizeof("mediumspringgreen")];
    char CSSValueStringPool_str404[sizeof("no-contextual")];
    char CSSValueStringPool_str405[sizeof("lavenderblush")];
    char CSSValueStringPool_str406[sizeof("capitalize")];
    char CSSValueStringPool_str407[sizeof("slashed-zero")];
    char CSSValueStringPool_str408[sizeof("blanchedalmond")];
    char CSSValueStringPool_str409[sizeof("buttonface")];
    char CSSValueStringPool_str410[sizeof("all-petite-caps")];
    char CSSValueStringPool_str411[sizeof("repeat-x")];
    char CSSValueStringPool_str412[sizeof("goldenrod")];
    char CSSValueStringPool_str413[sizeof("difference")];
    char CSSValueStringPool_str414[sizeof("icon")];
    char CSSValueStringPool_str415[sizeof("hard-light")];
    char CSSValueStringPool_str416[sizeof("max-content")];
    char CSSValueStringPool_str417[sizeof("ultra-condensed")];
    char CSSValueStringPool_str418[sizeof("midnightblue")];
    char CSSValueStringPool_str419[sizeof("manipulation")];
    char CSSValueStringPool_str420[sizeof("ease-in-out")];
    char CSSValueStringPool_str421[sizeof("fuchsia")];
    char CSSValueStringPool_str422[sizeof("contextual")];
    char CSSValueStringPool_str423[sizeof("skip-activation")];
    char CSSValueStringPool_str424[sizeof("w-resize")];
    char CSSValueStringPool_str425[sizeof("searchfield")];
    char CSSValueStringPool_str426[sizeof("buttontext")];
    char CSSValueStringPool_str427[sizeof("upright")];
    char CSSValueStringPool_str428[sizeof("slider-vertical")];
    char CSSValueStringPool_str429[sizeof("wavy")];
    char CSSValueStringPool_str430[sizeof("orchid")];
    char CSSValueStringPool_str431[sizeof("margin-box")];
    char CSSValueStringPool_str432[sizeof("x")];
    char CSSValueStringPool_str433[sizeof("fill-box")];
    char CSSValueStringPool_str434[sizeof("listbox")];
    char CSSValueStringPool_str435[sizeof("context-menu")];
    char CSSValueStringPool_str436[sizeof("soft-light")];
    char CSSValueStringPool_str437[sizeof("horizontal-tb")];
    char CSSValueStringPool_str438[sizeof("inherit")];
    char CSSValueStringPool_str439[sizeof("mediumblue")];
    char CSSValueStringPool_str440[sizeof("katakana-iroha")];
    char CSSValueStringPool_str441[sizeof("xor")];
    char CSSValueStringPool_str442[sizeof("translatex")];
    char CSSValueStringPool_str443[sizeof("white")];
    char CSSValueStringPool_str444[sizeof("media-volume-slider")];
    char CSSValueStringPool_str445[sizeof("snow")];
    char CSSValueStringPool_str446[sizeof("style")];
    char CSSValueStringPool_str447[sizeof("avoid-page")];
    char CSSValueStringPool_str448[sizeof("wheat")];
    char CSSValueStringPool_str449[sizeof("ray")];
    char CSSValueStringPool_str450[sizeof("dimgrey")];
    char CSSValueStringPool_str451[sizeof("dimgray")];
    char CSSValueStringPool_str452[sizeof("darkgrey")];
    char CSSValueStringPool_str453[sizeof("darkgray")];
    char CSSValueStringPool_str454[sizeof("highlight")];
    char CSSValueStringPool_str455[sizeof("lightsteelblue")];
    char CSSValueStringPool_str456[sizeof("mediumpurple")];
    char CSSValueStringPool_str457[sizeof("text-top")];
    char CSSValueStringPool_str458[sizeof("off")];
    char CSSValueStringPool_str459[sizeof("captiontext")];
    char CSSValueStringPool_str460[sizeof("threedface")];
    char CSSValueStringPool_str461[sizeof("small-caption")];
    char CSSValueStringPool_str462[sizeof("exact")];
    char CSSValueStringPool_str463[sizeof("mathematical")];
    char CSSValueStringPool_str464[sizeof("alpha")];
    char CSSValueStringPool_str465[sizeof("inline")];
    char CSSValueStringPool_str466[sizeof("non-scaling-stroke")];
    char CSSValueStringPool_str467[sizeof("lightblue")];
    char CSSValueStringPool_str468[sizeof("ultra-expanded")];
    char CSSValueStringPool_str469[sizeof("above")];
    char CSSValueStringPool_str470[sizeof("brown")];
    char CSSValueStringPool_str471[sizeof("scaley")];
    char CSSValueStringPool_str472[sizeof("indigo")];
    char CSSValueStringPool_str473[sizeof("forwards")];
    char CSSValueStringPool_str474[sizeof("media-slider")];
    char CSSValueStringPool_str475[sizeof("ellipse")];
    char CSSValueStringPool_str476[sizeof("avoid-column")];
    char CSSValueStringPool_str477[sizeof("olivedrab")];
    char CSSValueStringPool_str478[sizeof("drop-shadow")];
    char CSSValueStringPool_str479[sizeof("inactiveborder")];
    char CSSValueStringPool_str480[sizeof("darkcyan")];
    char CSSValueStringPool_str481[sizeof("fantasy")];
    char CSSValueStringPool_str482[sizeof("darkkhaki")];
    char CSSValueStringPool_str483[sizeof("inside")];
    char CSSValueStringPool_str484[sizeof("table-column-group")];
    char CSSValueStringPool_str485[sizeof("simp-chinese-formal")];
    char CSSValueStringPool_str486[sizeof("slategrey")];
    char CSSValueStringPool_str487[sizeof("slategray")];
    char CSSValueStringPool_str488[sizeof("rotatey")];
    char CSSValueStringPool_str489[sizeof("browser")];
    char CSSValueStringPool_str490[sizeof("flow-root")];
    char CSSValueStringPool_str491[sizeof("ellipsis")];
    char CSSValueStringPool_str492[sizeof("simp-chinese-informal")];
    char CSSValueStringPool_str493[sizeof("darkslategrey")];
    char CSSValueStringPool_str494[sizeof("darkslategray")];
    char CSSValueStringPool_str495[sizeof("indianred")];
    char CSSValueStringPool_str496[sizeof("jump-both")];
    char CSSValueStringPool_str497[sizeof("var")];
    char CSSValueStringPool_str498[sizeof("text-bottom")];
    char CSSValueStringPool_str499[sizeof("new")];
    char CSSValueStringPool_str500[sizeof("mistyrose")];
    char CSSValueStringPool_str501[sizeof("menu")];
    char CSSValueStringPool_str502[sizeof("swap")];
    char CSSValueStringPool_str503[sizeof("myanmar")];
    char CSSValueStringPool_str504[sizeof("x-small")];
    char CSSValueStringPool_str505[sizeof("line-through")];
    char CSSValueStringPool_str506[sizeof("last-baseline")];
    char CSSValueStringPool_str507[sizeof("inline-grid")];
    char CSSValueStringPool_str508[sizeof("inline-math")];
    char CSSValueStringPool_str509[sizeof("malayalam")];
    char CSSValueStringPool_str510[sizeof("cyan")];
    char CSSValueStringPool_str511[sizeof("legacy")];
    char CSSValueStringPool_str512[sizeof("violet")];
    char CSSValueStringPool_str513[sizeof("row")];
    char CSSValueStringPool_str514[sizeof("dynamic")];
    char CSSValueStringPool_str515[sizeof("x-large")];
    char CSSValueStringPool_str516[sizeof("saturate")];
    char CSSValueStringPool_str517[sizeof("gujarati")];
    char CSSValueStringPool_str518[sizeof("lightseagreen")];
    char CSSValueStringPool_str519[sizeof("inline-end")];
    char CSSValueStringPool_str520[sizeof("manual")];
    char CSSValueStringPool_str521[sizeof("graytext")];
    char CSSValueStringPool_str522[sizeof("saturation")];
    char CSSValueStringPool_str523[sizeof("upper-alpha")];
    char CSSValueStringPool_str524[sizeof("no-historical-ligatures")];
    char CSSValueStringPool_str525[sizeof("-internal-quirk-inherit")];
    char CSSValueStringPool_str526[sizeof("lightpink")];
    char CSSValueStringPool_str527[sizeof("mediumvioletred")];
    char CSSValueStringPool_str528[sizeof("inline-start")];
    char CSSValueStringPool_str529[sizeof("block-axis")];
    char CSSValueStringPool_str530[sizeof("menulist")];
    char CSSValueStringPool_str531[sizeof("farthest-side")];
    char CSSValueStringPool_str532[sizeof("column")];
    char CSSValueStringPool_str533[sizeof("repeat-y")];
    char CSSValueStringPool_str534[sizeof("overlay")];
    char CSSValueStringPool_str535[sizeof("arabic-indic")];
    char CSSValueStringPool_str536[sizeof("decimal-leading-zero")];
    char CSSValueStringPool_str537[sizeof("urdu")];
    char CSSValueStringPool_str538[sizeof("gurmukhi")];
    char CSSValueStringPool_str539[sizeof("subpixel-antialiased")];
    char CSSValueStringPool_str540[sizeof("document")];
    char CSSValueStringPool_str541[sizeof("verso")];
    char CSSValueStringPool_str542[sizeof("show")];
    char CSSValueStringPool_str543[sizeof("buttonhighlight")];
    char CSSValueStringPool_str544[sizeof("lower-roman")];
    char CSSValueStringPool_str545[sizeof("semi-expanded")];
    char CSSValueStringPool_str546[sizeof("opacity")];
    char CSSValueStringPool_str547[sizeof("each-line")];
    char CSSValueStringPool_str548[sizeof("lower-greek")];
    char CSSValueStringPool_str549[sizeof("lower-armenian")];
    char CSSValueStringPool_str550[sizeof("canvastext")];
    char CSSValueStringPool_str551[sizeof("not-allowed")];
    char CSSValueStringPool_str552[sizeof("lower-latin")];
    char CSSValueStringPool_str553[sizeof("lowercase")];
    char CSSValueStringPool_str554[sizeof("space-evenly")];
    char CSSValueStringPool_str555[sizeof("reduce")];
    char CSSValueStringPool_str556[sizeof("exclusion")];
    char CSSValueStringPool_str557[sizeof("nowrap")];
    char CSSValueStringPool_str558[sizeof("conic-gradient")];
    char CSSValueStringPool_str559[sizeof("lawngreen")];
    char CSSValueStringPool_str560[sizeof("textfield")];
    char CSSValueStringPool_str561[sizeof("-internal-light-dark-color")];
    char CSSValueStringPool_str562[sizeof("pre")];
    char CSSValueStringPool_str563[sizeof("skew")];
    char CSSValueStringPool_str564[sizeof("translatey")];
    char CSSValueStringPool_str565[sizeof("p3")];
    char CSSValueStringPool_str566[sizeof("pink")];
    char CSSValueStringPool_str567[sizeof("page")];
    char CSSValueStringPool_str568[sizeof("sliderthumb-vertical")];
    char CSSValueStringPool_str569[sizeof("table-caption")];
    char CSSValueStringPool_str570[sizeof("sticky")];
    char CSSValueStringPool_str571[sizeof("vertical")];
    char CSSValueStringPool_str572[sizeof("stacked-fractions")];
    char CSSValueStringPool_str573[sizeof("maroon")];
    char CSSValueStringPool_str574[sizeof("inner-spin-button")];
    char CSSValueStringPool_str575[sizeof("scale-down")];
    char CSSValueStringPool_str576[sizeof("isolate-override")];
    char CSSValueStringPool_str577[sizeof("expanded")];
    char CSSValueStringPool_str578[sizeof("bidi-override")];
    char CSSValueStringPool_str579[sizeof("hebrew")];
    char CSSValueStringPool_str580[sizeof("yellow")];
    char CSSValueStringPool_str581[sizeof("inline-table")];
    char CSSValueStringPool_str582[sizeof("activetext")];
    char CSSValueStringPool_str583[sizeof("multiply")];
    char CSSValueStringPool_str584[sizeof("break-spaces")];
    char CSSValueStringPool_str585[sizeof("invisible")];
    char CSSValueStringPool_str586[sizeof("alphabetic")];
    char CSSValueStringPool_str587[sizeof("whitesmoke")];
    char CSSValueStringPool_str588[sizeof("palegreen")];
    char CSSValueStringPool_str589[sizeof("backwards")];
    char CSSValueStringPool_str590[sizeof("telugu")];
    char CSSValueStringPool_str591[sizeof("korean-hanja-formal")];
    char CSSValueStringPool_str592[sizeof("content-box")];
    char CSSValueStringPool_str593[sizeof("color")];
    char CSSValueStringPool_str594[sizeof("pre-line")];
    char CSSValueStringPool_str595[sizeof("yellowgreen")];
    char CSSValueStringPool_str596[sizeof("progress")];
    char CSSValueStringPool_str597[sizeof("vertical-rl")];
    char CSSValueStringPool_str598[sizeof("korean-hanja-informal")];
    char CSSValueStringPool_str599[sizeof("text-after-edge")];
    char CSSValueStringPool_str600[sizeof("mandatory")];
    char CSSValueStringPool_str601[sizeof("portrait")];
    char CSSValueStringPool_str602[sizeof("threedhighlight")];
    char CSSValueStringPool_str603[sizeof("message-box")];
    char CSSValueStringPool_str604[sizeof("sw-resize")];
    char CSSValueStringPool_str605[sizeof("border-box")];
    char CSSValueStringPool_str606[sizeof("nw-resize")];
    char CSSValueStringPool_str607[sizeof("row-resize")];
    char CSSValueStringPool_str608[sizeof("infinite")];
    char CSSValueStringPool_str609[sizeof("persian")];
    char CSSValueStringPool_str610[sizeof("bounding-box")];
    char CSSValueStringPool_str611[sizeof("vertical-lr")];
    char CSSValueStringPool_str612[sizeof("mediumslateblue")];
    char CSSValueStringPool_str613[sizeof("plum")];
    char CSSValueStringPool_str614[sizeof("paint")];
    char CSSValueStringPool_str615[sizeof("scroll")];
    char CSSValueStringPool_str616[sizeof("korean-hangul-formal")];
    char CSSValueStringPool_str617[sizeof("purple")];
    char CSSValueStringPool_str618[sizeof("pointer")];
    char CSSValueStringPool_str619[sizeof("royalblue")];
    char CSSValueStringPool_str620[sizeof("activeborder")];
    char CSSValueStringPool_str621[sizeof("luminosity")];
    char CSSValueStringPool_str622[sizeof("skyblue")];
    char CSSValueStringPool_str623[sizeof("painted")];
    char CSSValueStringPool_str624[sizeof("oldstyle-nums")];
    char CSSValueStringPool_str625[sizeof("square")];
    char CSSValueStringPool_str626[sizeof("read-only")];
    char CSSValueStringPool_str627[sizeof("checkbox")];
    char CSSValueStringPool_str628[sizeof("table-row")];
    char CSSValueStringPool_str629[sizeof("palegoldenrod")];
    char CSSValueStringPool_str630[sizeof("optimizespeed")];
    char CSSValueStringPool_str631[sizeof("discretionary-ligatures")];
    char CSSValueStringPool_str632[sizeof("palevioletred")];
    char CSSValueStringPool_str633[sizeof("table-header-group")];
    char CSSValueStringPool_str634[sizeof("paused")];
    char CSSValueStringPool_str635[sizeof("menulist-button")];
    char CSSValueStringPool_str636[sizeof("lightgrey")];
    char CSSValueStringPool_str637[sizeof("lightgray")];
    char CSSValueStringPool_str638[sizeof("xx-large")];
    char CSSValueStringPool_str639[sizeof("monospace")];
    char CSSValueStringPool_str640[sizeof("pan-up")];
    char CSSValueStringPool_str641[sizeof("preserve-3d")];
    char CSSValueStringPool_str642[sizeof("media-volume-sliderthumb")];
    char CSSValueStringPool_str643[sizeof("trad-chinese-formal")];
    char CSSValueStringPool_str644[sizeof("mediumorchid")];
    char CSSValueStringPool_str645[sizeof("smooth")];
    char CSSValueStringPool_str646[sizeof("source-atop")];
    char CSSValueStringPool_str647[sizeof("polygon")];
    char CSSValueStringPool_str648[sizeof("trad-chinese-informal")];
    char CSSValueStringPool_str649[sizeof("economy")];
    char CSSValueStringPool_str650[sizeof("ivory")];
    char CSSValueStringPool_str651[sizeof("no-close-quote")];
    char CSSValueStringPool_str652[sizeof("auto")];
    char CSSValueStringPool_str653[sizeof("searchfield-cancel-button")];
    char CSSValueStringPool_str654[sizeof("titling-caps")];
    char CSSValueStringPool_str655[sizeof("activecaption")];
    char CSSValueStringPool_str656[sizeof("color-stop")];
    char CSSValueStringPool_str657[sizeof("read-write")];
    char CSSValueStringPool_str658[sizeof("pan-right")];
    char CSSValueStringPool_str659[sizeof("sliderthumb-horizontal")];
    char CSSValueStringPool_str660[sizeof("lightcyan")];
    char CSSValueStringPool_str661[sizeof("stroke")];
    char CSSValueStringPool_str662[sizeof("full-width")];
    char CSSValueStringPool_str663[sizeof("groove")];
    char CSSValueStringPool_str664[sizeof("rosybrown")];
    char CSSValueStringPool_str665[sizeof("accumulate")];
    char CSSValueStringPool_str666[sizeof("-webkit-left")];
    char CSSValueStringPool_str667[sizeof("inline-axis")];
    char CSSValueStringPool_str668[sizeof("table-footer-group")];
    char CSSValueStringPool_str669[sizeof("menutext")];
    char CSSValueStringPool_str670[sizeof("-internal-extend-to-zoom")];
    char CSSValueStringPool_str671[sizeof("scrollbar")];
    char CSSValueStringPool_str672[sizeof("media-sliderthumb")];
    char CSSValueStringPool_str673[sizeof("aqua")];
    char CSSValueStringPool_str674[sizeof("nesw-resize")];
    char CSSValueStringPool_str675[sizeof("tabular-nums")];
    char CSSValueStringPool_str676[sizeof("row-reverse")];
    char CSSValueStringPool_str677[sizeof("slider-horizontal")];
    char CSSValueStringPool_str678[sizeof("extra-condensed")];
    char CSSValueStringPool_str679[sizeof("-webkit-center")];
    char CSSValueStringPool_str680[sizeof("visible")];
    char CSSValueStringPool_str681[sizeof("xx-small")];
    char CSSValueStringPool_str682[sizeof("aquamarine")];
    char CSSValueStringPool_str683[sizeof("break-word")];
    char CSSValueStringPool_str684[sizeof("inline-block")];
    char CSSValueStringPool_str685[sizeof("cubic-bezier")];
    char CSSValueStringPool_str686[sizeof("padding")];
    char CSSValueStringPool_str687[sizeof("-webkit-control")];
    char CSSValueStringPool_str688[sizeof("pan-left")];
    char CSSValueStringPool_str689[sizeof("color-burn")];
    char CSSValueStringPool_str690[sizeof("-webkit-calc")];
    char CSSValueStringPool_str691[sizeof("before")];
    char CSSValueStringPool_str692[sizeof("column-reverse")];
    char CSSValueStringPool_str693[sizeof("ew-resize")];
    char CSSValueStringPool_str694[sizeof("-webkit-min-content")];
    char CSSValueStringPool_str695[sizeof("inter-word")];
    char CSSValueStringPool_str696[sizeof("-webkit-radial-gradient")];
    char CSSValueStringPool_str697[sizeof("proportional-nums")];
    char CSSValueStringPool_str698[sizeof("-webkit-linear-gradient")];
    char CSSValueStringPool_str699[sizeof("skewx")];
    char CSSValueStringPool_str700[sizeof("-webkit-isolate")];
    char CSSValueStringPool_str701[sizeof("saddlebrown")];
    char CSSValueStringPool_str702[sizeof("-webkit-auto")];
    char CSSValueStringPool_str703[sizeof("nwse-resize")];
    char CSSValueStringPool_str704[sizeof("pinch-zoom")];
    char CSSValueStringPool_str705[sizeof("-webkit-mini-control")];
    char CSSValueStringPool_str706[sizeof("pan-x")];
    char CSSValueStringPool_str707[sizeof("lower-alpha")];
    char CSSValueStringPool_str708[sizeof("progressive")];
    char CSSValueStringPool_str709[sizeof("cjk-ideographic")];
    char CSSValueStringPool_str710[sizeof("greenyellow")];
    char CSSValueStringPool_str711[sizeof("path")];
    char CSSValueStringPool_str712[sizeof("progress-bar")];
    char CSSValueStringPool_str713[sizeof("extra-expanded")];
    char CSSValueStringPool_str714[sizeof("buttonshadow")];
    char CSSValueStringPool_str715[sizeof("floralwhite")];
    char CSSValueStringPool_str716[sizeof("absolute")];
    char CSSValueStringPool_str717[sizeof("-webkit-gradient")];
    char CSSValueStringPool_str718[sizeof("justify")];
    char CSSValueStringPool_str719[sizeof("open-quote")];
    char CSSValueStringPool_str720[sizeof("-internal-variable-value")];
    char CSSValueStringPool_str721[sizeof("-internal-active-list-box-selection")];
    char CSSValueStringPool_str722[sizeof("lightslategrey")];
    char CSSValueStringPool_str723[sizeof("lightslategray")];
    char CSSValueStringPool_str724[sizeof("pixelated")];
    char CSSValueStringPool_str725[sizeof("color-dodge")];
    char CSSValueStringPool_str726[sizeof("petite-caps")];
    char CSSValueStringPool_str727[sizeof("-webkit-image-set")];
    char CSSValueStringPool_str728[sizeof("highlighttext")];
    char CSSValueStringPool_str729[sizeof("visiblepainted")];
    char CSSValueStringPool_str730[sizeof("space-between")];
    char CSSValueStringPool_str731[sizeof("mediumaquamarine")];
    char CSSValueStringPool_str732[sizeof("-webkit-link")];
    char CSSValueStringPool_str733[sizeof("cornflowerblue")];
    char CSSValueStringPool_str734[sizeof("rebeccapurple")];
    char CSSValueStringPool_str735[sizeof("text-before-edge")];
    char CSSValueStringPool_str736[sizeof("-webkit-zoom-in")];
    char CSSValueStringPool_str737[sizeof("square-button")];
    char CSSValueStringPool_str738[sizeof("appworkspace")];
    char CSSValueStringPool_str739[sizeof("-webkit-grab")];
    char CSSValueStringPool_str740[sizeof("threedshadow")];
    char CSSValueStringPool_str741[sizeof("honeydew")];
    char CSSValueStringPool_str742[sizeof("-webkit-isolate-override")];
    char CSSValueStringPool_str743[sizeof("mediumturquoise")];
    char CSSValueStringPool_str744[sizeof("window")];
    char CSSValueStringPool_str745[sizeof("sideways")];
    char CSSValueStringPool_str746[sizeof("ghostwhite")];
    char CSSValueStringPool_str747[sizeof("close-quote")];
    char CSSValueStringPool_str748[sizeof("auto-fit")];
    char CSSValueStringPool_str749[sizeof("inactivecaption")];
    char CSSValueStringPool_str750[sizeof("-webkit-baseline-middle")];
    char CSSValueStringPool_str751[sizeof("deepskyblue")];
    char CSSValueStringPool_str752[sizeof("xxx-large")];
    char CSSValueStringPool_str753[sizeof("perspective")];
    char CSSValueStringPool_str754[sizeof("table-row-group")];
    char CSSValueStringPool_str755[sizeof("oblique")];
    char CSSValueStringPool_str756[sizeof("-webkit-zoom-out")];
    char CSSValueStringPool_str757[sizeof("-webkit-small-control")];
    char CSSValueStringPool_str758[sizeof("auto-fill")];
    char CSSValueStringPool_str759[sizeof("skewy")];
    char CSSValueStringPool_str760[sizeof("skip-viewport-activation")];
    char CSSValueStringPool_str761[sizeof("lightyellow")];
    char CSSValueStringPool_str762[sizeof("-webkit-right")];
    char CSSValueStringPool_str763[sizeof("darkturquoise")];
    char CSSValueStringPool_str764[sizeof("visiblefill")];
    char CSSValueStringPool_str765[sizeof("visitedtext")];
    char CSSValueStringPool_str766[sizeof("pan-y")];
    char CSSValueStringPool_str767[sizeof("visual")];
    char CSSValueStringPool_str768[sizeof("plaintext")];
    char CSSValueStringPool_str769[sizeof("ethiopic-halehame")];
    char CSSValueStringPool_str770[sizeof("cjk-earthly-branch")];
    char CSSValueStringPool_str771[sizeof("vertical-right")];
    char CSSValueStringPool_str772[sizeof("lightskyblue")];
    char CSSValueStringPool_str773[sizeof("burlywood")];
    char CSSValueStringPool_str774[sizeof("-webkit-pictograph")];
    char CSSValueStringPool_str775[sizeof("visiblestroke")];
    char CSSValueStringPool_str776[sizeof("inline-layout")];
    char CSSValueStringPool_str777[sizeof("-webkit-grabbing")];
    char CSSValueStringPool_str778[sizeof("-webkit-activelink")];
    char CSSValueStringPool_str779[sizeof("layout")];
    char CSSValueStringPool_str780[sizeof("threeddarkshadow")];
    char CSSValueStringPool_str781[sizeof("-internal-inactive-list-box-selection")];
    char CSSValueStringPool_str782[sizeof("scroll-position")];
    char CSSValueStringPool_str783[sizeof("ethiopic-halehame-am")];
    char CSSValueStringPool_str784[sizeof("before-edge")];
    char CSSValueStringPool_str785[sizeof("-webkit-optimize-contrast")];
    char CSSValueStringPool_str786[sizeof("-webkit-nowrap")];
    char CSSValueStringPool_str787[sizeof("-webkit-fit-content")];
    char CSSValueStringPool_str788[sizeof("peru")];
    char CSSValueStringPool_str789[sizeof("vertical-text")];
    char CSSValueStringPool_str790[sizeof("-webkit-match-parent")];
    char CSSValueStringPool_str791[sizeof("anywhere")];
    char CSSValueStringPool_str792[sizeof("always")];
    char CSSValueStringPool_str793[sizeof("plus-lighter")];
    char CSSValueStringPool_str794[sizeof("threedlightshadow")];
    char CSSValueStringPool_str795[sizeof("ethiopic-halehame-ti-et")];
    char CSSValueStringPool_str796[sizeof("ethiopic-halehame-ti-er")];
    char CSSValueStringPool_str797[sizeof("optimizelegibility")];
    char CSSValueStringPool_str798[sizeof("proximity")];
    char CSSValueStringPool_str799[sizeof("ideographic")];
    char CSSValueStringPool_str800[sizeof("pan-down")];
    char CSSValueStringPool_str801[sizeof("inline-flex")];
    char CSSValueStringPool_str802[sizeof("-webkit-cross-fade")];
    char CSSValueStringPool_str803[sizeof("push-button")];
    char CSSValueStringPool_str804[sizeof("cjk-heavenly-stem")];
    char CSSValueStringPool_str805[sizeof("below")];
    char CSSValueStringPool_str806[sizeof("no-discretionary-ligatures")];
    char CSSValueStringPool_str807[sizeof("-webkit-inline-box")];
    char CSSValueStringPool_str808[sizeof("-webkit-fill-available")];
    char CSSValueStringPool_str809[sizeof("-webkit-focus-ring-color")];
    char CSSValueStringPool_str810[sizeof("pre-wrap")];
    char CSSValueStringPool_str811[sizeof("-internal-active-list-box-selection-text")];
    char CSSValueStringPool_str812[sizeof("navajowhite")];
    char CSSValueStringPool_str813[sizeof("-webkit-plaintext")];
    char CSSValueStringPool_str814[sizeof("windowtext")];
    char CSSValueStringPool_str815[sizeof("sandybrown")];
    char CSSValueStringPool_str816[sizeof("lemonchiffon")];
    char CSSValueStringPool_str817[sizeof("peachpuff")];
    char CSSValueStringPool_str818[sizeof("inactivecaptiontext")];
    char CSSValueStringPool_str819[sizeof("-webkit-max-content")];
    char CSSValueStringPool_str820[sizeof("-webkit-inline-flex")];
    char CSSValueStringPool_str821[sizeof("-webkit-box")];
    char CSSValueStringPool_str822[sizeof("-webkit-body")];
    char CSSValueStringPool_str823[sizeof("view-box")];
    char CSSValueStringPool_str824[sizeof("after-white-space")];
    char CSSValueStringPool_str825[sizeof("infotext")];
    char CSSValueStringPool_str826[sizeof("lightgoldenrodyellow")];
    char CSSValueStringPool_str827[sizeof("windowframe")];
    char CSSValueStringPool_str828[sizeof("-internal-inactive-list-box-selection-text")];
    char CSSValueStringPool_str829[sizeof("padding-box")];
    char CSSValueStringPool_str830[sizeof("-webkit-flex")];
    char CSSValueStringPool_str831[sizeof("sideways-right")];
    char CSSValueStringPool_str832[sizeof("proportional-width")];
    char CSSValueStringPool_str833[sizeof("no-open-quote")];
    char CSSValueStringPool_str834[sizeof("powderblue")];
    char CSSValueStringPool_str835[sizeof("auto-flow")];
    char CSSValueStringPool_str836[sizeof("-webkit-repeating-linear-gradient")];
    char CSSValueStringPool_str837[sizeof("-webkit-repeating-radial-gradient")];
    char CSSValueStringPool_str838[sizeof("infobackground")];
    char CSSValueStringPool_str839[sizeof("optimizequality")];
    char CSSValueStringPool_str840[sizeof("antiquewhite")];
    char CSSValueStringPool_str841[sizeof("read-write-plaintext-only")];
    char CSSValueStringPool_str842[sizeof("paleturquoise")];
    char CSSValueStringPool_str843[sizeof("-webkit-xxx-large")];
    char CSSValueStringPool_str844[sizeof("papayawhip")];
  };
static const struct CSSValueStringPool_t CSSValueStringPool_contents =
  {
    "lr",
    "min",
    "ltr",
    "dot",
    "lao",
    "drag",
    "dark",
    "fine",
    "start",
    "lime",
    "meter",
    "miter",
    "large",
    "linen",
    "none",
    "from",
    "darken",
    "larger",
    "linear",
    "magenta",
    "hanging",
    "disc",
    "format",
    "seagreen",
    "help",
    "fill",
    "steps",
    "slice",
    "nonzero",
    "small",
    "srgb",
    "darkgreen",
    "rl",
    "hide",
    "limegreen",
    "field",
    "rtl",
    "frames",
    "hsl",
    "markers",
    "smaller",
    "darkorange",
    "salmon",
    "ledger",
    "red",
    "normal",
    "reset",
    "darkred",
    "cell",
    "calc",
    "clip",
    "b5",
    "b4",
    "move",
    "ridge",
    "sides",
    "mongolian",
    "hover",
    "letter",
    "circle",
    "filled",
    "coarse",
    "url",
    "scale",
    "beige",
    "forestgreen",
    "last",
    "flat",
    "screen",
    "crimson",
    "unset",
    "to",
    "tan",
    "hue",
    "revert",
    "darksalmon",
    "under",
    "teal",
    "unicase",
    "hiragana",
    "from-image",
    "center",
    "cover",
    "dense",
    "step-end",
    "legal",
    "dotted",
    "first",
    "sesame",
    "step-start",
    "on",
    "rotate",
    "content",
    "contain",
    "rec2020",
    "loose",
    "bengali",
    "lavender",
    "hsla",
    "reverse",
    "linear-gradient",
    "moccasin",
    "darkviolet",
    "space",
    "false",
    "scale3d",
    "central",
    "clear",
    "sienna",
    "hangul",
    "cambodian",
    "coral",
    "static",
    "contents",
    "contrast",
    "y",
    "baseline",
    "underline",
    "keep-all",
    "rect",
    "bottom",
    "repeat",
    "bevel",
    "recto",
    "mintcream",
    "hue-rotate",
    "list-item",
    "rotate3d",
    "size",
    "devanagari",
    "double",
    "at",
    "darkolivegreen",
    "a5",
    "a4",
    "over",
    "local",
    "darkgoldenrod",
    "a3",
    "attr",
    "flex",
    "clone",
    "clamp",
    "tomato",
    "blur",
    "blue",
    "true",
    "z",
    "kannada",
    "relative",
    "destination-in",
    "rgb",
    "no-repeat",
    "armenian",
    "separate",
    "top",
    "triangle",
    "standalone",
    "butt",
    "linearrgb",
    "bisque",
    "super",
    "overline",
    "zoom",
    "all",
    "collapse",
    "caption",
    "darkmagenta",
    "min-content",
    "fit-content",
    "button",
    "span",
    "alternate",
    "scalez",
    "source-in",
    "green",
    "fullscreen",
    "balance",
    "orange",
    "s-resize",
    "running",
    "se-resize",
    "n-resize",
    "-internal-center",
    "oldlace",
    "ne-resize",
    "tb",
    "destination-over",
    "counter",
    "georgian",
    "navy",
    "grab",
    "sub",
    "khaki",
    "khmer",
    "rotatez",
    "rgba",
    "round",
    "table",
    "ns-resize",
    "flex-end",
    "zoom-in",
    "flex-start",
    "translate",
    "lr-tb",
    "closest-side",
    "cursive",
    "counters",
    "tibetan",
    "destination-out",
    "col-resize",
    "orangered",
    "alias",
    "background",
    "blueviolet",
    "reset-size",
    "translate3d",
    "hangul-consonant",
    "spell-out",
    "small-caps",
    "outset",
    "hotpink",
    "fabricated",
    "no-change",
    "jis78",
    "stretch",
    "jis90",
    "no-common-ligatures",
    "jis04",
    "darkblue",
    "destination-atop",
    "digits",
    "chocolate",
    "jis83",
    "rl-tb",
    "oriya",
    "source-over",
    "crispedges",
    "use-script",
    "source-out",
    "space-around",
    "hand",
    "safe",
    "only",
    "tb-rl",
    "open",
    "steelblue",
    "outside",
    "radio",
    "solid",
    "self-end",
    "turquoise",
    "copy",
    "self-start",
    "ease",
    "dodgerblue",
    "end",
    "strict",
    "closest-corner",
    "double-circle",
    "darkslateblue",
    "darkorchid",
    "radial",
    "brightness",
    "currentcolor",
    "distribute",
    "zoom-out",
    "upper-roman",
    "hidden",
    "black",
    "element",
    "cadetblue",
    "env",
    "block",
    "repeating-linear-gradient",
    "seashell",
    "left",
    "upper-armenian",
    "decimal",
    "slateblue",
    "first-baseline",
    "upper-latin",
    "katakana",
    "uppercase",
    "logical",
    "middle",
    "sepia",
    "chartreuse",
    "crosshair",
    "darkseagreen",
    "no-drag",
    "alternate-reverse",
    "all-scroll",
    "border",
    "medium",
    "status-bar",
    "ease-in",
    "deeppink",
    "azure",
    "hiragana-iroha",
    "simplified",
    "bold",
    "grey",
    "gray",
    "historical-ligatures",
    "thin",
    "-internal-media-control",
    "translatez",
    "bolder",
    "max",
    "springgreen",
    "wrap",
    "condensed",
    "thistle",
    "jump-none",
    "no-punctuation",
    "table-cell",
    "repeating-radial-gradient",
    "grabbing",
    "matrix",
    "lining-nums",
    "minmax",
    "ordinal",
    "radial-gradient",
    "common-ligatures",
    "transparent",
    "luminance",
    "jump-end",
    "traditional",
    "linktext",
    "repeating-conic-gradient",
    "jump-start",
    "minimal-ui",
    "math",
    "silver",
    "unsafe",
    "mixed",
    "ruby",
    "fixed",
    "light",
    "back-button",
    "blink",
    "cornsilk",
    "wait",
    "lighten",
    "lighter",
    "horizontal",
    "mediumseagreen",
    "fieldtext",
    "inset",
    "no-preference",
    "right",
    "matrix3d",
    "canvas",
    "aliceblue",
    "after",
    "ease-out",
    "lightgreen",
    "no-drop",
    "isolate",
    "scalex",
    "sans-serif",
    "literal-punctuation",
    "default",
    "break-all",
    "table-column",
    "semi-condensed",
    "antialiased",
    "dashed",
    "invert",
    "embed",
    "avoid",
    "both",
    "on-demand",
    "rotatex",
    "firebrick",
    "italic",
    "optional",
    "grid",
    "landscape",
    "grayscale",
    "fallback",
    "gainsboro",
    "initial",
    "e-resize",
    "all-small-caps",
    "lightsalmon",
    "evenodd",
    "active",
    "gold",
    "farthest-corner",
    "text",
    "olive",
    "wrap-reverse",
    "interlace",
    "thai",
    "diagonal-fractions",
    "thick",
    "geometricprecision",
    "lightcoral",
    "textarea",
    "after-edge",
    "serif",
    "mediumspringgreen",
    "no-contextual",
    "lavenderblush",
    "capitalize",
    "slashed-zero",
    "blanchedalmond",
    "buttonface",
    "all-petite-caps",
    "repeat-x",
    "goldenrod",
    "difference",
    "icon",
    "hard-light",
    "max-content",
    "ultra-condensed",
    "midnightblue",
    "manipulation",
    "ease-in-out",
    "fuchsia",
    "contextual",
    "skip-activation",
    "w-resize",
    "searchfield",
    "buttontext",
    "upright",
    "slider-vertical",
    "wavy",
    "orchid",
    "margin-box",
    "x",
    "fill-box",
    "listbox",
    "context-menu",
    "soft-light",
    "horizontal-tb",
    "inherit",
    "mediumblue",
    "katakana-iroha",
    "xor",
    "translatex",
    "white",
    "media-volume-slider",
    "snow",
    "style",
    "avoid-page",
    "wheat",
    "ray",
    "dimgrey",
    "dimgray",
    "darkgrey",
    "darkgray",
    "highlight",
    "lightsteelblue",
    "mediumpurple",
    "text-top",
    "off",
    "captiontext",
    "threedface",
    "small-caption",
    "exact",
    "mathematical",
    "alpha",
    "inline",
    "non-scaling-stroke",
    "lightblue",
    "ultra-expanded",
    "above",
    "brown",
    "scaley",
    "indigo",
    "forwards",
    "media-slider",
    "ellipse",
    "avoid-column",
    "olivedrab",
    "drop-shadow",
    "inactiveborder",
    "darkcyan",
    "fantasy",
    "darkkhaki",
    "inside",
    "table-column-group",
    "simp-chinese-formal",
    "slategrey",
    "slategray",
    "rotatey",
    "browser",
    "flow-root",
    "ellipsis",
    "simp-chinese-informal",
    "darkslategrey",
    "darkslategray",
    "indianred",
    "jump-both",
    "var",
    "text-bottom",
    "new",
    "mistyrose",
    "menu",
    "swap",
    "myanmar",
    "x-small",
    "line-through",
    "last-baseline",
    "inline-grid",
    "inline-math",
    "malayalam",
    "cyan",
    "legacy",
    "violet",
    "row",
    "dynamic",
    "x-large",
    "saturate",
    "gujarati",
    "lightseagreen",
    "inline-end",
    "manual",
    "graytext",
    "saturation",
    "upper-alpha",
    "no-historical-ligatures",
    "-internal-quirk-inherit",
    "lightpink",
    "mediumvioletred",
    "inline-start",
    "block-axis",
    "menulist",
    "farthest-side",
    "column",
    "repeat-y",
    "overlay",
    "arabic-indic",
    "decimal-leading-zero",
    "urdu",
    "gurmukhi",
    "subpixel-antialiased",
    "document",
    "verso",
    "show",
    "buttonhighlight",
    "lower-roman",
    "semi-expanded",
    "opacity",
    "each-line",
    "lower-greek",
    "lower-armenian",
    "canvastext",
    "not-allowed",
    "lower-latin",
    "lowercase",
    "space-evenly",
    "reduce",
    "exclusion",
    "nowrap",
    "conic-gradient",
    "lawngreen",
    "textfield",
    "-internal-light-dark-color",
    "pre",
    "skew",
    "translatey",
    "p3",
    "pink",
    "page",
    "sliderthumb-vertical",
    "table-caption",
    "sticky",
    "vertical",
    "stacked-fractions",
    "maroon",
    "inner-spin-button",
    "scale-down",
    "isolate-override",
    "expanded",
    "bidi-override",
    "hebrew",
    "yellow",
    "inline-table",
    "activetext",
    "multiply",
    "break-spaces",
    "invisible",
    "alphabetic",
    "whitesmoke",
    "palegreen",
    "backwards",
    "telugu",
    "korean-hanja-formal",
    "content-box",
    "color",
    "pre-line",
    "yellowgreen",
    "progress",
    "vertical-rl",
    "korean-hanja-informal",
    "text-after-edge",
    "mandatory",
    "portrait",
    "threedhighlight",
    "message-box",
    "sw-resize",
    "border-box",
    "nw-resize",
    "row-resize",
    "infinite",
    "persian",
    "bounding-box",
    "vertical-lr",
    "mediumslateblue",
    "plum",
    "paint",
    "scroll",
    "korean-hangul-formal",
    "purple",
    "pointer",
    "royalblue",
    "activeborder",
    "luminosity",
    "skyblue",
    "painted",
    "oldstyle-nums",
    "square",
    "read-only",
    "checkbox",
    "table-row",
    "palegoldenrod",
    "optimizespeed",
    "discretionary-ligatures",
    "palevioletred",
    "table-header-group",
    "paused",
    "menulist-button",
    "lightgrey",
    "lightgray",
    "xx-large",
    "monospace",
    "pan-up",
    "preserve-3d",
    "media-volume-sliderthumb",
    "trad-chinese-formal",
    "mediumorchid",
    "smooth",
    "source-atop",
    "polygon",
    "trad-chinese-informal",
    "economy",
    "ivory",
    "no-close-quote",
    "auto",
    "searchfield-cancel-button",
    "titling-caps",
    "activecaption",
    "color-stop",
    "read-write",
    "pan-right",
    "sliderthumb-horizontal",
    "lightcyan",
    "stroke",
    "full-width",
    "groove",
    "rosybrown",
    "accumulate",
    "-webkit-left",
    "inline-axis",
    "table-footer-group",
    "menutext",
    "-internal-extend-to-zoom",
    "scrollbar",
    "media-sliderthumb",
    "aqua",
    "nesw-resize",
    "tabular-nums",
    "row-reverse",
    "slider-horizontal",
    "extra-condensed",
    "-webkit-center",
    "visible",
    "xx-small",
    "aquamarine",
    "break-word",
    "inline-block",
    "cubic-bezier",
    "padding",
    "-webkit-control",
    "pan-left",
    "color-burn",
    "-webkit-calc",
    "before",
    "column-reverse",
    "ew-resize",
    "-webkit-min-content",
    "inter-word",
    "-webkit-radial-gradient",
    "proportional-nums",
    "-webkit-linear-gradient",
    "skewx",
    "-webkit-isolate",
    "saddlebrown",
    "-webkit-auto",
    "nwse-resize",
    "pinch-zoom",
    "-webkit-mini-control",
    "pan-x",
    "lower-alpha",
    "progressive",
    "cjk-ideographic",
    "greenyellow",
    "path",
    "progress-bar",
    "extra-expanded",
    "buttonshadow",
    "floralwhite",
    "absolute",
    "-webkit-gradient",
    "justify",
    "open-quote",
    "-internal-variable-value",
    "-internal-active-list-box-selection",
    "lightslategrey",
    "lightslategray",
    "pixelated",
    "color-dodge",
    "petite-caps",
    "-webkit-image-set",
    "highlighttext",
    "visiblepainted",
    "space-between",
    "mediumaquamarine",
    "-webkit-link",
    "cornflowerblue",
    "rebeccapurple",
    "text-before-edge",
    "-webkit-zoom-in",
    "square-button",
    "appworkspace",
    "-webkit-grab",
    "threedshadow",
    "honeydew",
    "-webkit-isolate-override",
    "mediumturquoise",
    "window",
    "sideways",
    "ghostwhite",
    "close-quote",
    "auto-fit",
    "inactivecaption",
    "-webkit-baseline-middle",
    "deepskyblue",
    "xxx-large",
    "perspective",
    "table-row-group",
    "oblique",
    "-webkit-zoom-out",
    "-webkit-small-control",
    "auto-fill",
    "skewy",
    "skip-viewport-activation",
    "lightyellow",
    "-webkit-right",
    "darkturquoise",
    "visiblefill",
    "visitedtext",
    "pan-y",
    "visual",
    "plaintext",
    "ethiopic-halehame",
    "cjk-earthly-branch",
    "vertical-right",
    "lightskyblue",
    "burlywood",
    "-webkit-pictograph",
    "visiblestroke",
    "inline-layout",
    "-webkit-grabbing",
    "-webkit-activelink",
    "layout",
    "threeddarkshadow",
    "-internal-inactive-list-box-selection",
    "scroll-position",
    "ethiopic-halehame-am",
    "before-edge",
    "-webkit-optimize-contrast",
    "-webkit-nowrap",
    "-webkit-fit-content",
    "peru",
    "vertical-text",
    "-webkit-match-parent",
    "anywhere",
    "always",
    "plus-lighter",
    "threedlightshadow",
    "ethiopic-halehame-ti-et",
    "ethiopic-halehame-ti-er",
    "optimizelegibility",
    "proximity",
    "ideographic",
    "pan-down",
    "inline-flex",
    "-webkit-cross-fade",
    "push-button",
    "cjk-heavenly-stem",
    "below",
    "no-discretionary-ligatures",
    "-webkit-inline-box",
    "-webkit-fill-available",
    "-webkit-focus-ring-color",
    "pre-wrap",
    "-internal-active-list-box-selection-text",
    "navajowhite",
    "-webkit-plaintext",
    "windowtext",
    "sandybrown",
    "lemonchiffon",
    "peachpuff",
    "inactivecaptiontext",
    "-webkit-max-content",
    "-webkit-inline-flex",
    "-webkit-box",
    "-webkit-body",
    "view-box",
    "after-white-space",
    "infotext",
    "lightgoldenrodyellow",
    "windowframe",
    "-internal-inactive-list-box-selection-text",
    "padding-box",
    "-webkit-flex",
    "sideways-right",
    "proportional-width",
    "no-open-quote",
    "powderblue",
    "auto-flow",
    "-webkit-repeating-linear-gradient",
    "-webkit-repeating-radial-gradient",
    "infobackground",
    "optimizequality",
    "antiquewhite",
    "read-write-plaintext-only",
    "paleturquoise",
    "-webkit-xxx-large",
    "papayawhip"
  };
#define CSSValueStringPool ((const char *) &CSSValueStringPool_contents)
const struct Value *
CSSValueKeywordsHash::findValueImpl (const char *str, size_t len)
{
  enum
    {
      TOTAL_KEYWORDS = 845,
      MIN_WORD_LENGTH = 1,
      MAX_WORD_LENGTH = 42,
      MIN_HASH_VALUE = 27,
      MAX_HASH_VALUE = 6258
    };

  static const struct Value value_word_list[] =
    {
      {(int)(size_t)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str0, static_cast<int>(CSSValueID::kLr)},
      {(int)(size_t)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str1, static_cast<int>(CSSValueID::kMin)},
      {(int)(size_t)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str2, static_cast<int>(CSSValueID::kLtr)},
      {(int)(size_t)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str3, static_cast<int>(CSSValueID::kDot)},
      {(int)(size_t)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str4, static_cast<int>(CSSValueID::kLao)},
      {(int)(size_t)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str5, static_cast<int>(CSSValueID::kDrag)},
      {(int)(size_t)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str6, static_cast<int>(CSSValueID::kDark)},
      {(int)(size_t)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str7, static_cast<int>(CSSValueID::kFine)},
      {(int)(size_t)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str8, static_cast<int>(CSSValueID::kStart)},
      {(int)(size_t)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str9, static_cast<int>(CSSValueID::kLime)},
      {(int)(size_t)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str10, static_cast<int>(CSSValueID::kMeter)},
      {(int)(size_t)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str11, static_cast<int>(CSSValueID::kMiter)},
      {(int)(size_t)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str12, static_cast<int>(CSSValueID::kLarge)},
      {(int)(size_t)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str13, static_cast<int>(CSSValueID::kLinen)},
      {(int)(size_t)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str14, static_cast<int>(CSSValueID::kNone)},
      {(int)(size_t)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str15, static_cast<int>(CSSValueID::kFrom)},
      {(int)(size_t)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str16, static_cast<int>(CSSValueID::kDarken)},
      {(int)(size_t)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str17, static_cast<int>(CSSValueID::kLarger)},
      {(int)(size_t)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str18, static_cast<int>(CSSValueID::kLinear)},
      {(int)(size_t)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str19, static_cast<int>(CSSValueID::kMagenta)},
      {(int)(size_t)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str20, static_cast<int>(CSSValueID::kHanging)},
      {(int)(size_t)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str21, static_cast<int>(CSSValueID::kDisc)},
      {(int)(size_t)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str22, static_cast<int>(CSSValueID::kFormat)},
      {(int)(size_t)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str23, static_cast<int>(CSSValueID::kSeagreen)},
      {(int)(size_t)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str24, static_cast<int>(CSSValueID::kHelp)},
      {(int)(size_t)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str25, static_cast<int>(CSSValueID::kFill)},
      {(int)(size_t)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str26, static_cast<int>(CSSValueID::kSteps)},
      {(int)(size_t)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str27, static_cast<int>(CSSValueID::kSlice)},
      {(int)(size_t)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str28, static_cast<int>(CSSValueID::kNonzero)},
      {(int)(size_t)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str29, static_cast<int>(CSSValueID::kSmall)},
      {(int)(size_t)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str30, static_cast<int>(CSSValueID::kSRGB)},
      {(int)(size_t)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str31, static_cast<int>(CSSValueID::kDarkgreen)},
      {(int)(size_t)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str32, static_cast<int>(CSSValueID::kRl)},
      {(int)(size_t)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str33, static_cast<int>(CSSValueID::kHide)},
      {(int)(size_t)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str34, static_cast<int>(CSSValueID::kLimegreen)},
      {(int)(size_t)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str35, static_cast<int>(CSSValueID::kField)},
      {(int)(size_t)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str36, static_cast<int>(CSSValueID::kRtl)},
      {(int)(size_t)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str37, static_cast<int>(CSSValueID::kFrames)},
      {(int)(size_t)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str38, static_cast<int>(CSSValueID::kHsl)},
      {(int)(size_t)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str39, static_cast<int>(CSSValueID::kMarkers)},
      {(int)(size_t)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str40, static_cast<int>(CSSValueID::kSmaller)},
      {(int)(size_t)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str41, static_cast<int>(CSSValueID::kDarkorange)},
      {(int)(size_t)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str42, static_cast<int>(CSSValueID::kSalmon)},
      {(int)(size_t)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str43, static_cast<int>(CSSValueID::kLedger)},
      {(int)(size_t)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str44, static_cast<int>(CSSValueID::kRed)},
      {(int)(size_t)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str45, static_cast<int>(CSSValueID::kNormal)},
      {(int)(size_t)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str46, static_cast<int>(CSSValueID::kReset)},
      {(int)(size_t)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str47, static_cast<int>(CSSValueID::kDarkred)},
      {(int)(size_t)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str48, static_cast<int>(CSSValueID::kCell)},
      {(int)(size_t)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str49, static_cast<int>(CSSValueID::kCalc)},
      {(int)(size_t)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str50, static_cast<int>(CSSValueID::kClip)},
      {(int)(size_t)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str51, static_cast<int>(CSSValueID::kB5)},
      {(int)(size_t)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str52, static_cast<int>(CSSValueID::kB4)},
      {(int)(size_t)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str53, static_cast<int>(CSSValueID::kMove)},
      {(int)(size_t)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str54, static_cast<int>(CSSValueID::kRidge)},
      {(int)(size_t)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str55, static_cast<int>(CSSValueID::kSides)},
      {(int)(size_t)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str56, static_cast<int>(CSSValueID::kMongolian)},
      {(int)(size_t)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str57, static_cast<int>(CSSValueID::kHover)},
      {(int)(size_t)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str58, static_cast<int>(CSSValueID::kLetter)},
      {(int)(size_t)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str59, static_cast<int>(CSSValueID::kCircle)},
      {(int)(size_t)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str60, static_cast<int>(CSSValueID::kFilled)},
      {(int)(size_t)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str61, static_cast<int>(CSSValueID::kCoarse)},
      {(int)(size_t)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str62, static_cast<int>(CSSValueID::kUrl)},
      {(int)(size_t)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str63, static_cast<int>(CSSValueID::kScale)},
      {(int)(size_t)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str64, static_cast<int>(CSSValueID::kBeige)},
      {(int)(size_t)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str65, static_cast<int>(CSSValueID::kForestgreen)},
      {(int)(size_t)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str66, static_cast<int>(CSSValueID::kLast)},
      {(int)(size_t)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str67, static_cast<int>(CSSValueID::kFlat)},
      {(int)(size_t)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str68, static_cast<int>(CSSValueID::kScreen)},
      {(int)(size_t)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str69, static_cast<int>(CSSValueID::kCrimson)},
      {(int)(size_t)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str70, static_cast<int>(CSSValueID::kUnset)},
      {(int)(size_t)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str71, static_cast<int>(CSSValueID::kTo)},
      {(int)(size_t)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str72, static_cast<int>(CSSValueID::kTan)},
      {(int)(size_t)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str73, static_cast<int>(CSSValueID::kHue)},
      {(int)(size_t)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str74, static_cast<int>(CSSValueID::kRevert)},
      {(int)(size_t)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str75, static_cast<int>(CSSValueID::kDarksalmon)},
      {(int)(size_t)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str76, static_cast<int>(CSSValueID::kUnder)},
      {(int)(size_t)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str77, static_cast<int>(CSSValueID::kTeal)},
      {(int)(size_t)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str78, static_cast<int>(CSSValueID::kUnicase)},
      {(int)(size_t)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str79, static_cast<int>(CSSValueID::kHiragana)},
      {(int)(size_t)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str80, static_cast<int>(CSSValueID::kFromImage)},
      {(int)(size_t)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str81, static_cast<int>(CSSValueID::kCenter)},
      {(int)(size_t)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str82, static_cast<int>(CSSValueID::kCover)},
      {(int)(size_t)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str83, static_cast<int>(CSSValueID::kDense)},
      {(int)(size_t)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str84, static_cast<int>(CSSValueID::kStepEnd)},
      {(int)(size_t)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str85, static_cast<int>(CSSValueID::kLegal)},
      {(int)(size_t)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str86, static_cast<int>(CSSValueID::kDotted)},
      {(int)(size_t)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str87, static_cast<int>(CSSValueID::kFirst)},
      {(int)(size_t)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str88, static_cast<int>(CSSValueID::kSesame)},
      {(int)(size_t)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str89, static_cast<int>(CSSValueID::kStepStart)},
      {(int)(size_t)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str90, static_cast<int>(CSSValueID::kOn)},
      {(int)(size_t)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str91, static_cast<int>(CSSValueID::kRotate)},
      {(int)(size_t)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str92, static_cast<int>(CSSValueID::kContent)},
      {(int)(size_t)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str93, static_cast<int>(CSSValueID::kContain)},
      {(int)(size_t)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str94, static_cast<int>(CSSValueID::kRec2020)},
      {(int)(size_t)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str95, static_cast<int>(CSSValueID::kLoose)},
      {(int)(size_t)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str96, static_cast<int>(CSSValueID::kBengali)},
      {(int)(size_t)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str97, static_cast<int>(CSSValueID::kLavender)},
      {(int)(size_t)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str98, static_cast<int>(CSSValueID::kHsla)},
      {(int)(size_t)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str99, static_cast<int>(CSSValueID::kReverse)},
      {(int)(size_t)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str100, static_cast<int>(CSSValueID::kLinearGradient)},
      {(int)(size_t)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str101, static_cast<int>(CSSValueID::kMoccasin)},
      {(int)(size_t)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str102, static_cast<int>(CSSValueID::kDarkviolet)},
      {(int)(size_t)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str103, static_cast<int>(CSSValueID::kSpace)},
      {(int)(size_t)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str104, static_cast<int>(CSSValueID::kFalse)},
      {(int)(size_t)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str105, static_cast<int>(CSSValueID::kScale3d)},
      {(int)(size_t)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str106, static_cast<int>(CSSValueID::kCentral)},
      {(int)(size_t)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str107, static_cast<int>(CSSValueID::kClear)},
      {(int)(size_t)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str108, static_cast<int>(CSSValueID::kSienna)},
      {(int)(size_t)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str109, static_cast<int>(CSSValueID::kHangul)},
      {(int)(size_t)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str110, static_cast<int>(CSSValueID::kCambodian)},
      {(int)(size_t)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str111, static_cast<int>(CSSValueID::kCoral)},
      {(int)(size_t)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str112, static_cast<int>(CSSValueID::kStatic)},
      {(int)(size_t)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str113, static_cast<int>(CSSValueID::kContents)},
      {(int)(size_t)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str114, static_cast<int>(CSSValueID::kContrast)},
      {(int)(size_t)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str115, static_cast<int>(CSSValueID::kY)},
      {(int)(size_t)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str116, static_cast<int>(CSSValueID::kBaseline)},
      {(int)(size_t)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str117, static_cast<int>(CSSValueID::kUnderline)},
      {(int)(size_t)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str118, static_cast<int>(CSSValueID::kKeepAll)},
      {(int)(size_t)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str119, static_cast<int>(CSSValueID::kRect)},
      {(int)(size_t)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str120, static_cast<int>(CSSValueID::kBottom)},
      {(int)(size_t)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str121, static_cast<int>(CSSValueID::kRepeat)},
      {(int)(size_t)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str122, static_cast<int>(CSSValueID::kBevel)},
      {(int)(size_t)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str123, static_cast<int>(CSSValueID::kRecto)},
      {(int)(size_t)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str124, static_cast<int>(CSSValueID::kMintcream)},
      {(int)(size_t)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str125, static_cast<int>(CSSValueID::kHueRotate)},
      {(int)(size_t)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str126, static_cast<int>(CSSValueID::kListItem)},
      {(int)(size_t)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str127, static_cast<int>(CSSValueID::kRotate3d)},
      {(int)(size_t)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str128, static_cast<int>(CSSValueID::kSize)},
      {(int)(size_t)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str129, static_cast<int>(CSSValueID::kDevanagari)},
      {(int)(size_t)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str130, static_cast<int>(CSSValueID::kDouble)},
      {(int)(size_t)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str131, static_cast<int>(CSSValueID::kAt)},
      {(int)(size_t)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str132, static_cast<int>(CSSValueID::kDarkolivegreen)},
      {(int)(size_t)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str133, static_cast<int>(CSSValueID::kA5)},
      {(int)(size_t)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str134, static_cast<int>(CSSValueID::kA4)},
      {(int)(size_t)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str135, static_cast<int>(CSSValueID::kOver)},
      {(int)(size_t)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str136, static_cast<int>(CSSValueID::kLocal)},
      {(int)(size_t)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str137, static_cast<int>(CSSValueID::kDarkgoldenrod)},
      {(int)(size_t)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str138, static_cast<int>(CSSValueID::kA3)},
      {(int)(size_t)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str139, static_cast<int>(CSSValueID::kAttr)},
      {(int)(size_t)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str140, static_cast<int>(CSSValueID::kFlex)},
      {(int)(size_t)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str141, static_cast<int>(CSSValueID::kClone)},
      {(int)(size_t)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str142, static_cast<int>(CSSValueID::kClamp)},
      {(int)(size_t)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str143, static_cast<int>(CSSValueID::kTomato)},
      {(int)(size_t)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str144, static_cast<int>(CSSValueID::kBlur)},
      {(int)(size_t)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str145, static_cast<int>(CSSValueID::kBlue)},
      {(int)(size_t)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str146, static_cast<int>(CSSValueID::kTrue)},
      {(int)(size_t)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str147, static_cast<int>(CSSValueID::kZ)},
      {(int)(size_t)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str148, static_cast<int>(CSSValueID::kKannada)},
      {(int)(size_t)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str149, static_cast<int>(CSSValueID::kRelative)},
      {(int)(size_t)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str150, static_cast<int>(CSSValueID::kDestinationIn)},
      {(int)(size_t)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str151, static_cast<int>(CSSValueID::kRgb)},
      {(int)(size_t)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str152, static_cast<int>(CSSValueID::kNoRepeat)},
      {(int)(size_t)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str153, static_cast<int>(CSSValueID::kArmenian)},
      {(int)(size_t)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str154, static_cast<int>(CSSValueID::kSeparate)},
      {(int)(size_t)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str155, static_cast<int>(CSSValueID::kTop)},
      {(int)(size_t)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str156, static_cast<int>(CSSValueID::kTriangle)},
      {(int)(size_t)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str157, static_cast<int>(CSSValueID::kStandalone)},
      {(int)(size_t)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str158, static_cast<int>(CSSValueID::kButt)},
      {(int)(size_t)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str159, static_cast<int>(CSSValueID::kLinearrgb)},
      {(int)(size_t)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str160, static_cast<int>(CSSValueID::kBisque)},
      {(int)(size_t)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str161, static_cast<int>(CSSValueID::kSuper)},
      {(int)(size_t)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str162, static_cast<int>(CSSValueID::kOverline)},
      {(int)(size_t)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str163, static_cast<int>(CSSValueID::kZoom)},
      {(int)(size_t)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str164, static_cast<int>(CSSValueID::kAll)},
      {(int)(size_t)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str165, static_cast<int>(CSSValueID::kCollapse)},
      {(int)(size_t)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str166, static_cast<int>(CSSValueID::kCaption)},
      {(int)(size_t)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str167, static_cast<int>(CSSValueID::kDarkmagenta)},
      {(int)(size_t)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str168, static_cast<int>(CSSValueID::kMinContent)},
      {(int)(size_t)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str169, static_cast<int>(CSSValueID::kFitContent)},
      {(int)(size_t)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str170, static_cast<int>(CSSValueID::kButton)},
      {(int)(size_t)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str171, static_cast<int>(CSSValueID::kSpan)},
      {(int)(size_t)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str172, static_cast<int>(CSSValueID::kAlternate)},
      {(int)(size_t)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str173, static_cast<int>(CSSValueID::kScaleZ)},
      {(int)(size_t)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str174, static_cast<int>(CSSValueID::kSourceIn)},
      {(int)(size_t)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str175, static_cast<int>(CSSValueID::kGreen)},
      {(int)(size_t)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str176, static_cast<int>(CSSValueID::kFullscreen)},
      {(int)(size_t)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str177, static_cast<int>(CSSValueID::kBalance)},
      {(int)(size_t)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str178, static_cast<int>(CSSValueID::kOrange)},
      {(int)(size_t)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str179, static_cast<int>(CSSValueID::kSResize)},
      {(int)(size_t)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str180, static_cast<int>(CSSValueID::kRunning)},
      {(int)(size_t)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str181, static_cast<int>(CSSValueID::kSeResize)},
      {(int)(size_t)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str182, static_cast<int>(CSSValueID::kNResize)},
      {(int)(size_t)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str183, static_cast<int>(CSSValueID::kInternalCenter)},
      {(int)(size_t)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str184, static_cast<int>(CSSValueID::kOldlace)},
      {(int)(size_t)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str185, static_cast<int>(CSSValueID::kNeResize)},
      {(int)(size_t)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str186, static_cast<int>(CSSValueID::kTb)},
      {(int)(size_t)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str187, static_cast<int>(CSSValueID::kDestinationOver)},
      {(int)(size_t)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str188, static_cast<int>(CSSValueID::kCounter)},
      {(int)(size_t)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str189, static_cast<int>(CSSValueID::kGeorgian)},
      {(int)(size_t)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str190, static_cast<int>(CSSValueID::kNavy)},
      {(int)(size_t)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str191, static_cast<int>(CSSValueID::kGrab)},
      {(int)(size_t)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str192, static_cast<int>(CSSValueID::kSub)},
      {(int)(size_t)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str193, static_cast<int>(CSSValueID::kKhaki)},
      {(int)(size_t)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str194, static_cast<int>(CSSValueID::kKhmer)},
      {(int)(size_t)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str195, static_cast<int>(CSSValueID::kRotateZ)},
      {(int)(size_t)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str196, static_cast<int>(CSSValueID::kRgba)},
      {(int)(size_t)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str197, static_cast<int>(CSSValueID::kRound)},
      {(int)(size_t)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str198, static_cast<int>(CSSValueID::kTable)},
      {(int)(size_t)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str199, static_cast<int>(CSSValueID::kNsResize)},
      {(int)(size_t)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str200, static_cast<int>(CSSValueID::kFlexEnd)},
      {(int)(size_t)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str201, static_cast<int>(CSSValueID::kZoomIn)},
      {(int)(size_t)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str202, static_cast<int>(CSSValueID::kFlexStart)},
      {(int)(size_t)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str203, static_cast<int>(CSSValueID::kTranslate)},
      {(int)(size_t)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str204, static_cast<int>(CSSValueID::kLrTb)},
      {(int)(size_t)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str205, static_cast<int>(CSSValueID::kClosestSide)},
      {(int)(size_t)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str206, static_cast<int>(CSSValueID::kCursive)},
      {(int)(size_t)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str207, static_cast<int>(CSSValueID::kCounters)},
      {(int)(size_t)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str208, static_cast<int>(CSSValueID::kTibetan)},
      {(int)(size_t)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str209, static_cast<int>(CSSValueID::kDestinationOut)},
      {(int)(size_t)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str210, static_cast<int>(CSSValueID::kColResize)},
      {(int)(size_t)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str211, static_cast<int>(CSSValueID::kOrangered)},
      {(int)(size_t)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str212, static_cast<int>(CSSValueID::kAlias)},
      {(int)(size_t)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str213, static_cast<int>(CSSValueID::kBackground)},
      {(int)(size_t)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str214, static_cast<int>(CSSValueID::kBlueviolet)},
      {(int)(size_t)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str215, static_cast<int>(CSSValueID::kResetSize)},
      {(int)(size_t)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str216, static_cast<int>(CSSValueID::kTranslate3d)},
      {(int)(size_t)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str217, static_cast<int>(CSSValueID::kHangulConsonant)},
      {(int)(size_t)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str218, static_cast<int>(CSSValueID::kSpellOut)},
      {(int)(size_t)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str219, static_cast<int>(CSSValueID::kSmallCaps)},
      {(int)(size_t)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str220, static_cast<int>(CSSValueID::kOutset)},
      {(int)(size_t)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str221, static_cast<int>(CSSValueID::kHotpink)},
      {(int)(size_t)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str222, static_cast<int>(CSSValueID::kFabricated)},
      {(int)(size_t)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str223, static_cast<int>(CSSValueID::kNoChange)},
      {(int)(size_t)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str224, static_cast<int>(CSSValueID::kJis78)},
      {(int)(size_t)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str225, static_cast<int>(CSSValueID::kStretch)},
      {(int)(size_t)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str226, static_cast<int>(CSSValueID::kJis90)},
      {(int)(size_t)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str227, static_cast<int>(CSSValueID::kNoCommonLigatures)},
      {(int)(size_t)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str228, static_cast<int>(CSSValueID::kJis04)},
      {(int)(size_t)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str229, static_cast<int>(CSSValueID::kDarkblue)},
      {(int)(size_t)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str230, static_cast<int>(CSSValueID::kDestinationAtop)},
      {(int)(size_t)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str231, static_cast<int>(CSSValueID::kDigits)},
      {(int)(size_t)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str232, static_cast<int>(CSSValueID::kChocolate)},
      {(int)(size_t)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str233, static_cast<int>(CSSValueID::kJis83)},
      {(int)(size_t)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str234, static_cast<int>(CSSValueID::kRlTb)},
      {(int)(size_t)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str235, static_cast<int>(CSSValueID::kOriya)},
      {(int)(size_t)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str236, static_cast<int>(CSSValueID::kSourceOver)},
      {(int)(size_t)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str237, static_cast<int>(CSSValueID::kCrispedges)},
      {(int)(size_t)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str238, static_cast<int>(CSSValueID::kUseScript)},
      {(int)(size_t)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str239, static_cast<int>(CSSValueID::kSourceOut)},
      {(int)(size_t)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str240, static_cast<int>(CSSValueID::kSpaceAround)},
      {(int)(size_t)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str241, static_cast<int>(CSSValueID::kHand)},
      {(int)(size_t)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str242, static_cast<int>(CSSValueID::kSafe)},
      {(int)(size_t)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str243, static_cast<int>(CSSValueID::kOnly)},
      {(int)(size_t)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str244, static_cast<int>(CSSValueID::kTbRl)},
      {(int)(size_t)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str245, static_cast<int>(CSSValueID::kOpen)},
      {(int)(size_t)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str246, static_cast<int>(CSSValueID::kSteelblue)},
      {(int)(size_t)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str247, static_cast<int>(CSSValueID::kOutside)},
      {(int)(size_t)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str248, static_cast<int>(CSSValueID::kRadio)},
      {(int)(size_t)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str249, static_cast<int>(CSSValueID::kSolid)},
      {(int)(size_t)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str250, static_cast<int>(CSSValueID::kSelfEnd)},
      {(int)(size_t)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str251, static_cast<int>(CSSValueID::kTurquoise)},
      {(int)(size_t)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str252, static_cast<int>(CSSValueID::kCopy)},
      {(int)(size_t)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str253, static_cast<int>(CSSValueID::kSelfStart)},
      {(int)(size_t)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str254, static_cast<int>(CSSValueID::kEase)},
      {(int)(size_t)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str255, static_cast<int>(CSSValueID::kDodgerblue)},
      {(int)(size_t)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str256, static_cast<int>(CSSValueID::kEnd)},
      {(int)(size_t)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str257, static_cast<int>(CSSValueID::kStrict)},
      {(int)(size_t)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str258, static_cast<int>(CSSValueID::kClosestCorner)},
      {(int)(size_t)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str259, static_cast<int>(CSSValueID::kDoubleCircle)},
      {(int)(size_t)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str260, static_cast<int>(CSSValueID::kDarkslateblue)},
      {(int)(size_t)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str261, static_cast<int>(CSSValueID::kDarkorchid)},
      {(int)(size_t)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str262, static_cast<int>(CSSValueID::kRadial)},
      {(int)(size_t)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str263, static_cast<int>(CSSValueID::kBrightness)},
      {(int)(size_t)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str264, static_cast<int>(CSSValueID::kCurrentcolor)},
      {(int)(size_t)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str265, static_cast<int>(CSSValueID::kDistribute)},
      {(int)(size_t)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str266, static_cast<int>(CSSValueID::kZoomOut)},
      {(int)(size_t)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str267, static_cast<int>(CSSValueID::kUpperRoman)},
      {(int)(size_t)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str268, static_cast<int>(CSSValueID::kHidden)},
      {(int)(size_t)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str269, static_cast<int>(CSSValueID::kBlack)},
      {(int)(size_t)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str270, static_cast<int>(CSSValueID::kElement)},
      {(int)(size_t)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str271, static_cast<int>(CSSValueID::kCadetblue)},
      {(int)(size_t)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str272, static_cast<int>(CSSValueID::kEnv)},
      {(int)(size_t)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str273, static_cast<int>(CSSValueID::kBlock)},
      {(int)(size_t)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str274, static_cast<int>(CSSValueID::kRepeatingLinearGradient)},
      {(int)(size_t)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str275, static_cast<int>(CSSValueID::kSeashell)},
      {(int)(size_t)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str276, static_cast<int>(CSSValueID::kLeft)},
      {(int)(size_t)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str277, static_cast<int>(CSSValueID::kUpperArmenian)},
      {(int)(size_t)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str278, static_cast<int>(CSSValueID::kDecimal)},
      {(int)(size_t)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str279, static_cast<int>(CSSValueID::kSlateblue)},
      {(int)(size_t)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str280, static_cast<int>(CSSValueID::kFirstBaseline)},
      {(int)(size_t)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str281, static_cast<int>(CSSValueID::kUpperLatin)},
      {(int)(size_t)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str282, static_cast<int>(CSSValueID::kKatakana)},
      {(int)(size_t)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str283, static_cast<int>(CSSValueID::kUppercase)},
      {(int)(size_t)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str284, static_cast<int>(CSSValueID::kLogical)},
      {(int)(size_t)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str285, static_cast<int>(CSSValueID::kMiddle)},
      {(int)(size_t)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str286, static_cast<int>(CSSValueID::kSepia)},
      {(int)(size_t)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str287, static_cast<int>(CSSValueID::kChartreuse)},
      {(int)(size_t)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str288, static_cast<int>(CSSValueID::kCrosshair)},
      {(int)(size_t)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str289, static_cast<int>(CSSValueID::kDarkseagreen)},
      {(int)(size_t)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str290, static_cast<int>(CSSValueID::kNoDrag)},
      {(int)(size_t)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str291, static_cast<int>(CSSValueID::kAlternateReverse)},
      {(int)(size_t)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str292, static_cast<int>(CSSValueID::kAllScroll)},
      {(int)(size_t)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str293, static_cast<int>(CSSValueID::kBorder)},
      {(int)(size_t)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str294, static_cast<int>(CSSValueID::kMedium)},
      {(int)(size_t)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str295, static_cast<int>(CSSValueID::kStatusBar)},
      {(int)(size_t)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str296, static_cast<int>(CSSValueID::kEaseIn)},
      {(int)(size_t)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str297, static_cast<int>(CSSValueID::kDeeppink)},
      {(int)(size_t)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str298, static_cast<int>(CSSValueID::kAzure)},
      {(int)(size_t)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str299, static_cast<int>(CSSValueID::kHiraganaIroha)},
      {(int)(size_t)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str300, static_cast<int>(CSSValueID::kSimplified)},
      {(int)(size_t)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str301, static_cast<int>(CSSValueID::kBold)},
      {(int)(size_t)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str302, static_cast<int>(CSSValueID::kGrey)},
      {(int)(size_t)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str303, static_cast<int>(CSSValueID::kGray)},
      {(int)(size_t)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str304, static_cast<int>(CSSValueID::kHistoricalLigatures)},
      {(int)(size_t)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str305, static_cast<int>(CSSValueID::kThin)},
      {(int)(size_t)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str306, static_cast<int>(CSSValueID::kInternalMediaControl)},
      {(int)(size_t)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str307, static_cast<int>(CSSValueID::kTranslateZ)},
      {(int)(size_t)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str308, static_cast<int>(CSSValueID::kBolder)},
      {(int)(size_t)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str309, static_cast<int>(CSSValueID::kMax)},
      {(int)(size_t)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str310, static_cast<int>(CSSValueID::kSpringgreen)},
      {(int)(size_t)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str311, static_cast<int>(CSSValueID::kWrap)},
      {(int)(size_t)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str312, static_cast<int>(CSSValueID::kCondensed)},
      {(int)(size_t)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str313, static_cast<int>(CSSValueID::kThistle)},
      {(int)(size_t)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str314, static_cast<int>(CSSValueID::kJumpNone)},
      {(int)(size_t)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str315, static_cast<int>(CSSValueID::kNoPunctuation)},
      {(int)(size_t)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str316, static_cast<int>(CSSValueID::kTableCell)},
      {(int)(size_t)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str317, static_cast<int>(CSSValueID::kRepeatingRadialGradient)},
      {(int)(size_t)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str318, static_cast<int>(CSSValueID::kGrabbing)},
      {(int)(size_t)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str319, static_cast<int>(CSSValueID::kMatrix)},
      {(int)(size_t)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str320, static_cast<int>(CSSValueID::kLiningNums)},
      {(int)(size_t)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str321, static_cast<int>(CSSValueID::kMinmax)},
      {(int)(size_t)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str322, static_cast<int>(CSSValueID::kOrdinal)},
      {(int)(size_t)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str323, static_cast<int>(CSSValueID::kRadialGradient)},
      {(int)(size_t)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str324, static_cast<int>(CSSValueID::kCommonLigatures)},
      {(int)(size_t)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str325, static_cast<int>(CSSValueID::kTransparent)},
      {(int)(size_t)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str326, static_cast<int>(CSSValueID::kLuminance)},
      {(int)(size_t)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str327, static_cast<int>(CSSValueID::kJumpEnd)},
      {(int)(size_t)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str328, static_cast<int>(CSSValueID::kTraditional)},
      {(int)(size_t)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str329, static_cast<int>(CSSValueID::kLinktext)},
      {(int)(size_t)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str330, static_cast<int>(CSSValueID::kRepeatingConicGradient)},
      {(int)(size_t)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str331, static_cast<int>(CSSValueID::kJumpStart)},
      {(int)(size_t)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str332, static_cast<int>(CSSValueID::kMinimalUi)},
      {(int)(size_t)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str333, static_cast<int>(CSSValueID::kMath)},
      {(int)(size_t)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str334, static_cast<int>(CSSValueID::kSilver)},
      {(int)(size_t)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str335, static_cast<int>(CSSValueID::kUnsafe)},
      {(int)(size_t)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str336, static_cast<int>(CSSValueID::kMixed)},
      {(int)(size_t)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str337, static_cast<int>(CSSValueID::kRuby)},
      {(int)(size_t)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str338, static_cast<int>(CSSValueID::kFixed)},
      {(int)(size_t)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str339, static_cast<int>(CSSValueID::kLight)},
      {(int)(size_t)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str340, static_cast<int>(CSSValueID::kBackButton)},
      {(int)(size_t)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str341, static_cast<int>(CSSValueID::kBlink)},
      {(int)(size_t)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str342, static_cast<int>(CSSValueID::kCornsilk)},
      {(int)(size_t)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str343, static_cast<int>(CSSValueID::kWait)},
      {(int)(size_t)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str344, static_cast<int>(CSSValueID::kLighten)},
      {(int)(size_t)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str345, static_cast<int>(CSSValueID::kLighter)},
      {(int)(size_t)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str346, static_cast<int>(CSSValueID::kHorizontal)},
      {(int)(size_t)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str347, static_cast<int>(CSSValueID::kMediumseagreen)},
      {(int)(size_t)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str348, static_cast<int>(CSSValueID::kFieldtext)},
      {(int)(size_t)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str349, static_cast<int>(CSSValueID::kInset)},
      {(int)(size_t)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str350, static_cast<int>(CSSValueID::kNoPreference)},
      {(int)(size_t)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str351, static_cast<int>(CSSValueID::kRight)},
      {(int)(size_t)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str352, static_cast<int>(CSSValueID::kMatrix3d)},
      {(int)(size_t)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str353, static_cast<int>(CSSValueID::kCanvas)},
      {(int)(size_t)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str354, static_cast<int>(CSSValueID::kAliceblue)},
      {(int)(size_t)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str355, static_cast<int>(CSSValueID::kAfter)},
      {(int)(size_t)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str356, static_cast<int>(CSSValueID::kEaseOut)},
      {(int)(size_t)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str357, static_cast<int>(CSSValueID::kLightgreen)},
      {(int)(size_t)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str358, static_cast<int>(CSSValueID::kNoDrop)},
      {(int)(size_t)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str359, static_cast<int>(CSSValueID::kIsolate)},
      {(int)(size_t)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str360, static_cast<int>(CSSValueID::kScaleX)},
      {(int)(size_t)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str361, static_cast<int>(CSSValueID::kSansSerif)},
      {(int)(size_t)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str362, static_cast<int>(CSSValueID::kLiteralPunctuation)},
      {(int)(size_t)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str363, static_cast<int>(CSSValueID::kDefault)},
      {(int)(size_t)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str364, static_cast<int>(CSSValueID::kBreakAll)},
      {(int)(size_t)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str365, static_cast<int>(CSSValueID::kTableColumn)},
      {(int)(size_t)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str366, static_cast<int>(CSSValueID::kSemiCondensed)},
      {(int)(size_t)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str367, static_cast<int>(CSSValueID::kAntialiased)},
      {(int)(size_t)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str368, static_cast<int>(CSSValueID::kDashed)},
      {(int)(size_t)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str369, static_cast<int>(CSSValueID::kInvert)},
      {(int)(size_t)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str370, static_cast<int>(CSSValueID::kEmbed)},
      {(int)(size_t)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str371, static_cast<int>(CSSValueID::kAvoid)},
      {(int)(size_t)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str372, static_cast<int>(CSSValueID::kBoth)},
      {(int)(size_t)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str373, static_cast<int>(CSSValueID::kOnDemand)},
      {(int)(size_t)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str374, static_cast<int>(CSSValueID::kRotateX)},
      {(int)(size_t)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str375, static_cast<int>(CSSValueID::kFirebrick)},
      {(int)(size_t)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str376, static_cast<int>(CSSValueID::kItalic)},
      {(int)(size_t)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str377, static_cast<int>(CSSValueID::kOptional)},
      {(int)(size_t)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str378, static_cast<int>(CSSValueID::kGrid)},
      {(int)(size_t)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str379, static_cast<int>(CSSValueID::kLandscape)},
      {(int)(size_t)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str380, static_cast<int>(CSSValueID::kGrayscale)},
      {(int)(size_t)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str381, static_cast<int>(CSSValueID::kFallback)},
      {(int)(size_t)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str382, static_cast<int>(CSSValueID::kGainsboro)},
      {(int)(size_t)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str383, static_cast<int>(CSSValueID::kInitial)},
      {(int)(size_t)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str384, static_cast<int>(CSSValueID::kEResize)},
      {(int)(size_t)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str385, static_cast<int>(CSSValueID::kAllSmallCaps)},
      {(int)(size_t)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str386, static_cast<int>(CSSValueID::kLightsalmon)},
      {(int)(size_t)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str387, static_cast<int>(CSSValueID::kEvenodd)},
      {(int)(size_t)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str388, static_cast<int>(CSSValueID::kActive)},
      {(int)(size_t)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str389, static_cast<int>(CSSValueID::kGold)},
      {(int)(size_t)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str390, static_cast<int>(CSSValueID::kFarthestCorner)},
      {(int)(size_t)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str391, static_cast<int>(CSSValueID::kText)},
      {(int)(size_t)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str392, static_cast<int>(CSSValueID::kOlive)},
      {(int)(size_t)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str393, static_cast<int>(CSSValueID::kWrapReverse)},
      {(int)(size_t)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str394, static_cast<int>(CSSValueID::kInterlace)},
      {(int)(size_t)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str395, static_cast<int>(CSSValueID::kThai)},
      {(int)(size_t)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str396, static_cast<int>(CSSValueID::kDiagonalFractions)},
      {(int)(size_t)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str397, static_cast<int>(CSSValueID::kThick)},
      {(int)(size_t)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str398, static_cast<int>(CSSValueID::kGeometricprecision)},
      {(int)(size_t)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str399, static_cast<int>(CSSValueID::kLightcoral)},
      {(int)(size_t)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str400, static_cast<int>(CSSValueID::kTextarea)},
      {(int)(size_t)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str401, static_cast<int>(CSSValueID::kAfterEdge)},
      {(int)(size_t)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str402, static_cast<int>(CSSValueID::kSerif)},
      {(int)(size_t)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str403, static_cast<int>(CSSValueID::kMediumspringgreen)},
      {(int)(size_t)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str404, static_cast<int>(CSSValueID::kNoContextual)},
      {(int)(size_t)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str405, static_cast<int>(CSSValueID::kLavenderblush)},
      {(int)(size_t)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str406, static_cast<int>(CSSValueID::kCapitalize)},
      {(int)(size_t)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str407, static_cast<int>(CSSValueID::kSlashedZero)},
      {(int)(size_t)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str408, static_cast<int>(CSSValueID::kBlanchedalmond)},
      {(int)(size_t)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str409, static_cast<int>(CSSValueID::kButtonface)},
      {(int)(size_t)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str410, static_cast<int>(CSSValueID::kAllPetiteCaps)},
      {(int)(size_t)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str411, static_cast<int>(CSSValueID::kRepeatX)},
      {(int)(size_t)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str412, static_cast<int>(CSSValueID::kGoldenrod)},
      {(int)(size_t)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str413, static_cast<int>(CSSValueID::kDifference)},
      {(int)(size_t)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str414, static_cast<int>(CSSValueID::kIcon)},
      {(int)(size_t)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str415, static_cast<int>(CSSValueID::kHardLight)},
      {(int)(size_t)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str416, static_cast<int>(CSSValueID::kMaxContent)},
      {(int)(size_t)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str417, static_cast<int>(CSSValueID::kUltraCondensed)},
      {(int)(size_t)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str418, static_cast<int>(CSSValueID::kMidnightblue)},
      {(int)(size_t)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str419, static_cast<int>(CSSValueID::kManipulation)},
      {(int)(size_t)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str420, static_cast<int>(CSSValueID::kEaseInOut)},
      {(int)(size_t)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str421, static_cast<int>(CSSValueID::kFuchsia)},
      {(int)(size_t)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str422, static_cast<int>(CSSValueID::kContextual)},
      {(int)(size_t)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str423, static_cast<int>(CSSValueID::kSkipActivation)},
      {(int)(size_t)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str424, static_cast<int>(CSSValueID::kWResize)},
      {(int)(size_t)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str425, static_cast<int>(CSSValueID::kSearchfield)},
      {(int)(size_t)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str426, static_cast<int>(CSSValueID::kButtontext)},
      {(int)(size_t)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str427, static_cast<int>(CSSValueID::kUpright)},
      {(int)(size_t)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str428, static_cast<int>(CSSValueID::kSliderVertical)},
      {(int)(size_t)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str429, static_cast<int>(CSSValueID::kWavy)},
      {(int)(size_t)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str430, static_cast<int>(CSSValueID::kOrchid)},
      {(int)(size_t)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str431, static_cast<int>(CSSValueID::kMarginBox)},
      {(int)(size_t)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str432, static_cast<int>(CSSValueID::kX)},
      {(int)(size_t)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str433, static_cast<int>(CSSValueID::kFillBox)},
      {(int)(size_t)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str434, static_cast<int>(CSSValueID::kListbox)},
      {(int)(size_t)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str435, static_cast<int>(CSSValueID::kContextMenu)},
      {(int)(size_t)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str436, static_cast<int>(CSSValueID::kSoftLight)},
      {(int)(size_t)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str437, static_cast<int>(CSSValueID::kHorizontalTb)},
      {(int)(size_t)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str438, static_cast<int>(CSSValueID::kInherit)},
      {(int)(size_t)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str439, static_cast<int>(CSSValueID::kMediumblue)},
      {(int)(size_t)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str440, static_cast<int>(CSSValueID::kKatakanaIroha)},
      {(int)(size_t)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str441, static_cast<int>(CSSValueID::kXor)},
      {(int)(size_t)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str442, static_cast<int>(CSSValueID::kTranslateX)},
      {(int)(size_t)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str443, static_cast<int>(CSSValueID::kWhite)},
      {(int)(size_t)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str444, static_cast<int>(CSSValueID::kMediaVolumeSlider)},
      {(int)(size_t)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str445, static_cast<int>(CSSValueID::kSnow)},
      {(int)(size_t)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str446, static_cast<int>(CSSValueID::kStyle)},
      {(int)(size_t)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str447, static_cast<int>(CSSValueID::kAvoidPage)},
      {(int)(size_t)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str448, static_cast<int>(CSSValueID::kWheat)},
      {(int)(size_t)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str449, static_cast<int>(CSSValueID::kRay)},
      {(int)(size_t)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str450, static_cast<int>(CSSValueID::kDimgrey)},
      {(int)(size_t)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str451, static_cast<int>(CSSValueID::kDimgray)},
      {(int)(size_t)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str452, static_cast<int>(CSSValueID::kDarkgrey)},
      {(int)(size_t)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str453, static_cast<int>(CSSValueID::kDarkgray)},
      {(int)(size_t)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str454, static_cast<int>(CSSValueID::kHighlight)},
      {(int)(size_t)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str455, static_cast<int>(CSSValueID::kLightsteelblue)},
      {(int)(size_t)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str456, static_cast<int>(CSSValueID::kMediumpurple)},
      {(int)(size_t)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str457, static_cast<int>(CSSValueID::kTextTop)},
      {(int)(size_t)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str458, static_cast<int>(CSSValueID::kOff)},
      {(int)(size_t)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str459, static_cast<int>(CSSValueID::kCaptiontext)},
      {(int)(size_t)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str460, static_cast<int>(CSSValueID::kThreedface)},
      {(int)(size_t)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str461, static_cast<int>(CSSValueID::kSmallCaption)},
      {(int)(size_t)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str462, static_cast<int>(CSSValueID::kExact)},
      {(int)(size_t)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str463, static_cast<int>(CSSValueID::kMathematical)},
      {(int)(size_t)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str464, static_cast<int>(CSSValueID::kAlpha)},
      {(int)(size_t)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str465, static_cast<int>(CSSValueID::kInline)},
      {(int)(size_t)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str466, static_cast<int>(CSSValueID::kNonScalingStroke)},
      {(int)(size_t)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str467, static_cast<int>(CSSValueID::kLightblue)},
      {(int)(size_t)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str468, static_cast<int>(CSSValueID::kUltraExpanded)},
      {(int)(size_t)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str469, static_cast<int>(CSSValueID::kAbove)},
      {(int)(size_t)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str470, static_cast<int>(CSSValueID::kBrown)},
      {(int)(size_t)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str471, static_cast<int>(CSSValueID::kScaleY)},
      {(int)(size_t)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str472, static_cast<int>(CSSValueID::kIndigo)},
      {(int)(size_t)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str473, static_cast<int>(CSSValueID::kForwards)},
      {(int)(size_t)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str474, static_cast<int>(CSSValueID::kMediaSlider)},
      {(int)(size_t)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str475, static_cast<int>(CSSValueID::kEllipse)},
      {(int)(size_t)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str476, static_cast<int>(CSSValueID::kAvoidColumn)},
      {(int)(size_t)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str477, static_cast<int>(CSSValueID::kOlivedrab)},
      {(int)(size_t)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str478, static_cast<int>(CSSValueID::kDropShadow)},
      {(int)(size_t)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str479, static_cast<int>(CSSValueID::kInactiveborder)},
      {(int)(size_t)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str480, static_cast<int>(CSSValueID::kDarkcyan)},
      {(int)(size_t)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str481, static_cast<int>(CSSValueID::kFantasy)},
      {(int)(size_t)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str482, static_cast<int>(CSSValueID::kDarkkhaki)},
      {(int)(size_t)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str483, static_cast<int>(CSSValueID::kInside)},
      {(int)(size_t)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str484, static_cast<int>(CSSValueID::kTableColumnGroup)},
      {(int)(size_t)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str485, static_cast<int>(CSSValueID::kSimpChineseFormal)},
      {(int)(size_t)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str486, static_cast<int>(CSSValueID::kSlategrey)},
      {(int)(size_t)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str487, static_cast<int>(CSSValueID::kSlategray)},
      {(int)(size_t)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str488, static_cast<int>(CSSValueID::kRotateY)},
      {(int)(size_t)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str489, static_cast<int>(CSSValueID::kBrowser)},
      {(int)(size_t)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str490, static_cast<int>(CSSValueID::kFlowRoot)},
      {(int)(size_t)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str491, static_cast<int>(CSSValueID::kEllipsis)},
      {(int)(size_t)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str492, static_cast<int>(CSSValueID::kSimpChineseInformal)},
      {(int)(size_t)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str493, static_cast<int>(CSSValueID::kDarkslategrey)},
      {(int)(size_t)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str494, static_cast<int>(CSSValueID::kDarkslategray)},
      {(int)(size_t)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str495, static_cast<int>(CSSValueID::kIndianred)},
      {(int)(size_t)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str496, static_cast<int>(CSSValueID::kJumpBoth)},
      {(int)(size_t)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str497, static_cast<int>(CSSValueID::kVar)},
      {(int)(size_t)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str498, static_cast<int>(CSSValueID::kTextBottom)},
      {(int)(size_t)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str499, static_cast<int>(CSSValueID::kNew)},
      {(int)(size_t)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str500, static_cast<int>(CSSValueID::kMistyrose)},
      {(int)(size_t)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str501, static_cast<int>(CSSValueID::kMenu)},
      {(int)(size_t)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str502, static_cast<int>(CSSValueID::kSwap)},
      {(int)(size_t)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str503, static_cast<int>(CSSValueID::kMyanmar)},
      {(int)(size_t)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str504, static_cast<int>(CSSValueID::kXSmall)},
      {(int)(size_t)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str505, static_cast<int>(CSSValueID::kLineThrough)},
      {(int)(size_t)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str506, static_cast<int>(CSSValueID::kLastBaseline)},
      {(int)(size_t)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str507, static_cast<int>(CSSValueID::kInlineGrid)},
      {(int)(size_t)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str508, static_cast<int>(CSSValueID::kInlineMath)},
      {(int)(size_t)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str509, static_cast<int>(CSSValueID::kMalayalam)},
      {(int)(size_t)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str510, static_cast<int>(CSSValueID::kCyan)},
      {(int)(size_t)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str511, static_cast<int>(CSSValueID::kLegacy)},
      {(int)(size_t)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str512, static_cast<int>(CSSValueID::kViolet)},
      {(int)(size_t)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str513, static_cast<int>(CSSValueID::kRow)},
      {(int)(size_t)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str514, static_cast<int>(CSSValueID::kDynamic)},
      {(int)(size_t)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str515, static_cast<int>(CSSValueID::kXLarge)},
      {(int)(size_t)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str516, static_cast<int>(CSSValueID::kSaturate)},
      {(int)(size_t)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str517, static_cast<int>(CSSValueID::kGujarati)},
      {(int)(size_t)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str518, static_cast<int>(CSSValueID::kLightseagreen)},
      {(int)(size_t)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str519, static_cast<int>(CSSValueID::kInlineEnd)},
      {(int)(size_t)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str520, static_cast<int>(CSSValueID::kManual)},
      {(int)(size_t)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str521, static_cast<int>(CSSValueID::kGraytext)},
      {(int)(size_t)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str522, static_cast<int>(CSSValueID::kSaturation)},
      {(int)(size_t)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str523, static_cast<int>(CSSValueID::kUpperAlpha)},
      {(int)(size_t)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str524, static_cast<int>(CSSValueID::kNoHistoricalLigatures)},
      {(int)(size_t)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str525, static_cast<int>(CSSValueID::kInternalQuirkInherit)},
      {(int)(size_t)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str526, static_cast<int>(CSSValueID::kLightpink)},
      {(int)(size_t)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str527, static_cast<int>(CSSValueID::kMediumvioletred)},
      {(int)(size_t)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str528, static_cast<int>(CSSValueID::kInlineStart)},
      {(int)(size_t)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str529, static_cast<int>(CSSValueID::kBlockAxis)},
      {(int)(size_t)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str530, static_cast<int>(CSSValueID::kMenulist)},
      {(int)(size_t)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str531, static_cast<int>(CSSValueID::kFarthestSide)},
      {(int)(size_t)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str532, static_cast<int>(CSSValueID::kColumn)},
      {(int)(size_t)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str533, static_cast<int>(CSSValueID::kRepeatY)},
      {(int)(size_t)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str534, static_cast<int>(CSSValueID::kOverlay)},
      {(int)(size_t)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str535, static_cast<int>(CSSValueID::kArabicIndic)},
      {(int)(size_t)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str536, static_cast<int>(CSSValueID::kDecimalLeadingZero)},
      {(int)(size_t)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str537, static_cast<int>(CSSValueID::kUrdu)},
      {(int)(size_t)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str538, static_cast<int>(CSSValueID::kGurmukhi)},
      {(int)(size_t)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str539, static_cast<int>(CSSValueID::kSubpixelAntialiased)},
      {(int)(size_t)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str540, static_cast<int>(CSSValueID::kDocument)},
      {(int)(size_t)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str541, static_cast<int>(CSSValueID::kVerso)},
      {(int)(size_t)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str542, static_cast<int>(CSSValueID::kShow)},
      {(int)(size_t)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str543, static_cast<int>(CSSValueID::kButtonhighlight)},
      {(int)(size_t)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str544, static_cast<int>(CSSValueID::kLowerRoman)},
      {(int)(size_t)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str545, static_cast<int>(CSSValueID::kSemiExpanded)},
      {(int)(size_t)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str546, static_cast<int>(CSSValueID::kOpacity)},
      {(int)(size_t)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str547, static_cast<int>(CSSValueID::kEachLine)},
      {(int)(size_t)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str548, static_cast<int>(CSSValueID::kLowerGreek)},
      {(int)(size_t)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str549, static_cast<int>(CSSValueID::kLowerArmenian)},
      {(int)(size_t)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str550, static_cast<int>(CSSValueID::kCanvastext)},
      {(int)(size_t)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str551, static_cast<int>(CSSValueID::kNotAllowed)},
      {(int)(size_t)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str552, static_cast<int>(CSSValueID::kLowerLatin)},
      {(int)(size_t)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str553, static_cast<int>(CSSValueID::kLowercase)},
      {(int)(size_t)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str554, static_cast<int>(CSSValueID::kSpaceEvenly)},
      {(int)(size_t)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str555, static_cast<int>(CSSValueID::kReduce)},
      {(int)(size_t)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str556, static_cast<int>(CSSValueID::kExclusion)},
      {(int)(size_t)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str557, static_cast<int>(CSSValueID::kNowrap)},
      {(int)(size_t)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str558, static_cast<int>(CSSValueID::kConicGradient)},
      {(int)(size_t)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str559, static_cast<int>(CSSValueID::kLawngreen)},
      {(int)(size_t)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str560, static_cast<int>(CSSValueID::kTextfield)},
      {(int)(size_t)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str561, static_cast<int>(CSSValueID::kInternalLightDarkColor)},
      {(int)(size_t)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str562, static_cast<int>(CSSValueID::kPre)},
      {(int)(size_t)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str563, static_cast<int>(CSSValueID::kSkew)},
      {(int)(size_t)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str564, static_cast<int>(CSSValueID::kTranslateY)},
      {(int)(size_t)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str565, static_cast<int>(CSSValueID::kP3)},
      {(int)(size_t)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str566, static_cast<int>(CSSValueID::kPink)},
      {(int)(size_t)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str567, static_cast<int>(CSSValueID::kPage)},
      {(int)(size_t)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str568, static_cast<int>(CSSValueID::kSliderthumbVertical)},
      {(int)(size_t)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str569, static_cast<int>(CSSValueID::kTableCaption)},
      {(int)(size_t)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str570, static_cast<int>(CSSValueID::kSticky)},
      {(int)(size_t)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str571, static_cast<int>(CSSValueID::kVertical)},
      {(int)(size_t)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str572, static_cast<int>(CSSValueID::kStackedFractions)},
      {(int)(size_t)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str573, static_cast<int>(CSSValueID::kMaroon)},
      {(int)(size_t)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str574, static_cast<int>(CSSValueID::kInnerSpinButton)},
      {(int)(size_t)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str575, static_cast<int>(CSSValueID::kScaleDown)},
      {(int)(size_t)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str576, static_cast<int>(CSSValueID::kIsolateOverride)},
      {(int)(size_t)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str577, static_cast<int>(CSSValueID::kExpanded)},
      {(int)(size_t)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str578, static_cast<int>(CSSValueID::kBidiOverride)},
      {(int)(size_t)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str579, static_cast<int>(CSSValueID::kHebrew)},
      {(int)(size_t)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str580, static_cast<int>(CSSValueID::kYellow)},
      {(int)(size_t)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str581, static_cast<int>(CSSValueID::kInlineTable)},
      {(int)(size_t)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str582, static_cast<int>(CSSValueID::kActivetext)},
      {(int)(size_t)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str583, static_cast<int>(CSSValueID::kMultiply)},
      {(int)(size_t)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str584, static_cast<int>(CSSValueID::kBreakSpaces)},
      {(int)(size_t)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str585, static_cast<int>(CSSValueID::kInvisible)},
      {(int)(size_t)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str586, static_cast<int>(CSSValueID::kAlphabetic)},
      {(int)(size_t)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str587, static_cast<int>(CSSValueID::kWhitesmoke)},
      {(int)(size_t)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str588, static_cast<int>(CSSValueID::kPalegreen)},
      {(int)(size_t)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str589, static_cast<int>(CSSValueID::kBackwards)},
      {(int)(size_t)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str590, static_cast<int>(CSSValueID::kTelugu)},
      {(int)(size_t)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str591, static_cast<int>(CSSValueID::kKoreanHanjaFormal)},
      {(int)(size_t)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str592, static_cast<int>(CSSValueID::kContentBox)},
      {(int)(size_t)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str593, static_cast<int>(CSSValueID::kColor)},
      {(int)(size_t)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str594, static_cast<int>(CSSValueID::kPreLine)},
      {(int)(size_t)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str595, static_cast<int>(CSSValueID::kYellowgreen)},
      {(int)(size_t)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str596, static_cast<int>(CSSValueID::kProgress)},
      {(int)(size_t)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str597, static_cast<int>(CSSValueID::kVerticalRl)},
      {(int)(size_t)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str598, static_cast<int>(CSSValueID::kKoreanHanjaInformal)},
      {(int)(size_t)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str599, static_cast<int>(CSSValueID::kTextAfterEdge)},
      {(int)(size_t)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str600, static_cast<int>(CSSValueID::kMandatory)},
      {(int)(size_t)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str601, static_cast<int>(CSSValueID::kPortrait)},
      {(int)(size_t)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str602, static_cast<int>(CSSValueID::kThreedhighlight)},
      {(int)(size_t)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str603, static_cast<int>(CSSValueID::kMessageBox)},
      {(int)(size_t)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str604, static_cast<int>(CSSValueID::kSwResize)},
      {(int)(size_t)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str605, static_cast<int>(CSSValueID::kBorderBox)},
      {(int)(size_t)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str606, static_cast<int>(CSSValueID::kNwResize)},
      {(int)(size_t)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str607, static_cast<int>(CSSValueID::kRowResize)},
      {(int)(size_t)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str608, static_cast<int>(CSSValueID::kInfinite)},
      {(int)(size_t)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str609, static_cast<int>(CSSValueID::kPersian)},
      {(int)(size_t)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str610, static_cast<int>(CSSValueID::kBoundingBox)},
      {(int)(size_t)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str611, static_cast<int>(CSSValueID::kVerticalLr)},
      {(int)(size_t)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str612, static_cast<int>(CSSValueID::kMediumslateblue)},
      {(int)(size_t)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str613, static_cast<int>(CSSValueID::kPlum)},
      {(int)(size_t)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str614, static_cast<int>(CSSValueID::kPaint)},
      {(int)(size_t)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str615, static_cast<int>(CSSValueID::kScroll)},
      {(int)(size_t)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str616, static_cast<int>(CSSValueID::kKoreanHangulFormal)},
      {(int)(size_t)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str617, static_cast<int>(CSSValueID::kPurple)},
      {(int)(size_t)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str618, static_cast<int>(CSSValueID::kPointer)},
      {(int)(size_t)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str619, static_cast<int>(CSSValueID::kRoyalblue)},
      {(int)(size_t)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str620, static_cast<int>(CSSValueID::kActiveborder)},
      {(int)(size_t)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str621, static_cast<int>(CSSValueID::kLuminosity)},
      {(int)(size_t)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str622, static_cast<int>(CSSValueID::kSkyblue)},
      {(int)(size_t)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str623, static_cast<int>(CSSValueID::kPainted)},
      {(int)(size_t)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str624, static_cast<int>(CSSValueID::kOldstyleNums)},
      {(int)(size_t)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str625, static_cast<int>(CSSValueID::kSquare)},
      {(int)(size_t)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str626, static_cast<int>(CSSValueID::kReadOnly)},
      {(int)(size_t)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str627, static_cast<int>(CSSValueID::kCheckbox)},
      {(int)(size_t)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str628, static_cast<int>(CSSValueID::kTableRow)},
      {(int)(size_t)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str629, static_cast<int>(CSSValueID::kPalegoldenrod)},
      {(int)(size_t)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str630, static_cast<int>(CSSValueID::kOptimizespeed)},
      {(int)(size_t)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str631, static_cast<int>(CSSValueID::kDiscretionaryLigatures)},
      {(int)(size_t)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str632, static_cast<int>(CSSValueID::kPalevioletred)},
      {(int)(size_t)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str633, static_cast<int>(CSSValueID::kTableHeaderGroup)},
      {(int)(size_t)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str634, static_cast<int>(CSSValueID::kPaused)},
      {(int)(size_t)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str635, static_cast<int>(CSSValueID::kMenulistButton)},
      {(int)(size_t)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str636, static_cast<int>(CSSValueID::kLightgrey)},
      {(int)(size_t)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str637, static_cast<int>(CSSValueID::kLightgray)},
      {(int)(size_t)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str638, static_cast<int>(CSSValueID::kXxLarge)},
      {(int)(size_t)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str639, static_cast<int>(CSSValueID::kMonospace)},
      {(int)(size_t)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str640, static_cast<int>(CSSValueID::kPanUp)},
      {(int)(size_t)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str641, static_cast<int>(CSSValueID::kPreserve3d)},
      {(int)(size_t)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str642, static_cast<int>(CSSValueID::kMediaVolumeSliderthumb)},
      {(int)(size_t)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str643, static_cast<int>(CSSValueID::kTradChineseFormal)},
      {(int)(size_t)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str644, static_cast<int>(CSSValueID::kMediumorchid)},
      {(int)(size_t)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str645, static_cast<int>(CSSValueID::kSmooth)},
      {(int)(size_t)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str646, static_cast<int>(CSSValueID::kSourceAtop)},
      {(int)(size_t)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str647, static_cast<int>(CSSValueID::kPolygon)},
      {(int)(size_t)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str648, static_cast<int>(CSSValueID::kTradChineseInformal)},
      {(int)(size_t)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str649, static_cast<int>(CSSValueID::kEconomy)},
      {(int)(size_t)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str650, static_cast<int>(CSSValueID::kIvory)},
      {(int)(size_t)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str651, static_cast<int>(CSSValueID::kNoCloseQuote)},
      {(int)(size_t)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str652, static_cast<int>(CSSValueID::kAuto)},
      {(int)(size_t)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str653, static_cast<int>(CSSValueID::kSearchfieldCancelButton)},
      {(int)(size_t)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str654, static_cast<int>(CSSValueID::kTitlingCaps)},
      {(int)(size_t)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str655, static_cast<int>(CSSValueID::kActivecaption)},
      {(int)(size_t)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str656, static_cast<int>(CSSValueID::kColorStop)},
      {(int)(size_t)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str657, static_cast<int>(CSSValueID::kReadWrite)},
      {(int)(size_t)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str658, static_cast<int>(CSSValueID::kPanRight)},
      {(int)(size_t)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str659, static_cast<int>(CSSValueID::kSliderthumbHorizontal)},
      {(int)(size_t)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str660, static_cast<int>(CSSValueID::kLightcyan)},
      {(int)(size_t)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str661, static_cast<int>(CSSValueID::kStroke)},
      {(int)(size_t)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str662, static_cast<int>(CSSValueID::kFullWidth)},
      {(int)(size_t)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str663, static_cast<int>(CSSValueID::kGroove)},
      {(int)(size_t)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str664, static_cast<int>(CSSValueID::kRosybrown)},
      {(int)(size_t)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str665, static_cast<int>(CSSValueID::kAccumulate)},
      {(int)(size_t)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str666, static_cast<int>(CSSValueID::kWebkitLeft)},
      {(int)(size_t)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str667, static_cast<int>(CSSValueID::kInlineAxis)},
      {(int)(size_t)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str668, static_cast<int>(CSSValueID::kTableFooterGroup)},
      {(int)(size_t)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str669, static_cast<int>(CSSValueID::kMenutext)},
      {(int)(size_t)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str670, static_cast<int>(CSSValueID::kInternalExtendToZoom)},
      {(int)(size_t)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str671, static_cast<int>(CSSValueID::kScrollbar)},
      {(int)(size_t)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str672, static_cast<int>(CSSValueID::kMediaSliderthumb)},
      {(int)(size_t)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str673, static_cast<int>(CSSValueID::kAqua)},
      {(int)(size_t)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str674, static_cast<int>(CSSValueID::kNeswResize)},
      {(int)(size_t)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str675, static_cast<int>(CSSValueID::kTabularNums)},
      {(int)(size_t)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str676, static_cast<int>(CSSValueID::kRowReverse)},
      {(int)(size_t)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str677, static_cast<int>(CSSValueID::kSliderHorizontal)},
      {(int)(size_t)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str678, static_cast<int>(CSSValueID::kExtraCondensed)},
      {(int)(size_t)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str679, static_cast<int>(CSSValueID::kWebkitCenter)},
      {(int)(size_t)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str680, static_cast<int>(CSSValueID::kVisible)},
      {(int)(size_t)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str681, static_cast<int>(CSSValueID::kXxSmall)},
      {(int)(size_t)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str682, static_cast<int>(CSSValueID::kAquamarine)},
      {(int)(size_t)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str683, static_cast<int>(CSSValueID::kBreakWord)},
      {(int)(size_t)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str684, static_cast<int>(CSSValueID::kInlineBlock)},
      {(int)(size_t)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str685, static_cast<int>(CSSValueID::kCubicBezier)},
      {(int)(size_t)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str686, static_cast<int>(CSSValueID::kPadding)},
      {(int)(size_t)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str687, static_cast<int>(CSSValueID::kWebkitControl)},
      {(int)(size_t)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str688, static_cast<int>(CSSValueID::kPanLeft)},
      {(int)(size_t)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str689, static_cast<int>(CSSValueID::kColorBurn)},
      {(int)(size_t)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str690, static_cast<int>(CSSValueID::kWebkitCalc)},
      {(int)(size_t)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str691, static_cast<int>(CSSValueID::kBefore)},
      {(int)(size_t)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str692, static_cast<int>(CSSValueID::kColumnReverse)},
      {(int)(size_t)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str693, static_cast<int>(CSSValueID::kEwResize)},
      {(int)(size_t)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str694, static_cast<int>(CSSValueID::kWebkitMinContent)},
      {(int)(size_t)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str695, static_cast<int>(CSSValueID::kInterWord)},
      {(int)(size_t)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str696, static_cast<int>(CSSValueID::kWebkitRadialGradient)},
      {(int)(size_t)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str697, static_cast<int>(CSSValueID::kProportionalNums)},
      {(int)(size_t)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str698, static_cast<int>(CSSValueID::kWebkitLinearGradient)},
      {(int)(size_t)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str699, static_cast<int>(CSSValueID::kSkewX)},
      {(int)(size_t)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str700, static_cast<int>(CSSValueID::kWebkitIsolate)},
      {(int)(size_t)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str701, static_cast<int>(CSSValueID::kSaddlebrown)},
      {(int)(size_t)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str702, static_cast<int>(CSSValueID::kWebkitAuto)},
      {(int)(size_t)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str703, static_cast<int>(CSSValueID::kNwseResize)},
      {(int)(size_t)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str704, static_cast<int>(CSSValueID::kPinchZoom)},
      {(int)(size_t)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str705, static_cast<int>(CSSValueID::kWebkitMiniControl)},
      {(int)(size_t)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str706, static_cast<int>(CSSValueID::kPanX)},
      {(int)(size_t)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str707, static_cast<int>(CSSValueID::kLowerAlpha)},
      {(int)(size_t)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str708, static_cast<int>(CSSValueID::kProgressive)},
      {(int)(size_t)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str709, static_cast<int>(CSSValueID::kCjkIdeographic)},
      {(int)(size_t)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str710, static_cast<int>(CSSValueID::kGreenyellow)},
      {(int)(size_t)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str711, static_cast<int>(CSSValueID::kPath)},
      {(int)(size_t)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str712, static_cast<int>(CSSValueID::kProgressBar)},
      {(int)(size_t)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str713, static_cast<int>(CSSValueID::kExtraExpanded)},
      {(int)(size_t)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str714, static_cast<int>(CSSValueID::kButtonshadow)},
      {(int)(size_t)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str715, static_cast<int>(CSSValueID::kFloralwhite)},
      {(int)(size_t)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str716, static_cast<int>(CSSValueID::kAbsolute)},
      {(int)(size_t)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str717, static_cast<int>(CSSValueID::kWebkitGradient)},
      {(int)(size_t)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str718, static_cast<int>(CSSValueID::kJustify)},
      {(int)(size_t)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str719, static_cast<int>(CSSValueID::kOpenQuote)},
      {(int)(size_t)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str720, static_cast<int>(CSSValueID::kInternalVariableValue)},
      {(int)(size_t)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str721, static_cast<int>(CSSValueID::kInternalActiveListBoxSelection)},
      {(int)(size_t)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str722, static_cast<int>(CSSValueID::kLightslategrey)},
      {(int)(size_t)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str723, static_cast<int>(CSSValueID::kLightslategray)},
      {(int)(size_t)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str724, static_cast<int>(CSSValueID::kPixelated)},
      {(int)(size_t)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str725, static_cast<int>(CSSValueID::kColorDodge)},
      {(int)(size_t)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str726, static_cast<int>(CSSValueID::kPetiteCaps)},
      {(int)(size_t)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str727, static_cast<int>(CSSValueID::kWebkitImageSet)},
      {(int)(size_t)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str728, static_cast<int>(CSSValueID::kHighlighttext)},
      {(int)(size_t)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str729, static_cast<int>(CSSValueID::kVisiblepainted)},
      {(int)(size_t)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str730, static_cast<int>(CSSValueID::kSpaceBetween)},
      {(int)(size_t)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str731, static_cast<int>(CSSValueID::kMediumaquamarine)},
      {(int)(size_t)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str732, static_cast<int>(CSSValueID::kWebkitLink)},
      {(int)(size_t)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str733, static_cast<int>(CSSValueID::kCornflowerblue)},
      {(int)(size_t)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str734, static_cast<int>(CSSValueID::kRebeccapurple)},
      {(int)(size_t)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str735, static_cast<int>(CSSValueID::kTextBeforeEdge)},
      {(int)(size_t)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str736, static_cast<int>(CSSValueID::kWebkitZoomIn)},
      {(int)(size_t)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str737, static_cast<int>(CSSValueID::kSquareButton)},
      {(int)(size_t)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str738, static_cast<int>(CSSValueID::kAppworkspace)},
      {(int)(size_t)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str739, static_cast<int>(CSSValueID::kWebkitGrab)},
      {(int)(size_t)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str740, static_cast<int>(CSSValueID::kThreedshadow)},
      {(int)(size_t)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str741, static_cast<int>(CSSValueID::kHoneydew)},
      {(int)(size_t)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str742, static_cast<int>(CSSValueID::kWebkitIsolateOverride)},
      {(int)(size_t)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str743, static_cast<int>(CSSValueID::kMediumturquoise)},
      {(int)(size_t)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str744, static_cast<int>(CSSValueID::kWindow)},
      {(int)(size_t)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str745, static_cast<int>(CSSValueID::kSideways)},
      {(int)(size_t)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str746, static_cast<int>(CSSValueID::kGhostwhite)},
      {(int)(size_t)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str747, static_cast<int>(CSSValueID::kCloseQuote)},
      {(int)(size_t)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str748, static_cast<int>(CSSValueID::kAutoFit)},
      {(int)(size_t)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str749, static_cast<int>(CSSValueID::kInactivecaption)},
      {(int)(size_t)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str750, static_cast<int>(CSSValueID::kWebkitBaselineMiddle)},
      {(int)(size_t)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str751, static_cast<int>(CSSValueID::kDeepskyblue)},
      {(int)(size_t)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str752, static_cast<int>(CSSValueID::kXxxLarge)},
      {(int)(size_t)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str753, static_cast<int>(CSSValueID::kPerspective)},
      {(int)(size_t)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str754, static_cast<int>(CSSValueID::kTableRowGroup)},
      {(int)(size_t)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str755, static_cast<int>(CSSValueID::kOblique)},
      {(int)(size_t)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str756, static_cast<int>(CSSValueID::kWebkitZoomOut)},
      {(int)(size_t)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str757, static_cast<int>(CSSValueID::kWebkitSmallControl)},
      {(int)(size_t)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str758, static_cast<int>(CSSValueID::kAutoFill)},
      {(int)(size_t)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str759, static_cast<int>(CSSValueID::kSkewY)},
      {(int)(size_t)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str760, static_cast<int>(CSSValueID::kSkipViewportActivation)},
      {(int)(size_t)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str761, static_cast<int>(CSSValueID::kLightyellow)},
      {(int)(size_t)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str762, static_cast<int>(CSSValueID::kWebkitRight)},
      {(int)(size_t)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str763, static_cast<int>(CSSValueID::kDarkturquoise)},
      {(int)(size_t)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str764, static_cast<int>(CSSValueID::kVisiblefill)},
      {(int)(size_t)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str765, static_cast<int>(CSSValueID::kVisitedtext)},
      {(int)(size_t)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str766, static_cast<int>(CSSValueID::kPanY)},
      {(int)(size_t)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str767, static_cast<int>(CSSValueID::kVisual)},
      {(int)(size_t)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str768, static_cast<int>(CSSValueID::kPlaintext)},
      {(int)(size_t)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str769, static_cast<int>(CSSValueID::kEthiopicHalehame)},
      {(int)(size_t)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str770, static_cast<int>(CSSValueID::kCjkEarthlyBranch)},
      {(int)(size_t)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str771, static_cast<int>(CSSValueID::kVerticalRight)},
      {(int)(size_t)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str772, static_cast<int>(CSSValueID::kLightskyblue)},
      {(int)(size_t)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str773, static_cast<int>(CSSValueID::kBurlywood)},
      {(int)(size_t)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str774, static_cast<int>(CSSValueID::kWebkitPictograph)},
      {(int)(size_t)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str775, static_cast<int>(CSSValueID::kVisiblestroke)},
      {(int)(size_t)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str776, static_cast<int>(CSSValueID::kInlineLayout)},
      {(int)(size_t)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str777, static_cast<int>(CSSValueID::kWebkitGrabbing)},
      {(int)(size_t)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str778, static_cast<int>(CSSValueID::kWebkitActivelink)},
      {(int)(size_t)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str779, static_cast<int>(CSSValueID::kLayout)},
      {(int)(size_t)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str780, static_cast<int>(CSSValueID::kThreeddarkshadow)},
      {(int)(size_t)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str781, static_cast<int>(CSSValueID::kInternalInactiveListBoxSelection)},
      {(int)(size_t)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str782, static_cast<int>(CSSValueID::kScrollPosition)},
      {(int)(size_t)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str783, static_cast<int>(CSSValueID::kEthiopicHalehameAm)},
      {(int)(size_t)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str784, static_cast<int>(CSSValueID::kBeforeEdge)},
      {(int)(size_t)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str785, static_cast<int>(CSSValueID::kWebkitOptimizeContrast)},
      {(int)(size_t)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str786, static_cast<int>(CSSValueID::kWebkitNowrap)},
      {(int)(size_t)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str787, static_cast<int>(CSSValueID::kWebkitFitContent)},
      {(int)(size_t)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str788, static_cast<int>(CSSValueID::kPeru)},
      {(int)(size_t)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str789, static_cast<int>(CSSValueID::kVerticalText)},
      {(int)(size_t)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str790, static_cast<int>(CSSValueID::kWebkitMatchParent)},
      {(int)(size_t)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str791, static_cast<int>(CSSValueID::kAnywhere)},
      {(int)(size_t)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str792, static_cast<int>(CSSValueID::kAlways)},
      {(int)(size_t)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str793, static_cast<int>(CSSValueID::kPlusLighter)},
      {(int)(size_t)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str794, static_cast<int>(CSSValueID::kThreedlightshadow)},
      {(int)(size_t)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str795, static_cast<int>(CSSValueID::kEthiopicHalehameTiEt)},
      {(int)(size_t)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str796, static_cast<int>(CSSValueID::kEthiopicHalehameTiEr)},
      {(int)(size_t)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str797, static_cast<int>(CSSValueID::kOptimizelegibility)},
      {(int)(size_t)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str798, static_cast<int>(CSSValueID::kProximity)},
      {(int)(size_t)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str799, static_cast<int>(CSSValueID::kIdeographic)},
      {(int)(size_t)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str800, static_cast<int>(CSSValueID::kPanDown)},
      {(int)(size_t)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str801, static_cast<int>(CSSValueID::kInlineFlex)},
      {(int)(size_t)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str802, static_cast<int>(CSSValueID::kWebkitCrossFade)},
      {(int)(size_t)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str803, static_cast<int>(CSSValueID::kPushButton)},
      {(int)(size_t)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str804, static_cast<int>(CSSValueID::kCjkHeavenlyStem)},
      {(int)(size_t)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str805, static_cast<int>(CSSValueID::kBelow)},
      {(int)(size_t)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str806, static_cast<int>(CSSValueID::kNoDiscretionaryLigatures)},
      {(int)(size_t)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str807, static_cast<int>(CSSValueID::kWebkitInlineBox)},
      {(int)(size_t)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str808, static_cast<int>(CSSValueID::kWebkitFillAvailable)},
      {(int)(size_t)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str809, static_cast<int>(CSSValueID::kWebkitFocusRingColor)},
      {(int)(size_t)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str810, static_cast<int>(CSSValueID::kPreWrap)},
      {(int)(size_t)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str811, static_cast<int>(CSSValueID::kInternalActiveListBoxSelectionText)},
      {(int)(size_t)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str812, static_cast<int>(CSSValueID::kNavajowhite)},
      {(int)(size_t)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str813, static_cast<int>(CSSValueID::kWebkitPlaintext)},
      {(int)(size_t)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str814, static_cast<int>(CSSValueID::kWindowtext)},
      {(int)(size_t)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str815, static_cast<int>(CSSValueID::kSandybrown)},
      {(int)(size_t)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str816, static_cast<int>(CSSValueID::kLemonchiffon)},
      {(int)(size_t)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str817, static_cast<int>(CSSValueID::kPeachpuff)},
      {(int)(size_t)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str818, static_cast<int>(CSSValueID::kInactivecaptiontext)},
      {(int)(size_t)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str819, static_cast<int>(CSSValueID::kWebkitMaxContent)},
      {(int)(size_t)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str820, static_cast<int>(CSSValueID::kWebkitInlineFlex)},
      {(int)(size_t)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str821, static_cast<int>(CSSValueID::kWebkitBox)},
      {(int)(size_t)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str822, static_cast<int>(CSSValueID::kWebkitBody)},
      {(int)(size_t)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str823, static_cast<int>(CSSValueID::kViewBox)},
      {(int)(size_t)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str824, static_cast<int>(CSSValueID::kAfterWhiteSpace)},
      {(int)(size_t)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str825, static_cast<int>(CSSValueID::kInfotext)},
      {(int)(size_t)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str826, static_cast<int>(CSSValueID::kLightgoldenrodyellow)},
      {(int)(size_t)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str827, static_cast<int>(CSSValueID::kWindowframe)},
      {(int)(size_t)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str828, static_cast<int>(CSSValueID::kInternalInactiveListBoxSelectionText)},
      {(int)(size_t)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str829, static_cast<int>(CSSValueID::kPaddingBox)},
      {(int)(size_t)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str830, static_cast<int>(CSSValueID::kWebkitFlex)},
      {(int)(size_t)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str831, static_cast<int>(CSSValueID::kSidewaysRight)},
      {(int)(size_t)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str832, static_cast<int>(CSSValueID::kProportionalWidth)},
      {(int)(size_t)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str833, static_cast<int>(CSSValueID::kNoOpenQuote)},
      {(int)(size_t)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str834, static_cast<int>(CSSValueID::kPowderblue)},
      {(int)(size_t)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str835, static_cast<int>(CSSValueID::kAutoFlow)},
      {(int)(size_t)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str836, static_cast<int>(CSSValueID::kWebkitRepeatingLinearGradient)},
      {(int)(size_t)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str837, static_cast<int>(CSSValueID::kWebkitRepeatingRadialGradient)},
      {(int)(size_t)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str838, static_cast<int>(CSSValueID::kInfobackground)},
      {(int)(size_t)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str839, static_cast<int>(CSSValueID::kOptimizequality)},
      {(int)(size_t)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str840, static_cast<int>(CSSValueID::kAntiquewhite)},
      {(int)(size_t)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str841, static_cast<int>(CSSValueID::kReadWritePlaintextOnly)},
      {(int)(size_t)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str842, static_cast<int>(CSSValueID::kPaleturquoise)},
      {(int)(size_t)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str843, static_cast<int>(CSSValueID::kWebkitXxxLarge)},
      {(int)(size_t)&((struct CSSValueStringPool_t *)0)->CSSValueStringPool_str844, static_cast<int>(CSSValueID::kPapayawhip)}
    };

  static const short lookup[] =
    {
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,   0,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,   1,  -1,  -1,   2,  -1,
       -1,  -1,   3,  -1,  -1,  -1,  -1,   4,   5,  -1,
        6,  -1,   7,  -1,  -1,  -1,   8,   9,  -1,  10,
       -1,  11,  -1,  12,  13,  14,  15,  -1,  -1,  -1,
       -1,  -1,  16,  -1,  -1,  17,  -1,  18,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  19,  -1,  20,  21,  22,
       -1,  -1,  23,  24,  -1,  25,  -1,  -1,  26,  -1,
       -1,  -1,  -1,  27,  -1,  28,  29,  -1,  30,  31,
       32,  33,  -1,  -1,  -1,  -1,  34,  -1,  -1,  -1,
       35,  36,  37,  38,  -1,  -1,  39,  -1,  -1,  40,
       41,  42,  -1,  43,  -1,  44,  -1,  -1,  -1,  -1,
       -1,  45,  46,  -1,  47,  -1,  -1,  -1,  -1,  -1,
       48,  49,  -1,  50,  51,  52,  -1,  -1,  -1,  53,
       -1,  54,  55,  -1,  -1,  -1,  -1,  -1,  56,  -1,
       -1,  -1,  -1,  57,  58,  59,  -1,  60,  61,  -1,
       -1,  -1,  -1,  62,  -1,  63,  -1,  -1,  64,  -1,
       -1,  -1,  65,  -1,  66,  -1,  -1,  67,  -1,  68,
       69,  -1,  -1,  70,  -1,  -1,  -1,  -1,  -1,  71,
       -1,  -1,  72,  73,  -1,  74,  -1,  -1,  75,  -1,
       -1,  -1,  76,  77,  -1,  78,  -1,  79,  -1,  80,
       81,  82,  -1,  83,  -1,  -1,  84,  85,  86,  87,
       -1,  88,  89,  -1,  -1,  90,  91,  -1,  -1,  92,
       -1,  -1,  93,  -1,  94,  95,  -1,  96,  -1,  -1,
       97,  -1,  -1,  98,  -1,  -1,  -1,  -1,  99,  -1,
      100, 101,  -1,  -1,  -1,  -1, 102,  -1,  -1, 103,
       -1,  -1,  -1, 104,  -1, 105,  -1,  -1, 106,  -1,
       -1, 107, 108,  -1,  -1, 109, 110,  -1,  -1,  -1,
      111, 112, 113,  -1, 114,  -1,  -1,  -1,  -1,  -1,
      115, 116,  -1,  -1, 117, 118,  -1,  -1, 119,  -1,
      120,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1, 121, 122,  -1, 123, 124,
       -1, 125,  -1, 126,  -1,  -1, 127,  -1, 128,  -1,
      129,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1, 130,
       -1,  -1,  -1,  -1, 131, 132,  -1, 133, 134,  -1,
      135,  -1, 136,  -1,  -1,  -1,  -1,  -1, 137,  -1,
       -1,  -1, 138,  -1,  -1,  -1, 139,  -1,  -1,  -1,
       -1,  -1, 140, 141, 142, 143,  -1, 144,  -1,  -1,
      145,  -1,  -1,  -1, 146, 147,  -1,  -1,  -1, 148,
      149, 150,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
      151,  -1,  -1,  -1,  -1,  -1,  -1,  -1, 152,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1, 153, 154, 155,  -1,  -1,  -1, 156,  -1,  -1,
      157,  -1,  -1,  -1, 158,  -1, 159,  -1,  -1, 160,
      161,  -1, 162,  -1,  -1, 163,  -1, 164,  -1, 165,
       -1,  -1,  -1,  -1,  -1, 166,  -1, 167,  -1, 168,
       -1,  -1, 169,  -1,  -1, 170,  -1,  -1,  -1,  -1,
       -1, 171, 172,  -1,  -1, 173,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1, 174, 175,  -1,  -1,  -1, 176,
       -1, 177,  -1,  -1,  -1,  -1,  -1, 178,  -1,  -1,
       -1,  -1, 179,  -1,  -1, 180,  -1,  -1,  -1, 181,
       -1, 182,  -1,  -1,  -1, 183, 184,  -1, 185,  -1,
       -1,  -1, 186,  -1, 187,  -1,  -1,  -1, 188, 189,
       -1, 190, 191, 192, 193, 194, 195,  -1,  -1,  -1,
      196,  -1,  -1,  -1,  -1,  -1,  -1, 197,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1, 198,  -1,  -1,  -1,
      199,  -1,  -1, 200,  -1,  -1,  -1, 201,  -1, 202,
       -1, 203, 204,  -1,  -1,  -1,  -1,  -1, 205, 206,
       -1, 207,  -1, 208,  -1,  -1,  -1, 209,  -1, 210,
       -1, 211,  -1,  -1,  -1,  -1, 212,  -1,  -1,  -1,
       -1,  -1,  -1,  -1, 213,  -1, 214, 215,  -1,  -1,
       -1, 216,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
      217,  -1, 218, 219,  -1, 220,  -1, 221, 222,  -1,
       -1,  -1,  -1,  -1, 223, 224, 225, 226, 227, 228,
      229,  -1,  -1,  -1, 230,  -1,  -1,  -1,  -1, 231,
      232,  -1,  -1, 233,  -1, 234, 235,  -1, 236, 237,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1, 238,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
      239, 240,  -1, 241, 242,  -1,  -1, 243, 244,  -1,
       -1,  -1,  -1, 245, 246,  -1,  -1,  -1, 247,  -1,
       -1,  -1,  -1, 248,  -1,  -1, 249, 250,  -1, 251,
      252,  -1,  -1, 253,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1, 254,  -1, 255, 256,
       -1,  -1, 257,  -1,  -1,  -1,  -1, 258,  -1,  -1,
       -1, 259, 260, 261,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1, 262,  -1, 263,  -1,  -1,  -1,  -1, 264,
      265,  -1,  -1, 266,  -1, 267, 268, 269, 270, 271,
       -1,  -1, 272,  -1,  -1, 273,  -1,  -1, 274,  -1,
       -1,  -1,  -1,  -1,  -1, 275,  -1, 276,  -1,  -1,
       -1,  -1, 277, 278,  -1, 279, 280,  -1,  -1, 281,
       -1,  -1, 282,  -1, 283, 284,  -1,  -1,  -1,  -1,
      285,  -1,  -1,  -1,  -1, 286,  -1,  -1, 287, 288,
       -1, 289,  -1, 290,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1, 291,  -1, 292,  -1,  -1,
       -1,  -1, 293,  -1, 294, 295,  -1,  -1, 296,  -1,
      297,  -1,  -1,  -1, 298,  -1,  -1,  -1,  -1,  -1,
      299,  -1,  -1, 300, 301, 302, 303,  -1, 304,  -1,
       -1,  -1,  -1, 305,  -1, 306,  -1,  -1,  -1,  -1,
       -1, 307,  -1,  -1,  -1,  -1,  -1, 308,  -1,  -1,
       -1,  -1, 309,  -1,  -1,  -1,  -1, 310,  -1,  -1,
       -1,  -1,  -1,  -1,  -1, 311, 312, 313,  -1,  -1,
       -1,  -1,  -1,  -1, 314, 315,  -1,  -1,  -1, 316,
       -1,  -1, 317, 318,  -1,  -1,  -1, 319,  -1,  -1,
       -1,  -1,  -1,  -1,  -1, 320, 321,  -1,  -1,  -1,
       -1,  -1,  -1,  -1, 322, 323,  -1,  -1, 324, 325,
       -1, 326,  -1,  -1, 327, 328, 329,  -1,  -1, 330,
      331,  -1,  -1,  -1,  -1,  -1, 332,  -1,  -1, 333,
       -1,  -1,  -1, 334,  -1,  -1, 335,  -1, 336,  -1,
      337, 338,  -1,  -1,  -1,  -1,  -1,  -1, 339, 340,
       -1, 341,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1, 342, 343,  -1,
      344, 345,  -1, 346,  -1,  -1,  -1,  -1,  -1,  -1,
      347,  -1, 348,  -1, 349, 350, 351, 352, 353,  -1,
       -1,  -1,  -1,  -1,  -1, 354,  -1, 355,  -1,  -1,
       -1,  -1,  -1,  -1, 356,  -1,  -1, 357,  -1,  -1,
       -1, 358,  -1, 359, 360,  -1,  -1, 361,  -1,  -1,
       -1,  -1, 362,  -1,  -1,  -1, 363,  -1,  -1,  -1,
       -1,  -1,  -1,  -1, 364,  -1,  -1,  -1,  -1,  -1,
       -1,  -1, 365,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
      366, 367,  -1, 368,  -1,  -1,  -1, 369,  -1,  -1,
      370,  -1,  -1,  -1,  -1, 371, 372,  -1,  -1,  -1,
      373,  -1,  -1,  -1,  -1, 374,  -1,  -1, 375,  -1,
       -1,  -1, 376,  -1,  -1,  -1, 377,  -1,  -1, 378,
       -1,  -1,  -1,  -1,  -1, 379,  -1,  -1,  -1, 380,
       -1,  -1,  -1,  -1,  -1,  -1, 381,  -1,  -1,  -1,
       -1,  -1,  -1,  -1, 382, 383,  -1,  -1, 384,  -1,
      385,  -1,  -1,  -1,  -1, 386,  -1,  -1, 387,  -1,
       -1,  -1,  -1,  -1,  -1,  -1, 388,  -1,  -1,  -1,
       -1, 389, 390, 391, 392, 393,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1, 394,  -1, 395,  -1, 396,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1, 397,  -1,  -1,
       -1,  -1,  -1, 398,  -1,  -1,  -1,  -1,  -1, 399,
      400,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1, 401,  -1,  -1,  -1,  -1,  -1, 402, 403,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1, 404,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1, 405,  -1,  -1,  -1, 406,  -1,
      407,  -1,  -1,  -1, 408,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1, 409,  -1, 410,  -1,  -1,
       -1,  -1, 411,  -1,  -1,  -1, 412,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1, 413,  -1,  -1,  -1,  -1, 414,
       -1,  -1,  -1,  -1, 415,  -1, 416,  -1, 417, 418,
       -1,  -1, 419,  -1, 420,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1, 421,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1, 422,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1, 423,
      424, 425,  -1,  -1,  -1,  -1,  -1, 426,  -1, 427,
       -1,  -1,  -1,  -1,  -1,  -1,  -1, 428,  -1,  -1,
      429,  -1,  -1,  -1,  -1, 430,  -1,  -1,  -1,  -1,
       -1,  -1, 431,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1, 432,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1, 433,  -1, 434,  -1,  -1,
      435,  -1, 436,  -1,  -1,  -1, 437,  -1,  -1,  -1,
       -1,  -1,  -1, 438, 439, 440,  -1,  -1, 441,  -1,
      442,  -1,  -1,  -1, 443,  -1,  -1, 444, 445,  -1,
      446,  -1,  -1,  -1, 447,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1, 448,  -1,
       -1, 449,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1, 450, 451,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1, 452, 453,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1, 454, 455,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1, 456,
       -1,  -1,  -1,  -1,  -1,  -1, 457,  -1, 458,  -1,
       -1,  -1,  -1,  -1,  -1, 459,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1, 460,  -1,  -1, 461,  -1,  -1,
      462,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1, 463,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1, 464, 465,  -1,  -1,  -1,  -1, 466, 467,  -1,
       -1,  -1, 468,  -1,  -1,  -1, 469,  -1,  -1, 470,
       -1, 471,  -1,  -1,  -1,  -1,  -1,  -1, 472,  -1,
      473,  -1,  -1, 474,  -1,  -1, 475,  -1,  -1,  -1,
       -1, 476, 477,  -1,  -1, 478,  -1,  -1, 479, 480,
       -1,  -1, 481,  -1,  -1,  -1, 482,  -1, 483, 484,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1, 485,  -1,  -1,  -1, 486, 487,
       -1,  -1, 488,  -1, 489,  -1,  -1,  -1, 490,  -1,
       -1, 491,  -1,  -1,  -1,  -1,  -1,  -1, 492,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1, 493, 494,
       -1, 495, 496,  -1,  -1, 497,  -1, 498,  -1,  -1,
       -1,  -1, 499, 500, 501,  -1, 502,  -1,  -1,  -1,
       -1,  -1, 503, 504,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1, 505, 506,  -1,  -1,  -1,  -1,
      507, 508, 509, 510,  -1,  -1, 511, 512,  -1,  -1,
       -1,  -1,  -1,  -1, 513,  -1, 514,  -1, 515,  -1,
       -1, 516,  -1,  -1,  -1,  -1,  -1,  -1,  -1, 517,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1, 518,
       -1,  -1,  -1, 519, 520,  -1,  -1,  -1, 521,  -1,
       -1,  -1,  -1,  -1, 522,  -1,  -1,  -1,  -1, 523,
       -1,  -1,  -1,  -1,  -1, 524,  -1, 525,  -1,  -1,
       -1,  -1,  -1, 526,  -1,  -1,  -1,  -1,  -1,  -1,
      527,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
      528,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
      529,  -1,  -1,  -1,  -1,  -1,  -1,  -1, 530,  -1,
       -1,  -1, 531,  -1,  -1, 532,  -1,  -1,  -1, 533,
       -1,  -1,  -1,  -1,  -1, 534,  -1,  -1,  -1, 535,
       -1,  -1, 536,  -1,  -1,  -1,  -1,  -1, 537,  -1,
       -1,  -1,  -1,  -1, 538,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1, 539,  -1,
      540,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1, 541, 542,  -1, 543,  -1,  -1, 544,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1, 545,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1, 546,  -1,  -1, 547, 548, 549,  -1,  -1,  -1,
      550, 551,  -1, 552,  -1,  -1,  -1,  -1, 553,  -1,
       -1,  -1,  -1,  -1,  -1, 554,  -1, 555,  -1,  -1,
       -1,  -1,  -1, 556,  -1,  -1,  -1,  -1, 557,  -1,
       -1,  -1,  -1,  -1, 558,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1, 559, 560,  -1,  -1, 561,  -1,  -1,  -1,  -1,
       -1,  -1, 562,  -1,  -1, 563,  -1, 564, 565,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1, 566, 567,
       -1, 568,  -1,  -1,  -1,  -1,  -1, 569,  -1, 570,
      571,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1, 572,  -1,  -1, 573, 574,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1, 575,  -1,  -1,  -1,
       -1, 576,  -1,  -1, 577, 578,  -1,  -1,  -1,  -1,
      579,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
      580,  -1, 581,  -1,  -1,  -1,  -1,  -1, 582,  -1,
       -1, 583,  -1,  -1,  -1,  -1,  -1, 584,  -1,  -1,
       -1,  -1,  -1,  -1, 585,  -1,  -1,  -1,  -1, 586,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
      587, 588,  -1,  -1,  -1,  -1, 589,  -1,  -1,  -1,
       -1, 590,  -1,  -1, 591,  -1, 592,  -1,  -1, 593,
       -1,  -1,  -1,  -1,  -1, 594,  -1,  -1, 595,  -1,
       -1,  -1,  -1, 596,  -1, 597,  -1,  -1, 598,  -1,
      599,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1, 600, 601,  -1, 602,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1, 603, 604,
       -1,  -1, 605,  -1,  -1,  -1,  -1,  -1, 606,  -1,
       -1,  -1,  -1,  -1,  -1, 607,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1, 608,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1, 609,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1, 610,  -1, 611,  -1,
       -1,  -1,  -1,  -1, 612, 613,  -1,  -1,  -1, 614,
       -1,  -1,  -1,  -1,  -1,  -1, 615,  -1, 616,  -1,
      617,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
      618,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1, 619,  -1,  -1,  -1,
       -1, 620,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
      621,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1, 622,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1, 623,  -1,  -1,  -1,  -1,  -1, 624,  -1,  -1,
       -1,  -1, 625,  -1,  -1, 626,  -1,  -1,  -1, 627,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1, 628,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
      629,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1, 630,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1, 631,  -1,  -1,
       -1,  -1,  -1, 632,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1, 633,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1, 634,  -1,  -1,  -1,  -1, 635,  -1,  -1,  -1,
       -1, 636, 637, 638,  -1,  -1,  -1,  -1,  -1,  -1,
       -1, 639,  -1,  -1,  -1,  -1, 640, 641,  -1,  -1,
       -1,  -1, 642, 643,  -1,  -1,  -1,  -1,  -1, 644,
       -1,  -1,  -1, 645,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1, 646,  -1,  -1,  -1, 647, 648,  -1,  -1,
       -1,  -1, 649,  -1,  -1,  -1, 650,  -1,  -1,  -1,
       -1,  -1,  -1, 651,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1, 652, 653,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1, 654,  -1,  -1,  -1,  -1, 655,
       -1,  -1,  -1,  -1,  -1, 656,  -1,  -1,  -1, 657,
      658,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1, 659,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1, 660,  -1,  -1,
       -1, 661, 662, 663,  -1,  -1,  -1,  -1, 664, 665,
       -1,  -1,  -1,  -1, 666, 667,  -1,  -1, 668,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1, 669,  -1,  -1,  -1,
      670,  -1,  -1, 671,  -1,  -1,  -1,  -1, 672,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1, 673,  -1,  -1, 674,  -1,  -1,  -1, 675,  -1,
       -1,  -1,  -1,  -1,  -1, 676,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1, 677,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1, 678,  -1,  -1, 679,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1, 680,  -1,  -1,  -1,  -1,
       -1,  -1,  -1, 681,  -1, 682,  -1,  -1,  -1,  -1,
       -1,  -1, 683,  -1,  -1,  -1,  -1,  -1, 684,  -1,
       -1,  -1,  -1,  -1, 685,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1, 686,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1, 687,  -1,  -1,  -1,  -1,  -1,  -1,  -1, 688,
       -1,  -1, 689,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1, 690,  -1,
      691,  -1,  -1, 692,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1, 693,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1, 694,  -1,  -1, 695,  -1,  -1,  -1,  -1,
       -1, 696,  -1,  -1,  -1,  -1, 697,  -1,  -1, 698,
       -1,  -1,  -1,  -1, 699,  -1,  -1,  -1,  -1,  -1,
       -1,  -1, 700,  -1,  -1, 701,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1, 702, 703,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1, 704,  -1,  -1,  -1,  -1,  -1,
       -1, 705, 706, 707,  -1,  -1,  -1, 708,  -1,  -1,
       -1,  -1, 709,  -1,  -1, 710,  -1, 711,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1, 712,
       -1,  -1,  -1,  -1,  -1,  -1,  -1, 713,  -1,  -1,
       -1,  -1,  -1, 714,  -1,  -1,  -1,  -1,  -1,  -1,
      715,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1, 716, 717,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1, 718,
       -1, 719,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
      720,  -1,  -1,  -1,  -1,  -1,  -1, 721,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1, 722, 723,
       -1,  -1,  -1,  -1,  -1,  -1,  -1, 724,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
      725,  -1,  -1,  -1,  -1, 726,  -1,  -1,  -1,  -1,
      727,  -1,  -1,  -1,  -1, 728,  -1, 729,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1, 730,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1, 731,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1, 732,  -1,
       -1,  -1, 733,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1, 734, 735,  -1,  -1,  -1,
       -1,  -1, 736, 737,  -1,  -1,  -1, 738,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1, 739,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1, 740,  -1,  -1,  -1,  -1, 741,  -1,  -1,
       -1,  -1,  -1,  -1, 742,  -1, 743,  -1,  -1,  -1,
       -1, 744,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1, 745,  -1,  -1,  -1,  -1,  -1, 746,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1, 747,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1, 748,  -1,  -1, 749,  -1, 750,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1, 751,  -1,  -1,
       -1, 752,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1, 753,  -1,  -1,  -1,  -1,  -1, 754,  -1,  -1,
      755,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1, 756,  -1,
       -1,  -1,  -1,  -1,  -1, 757,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1, 758,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1, 759,  -1,  -1,  -1,  -1, 760,  -1, 761,  -1,
       -1, 762,  -1,  -1,  -1,  -1,  -1,  -1,  -1, 763,
       -1,  -1,  -1,  -1,  -1,  -1,  -1, 764,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1, 765,  -1, 766,
       -1,  -1,  -1,  -1,  -1,  -1,  -1, 767,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1, 768,  -1,
      769,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1, 770,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1, 771,  -1, 772,
      773,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1, 774,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1, 775,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1, 776,
       -1,  -1,  -1,  -1, 777,  -1,  -1,  -1, 778,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1, 779,  -1,  -1,  -1,  -1,  -1, 780,  -1,
       -1,  -1, 781,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1, 782,  -1,  -1,  -1, 783,  -1,  -1,  -1,  -1,
       -1, 784,  -1,  -1, 785,  -1,  -1,  -1,  -1, 786,
       -1,  -1,  -1, 787,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1, 788,  -1,  -1, 789,  -1,  -1,  -1,
       -1,  -1,  -1, 790,  -1,  -1,  -1, 791,  -1,  -1,
      792,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1, 793,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1, 794,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1, 795, 796,  -1,  -1, 797,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1, 798,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1, 799,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1, 800,  -1,  -1,  -1,
       -1, 801, 802,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1, 803, 804,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1, 805,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1, 806,  -1,  -1,  -1, 807,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1, 808,  -1,  -1,  -1, 809,  -1,  -1,  -1,
       -1,  -1, 810,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1, 811,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
      812,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1, 813,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1, 814,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1, 815,  -1,  -1,  -1,  -1,  -1,
      816,  -1,  -1,  -1,  -1,  -1,  -1, 817,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1, 818,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1, 819,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1, 820,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
      821,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1, 822,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1, 823,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1, 824,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1, 825,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1, 826,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1, 827,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1, 828,  -1, 829,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1, 830,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1, 831,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1, 832,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1, 833,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
      834,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1, 835,  -1,  -1,  -1,  -1,
       -1,  -1, 836,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1, 837,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1, 838,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1, 839,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1, 840,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1, 841,
       -1, 842,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1, 843,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
       -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1, 844
    };

  if (len <= MAX_WORD_LENGTH && len >= MIN_WORD_LENGTH)
    {
      unsigned int key = value_hash_function (str, len);

      if (key <= MAX_HASH_VALUE)
        {
          int index = lookup[key];

          if (index >= 0)
            {
              const char *s = value_word_list[index].name_offset + CSSValueStringPool;

              if (*str == *s && !strncmp (str + 1, s + 1, len - 1) && s[len] == '\0')
                return &value_word_list[index];
            }
        }
    }
  return 0;
}


const Value* FindValue(const char* str, unsigned int len) {
  return CSSValueKeywordsHash::findValueImpl(str, len);
}

const char* getValueName(CSSValueID id) {
  DCHECK_GT(id, CSSValueID::kInvalid);
  DCHECK_LT(static_cast<int>(id), numCSSValueKeywords);
  return valueListStringPool + valueListStringOffsets[static_cast<int>(id) - 1];
}

bool isValueAllowedInMode(CSSValueID id, CSSParserMode mode) {
  switch (id) {
    case CSSValueID::kInternalActiveListBoxSelection:
    case CSSValueID::kInternalActiveListBoxSelectionText:
    case CSSValueID::kInternalInactiveListBoxSelection:
    case CSSValueID::kInternalInactiveListBoxSelectionText:
    case CSSValueID::kInternalQuirkInherit:
    case CSSValueID::kInternalCenter:
    case CSSValueID::kInternalMediaControl:
    case CSSValueID::kInternalExtendToZoom:
    case CSSValueID::kInternalLightDarkColor:
    case CSSValueID::kInternalVariableValue:
      return IsUASheetBehavior(mode);
    case CSSValueID::kWebkitFocusRingColor:
      return IsUASheetBehavior(mode) || IsQuirksModeBehavior(mode);
    default:
      return true;
  }
}

} // namespace blink
