// third_party/blink/public/mojom/service_worker/controller_service_worker.mojom-forward.h is auto generated by mojom_bindings_generator.py, do not edit

// Copyright 2019 The Chromium Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.

#ifndef THIRD_PARTY_BLINK_PUBLIC_MOJOM_SERVICE_WORKER_CONTROLLER_SERVICE_WORKER_MOJOM_FORWARD_H_
#define THIRD_PARTY_BLINK_PUBLIC_MOJOM_SERVICE_WORKER_CONTROLLER_SERVICE_WORKER_MOJOM_FORWARD_H_



#include "mojo/public/cpp/bindings/struct_forward.h"

#include "mojo/public/cpp/bindings/deprecated_interface_types_forward.h"


#include "mojo/public/interfaces/bindings/native_struct.mojom-forward.h"






namespace blink {
namespace mojom {
class ControllerServiceWorkerInfoDataView;

class ControllerServiceWorkerInfo;
using ControllerServiceWorkerInfoPtr = mojo::StructPtr<ControllerServiceWorkerInfo>;

class ControllerServiceWorker;

using ControllerServiceWorkerPtr = mojo::InterfacePtr<ControllerServiceWorker>;
using ControllerServiceWorkerPtrInfo = mojo::InterfacePtrInfo<ControllerServiceWorker>;
using ThreadSafeControllerServiceWorkerPtr =
    mojo::ThreadSafeInterfacePtr<ControllerServiceWorker>;

using ControllerServiceWorkerRequest = mojo::InterfaceRequest<ControllerServiceWorker>;

using ControllerServiceWorkerAssociatedPtr =
    mojo::AssociatedInterfacePtr<ControllerServiceWorker>;
using ThreadSafeControllerServiceWorkerAssociatedPtr =
    mojo::ThreadSafeAssociatedInterfacePtr<ControllerServiceWorker>;
using ControllerServiceWorkerAssociatedPtrInfo =
    mojo::AssociatedInterfacePtrInfo<ControllerServiceWorker>;

using ControllerServiceWorkerAssociatedRequest =
    mojo::AssociatedInterfaceRequest<ControllerServiceWorker>;

class ControllerServiceWorkerConnector;

using ControllerServiceWorkerConnectorPtr = mojo::InterfacePtr<ControllerServiceWorkerConnector>;
using ControllerServiceWorkerConnectorPtrInfo = mojo::InterfacePtrInfo<ControllerServiceWorkerConnector>;
using ThreadSafeControllerServiceWorkerConnectorPtr =
    mojo::ThreadSafeInterfacePtr<ControllerServiceWorkerConnector>;

using ControllerServiceWorkerConnectorRequest = mojo::InterfaceRequest<ControllerServiceWorkerConnector>;

using ControllerServiceWorkerConnectorAssociatedPtr =
    mojo::AssociatedInterfacePtr<ControllerServiceWorkerConnector>;
using ThreadSafeControllerServiceWorkerConnectorAssociatedPtr =
    mojo::ThreadSafeAssociatedInterfacePtr<ControllerServiceWorkerConnector>;
using ControllerServiceWorkerConnectorAssociatedPtrInfo =
    mojo::AssociatedInterfacePtrInfo<ControllerServiceWorkerConnector>;

using ControllerServiceWorkerConnectorAssociatedRequest =
    mojo::AssociatedInterfaceRequest<ControllerServiceWorkerConnector>;




}  // namespace mojom
}  // namespace blink

#endif  // THIRD_PARTY_BLINK_PUBLIC_MOJOM_SERVICE_WORKER_CONTROLLER_SERVICE_WORKER_MOJOM_FORWARD_H_