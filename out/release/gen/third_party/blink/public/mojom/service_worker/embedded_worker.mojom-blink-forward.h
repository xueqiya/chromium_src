// third_party/blink/public/mojom/service_worker/embedded_worker.mojom-blink-forward.h is auto generated by mojom_bindings_generator.py, do not edit

// Copyright 2019 The Chromium Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.

#ifndef THIRD_PARTY_BLINK_PUBLIC_MOJOM_SERVICE_WORKER_EMBEDDED_WORKER_MOJOM_BLINK_FORWARD_H_
#define THIRD_PARTY_BLINK_PUBLIC_MOJOM_SERVICE_WORKER_EMBEDDED_WORKER_MOJOM_BLINK_FORWARD_H_



#include "mojo/public/cpp/bindings/struct_forward.h"

#include "mojo/public/cpp/bindings/deprecated_interface_types_forward.h"


#include "mojo/public/interfaces/bindings/native_struct.mojom-forward.h"




namespace blink {
namespace mojom {
}  // namespace blink
}  // namespace mojom


namespace blink {
namespace mojom {
namespace blink {
class EmbeddedWorkerStartParams;
using EmbeddedWorkerStartParamsPtr = mojo::StructPtr<EmbeddedWorkerStartParams>;

class EmbeddedWorkerStartTiming;
using EmbeddedWorkerStartTimingPtr = mojo::StructPtr<EmbeddedWorkerStartTiming>;

class EmbeddedWorkerInstanceClient;

using EmbeddedWorkerInstanceClientPtr = mojo::InterfacePtr<EmbeddedWorkerInstanceClient>;
using EmbeddedWorkerInstanceClientPtrInfo = mojo::InterfacePtrInfo<EmbeddedWorkerInstanceClient>;
using ThreadSafeEmbeddedWorkerInstanceClientPtr =
    mojo::ThreadSafeInterfacePtr<EmbeddedWorkerInstanceClient>;

using EmbeddedWorkerInstanceClientRequest = mojo::InterfaceRequest<EmbeddedWorkerInstanceClient>;

using EmbeddedWorkerInstanceClientAssociatedPtr =
    mojo::AssociatedInterfacePtr<EmbeddedWorkerInstanceClient>;
using ThreadSafeEmbeddedWorkerInstanceClientAssociatedPtr =
    mojo::ThreadSafeAssociatedInterfacePtr<EmbeddedWorkerInstanceClient>;
using EmbeddedWorkerInstanceClientAssociatedPtrInfo =
    mojo::AssociatedInterfacePtrInfo<EmbeddedWorkerInstanceClient>;

using EmbeddedWorkerInstanceClientAssociatedRequest =
    mojo::AssociatedInterfaceRequest<EmbeddedWorkerInstanceClient>;

class EmbeddedWorkerInstanceHost;

using EmbeddedWorkerInstanceHostPtr = mojo::InterfacePtr<EmbeddedWorkerInstanceHost>;
using EmbeddedWorkerInstanceHostPtrInfo = mojo::InterfacePtrInfo<EmbeddedWorkerInstanceHost>;
using ThreadSafeEmbeddedWorkerInstanceHostPtr =
    mojo::ThreadSafeInterfacePtr<EmbeddedWorkerInstanceHost>;

using EmbeddedWorkerInstanceHostRequest = mojo::InterfaceRequest<EmbeddedWorkerInstanceHost>;

using EmbeddedWorkerInstanceHostAssociatedPtr =
    mojo::AssociatedInterfacePtr<EmbeddedWorkerInstanceHost>;
using ThreadSafeEmbeddedWorkerInstanceHostAssociatedPtr =
    mojo::ThreadSafeAssociatedInterfacePtr<EmbeddedWorkerInstanceHost>;
using EmbeddedWorkerInstanceHostAssociatedPtrInfo =
    mojo::AssociatedInterfacePtrInfo<EmbeddedWorkerInstanceHost>;

using EmbeddedWorkerInstanceHostAssociatedRequest =
    mojo::AssociatedInterfaceRequest<EmbeddedWorkerInstanceHost>;




}  // namespace blink
}  // namespace mojom
}  // namespace blink

#endif  // THIRD_PARTY_BLINK_PUBLIC_MOJOM_SERVICE_WORKER_EMBEDDED_WORKER_MOJOM_BLINK_FORWARD_H_