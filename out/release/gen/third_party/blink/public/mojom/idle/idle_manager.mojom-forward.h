// third_party/blink/public/mojom/idle/idle_manager.mojom-forward.h is auto generated by mojom_bindings_generator.py, do not edit

// Copyright 2019 The Chromium Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.

#ifndef THIRD_PARTY_BLINK_PUBLIC_MOJOM_IDLE_IDLE_MANAGER_MOJOM_FORWARD_H_
#define THIRD_PARTY_BLINK_PUBLIC_MOJOM_IDLE_IDLE_MANAGER_MOJOM_FORWARD_H_

#include <stdint.h>

#include "mojo/public/cpp/bindings/struct_forward.h"

#include "mojo/public/cpp/bindings/deprecated_interface_types_forward.h"


#include "mojo/public/interfaces/bindings/native_struct.mojom-forward.h"






namespace blink {
namespace mojom {
class IdleStateDataView;


enum class UserIdleState : int32_t;

enum class ScreenIdleState : int32_t;
class IdleState;
using IdleStatePtr = mojo::InlinedStructPtr<IdleState>;

class IdleMonitor;

using IdleMonitorPtr = mojo::InterfacePtr<IdleMonitor>;
using IdleMonitorPtrInfo = mojo::InterfacePtrInfo<IdleMonitor>;
using ThreadSafeIdleMonitorPtr =
    mojo::ThreadSafeInterfacePtr<IdleMonitor>;

using IdleMonitorRequest = mojo::InterfaceRequest<IdleMonitor>;

using IdleMonitorAssociatedPtr =
    mojo::AssociatedInterfacePtr<IdleMonitor>;
using ThreadSafeIdleMonitorAssociatedPtr =
    mojo::ThreadSafeAssociatedInterfacePtr<IdleMonitor>;
using IdleMonitorAssociatedPtrInfo =
    mojo::AssociatedInterfacePtrInfo<IdleMonitor>;

using IdleMonitorAssociatedRequest =
    mojo::AssociatedInterfaceRequest<IdleMonitor>;

class IdleManager;

using IdleManagerPtr = mojo::InterfacePtr<IdleManager>;
using IdleManagerPtrInfo = mojo::InterfacePtrInfo<IdleManager>;
using ThreadSafeIdleManagerPtr =
    mojo::ThreadSafeInterfacePtr<IdleManager>;

using IdleManagerRequest = mojo::InterfaceRequest<IdleManager>;

using IdleManagerAssociatedPtr =
    mojo::AssociatedInterfacePtr<IdleManager>;
using ThreadSafeIdleManagerAssociatedPtr =
    mojo::ThreadSafeAssociatedInterfacePtr<IdleManager>;
using IdleManagerAssociatedPtrInfo =
    mojo::AssociatedInterfacePtrInfo<IdleManager>;

using IdleManagerAssociatedRequest =
    mojo::AssociatedInterfaceRequest<IdleManager>;




}  // namespace mojom
}  // namespace blink

#endif  // THIRD_PARTY_BLINK_PUBLIC_MOJOM_IDLE_IDLE_MANAGER_MOJOM_FORWARD_H_