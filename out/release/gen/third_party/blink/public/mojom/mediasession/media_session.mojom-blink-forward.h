// third_party/blink/public/mojom/mediasession/media_session.mojom-blink-forward.h is auto generated by mojom_bindings_generator.py, do not edit

// Copyright 2019 The Chromium Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.

#ifndef THIRD_PARTY_BLINK_PUBLIC_MOJOM_MEDIASESSION_MEDIA_SESSION_MOJOM_BLINK_FORWARD_H_
#define THIRD_PARTY_BLINK_PUBLIC_MOJOM_MEDIASESSION_MEDIA_SESSION_MOJOM_BLINK_FORWARD_H_

#include <stdint.h>

#include "mojo/public/cpp/bindings/struct_forward.h"

#include "mojo/public/cpp/bindings/deprecated_interface_types_forward.h"


#include "mojo/public/interfaces/bindings/native_struct.mojom-forward.h"




namespace blink {
namespace mojom {

enum class MediaSessionPlaybackState : int32_t;
}  // namespace blink
}  // namespace mojom

namespace WTF {
template <typename T>
struct DefaultHash;
}

namespace WTF {
struct blink_mojom_internal_MediaSessionPlaybackState_DataHashFn;

template <>
struct DefaultHash<::blink::mojom::MediaSessionPlaybackState> {
  using Hash = blink_mojom_internal_MediaSessionPlaybackState_DataHashFn;
};
}  // namespace WTF


namespace blink {
namespace mojom {
namespace blink {
using MediaSessionPlaybackState = MediaSessionPlaybackState;  // Alias for definition in the parent namespace.
class MediaSessionSeekToDetails;
using MediaSessionSeekToDetailsPtr = mojo::StructPtr<MediaSessionSeekToDetails>;

class SpecMediaMetadata;
using SpecMediaMetadataPtr = mojo::StructPtr<SpecMediaMetadata>;

class MediaSessionActionDetails;

typedef mojo::StructPtr<MediaSessionActionDetails> MediaSessionActionDetailsPtr;

class MediaSessionClient;

using MediaSessionClientPtr = mojo::InterfacePtr<MediaSessionClient>;
using MediaSessionClientPtrInfo = mojo::InterfacePtrInfo<MediaSessionClient>;
using ThreadSafeMediaSessionClientPtr =
    mojo::ThreadSafeInterfacePtr<MediaSessionClient>;

using MediaSessionClientRequest = mojo::InterfaceRequest<MediaSessionClient>;

using MediaSessionClientAssociatedPtr =
    mojo::AssociatedInterfacePtr<MediaSessionClient>;
using ThreadSafeMediaSessionClientAssociatedPtr =
    mojo::ThreadSafeAssociatedInterfacePtr<MediaSessionClient>;
using MediaSessionClientAssociatedPtrInfo =
    mojo::AssociatedInterfacePtrInfo<MediaSessionClient>;

using MediaSessionClientAssociatedRequest =
    mojo::AssociatedInterfaceRequest<MediaSessionClient>;

class MediaSessionService;

using MediaSessionServicePtr = mojo::InterfacePtr<MediaSessionService>;
using MediaSessionServicePtrInfo = mojo::InterfacePtrInfo<MediaSessionService>;
using ThreadSafeMediaSessionServicePtr =
    mojo::ThreadSafeInterfacePtr<MediaSessionService>;

using MediaSessionServiceRequest = mojo::InterfaceRequest<MediaSessionService>;

using MediaSessionServiceAssociatedPtr =
    mojo::AssociatedInterfacePtr<MediaSessionService>;
using ThreadSafeMediaSessionServiceAssociatedPtr =
    mojo::ThreadSafeAssociatedInterfacePtr<MediaSessionService>;
using MediaSessionServiceAssociatedPtrInfo =
    mojo::AssociatedInterfacePtrInfo<MediaSessionService>;

using MediaSessionServiceAssociatedRequest =
    mojo::AssociatedInterfaceRequest<MediaSessionService>;




}  // namespace blink
}  // namespace mojom
}  // namespace blink

#endif  // THIRD_PARTY_BLINK_PUBLIC_MOJOM_MEDIASESSION_MEDIA_SESSION_MOJOM_BLINK_FORWARD_H_