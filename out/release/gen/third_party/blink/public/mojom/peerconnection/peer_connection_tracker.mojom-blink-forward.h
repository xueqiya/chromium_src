// third_party/blink/public/mojom/peerconnection/peer_connection_tracker.mojom-blink-forward.h is auto generated by mojom_bindings_generator.py, do not edit

// Copyright 2019 The Chromium Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.

#ifndef THIRD_PARTY_BLINK_PUBLIC_MOJOM_PEERCONNECTION_PEER_CONNECTION_TRACKER_MOJOM_BLINK_FORWARD_H_
#define THIRD_PARTY_BLINK_PUBLIC_MOJOM_PEERCONNECTION_PEER_CONNECTION_TRACKER_MOJOM_BLINK_FORWARD_H_



#include "mojo/public/cpp/bindings/struct_forward.h"

#include "mojo/public/cpp/bindings/deprecated_interface_types_forward.h"


#include "mojo/public/interfaces/bindings/native_struct.mojom-forward.h"




namespace blink {
namespace mojom {
}  // namespace blink
}  // namespace mojom


namespace blink {
namespace mojom {
namespace blink {
class PeerConnectionInfo;
using PeerConnectionInfoPtr = mojo::InlinedStructPtr<PeerConnectionInfo>;

class PeerConnectionManager;

using PeerConnectionManagerPtr = mojo::InterfacePtr<PeerConnectionManager>;
using PeerConnectionManagerPtrInfo = mojo::InterfacePtrInfo<PeerConnectionManager>;
using ThreadSafePeerConnectionManagerPtr =
    mojo::ThreadSafeInterfacePtr<PeerConnectionManager>;

using PeerConnectionManagerRequest = mojo::InterfaceRequest<PeerConnectionManager>;

using PeerConnectionManagerAssociatedPtr =
    mojo::AssociatedInterfacePtr<PeerConnectionManager>;
using ThreadSafePeerConnectionManagerAssociatedPtr =
    mojo::ThreadSafeAssociatedInterfacePtr<PeerConnectionManager>;
using PeerConnectionManagerAssociatedPtrInfo =
    mojo::AssociatedInterfacePtrInfo<PeerConnectionManager>;

using PeerConnectionManagerAssociatedRequest =
    mojo::AssociatedInterfaceRequest<PeerConnectionManager>;

class PeerConnectionTrackerHost;

using PeerConnectionTrackerHostPtr = mojo::InterfacePtr<PeerConnectionTrackerHost>;
using PeerConnectionTrackerHostPtrInfo = mojo::InterfacePtrInfo<PeerConnectionTrackerHost>;
using ThreadSafePeerConnectionTrackerHostPtr =
    mojo::ThreadSafeInterfacePtr<PeerConnectionTrackerHost>;

using PeerConnectionTrackerHostRequest = mojo::InterfaceRequest<PeerConnectionTrackerHost>;

using PeerConnectionTrackerHostAssociatedPtr =
    mojo::AssociatedInterfacePtr<PeerConnectionTrackerHost>;
using ThreadSafePeerConnectionTrackerHostAssociatedPtr =
    mojo::ThreadSafeAssociatedInterfacePtr<PeerConnectionTrackerHost>;
using PeerConnectionTrackerHostAssociatedPtrInfo =
    mojo::AssociatedInterfacePtrInfo<PeerConnectionTrackerHost>;

using PeerConnectionTrackerHostAssociatedRequest =
    mojo::AssociatedInterfaceRequest<PeerConnectionTrackerHost>;




}  // namespace blink
}  // namespace mojom
}  // namespace blink

#endif  // THIRD_PARTY_BLINK_PUBLIC_MOJOM_PEERCONNECTION_PEER_CONNECTION_TRACKER_MOJOM_BLINK_FORWARD_H_