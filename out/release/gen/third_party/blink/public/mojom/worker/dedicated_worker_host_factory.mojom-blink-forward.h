// third_party/blink/public/mojom/worker/dedicated_worker_host_factory.mojom-blink-forward.h is auto generated by mojom_bindings_generator.py, do not edit

// Copyright 2019 The Chromium Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.

#ifndef THIRD_PARTY_BLINK_PUBLIC_MOJOM_WORKER_DEDICATED_WORKER_HOST_FACTORY_MOJOM_BLINK_FORWARD_H_
#define THIRD_PARTY_BLINK_PUBLIC_MOJOM_WORKER_DEDICATED_WORKER_HOST_FACTORY_MOJOM_BLINK_FORWARD_H_





#include "mojo/public/cpp/bindings/deprecated_interface_types_forward.h"


#include "third_party/blink/renderer/core/core_export.h"




namespace blink {
namespace mojom {
}  // namespace blink
}  // namespace mojom


namespace blink {
namespace mojom {
namespace blink {

CORE_EXPORT extern const char kNavigation_DedicatedWorkerSpec[];
class DedicatedWorkerHostFactoryClient;

using DedicatedWorkerHostFactoryClientPtr = mojo::InterfacePtr<DedicatedWorkerHostFactoryClient>;
using DedicatedWorkerHostFactoryClientPtrInfo = mojo::InterfacePtrInfo<DedicatedWorkerHostFactoryClient>;
using ThreadSafeDedicatedWorkerHostFactoryClientPtr =
    mojo::ThreadSafeInterfacePtr<DedicatedWorkerHostFactoryClient>;

using DedicatedWorkerHostFactoryClientRequest = mojo::InterfaceRequest<DedicatedWorkerHostFactoryClient>;

using DedicatedWorkerHostFactoryClientAssociatedPtr =
    mojo::AssociatedInterfacePtr<DedicatedWorkerHostFactoryClient>;
using ThreadSafeDedicatedWorkerHostFactoryClientAssociatedPtr =
    mojo::ThreadSafeAssociatedInterfacePtr<DedicatedWorkerHostFactoryClient>;
using DedicatedWorkerHostFactoryClientAssociatedPtrInfo =
    mojo::AssociatedInterfacePtrInfo<DedicatedWorkerHostFactoryClient>;

using DedicatedWorkerHostFactoryClientAssociatedRequest =
    mojo::AssociatedInterfaceRequest<DedicatedWorkerHostFactoryClient>;

class DedicatedWorkerHostFactory;

using DedicatedWorkerHostFactoryPtr = mojo::InterfacePtr<DedicatedWorkerHostFactory>;
using DedicatedWorkerHostFactoryPtrInfo = mojo::InterfacePtrInfo<DedicatedWorkerHostFactory>;
using ThreadSafeDedicatedWorkerHostFactoryPtr =
    mojo::ThreadSafeInterfacePtr<DedicatedWorkerHostFactory>;

using DedicatedWorkerHostFactoryRequest = mojo::InterfaceRequest<DedicatedWorkerHostFactory>;

using DedicatedWorkerHostFactoryAssociatedPtr =
    mojo::AssociatedInterfacePtr<DedicatedWorkerHostFactory>;
using ThreadSafeDedicatedWorkerHostFactoryAssociatedPtr =
    mojo::ThreadSafeAssociatedInterfacePtr<DedicatedWorkerHostFactory>;
using DedicatedWorkerHostFactoryAssociatedPtrInfo =
    mojo::AssociatedInterfacePtrInfo<DedicatedWorkerHostFactory>;

using DedicatedWorkerHostFactoryAssociatedRequest =
    mojo::AssociatedInterfaceRequest<DedicatedWorkerHostFactory>;




}  // namespace blink
}  // namespace mojom
}  // namespace blink

#endif  // THIRD_PARTY_BLINK_PUBLIC_MOJOM_WORKER_DEDICATED_WORKER_HOST_FACTORY_MOJOM_BLINK_FORWARD_H_