// third_party/blink/public/mojom/page/display_cutout.mojom-blink-forward.h is auto generated by mojom_bindings_generator.py, do not edit

// Copyright 2019 The Chromium Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.

#ifndef THIRD_PARTY_BLINK_PUBLIC_MOJOM_PAGE_DISPLAY_CUTOUT_MOJOM_BLINK_FORWARD_H_
#define THIRD_PARTY_BLINK_PUBLIC_MOJOM_PAGE_DISPLAY_CUTOUT_MOJOM_BLINK_FORWARD_H_

#include <stdint.h>

#include "mojo/public/cpp/bindings/struct_forward.h"

#include "mojo/public/cpp/bindings/deprecated_interface_types_forward.h"


#include "mojo/public/interfaces/bindings/native_struct.mojom-forward.h"




namespace blink {
namespace mojom {

enum class ViewportFit : int32_t;
}  // namespace blink
}  // namespace mojom

namespace WTF {
template <typename T>
struct DefaultHash;
}

namespace WTF {
struct blink_mojom_internal_ViewportFit_DataHashFn;

template <>
struct DefaultHash<::blink::mojom::ViewportFit> {
  using Hash = blink_mojom_internal_ViewportFit_DataHashFn;
};
}  // namespace WTF


namespace blink {
namespace mojom {
namespace blink {
using ViewportFit = ViewportFit;  // Alias for definition in the parent namespace.
class DisplayCutoutSafeArea;
using DisplayCutoutSafeAreaPtr = mojo::InlinedStructPtr<DisplayCutoutSafeArea>;

class DisplayCutoutHost;

using DisplayCutoutHostPtr = mojo::InterfacePtr<DisplayCutoutHost>;
using DisplayCutoutHostPtrInfo = mojo::InterfacePtrInfo<DisplayCutoutHost>;
using ThreadSafeDisplayCutoutHostPtr =
    mojo::ThreadSafeInterfacePtr<DisplayCutoutHost>;

using DisplayCutoutHostRequest = mojo::InterfaceRequest<DisplayCutoutHost>;

using DisplayCutoutHostAssociatedPtr =
    mojo::AssociatedInterfacePtr<DisplayCutoutHost>;
using ThreadSafeDisplayCutoutHostAssociatedPtr =
    mojo::ThreadSafeAssociatedInterfacePtr<DisplayCutoutHost>;
using DisplayCutoutHostAssociatedPtrInfo =
    mojo::AssociatedInterfacePtrInfo<DisplayCutoutHost>;

using DisplayCutoutHostAssociatedRequest =
    mojo::AssociatedInterfaceRequest<DisplayCutoutHost>;

class DisplayCutoutClient;

using DisplayCutoutClientPtr = mojo::InterfacePtr<DisplayCutoutClient>;
using DisplayCutoutClientPtrInfo = mojo::InterfacePtrInfo<DisplayCutoutClient>;
using ThreadSafeDisplayCutoutClientPtr =
    mojo::ThreadSafeInterfacePtr<DisplayCutoutClient>;

using DisplayCutoutClientRequest = mojo::InterfaceRequest<DisplayCutoutClient>;

using DisplayCutoutClientAssociatedPtr =
    mojo::AssociatedInterfacePtr<DisplayCutoutClient>;
using ThreadSafeDisplayCutoutClientAssociatedPtr =
    mojo::ThreadSafeAssociatedInterfacePtr<DisplayCutoutClient>;
using DisplayCutoutClientAssociatedPtrInfo =
    mojo::AssociatedInterfacePtrInfo<DisplayCutoutClient>;

using DisplayCutoutClientAssociatedRequest =
    mojo::AssociatedInterfaceRequest<DisplayCutoutClient>;




}  // namespace blink
}  // namespace mojom
}  // namespace blink

#endif  // THIRD_PARTY_BLINK_PUBLIC_MOJOM_PAGE_DISPLAY_CUTOUT_MOJOM_BLINK_FORWARD_H_