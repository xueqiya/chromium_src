// third_party/blink/public/mojom/timing/worker_timing_container.mojom-test-utils.cc is auto generated by mojom_bindings_generator.py, do not edit

// Copyright 2019 The Chromium Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.

#if defined(__clang__)
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wunused-private-field"
#elif defined(_MSC_VER)
#pragma warning(push)
#pragma warning(disable:4056)
#pragma warning(disable:4065)
#pragma warning(disable:4756)
#endif


#include "third_party/blink/public/mojom/timing/worker_timing_container.mojom-test-utils.h"

#include <utility>

#include "base/bind.h"
#include "base/run_loop.h"
#include "third_party/blink/public/mojom/timing/performance_mark_or_measure.mojom.h"


#ifndef THIRD_PARTY_BLINK_PUBLIC_MOJOM_TIMING_WORKER_TIMING_CONTAINER_MOJOM_JUMBO_H_
#define THIRD_PARTY_BLINK_PUBLIC_MOJOM_TIMING_WORKER_TIMING_CONTAINER_MOJOM_JUMBO_H_
#include "mojo/public/cpp/base/big_buffer_mojom_traits.h"
#endif


namespace blink {
namespace mojom {


void WorkerTimingContainerInterceptorForTesting::AddPerformanceEntry(::blink::mojom::PerformanceMarkOrMeasurePtr entry) {
  GetForwardingInterface()->AddPerformanceEntry(std::move(entry));
}
WorkerTimingContainerAsyncWaiter::WorkerTimingContainerAsyncWaiter(
    WorkerTimingContainer* proxy) : proxy_(proxy) {}

WorkerTimingContainerAsyncWaiter::~WorkerTimingContainerAsyncWaiter() = default;






}  // namespace mojom
}  // namespace blink

#if defined(__clang__)
#pragma clang diagnostic pop
#elif defined(_MSC_VER)
#pragma warning(pop)
#endif