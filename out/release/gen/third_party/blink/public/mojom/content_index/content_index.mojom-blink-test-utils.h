// third_party/blink/public/mojom/content_index/content_index.mojom-blink-test-utils.h is auto generated by mojom_bindings_generator.py, do not edit

// Copyright 2019 The Chromium Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.

#ifndef THIRD_PARTY_BLINK_PUBLIC_MOJOM_CONTENT_INDEX_CONTENT_INDEX_MOJOM_BLINK_TEST_UTILS_H_
#define THIRD_PARTY_BLINK_PUBLIC_MOJOM_CONTENT_INDEX_CONTENT_INDEX_MOJOM_BLINK_TEST_UTILS_H_

#include "third_party/blink/public/mojom/content_index/content_index.mojom-blink.h"
#include "third_party/blink/renderer/platform/platform_export.h"


namespace blink {
namespace mojom {
namespace blink {


class PLATFORM_EXPORT ContentIndexServiceInterceptorForTesting : public ContentIndexService {
  virtual ContentIndexService* GetForwardingInterface() = 0;
  void GetIconSizes(ContentCategory category, GetIconSizesCallback callback) override;
  void Add(int64_t service_worker_registration_id, ContentDescriptionPtr description, const WTF::Vector<::SkBitmap>& icon, const ::blink::KURL& launchUrl, AddCallback callback) override;
  void Delete(int64_t service_worker_registration_id, const WTF::String& id, DeleteCallback callback) override;
  void GetDescriptions(int64_t service_worker_registration_id, GetDescriptionsCallback callback) override;
};
class PLATFORM_EXPORT ContentIndexServiceAsyncWaiter {
 public:
  explicit ContentIndexServiceAsyncWaiter(ContentIndexService* proxy);
  ~ContentIndexServiceAsyncWaiter();
  void GetIconSizes(
      ContentCategory category, WTF::Vector<::blink::WebSize>* out_icon_sizes);
  void Add(
      int64_t service_worker_registration_id, ContentDescriptionPtr description, const WTF::Vector<::SkBitmap>& icon, const ::blink::KURL& launchUrl, ContentIndexError* out_error);
  void Delete(
      int64_t service_worker_registration_id, const WTF::String& id, ContentIndexError* out_error);
  void GetDescriptions(
      int64_t service_worker_registration_id, ContentIndexError* out_error, WTF::Vector<ContentDescriptionPtr>* out_descriptions);

 private:
  ContentIndexService* const proxy_;

  DISALLOW_COPY_AND_ASSIGN(ContentIndexServiceAsyncWaiter);
};




}  // namespace blink
}  // namespace mojom
}  // namespace blink

#endif  // THIRD_PARTY_BLINK_PUBLIC_MOJOM_CONTENT_INDEX_CONTENT_INDEX_MOJOM_BLINK_TEST_UTILS_H_