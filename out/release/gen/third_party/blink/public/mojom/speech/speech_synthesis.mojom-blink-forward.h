// third_party/blink/public/mojom/speech/speech_synthesis.mojom-blink-forward.h is auto generated by mojom_bindings_generator.py, do not edit

// Copyright 2019 The Chromium Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.

#ifndef THIRD_PARTY_BLINK_PUBLIC_MOJOM_SPEECH_SPEECH_SYNTHESIS_MOJOM_BLINK_FORWARD_H_
#define THIRD_PARTY_BLINK_PUBLIC_MOJOM_SPEECH_SPEECH_SYNTHESIS_MOJOM_BLINK_FORWARD_H_



#include "mojo/public/cpp/bindings/struct_forward.h"

#include "mojo/public/cpp/bindings/deprecated_interface_types_forward.h"


#include "mojo/public/interfaces/bindings/native_struct.mojom-forward.h"
#include "third_party/blink/renderer/platform/platform_export.h"




namespace blink {
namespace mojom {
}  // namespace blink
}  // namespace mojom


namespace blink {
namespace mojom {
namespace blink {

constexpr double kSpeechSynthesisDefaultRate = 1.0;

constexpr double kSpeechSynthesisDefaultPitch = 1.0;

constexpr double kSpeechSynthesisDefaultVolume = 1.0;

constexpr double kSpeechSynthesisDoublePrefNotSet = -1.0;
class SpeechSynthesisUtterance;
using SpeechSynthesisUtterancePtr = mojo::StructPtr<SpeechSynthesisUtterance>;

class SpeechSynthesisVoice;
using SpeechSynthesisVoicePtr = mojo::StructPtr<SpeechSynthesisVoice>;

class SpeechSynthesisVoiceListObserver;

using SpeechSynthesisVoiceListObserverPtr = mojo::InterfacePtr<SpeechSynthesisVoiceListObserver>;
using SpeechSynthesisVoiceListObserverPtrInfo = mojo::InterfacePtrInfo<SpeechSynthesisVoiceListObserver>;
using ThreadSafeSpeechSynthesisVoiceListObserverPtr =
    mojo::ThreadSafeInterfacePtr<SpeechSynthesisVoiceListObserver>;

using SpeechSynthesisVoiceListObserverRequest = mojo::InterfaceRequest<SpeechSynthesisVoiceListObserver>;

using SpeechSynthesisVoiceListObserverAssociatedPtr =
    mojo::AssociatedInterfacePtr<SpeechSynthesisVoiceListObserver>;
using ThreadSafeSpeechSynthesisVoiceListObserverAssociatedPtr =
    mojo::ThreadSafeAssociatedInterfacePtr<SpeechSynthesisVoiceListObserver>;
using SpeechSynthesisVoiceListObserverAssociatedPtrInfo =
    mojo::AssociatedInterfacePtrInfo<SpeechSynthesisVoiceListObserver>;

using SpeechSynthesisVoiceListObserverAssociatedRequest =
    mojo::AssociatedInterfaceRequest<SpeechSynthesisVoiceListObserver>;

class SpeechSynthesisClient;

using SpeechSynthesisClientPtr = mojo::InterfacePtr<SpeechSynthesisClient>;
using SpeechSynthesisClientPtrInfo = mojo::InterfacePtrInfo<SpeechSynthesisClient>;
using ThreadSafeSpeechSynthesisClientPtr =
    mojo::ThreadSafeInterfacePtr<SpeechSynthesisClient>;

using SpeechSynthesisClientRequest = mojo::InterfaceRequest<SpeechSynthesisClient>;

using SpeechSynthesisClientAssociatedPtr =
    mojo::AssociatedInterfacePtr<SpeechSynthesisClient>;
using ThreadSafeSpeechSynthesisClientAssociatedPtr =
    mojo::ThreadSafeAssociatedInterfacePtr<SpeechSynthesisClient>;
using SpeechSynthesisClientAssociatedPtrInfo =
    mojo::AssociatedInterfacePtrInfo<SpeechSynthesisClient>;

using SpeechSynthesisClientAssociatedRequest =
    mojo::AssociatedInterfaceRequest<SpeechSynthesisClient>;

class SpeechSynthesis;

using SpeechSynthesisPtr = mojo::InterfacePtr<SpeechSynthesis>;
using SpeechSynthesisPtrInfo = mojo::InterfacePtrInfo<SpeechSynthesis>;
using ThreadSafeSpeechSynthesisPtr =
    mojo::ThreadSafeInterfacePtr<SpeechSynthesis>;

using SpeechSynthesisRequest = mojo::InterfaceRequest<SpeechSynthesis>;

using SpeechSynthesisAssociatedPtr =
    mojo::AssociatedInterfacePtr<SpeechSynthesis>;
using ThreadSafeSpeechSynthesisAssociatedPtr =
    mojo::ThreadSafeAssociatedInterfacePtr<SpeechSynthesis>;
using SpeechSynthesisAssociatedPtrInfo =
    mojo::AssociatedInterfacePtrInfo<SpeechSynthesis>;

using SpeechSynthesisAssociatedRequest =
    mojo::AssociatedInterfaceRequest<SpeechSynthesis>;




}  // namespace blink
}  // namespace mojom
}  // namespace blink

#endif  // THIRD_PARTY_BLINK_PUBLIC_MOJOM_SPEECH_SPEECH_SYNTHESIS_MOJOM_BLINK_FORWARD_H_