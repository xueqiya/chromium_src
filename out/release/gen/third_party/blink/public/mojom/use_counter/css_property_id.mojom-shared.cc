// third_party/blink/public/mojom/use_counter/css_property_id.mojom-shared.cc is auto generated by mojom_bindings_generator.py, do not edit

// Copyright 2016 The Chromium Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.

#if defined(_MSC_VER)
#pragma warning(push)
#pragma warning(disable:4065)
#endif

#include "third_party/blink/public/mojom/use_counter/css_property_id.mojom-shared.h"

#include <utility>

#include "base/logging.h"
#include "base/stl_util.h"  // for base::size()
#include "mojo/public/cpp/bindings/lib/validate_params.h"
#include "mojo/public/cpp/bindings/lib/validation_context.h"
#include "mojo/public/cpp/bindings/lib/validation_errors.h"
#include "mojo/public/cpp/bindings/lib/validation_util.h"

#include "third_party/blink/public/mojom/use_counter/css_property_id.mojom-params-data.h"
namespace blink {
namespace mojom {

std::ostream& operator<<(std::ostream& os, CSSSampleId value) {
  switch(value) {
    case CSSSampleId::kInvalid:
      return os << "CSSSampleId::{kInvalid, kInternalEffectiveZoom, kInternalEmptyLineHeight, kInternalUaBackgroundAttachment, kInternalUaBackgroundBlendMode, kInternalUaBackgroundClip, kInternalUaBackgroundColor, kInternalUaBackgroundImage, kInternalUaBackgroundOrigin, kInternalUaBackgroundPositionX, kInternalUaBackgroundPositionY, kInternalUaBackgroundSize, kInternalUaBorderBottomColor, kInternalUaBorderBottomLeftRadius, kInternalUaBorderBottomRightRadius, kInternalUaBorderBottomStyle, kInternalUaBorderBottomWidth, kInternalUaBorderImageOutset, kInternalUaBorderImageRepeat, kInternalUaBorderImageSlice, kInternalUaBorderImageSource, kInternalUaBorderImageWidth, kInternalUaBorderLeftColor, kInternalUaBorderLeftStyle, kInternalUaBorderLeftWidth, kInternalUaBorderRightColor, kInternalUaBorderRightStyle, kInternalUaBorderRightWidth, kInternalUaBorderTopColor, kInternalUaBorderTopLeftRadius, kInternalUaBorderTopRightRadius, kInternalUaBorderTopStyle, kInternalUaBorderTopWidth, kInternalVisitedBackgroundColor, kInternalVisitedBorderBlockEndColor, kInternalVisitedBorderBlockStartColor, kInternalVisitedBorderBottomColor, kInternalVisitedBorderInlineEndColor, kInternalVisitedBorderInlineStartColor, kInternalVisitedBorderLeftColor, kInternalVisitedBorderRightColor, kInternalVisitedBorderTopColor, kInternalVisitedCaretColor, kInternalVisitedColor, kInternalVisitedColumnRuleColor, kInternalVisitedFill, kInternalVisitedOutlineColor, kInternalVisitedStroke, kInternalVisitedTextDecorationColor, kInternalVisitedTextEmphasisColor, kInternalVisitedTextFillColor, kInternalVisitedTextStrokeColor}";
    case CSSSampleId::kTotalPagesMeasured:
      return os << "CSSSampleId::kTotalPagesMeasured";
    case CSSSampleId::kColor:
      return os << "CSSSampleId::kColor";
    case CSSSampleId::kDirection:
      return os << "CSSSampleId::kDirection";
    case CSSSampleId::kDisplay:
      return os << "CSSSampleId::kDisplay";
    case CSSSampleId::kFont:
      return os << "CSSSampleId::kFont";
    case CSSSampleId::kFontFamily:
      return os << "CSSSampleId::kFontFamily";
    case CSSSampleId::kFontSize:
      return os << "CSSSampleId::kFontSize";
    case CSSSampleId::kFontStyle:
      return os << "CSSSampleId::kFontStyle";
    case CSSSampleId::kFontVariant:
      return os << "CSSSampleId::kFontVariant";
    case CSSSampleId::kFontWeight:
      return os << "CSSSampleId::kFontWeight";
    case CSSSampleId::kTextRendering:
      return os << "CSSSampleId::kTextRendering";
    case CSSSampleId::kAliasWebkitFontFeatureSettings:
      return os << "CSSSampleId::kAliasWebkitFontFeatureSettings";
    case CSSSampleId::kFontKerning:
      return os << "CSSSampleId::kFontKerning";
    case CSSSampleId::kWebkitFontSmoothing:
      return os << "CSSSampleId::kWebkitFontSmoothing";
    case CSSSampleId::kFontVariantLigatures:
      return os << "CSSSampleId::kFontVariantLigatures";
    case CSSSampleId::kWebkitLocale:
      return os << "CSSSampleId::kWebkitLocale";
    case CSSSampleId::kWebkitTextOrientation:
      return os << "CSSSampleId::kWebkitTextOrientation";
    case CSSSampleId::kWebkitWritingMode:
      return os << "CSSSampleId::kWebkitWritingMode";
    case CSSSampleId::kZoom:
      return os << "CSSSampleId::kZoom";
    case CSSSampleId::kLineHeight:
      return os << "CSSSampleId::kLineHeight";
    case CSSSampleId::kBackground:
      return os << "CSSSampleId::kBackground";
    case CSSSampleId::kBackgroundAttachment:
      return os << "CSSSampleId::kBackgroundAttachment";
    case CSSSampleId::kBackgroundClip:
      return os << "CSSSampleId::kBackgroundClip";
    case CSSSampleId::kBackgroundColor:
      return os << "CSSSampleId::kBackgroundColor";
    case CSSSampleId::kBackgroundImage:
      return os << "CSSSampleId::kBackgroundImage";
    case CSSSampleId::kBackgroundOrigin:
      return os << "CSSSampleId::kBackgroundOrigin";
    case CSSSampleId::kBackgroundPosition:
      return os << "CSSSampleId::kBackgroundPosition";
    case CSSSampleId::kBackgroundPositionX:
      return os << "CSSSampleId::kBackgroundPositionX";
    case CSSSampleId::kBackgroundPositionY:
      return os << "CSSSampleId::kBackgroundPositionY";
    case CSSSampleId::kBackgroundRepeat:
      return os << "CSSSampleId::kBackgroundRepeat";
    case CSSSampleId::kBackgroundRepeatX:
      return os << "CSSSampleId::kBackgroundRepeatX";
    case CSSSampleId::kBackgroundRepeatY:
      return os << "CSSSampleId::kBackgroundRepeatY";
    case CSSSampleId::kBackgroundSize:
      return os << "CSSSampleId::kBackgroundSize";
    case CSSSampleId::kBorder:
      return os << "CSSSampleId::kBorder";
    case CSSSampleId::kBorderBottom:
      return os << "CSSSampleId::kBorderBottom";
    case CSSSampleId::kBorderBottomColor:
      return os << "CSSSampleId::kBorderBottomColor";
    case CSSSampleId::kBorderBottomLeftRadius:
      return os << "CSSSampleId::kBorderBottomLeftRadius";
    case CSSSampleId::kBorderBottomRightRadius:
      return os << "CSSSampleId::kBorderBottomRightRadius";
    case CSSSampleId::kBorderBottomStyle:
      return os << "CSSSampleId::kBorderBottomStyle";
    case CSSSampleId::kBorderBottomWidth:
      return os << "CSSSampleId::kBorderBottomWidth";
    case CSSSampleId::kBorderCollapse:
      return os << "CSSSampleId::kBorderCollapse";
    case CSSSampleId::kBorderColor:
      return os << "CSSSampleId::kBorderColor";
    case CSSSampleId::kBorderImage:
      return os << "CSSSampleId::kBorderImage";
    case CSSSampleId::kBorderImageOutset:
      return os << "CSSSampleId::kBorderImageOutset";
    case CSSSampleId::kBorderImageRepeat:
      return os << "CSSSampleId::kBorderImageRepeat";
    case CSSSampleId::kBorderImageSlice:
      return os << "CSSSampleId::kBorderImageSlice";
    case CSSSampleId::kBorderImageSource:
      return os << "CSSSampleId::kBorderImageSource";
    case CSSSampleId::kBorderImageWidth:
      return os << "CSSSampleId::kBorderImageWidth";
    case CSSSampleId::kBorderLeft:
      return os << "CSSSampleId::kBorderLeft";
    case CSSSampleId::kBorderLeftColor:
      return os << "CSSSampleId::kBorderLeftColor";
    case CSSSampleId::kBorderLeftStyle:
      return os << "CSSSampleId::kBorderLeftStyle";
    case CSSSampleId::kBorderLeftWidth:
      return os << "CSSSampleId::kBorderLeftWidth";
    case CSSSampleId::kBorderRadius:
      return os << "CSSSampleId::kBorderRadius";
    case CSSSampleId::kBorderRight:
      return os << "CSSSampleId::kBorderRight";
    case CSSSampleId::kBorderRightColor:
      return os << "CSSSampleId::kBorderRightColor";
    case CSSSampleId::kBorderRightStyle:
      return os << "CSSSampleId::kBorderRightStyle";
    case CSSSampleId::kBorderRightWidth:
      return os << "CSSSampleId::kBorderRightWidth";
    case CSSSampleId::kBorderSpacing:
      return os << "CSSSampleId::kBorderSpacing";
    case CSSSampleId::kBorderStyle:
      return os << "CSSSampleId::kBorderStyle";
    case CSSSampleId::kBorderTop:
      return os << "CSSSampleId::kBorderTop";
    case CSSSampleId::kBorderTopColor:
      return os << "CSSSampleId::kBorderTopColor";
    case CSSSampleId::kBorderTopLeftRadius:
      return os << "CSSSampleId::kBorderTopLeftRadius";
    case CSSSampleId::kBorderTopRightRadius:
      return os << "CSSSampleId::kBorderTopRightRadius";
    case CSSSampleId::kBorderTopStyle:
      return os << "CSSSampleId::kBorderTopStyle";
    case CSSSampleId::kBorderTopWidth:
      return os << "CSSSampleId::kBorderTopWidth";
    case CSSSampleId::kBorderWidth:
      return os << "CSSSampleId::kBorderWidth";
    case CSSSampleId::kBottom:
      return os << "CSSSampleId::kBottom";
    case CSSSampleId::kBoxShadow:
      return os << "CSSSampleId::kBoxShadow";
    case CSSSampleId::kBoxSizing:
      return os << "CSSSampleId::kBoxSizing";
    case CSSSampleId::kCaptionSide:
      return os << "CSSSampleId::kCaptionSide";
    case CSSSampleId::kClear:
      return os << "CSSSampleId::kClear";
    case CSSSampleId::kClip:
      return os << "CSSSampleId::kClip";
    case CSSSampleId::kAliasWebkitClipPath:
      return os << "CSSSampleId::kAliasWebkitClipPath";
    case CSSSampleId::kContent:
      return os << "CSSSampleId::kContent";
    case CSSSampleId::kCounterIncrement:
      return os << "CSSSampleId::kCounterIncrement";
    case CSSSampleId::kCounterReset:
      return os << "CSSSampleId::kCounterReset";
    case CSSSampleId::kCursor:
      return os << "CSSSampleId::kCursor";
    case CSSSampleId::kEmptyCells:
      return os << "CSSSampleId::kEmptyCells";
    case CSSSampleId::kFloat:
      return os << "CSSSampleId::kFloat";
    case CSSSampleId::kFontStretch:
      return os << "CSSSampleId::kFontStretch";
    case CSSSampleId::kHeight:
      return os << "CSSSampleId::kHeight";
    case CSSSampleId::kImageRendering:
      return os << "CSSSampleId::kImageRendering";
    case CSSSampleId::kLeft:
      return os << "CSSSampleId::kLeft";
    case CSSSampleId::kLetterSpacing:
      return os << "CSSSampleId::kLetterSpacing";
    case CSSSampleId::kListStyle:
      return os << "CSSSampleId::kListStyle";
    case CSSSampleId::kListStyleImage:
      return os << "CSSSampleId::kListStyleImage";
    case CSSSampleId::kListStylePosition:
      return os << "CSSSampleId::kListStylePosition";
    case CSSSampleId::kListStyleType:
      return os << "CSSSampleId::kListStyleType";
    case CSSSampleId::kMargin:
      return os << "CSSSampleId::kMargin";
    case CSSSampleId::kMarginBottom:
      return os << "CSSSampleId::kMarginBottom";
    case CSSSampleId::kMarginLeft:
      return os << "CSSSampleId::kMarginLeft";
    case CSSSampleId::kMarginRight:
      return os << "CSSSampleId::kMarginRight";
    case CSSSampleId::kMarginTop:
      return os << "CSSSampleId::kMarginTop";
    case CSSSampleId::kMaxHeight:
      return os << "CSSSampleId::kMaxHeight";
    case CSSSampleId::kMaxWidth:
      return os << "CSSSampleId::kMaxWidth";
    case CSSSampleId::kMinHeight:
      return os << "CSSSampleId::kMinHeight";
    case CSSSampleId::kMinWidth:
      return os << "CSSSampleId::kMinWidth";
    case CSSSampleId::kOpacity:
      return os << "CSSSampleId::kOpacity";
    case CSSSampleId::kOrphans:
      return os << "CSSSampleId::kOrphans";
    case CSSSampleId::kOutline:
      return os << "CSSSampleId::kOutline";
    case CSSSampleId::kOutlineColor:
      return os << "CSSSampleId::kOutlineColor";
    case CSSSampleId::kOutlineOffset:
      return os << "CSSSampleId::kOutlineOffset";
    case CSSSampleId::kOutlineStyle:
      return os << "CSSSampleId::kOutlineStyle";
    case CSSSampleId::kOutlineWidth:
      return os << "CSSSampleId::kOutlineWidth";
    case CSSSampleId::kOverflow:
      return os << "CSSSampleId::kOverflow";
    case CSSSampleId::kOverflowWrap:
      return os << "CSSSampleId::kOverflowWrap";
    case CSSSampleId::kOverflowX:
      return os << "CSSSampleId::kOverflowX";
    case CSSSampleId::kOverflowY:
      return os << "CSSSampleId::kOverflowY";
    case CSSSampleId::kPadding:
      return os << "CSSSampleId::kPadding";
    case CSSSampleId::kPaddingBottom:
      return os << "CSSSampleId::kPaddingBottom";
    case CSSSampleId::kPaddingLeft:
      return os << "CSSSampleId::kPaddingLeft";
    case CSSSampleId::kPaddingRight:
      return os << "CSSSampleId::kPaddingRight";
    case CSSSampleId::kPaddingTop:
      return os << "CSSSampleId::kPaddingTop";
    case CSSSampleId::kPage:
      return os << "CSSSampleId::kPage";
    case CSSSampleId::kPageBreakAfter:
      return os << "CSSSampleId::kPageBreakAfter";
    case CSSSampleId::kPageBreakBefore:
      return os << "CSSSampleId::kPageBreakBefore";
    case CSSSampleId::kPageBreakInside:
      return os << "CSSSampleId::kPageBreakInside";
    case CSSSampleId::kPointerEvents:
      return os << "CSSSampleId::kPointerEvents";
    case CSSSampleId::kPosition:
      return os << "CSSSampleId::kPosition";
    case CSSSampleId::kQuotes:
      return os << "CSSSampleId::kQuotes";
    case CSSSampleId::kResize:
      return os << "CSSSampleId::kResize";
    case CSSSampleId::kRight:
      return os << "CSSSampleId::kRight";
    case CSSSampleId::kSize:
      return os << "CSSSampleId::kSize";
    case CSSSampleId::kSrc:
      return os << "CSSSampleId::kSrc";
    case CSSSampleId::kSpeak:
      return os << "CSSSampleId::kSpeak";
    case CSSSampleId::kTableLayout:
      return os << "CSSSampleId::kTableLayout";
    case CSSSampleId::kTabSize:
      return os << "CSSSampleId::kTabSize";
    case CSSSampleId::kTextAlign:
      return os << "CSSSampleId::kTextAlign";
    case CSSSampleId::kTextDecoration:
      return os << "CSSSampleId::kTextDecoration";
    case CSSSampleId::kTextIndent:
      return os << "CSSSampleId::kTextIndent";
    case CSSSampleId::kTextOverflow:
      return os << "CSSSampleId::kTextOverflow";
    case CSSSampleId::kTextShadow:
      return os << "CSSSampleId::kTextShadow";
    case CSSSampleId::kTextTransform:
      return os << "CSSSampleId::kTextTransform";
    case CSSSampleId::kTop:
      return os << "CSSSampleId::kTop";
    case CSSSampleId::kTransition:
      return os << "CSSSampleId::kTransition";
    case CSSSampleId::kTransitionDelay:
      return os << "CSSSampleId::kTransitionDelay";
    case CSSSampleId::kTransitionDuration:
      return os << "CSSSampleId::kTransitionDuration";
    case CSSSampleId::kTransitionProperty:
      return os << "CSSSampleId::kTransitionProperty";
    case CSSSampleId::kTransitionTimingFunction:
      return os << "CSSSampleId::kTransitionTimingFunction";
    case CSSSampleId::kUnicodeBidi:
      return os << "CSSSampleId::kUnicodeBidi";
    case CSSSampleId::kUnicodeRange:
      return os << "CSSSampleId::kUnicodeRange";
    case CSSSampleId::kVerticalAlign:
      return os << "CSSSampleId::kVerticalAlign";
    case CSSSampleId::kVisibility:
      return os << "CSSSampleId::kVisibility";
    case CSSSampleId::kWhiteSpace:
      return os << "CSSSampleId::kWhiteSpace";
    case CSSSampleId::kWidows:
      return os << "CSSSampleId::kWidows";
    case CSSSampleId::kWidth:
      return os << "CSSSampleId::kWidth";
    case CSSSampleId::kWordBreak:
      return os << "CSSSampleId::kWordBreak";
    case CSSSampleId::kWordSpacing:
      return os << "CSSSampleId::kWordSpacing";
    case CSSSampleId::kAliasWordWrap:
      return os << "CSSSampleId::kAliasWordWrap";
    case CSSSampleId::kZIndex:
      return os << "CSSSampleId::kZIndex";
    case CSSSampleId::kAliasWebkitAnimation:
      return os << "CSSSampleId::kAliasWebkitAnimation";
    case CSSSampleId::kAliasWebkitAnimationDelay:
      return os << "CSSSampleId::kAliasWebkitAnimationDelay";
    case CSSSampleId::kAliasWebkitAnimationDirection:
      return os << "CSSSampleId::kAliasWebkitAnimationDirection";
    case CSSSampleId::kAliasWebkitAnimationDuration:
      return os << "CSSSampleId::kAliasWebkitAnimationDuration";
    case CSSSampleId::kAliasWebkitAnimationFillMode:
      return os << "CSSSampleId::kAliasWebkitAnimationFillMode";
    case CSSSampleId::kAliasWebkitAnimationIterationCount:
      return os << "CSSSampleId::kAliasWebkitAnimationIterationCount";
    case CSSSampleId::kAliasWebkitAnimationName:
      return os << "CSSSampleId::kAliasWebkitAnimationName";
    case CSSSampleId::kAliasWebkitAnimationPlayState:
      return os << "CSSSampleId::kAliasWebkitAnimationPlayState";
    case CSSSampleId::kAliasWebkitAnimationTimingFunction:
      return os << "CSSSampleId::kAliasWebkitAnimationTimingFunction";
    case CSSSampleId::kWebkitAppearance:
      return os << "CSSSampleId::kWebkitAppearance";
    case CSSSampleId::kAliasWebkitBackfaceVisibility:
      return os << "CSSSampleId::kAliasWebkitBackfaceVisibility";
    case CSSSampleId::kAliasWebkitBackgroundClip:
      return os << "CSSSampleId::kAliasWebkitBackgroundClip";
    case CSSSampleId::kAliasWebkitBackgroundOrigin:
      return os << "CSSSampleId::kAliasWebkitBackgroundOrigin";
    case CSSSampleId::kAliasWebkitBackgroundSize:
      return os << "CSSSampleId::kAliasWebkitBackgroundSize";
    case CSSSampleId::kAliasWebkitBorderAfter:
      return os << "CSSSampleId::kAliasWebkitBorderAfter";
    case CSSSampleId::kAliasWebkitBorderAfterColor:
      return os << "CSSSampleId::kAliasWebkitBorderAfterColor";
    case CSSSampleId::kAliasWebkitBorderAfterStyle:
      return os << "CSSSampleId::kAliasWebkitBorderAfterStyle";
    case CSSSampleId::kAliasWebkitBorderAfterWidth:
      return os << "CSSSampleId::kAliasWebkitBorderAfterWidth";
    case CSSSampleId::kAliasWebkitBorderBefore:
      return os << "CSSSampleId::kAliasWebkitBorderBefore";
    case CSSSampleId::kAliasWebkitBorderBeforeColor:
      return os << "CSSSampleId::kAliasWebkitBorderBeforeColor";
    case CSSSampleId::kAliasWebkitBorderBeforeStyle:
      return os << "CSSSampleId::kAliasWebkitBorderBeforeStyle";
    case CSSSampleId::kAliasWebkitBorderBeforeWidth:
      return os << "CSSSampleId::kAliasWebkitBorderBeforeWidth";
    case CSSSampleId::kAliasWebkitBorderEnd:
      return os << "CSSSampleId::kAliasWebkitBorderEnd";
    case CSSSampleId::kAliasWebkitBorderEndColor:
      return os << "CSSSampleId::kAliasWebkitBorderEndColor";
    case CSSSampleId::kAliasWebkitBorderEndStyle:
      return os << "CSSSampleId::kAliasWebkitBorderEndStyle";
    case CSSSampleId::kAliasWebkitBorderEndWidth:
      return os << "CSSSampleId::kAliasWebkitBorderEndWidth";
    case CSSSampleId::kWebkitBorderHorizontalSpacing:
      return os << "CSSSampleId::kWebkitBorderHorizontalSpacing";
    case CSSSampleId::kWebkitBorderImage:
      return os << "CSSSampleId::kWebkitBorderImage";
    case CSSSampleId::kAliasWebkitBorderRadius:
      return os << "CSSSampleId::kAliasWebkitBorderRadius";
    case CSSSampleId::kAliasWebkitBorderStart:
      return os << "CSSSampleId::kAliasWebkitBorderStart";
    case CSSSampleId::kAliasWebkitBorderStartColor:
      return os << "CSSSampleId::kAliasWebkitBorderStartColor";
    case CSSSampleId::kAliasWebkitBorderStartStyle:
      return os << "CSSSampleId::kAliasWebkitBorderStartStyle";
    case CSSSampleId::kAliasWebkitBorderStartWidth:
      return os << "CSSSampleId::kAliasWebkitBorderStartWidth";
    case CSSSampleId::kWebkitBorderVerticalSpacing:
      return os << "CSSSampleId::kWebkitBorderVerticalSpacing";
    case CSSSampleId::kWebkitBoxAlign:
      return os << "CSSSampleId::kWebkitBoxAlign";
    case CSSSampleId::kWebkitBoxDirection:
      return os << "CSSSampleId::kWebkitBoxDirection";
    case CSSSampleId::kWebkitBoxFlex:
      return os << "CSSSampleId::kWebkitBoxFlex";
    case CSSSampleId::kWebkitBoxOrdinalGroup:
      return os << "CSSSampleId::kWebkitBoxOrdinalGroup";
    case CSSSampleId::kWebkitBoxOrient:
      return os << "CSSSampleId::kWebkitBoxOrient";
    case CSSSampleId::kWebkitBoxPack:
      return os << "CSSSampleId::kWebkitBoxPack";
    case CSSSampleId::kWebkitBoxReflect:
      return os << "CSSSampleId::kWebkitBoxReflect";
    case CSSSampleId::kAliasWebkitBoxShadow:
      return os << "CSSSampleId::kAliasWebkitBoxShadow";
    case CSSSampleId::kWebkitColumnBreakAfter:
      return os << "CSSSampleId::kWebkitColumnBreakAfter";
    case CSSSampleId::kWebkitColumnBreakBefore:
      return os << "CSSSampleId::kWebkitColumnBreakBefore";
    case CSSSampleId::kWebkitColumnBreakInside:
      return os << "CSSSampleId::kWebkitColumnBreakInside";
    case CSSSampleId::kAliasWebkitColumnCount:
      return os << "CSSSampleId::kAliasWebkitColumnCount";
    case CSSSampleId::kAliasWebkitColumnGap:
      return os << "CSSSampleId::kAliasWebkitColumnGap";
    case CSSSampleId::kAliasWebkitColumnRule:
      return os << "CSSSampleId::kAliasWebkitColumnRule";
    case CSSSampleId::kAliasWebkitColumnRuleColor:
      return os << "CSSSampleId::kAliasWebkitColumnRuleColor";
    case CSSSampleId::kAliasWebkitColumnRuleStyle:
      return os << "CSSSampleId::kAliasWebkitColumnRuleStyle";
    case CSSSampleId::kAliasWebkitColumnRuleWidth:
      return os << "CSSSampleId::kAliasWebkitColumnRuleWidth";
    case CSSSampleId::kAliasWebkitColumnSpan:
      return os << "CSSSampleId::kAliasWebkitColumnSpan";
    case CSSSampleId::kAliasWebkitColumnWidth:
      return os << "CSSSampleId::kAliasWebkitColumnWidth";
    case CSSSampleId::kAliasWebkitColumns:
      return os << "CSSSampleId::kAliasWebkitColumns";
    case CSSSampleId::kAlignContent:
      return os << "CSSSampleId::kAlignContent";
    case CSSSampleId::kAlignItems:
      return os << "CSSSampleId::kAlignItems";
    case CSSSampleId::kAlignSelf:
      return os << "CSSSampleId::kAlignSelf";
    case CSSSampleId::kFlex:
      return os << "CSSSampleId::kFlex";
    case CSSSampleId::kFlexBasis:
      return os << "CSSSampleId::kFlexBasis";
    case CSSSampleId::kFlexDirection:
      return os << "CSSSampleId::kFlexDirection";
    case CSSSampleId::kFlexFlow:
      return os << "CSSSampleId::kFlexFlow";
    case CSSSampleId::kFlexGrow:
      return os << "CSSSampleId::kFlexGrow";
    case CSSSampleId::kFlexShrink:
      return os << "CSSSampleId::kFlexShrink";
    case CSSSampleId::kFlexWrap:
      return os << "CSSSampleId::kFlexWrap";
    case CSSSampleId::kJustifyContent:
      return os << "CSSSampleId::kJustifyContent";
    case CSSSampleId::kWebkitFontSizeDelta:
      return os << "CSSSampleId::kWebkitFontSizeDelta";
    case CSSSampleId::kGridTemplateColumns:
      return os << "CSSSampleId::kGridTemplateColumns";
    case CSSSampleId::kGridTemplateRows:
      return os << "CSSSampleId::kGridTemplateRows";
    case CSSSampleId::kGridColumnStart:
      return os << "CSSSampleId::kGridColumnStart";
    case CSSSampleId::kGridColumnEnd:
      return os << "CSSSampleId::kGridColumnEnd";
    case CSSSampleId::kGridRowStart:
      return os << "CSSSampleId::kGridRowStart";
    case CSSSampleId::kGridRowEnd:
      return os << "CSSSampleId::kGridRowEnd";
    case CSSSampleId::kGridColumn:
      return os << "CSSSampleId::kGridColumn";
    case CSSSampleId::kGridRow:
      return os << "CSSSampleId::kGridRow";
    case CSSSampleId::kGridAutoFlow:
      return os << "CSSSampleId::kGridAutoFlow";
    case CSSSampleId::kWebkitHighlight:
      return os << "CSSSampleId::kWebkitHighlight";
    case CSSSampleId::kWebkitHyphenateCharacter:
      return os << "CSSSampleId::kWebkitHyphenateCharacter";
    case CSSSampleId::kWebkitLineBreak:
      return os << "CSSSampleId::kWebkitLineBreak";
    case CSSSampleId::kWebkitLineClamp:
      return os << "CSSSampleId::kWebkitLineClamp";
    case CSSSampleId::kAliasWebkitLogicalWidth:
      return os << "CSSSampleId::kAliasWebkitLogicalWidth";
    case CSSSampleId::kAliasWebkitLogicalHeight:
      return os << "CSSSampleId::kAliasWebkitLogicalHeight";
    case CSSSampleId::kWebkitMarginAfterCollapse:
      return os << "CSSSampleId::kWebkitMarginAfterCollapse";
    case CSSSampleId::kWebkitMarginBeforeCollapse:
      return os << "CSSSampleId::kWebkitMarginBeforeCollapse";
    case CSSSampleId::kWebkitMarginBottomCollapse:
      return os << "CSSSampleId::kWebkitMarginBottomCollapse";
    case CSSSampleId::kWebkitMarginTopCollapse:
      return os << "CSSSampleId::kWebkitMarginTopCollapse";
    case CSSSampleId::kWebkitMarginCollapse:
      return os << "CSSSampleId::kWebkitMarginCollapse";
    case CSSSampleId::kAliasWebkitMarginAfter:
      return os << "CSSSampleId::kAliasWebkitMarginAfter";
    case CSSSampleId::kAliasWebkitMarginBefore:
      return os << "CSSSampleId::kAliasWebkitMarginBefore";
    case CSSSampleId::kAliasWebkitMarginEnd:
      return os << "CSSSampleId::kAliasWebkitMarginEnd";
    case CSSSampleId::kAliasWebkitMarginStart:
      return os << "CSSSampleId::kAliasWebkitMarginStart";
    case CSSSampleId::kWebkitMask:
      return os << "CSSSampleId::kWebkitMask";
    case CSSSampleId::kWebkitMaskBoxImage:
      return os << "CSSSampleId::kWebkitMaskBoxImage";
    case CSSSampleId::kWebkitMaskBoxImageOutset:
      return os << "CSSSampleId::kWebkitMaskBoxImageOutset";
    case CSSSampleId::kWebkitMaskBoxImageRepeat:
      return os << "CSSSampleId::kWebkitMaskBoxImageRepeat";
    case CSSSampleId::kWebkitMaskBoxImageSlice:
      return os << "CSSSampleId::kWebkitMaskBoxImageSlice";
    case CSSSampleId::kWebkitMaskBoxImageSource:
      return os << "CSSSampleId::kWebkitMaskBoxImageSource";
    case CSSSampleId::kWebkitMaskBoxImageWidth:
      return os << "CSSSampleId::kWebkitMaskBoxImageWidth";
    case CSSSampleId::kWebkitMaskClip:
      return os << "CSSSampleId::kWebkitMaskClip";
    case CSSSampleId::kWebkitMaskComposite:
      return os << "CSSSampleId::kWebkitMaskComposite";
    case CSSSampleId::kWebkitMaskImage:
      return os << "CSSSampleId::kWebkitMaskImage";
    case CSSSampleId::kWebkitMaskOrigin:
      return os << "CSSSampleId::kWebkitMaskOrigin";
    case CSSSampleId::kWebkitMaskPosition:
      return os << "CSSSampleId::kWebkitMaskPosition";
    case CSSSampleId::kWebkitMaskPositionX:
      return os << "CSSSampleId::kWebkitMaskPositionX";
    case CSSSampleId::kWebkitMaskPositionY:
      return os << "CSSSampleId::kWebkitMaskPositionY";
    case CSSSampleId::kWebkitMaskRepeat:
      return os << "CSSSampleId::kWebkitMaskRepeat";
    case CSSSampleId::kWebkitMaskRepeatX:
      return os << "CSSSampleId::kWebkitMaskRepeatX";
    case CSSSampleId::kWebkitMaskRepeatY:
      return os << "CSSSampleId::kWebkitMaskRepeatY";
    case CSSSampleId::kWebkitMaskSize:
      return os << "CSSSampleId::kWebkitMaskSize";
    case CSSSampleId::kAliasWebkitMaxLogicalWidth:
      return os << "CSSSampleId::kAliasWebkitMaxLogicalWidth";
    case CSSSampleId::kAliasWebkitMaxLogicalHeight:
      return os << "CSSSampleId::kAliasWebkitMaxLogicalHeight";
    case CSSSampleId::kAliasWebkitMinLogicalWidth:
      return os << "CSSSampleId::kAliasWebkitMinLogicalWidth";
    case CSSSampleId::kAliasWebkitMinLogicalHeight:
      return os << "CSSSampleId::kAliasWebkitMinLogicalHeight";
    case CSSSampleId::kOrder:
      return os << "CSSSampleId::kOrder";
    case CSSSampleId::kAliasWebkitPaddingAfter:
      return os << "CSSSampleId::kAliasWebkitPaddingAfter";
    case CSSSampleId::kAliasWebkitPaddingBefore:
      return os << "CSSSampleId::kAliasWebkitPaddingBefore";
    case CSSSampleId::kAliasWebkitPaddingEnd:
      return os << "CSSSampleId::kAliasWebkitPaddingEnd";
    case CSSSampleId::kAliasWebkitPaddingStart:
      return os << "CSSSampleId::kAliasWebkitPaddingStart";
    case CSSSampleId::kAliasWebkitPerspective:
      return os << "CSSSampleId::kAliasWebkitPerspective";
    case CSSSampleId::kAliasWebkitPerspectiveOrigin:
      return os << "CSSSampleId::kAliasWebkitPerspectiveOrigin";
    case CSSSampleId::kWebkitPerspectiveOriginX:
      return os << "CSSSampleId::kWebkitPerspectiveOriginX";
    case CSSSampleId::kWebkitPerspectiveOriginY:
      return os << "CSSSampleId::kWebkitPerspectiveOriginY";
    case CSSSampleId::kWebkitPrintColorAdjust:
      return os << "CSSSampleId::kWebkitPrintColorAdjust";
    case CSSSampleId::kWebkitRtlOrdering:
      return os << "CSSSampleId::kWebkitRtlOrdering";
    case CSSSampleId::kWebkitRubyPosition:
      return os << "CSSSampleId::kWebkitRubyPosition";
    case CSSSampleId::kWebkitTextCombine:
      return os << "CSSSampleId::kWebkitTextCombine";
    case CSSSampleId::kWebkitTextDecorationsInEffect:
      return os << "CSSSampleId::kWebkitTextDecorationsInEffect";
    case CSSSampleId::kWebkitTextEmphasis:
      return os << "CSSSampleId::kWebkitTextEmphasis";
    case CSSSampleId::kWebkitTextEmphasisColor:
      return os << "CSSSampleId::kWebkitTextEmphasisColor";
    case CSSSampleId::kWebkitTextEmphasisPosition:
      return os << "CSSSampleId::kWebkitTextEmphasisPosition";
    case CSSSampleId::kWebkitTextEmphasisStyle:
      return os << "CSSSampleId::kWebkitTextEmphasisStyle";
    case CSSSampleId::kWebkitTextFillColor:
      return os << "CSSSampleId::kWebkitTextFillColor";
    case CSSSampleId::kWebkitTextSecurity:
      return os << "CSSSampleId::kWebkitTextSecurity";
    case CSSSampleId::kWebkitTextStroke:
      return os << "CSSSampleId::kWebkitTextStroke";
    case CSSSampleId::kWebkitTextStrokeColor:
      return os << "CSSSampleId::kWebkitTextStrokeColor";
    case CSSSampleId::kWebkitTextStrokeWidth:
      return os << "CSSSampleId::kWebkitTextStrokeWidth";
    case CSSSampleId::kAliasWebkitTransform:
      return os << "CSSSampleId::kAliasWebkitTransform";
    case CSSSampleId::kAliasWebkitTransformOrigin:
      return os << "CSSSampleId::kAliasWebkitTransformOrigin";
    case CSSSampleId::kWebkitTransformOriginX:
      return os << "CSSSampleId::kWebkitTransformOriginX";
    case CSSSampleId::kWebkitTransformOriginY:
      return os << "CSSSampleId::kWebkitTransformOriginY";
    case CSSSampleId::kWebkitTransformOriginZ:
      return os << "CSSSampleId::kWebkitTransformOriginZ";
    case CSSSampleId::kAliasWebkitTransformStyle:
      return os << "CSSSampleId::kAliasWebkitTransformStyle";
    case CSSSampleId::kAliasWebkitTransition:
      return os << "CSSSampleId::kAliasWebkitTransition";
    case CSSSampleId::kAliasWebkitTransitionDelay:
      return os << "CSSSampleId::kAliasWebkitTransitionDelay";
    case CSSSampleId::kAliasWebkitTransitionDuration:
      return os << "CSSSampleId::kAliasWebkitTransitionDuration";
    case CSSSampleId::kAliasWebkitTransitionProperty:
      return os << "CSSSampleId::kAliasWebkitTransitionProperty";
    case CSSSampleId::kAliasWebkitTransitionTimingFunction:
      return os << "CSSSampleId::kAliasWebkitTransitionTimingFunction";
    case CSSSampleId::kWebkitUserDrag:
      return os << "CSSSampleId::kWebkitUserDrag";
    case CSSSampleId::kWebkitUserModify:
      return os << "CSSSampleId::kWebkitUserModify";
    case CSSSampleId::kAliasWebkitUserSelect:
      return os << "CSSSampleId::kAliasWebkitUserSelect";
    case CSSSampleId::kShapeOutside:
      return os << "CSSSampleId::kShapeOutside";
    case CSSSampleId::kShapeMargin:
      return os << "CSSSampleId::kShapeMargin";
    case CSSSampleId::kClipPath:
      return os << "CSSSampleId::kClipPath";
    case CSSSampleId::kClipRule:
      return os << "CSSSampleId::kClipRule";
    case CSSSampleId::kMask:
      return os << "CSSSampleId::kMask";
    case CSSSampleId::kFilter:
      return os << "CSSSampleId::kFilter";
    case CSSSampleId::kFloodColor:
      return os << "CSSSampleId::kFloodColor";
    case CSSSampleId::kFloodOpacity:
      return os << "CSSSampleId::kFloodOpacity";
    case CSSSampleId::kLightingColor:
      return os << "CSSSampleId::kLightingColor";
    case CSSSampleId::kStopColor:
      return os << "CSSSampleId::kStopColor";
    case CSSSampleId::kStopOpacity:
      return os << "CSSSampleId::kStopOpacity";
    case CSSSampleId::kColorInterpolation:
      return os << "CSSSampleId::kColorInterpolation";
    case CSSSampleId::kColorInterpolationFilters:
      return os << "CSSSampleId::kColorInterpolationFilters";
    case CSSSampleId::kColorRendering:
      return os << "CSSSampleId::kColorRendering";
    case CSSSampleId::kFill:
      return os << "CSSSampleId::kFill";
    case CSSSampleId::kFillOpacity:
      return os << "CSSSampleId::kFillOpacity";
    case CSSSampleId::kFillRule:
      return os << "CSSSampleId::kFillRule";
    case CSSSampleId::kMarker:
      return os << "CSSSampleId::kMarker";
    case CSSSampleId::kMarkerEnd:
      return os << "CSSSampleId::kMarkerEnd";
    case CSSSampleId::kMarkerMid:
      return os << "CSSSampleId::kMarkerMid";
    case CSSSampleId::kMarkerStart:
      return os << "CSSSampleId::kMarkerStart";
    case CSSSampleId::kMaskType:
      return os << "CSSSampleId::kMaskType";
    case CSSSampleId::kShapeRendering:
      return os << "CSSSampleId::kShapeRendering";
    case CSSSampleId::kStroke:
      return os << "CSSSampleId::kStroke";
    case CSSSampleId::kStrokeDasharray:
      return os << "CSSSampleId::kStrokeDasharray";
    case CSSSampleId::kStrokeDashoffset:
      return os << "CSSSampleId::kStrokeDashoffset";
    case CSSSampleId::kStrokeLinecap:
      return os << "CSSSampleId::kStrokeLinecap";
    case CSSSampleId::kStrokeLinejoin:
      return os << "CSSSampleId::kStrokeLinejoin";
    case CSSSampleId::kStrokeMiterlimit:
      return os << "CSSSampleId::kStrokeMiterlimit";
    case CSSSampleId::kStrokeOpacity:
      return os << "CSSSampleId::kStrokeOpacity";
    case CSSSampleId::kStrokeWidth:
      return os << "CSSSampleId::kStrokeWidth";
    case CSSSampleId::kAlignmentBaseline:
      return os << "CSSSampleId::kAlignmentBaseline";
    case CSSSampleId::kBaselineShift:
      return os << "CSSSampleId::kBaselineShift";
    case CSSSampleId::kDominantBaseline:
      return os << "CSSSampleId::kDominantBaseline";
    case CSSSampleId::kTextAnchor:
      return os << "CSSSampleId::kTextAnchor";
    case CSSSampleId::kVectorEffect:
      return os << "CSSSampleId::kVectorEffect";
    case CSSSampleId::kWritingMode:
      return os << "CSSSampleId::kWritingMode";
    case CSSSampleId::kTextDecorationLine:
      return os << "CSSSampleId::kTextDecorationLine";
    case CSSSampleId::kTextDecorationStyle:
      return os << "CSSSampleId::kTextDecorationStyle";
    case CSSSampleId::kTextDecorationColor:
      return os << "CSSSampleId::kTextDecorationColor";
    case CSSSampleId::kTextAlignLast:
      return os << "CSSSampleId::kTextAlignLast";
    case CSSSampleId::kTextUnderlinePosition:
      return os << "CSSSampleId::kTextUnderlinePosition";
    case CSSSampleId::kMaxZoom:
      return os << "CSSSampleId::kMaxZoom";
    case CSSSampleId::kMinZoom:
      return os << "CSSSampleId::kMinZoom";
    case CSSSampleId::kOrientation:
      return os << "CSSSampleId::kOrientation";
    case CSSSampleId::kUserZoom:
      return os << "CSSSampleId::kUserZoom";
    case CSSSampleId::kWebkitAppRegion:
      return os << "CSSSampleId::kWebkitAppRegion";
    case CSSSampleId::kAliasWebkitFilter:
      return os << "CSSSampleId::kAliasWebkitFilter";
    case CSSSampleId::kWebkitBoxDecorationBreak:
      return os << "CSSSampleId::kWebkitBoxDecorationBreak";
    case CSSSampleId::kWebkitTapHighlightColor:
      return os << "CSSSampleId::kWebkitTapHighlightColor";
    case CSSSampleId::kBufferedRendering:
      return os << "CSSSampleId::kBufferedRendering";
    case CSSSampleId::kGridAutoRows:
      return os << "CSSSampleId::kGridAutoRows";
    case CSSSampleId::kGridAutoColumns:
      return os << "CSSSampleId::kGridAutoColumns";
    case CSSSampleId::kBackgroundBlendMode:
      return os << "CSSSampleId::kBackgroundBlendMode";
    case CSSSampleId::kMixBlendMode:
      return os << "CSSSampleId::kMixBlendMode";
    case CSSSampleId::kTouchAction:
      return os << "CSSSampleId::kTouchAction";
    case CSSSampleId::kGridArea:
      return os << "CSSSampleId::kGridArea";
    case CSSSampleId::kGridTemplateAreas:
      return os << "CSSSampleId::kGridTemplateAreas";
    case CSSSampleId::kAnimation:
      return os << "CSSSampleId::kAnimation";
    case CSSSampleId::kAnimationDelay:
      return os << "CSSSampleId::kAnimationDelay";
    case CSSSampleId::kAnimationDirection:
      return os << "CSSSampleId::kAnimationDirection";
    case CSSSampleId::kAnimationDuration:
      return os << "CSSSampleId::kAnimationDuration";
    case CSSSampleId::kAnimationFillMode:
      return os << "CSSSampleId::kAnimationFillMode";
    case CSSSampleId::kAnimationIterationCount:
      return os << "CSSSampleId::kAnimationIterationCount";
    case CSSSampleId::kAnimationName:
      return os << "CSSSampleId::kAnimationName";
    case CSSSampleId::kAnimationPlayState:
      return os << "CSSSampleId::kAnimationPlayState";
    case CSSSampleId::kAnimationTimingFunction:
      return os << "CSSSampleId::kAnimationTimingFunction";
    case CSSSampleId::kObjectFit:
      return os << "CSSSampleId::kObjectFit";
    case CSSSampleId::kPaintOrder:
      return os << "CSSSampleId::kPaintOrder";
    case CSSSampleId::kMaskSourceType:
      return os << "CSSSampleId::kMaskSourceType";
    case CSSSampleId::kIsolation:
      return os << "CSSSampleId::kIsolation";
    case CSSSampleId::kObjectPosition:
      return os << "CSSSampleId::kObjectPosition";
    case CSSSampleId::kShapeImageThreshold:
      return os << "CSSSampleId::kShapeImageThreshold";
    case CSSSampleId::kColumnFill:
      return os << "CSSSampleId::kColumnFill";
    case CSSSampleId::kTextJustify:
      return os << "CSSSampleId::kTextJustify";
    case CSSSampleId::kJustifySelf:
      return os << "CSSSampleId::kJustifySelf";
    case CSSSampleId::kScrollBehavior:
      return os << "CSSSampleId::kScrollBehavior";
    case CSSSampleId::kWillChange:
      return os << "CSSSampleId::kWillChange";
    case CSSSampleId::kTransform:
      return os << "CSSSampleId::kTransform";
    case CSSSampleId::kTransformOrigin:
      return os << "CSSSampleId::kTransformOrigin";
    case CSSSampleId::kTransformStyle:
      return os << "CSSSampleId::kTransformStyle";
    case CSSSampleId::kPerspective:
      return os << "CSSSampleId::kPerspective";
    case CSSSampleId::kPerspectiveOrigin:
      return os << "CSSSampleId::kPerspectiveOrigin";
    case CSSSampleId::kBackfaceVisibility:
      return os << "CSSSampleId::kBackfaceVisibility";
    case CSSSampleId::kGridTemplate:
      return os << "CSSSampleId::kGridTemplate";
    case CSSSampleId::kGrid:
      return os << "CSSSampleId::kGrid";
    case CSSSampleId::kAll:
      return os << "CSSSampleId::kAll";
    case CSSSampleId::kJustifyItems:
      return os << "CSSSampleId::kJustifyItems";
    case CSSSampleId::kX:
      return os << "CSSSampleId::kX";
    case CSSSampleId::kY:
      return os << "CSSSampleId::kY";
    case CSSSampleId::kRx:
      return os << "CSSSampleId::kRx";
    case CSSSampleId::kRy:
      return os << "CSSSampleId::kRy";
    case CSSSampleId::kFontSizeAdjust:
      return os << "CSSSampleId::kFontSizeAdjust";
    case CSSSampleId::kCx:
      return os << "CSSSampleId::kCx";
    case CSSSampleId::kCy:
      return os << "CSSSampleId::kCy";
    case CSSSampleId::kR:
      return os << "CSSSampleId::kR";
    case CSSSampleId::kAliasEpubCaptionSide:
      return os << "CSSSampleId::kAliasEpubCaptionSide";
    case CSSSampleId::kAliasEpubTextCombine:
      return os << "CSSSampleId::kAliasEpubTextCombine";
    case CSSSampleId::kAliasEpubTextEmphasis:
      return os << "CSSSampleId::kAliasEpubTextEmphasis";
    case CSSSampleId::kAliasEpubTextEmphasisColor:
      return os << "CSSSampleId::kAliasEpubTextEmphasisColor";
    case CSSSampleId::kAliasEpubTextEmphasisStyle:
      return os << "CSSSampleId::kAliasEpubTextEmphasisStyle";
    case CSSSampleId::kAliasEpubTextOrientation:
      return os << "CSSSampleId::kAliasEpubTextOrientation";
    case CSSSampleId::kAliasEpubTextTransform:
      return os << "CSSSampleId::kAliasEpubTextTransform";
    case CSSSampleId::kAliasEpubWordBreak:
      return os << "CSSSampleId::kAliasEpubWordBreak";
    case CSSSampleId::kAliasEpubWritingMode:
      return os << "CSSSampleId::kAliasEpubWritingMode";
    case CSSSampleId::kAliasWebkitAlignContent:
      return os << "CSSSampleId::kAliasWebkitAlignContent";
    case CSSSampleId::kAliasWebkitAlignItems:
      return os << "CSSSampleId::kAliasWebkitAlignItems";
    case CSSSampleId::kAliasWebkitAlignSelf:
      return os << "CSSSampleId::kAliasWebkitAlignSelf";
    case CSSSampleId::kAliasWebkitBorderBottomLeftRadius:
      return os << "CSSSampleId::kAliasWebkitBorderBottomLeftRadius";
    case CSSSampleId::kAliasWebkitBorderBottomRightRadius:
      return os << "CSSSampleId::kAliasWebkitBorderBottomRightRadius";
    case CSSSampleId::kAliasWebkitBorderTopLeftRadius:
      return os << "CSSSampleId::kAliasWebkitBorderTopLeftRadius";
    case CSSSampleId::kAliasWebkitBorderTopRightRadius:
      return os << "CSSSampleId::kAliasWebkitBorderTopRightRadius";
    case CSSSampleId::kAliasWebkitBoxSizing:
      return os << "CSSSampleId::kAliasWebkitBoxSizing";
    case CSSSampleId::kAliasWebkitFlex:
      return os << "CSSSampleId::kAliasWebkitFlex";
    case CSSSampleId::kAliasWebkitFlexBasis:
      return os << "CSSSampleId::kAliasWebkitFlexBasis";
    case CSSSampleId::kAliasWebkitFlexDirection:
      return os << "CSSSampleId::kAliasWebkitFlexDirection";
    case CSSSampleId::kAliasWebkitFlexFlow:
      return os << "CSSSampleId::kAliasWebkitFlexFlow";
    case CSSSampleId::kAliasWebkitFlexGrow:
      return os << "CSSSampleId::kAliasWebkitFlexGrow";
    case CSSSampleId::kAliasWebkitFlexShrink:
      return os << "CSSSampleId::kAliasWebkitFlexShrink";
    case CSSSampleId::kAliasWebkitFlexWrap:
      return os << "CSSSampleId::kAliasWebkitFlexWrap";
    case CSSSampleId::kAliasWebkitJustifyContent:
      return os << "CSSSampleId::kAliasWebkitJustifyContent";
    case CSSSampleId::kAliasWebkitOpacity:
      return os << "CSSSampleId::kAliasWebkitOpacity";
    case CSSSampleId::kAliasWebkitOrder:
      return os << "CSSSampleId::kAliasWebkitOrder";
    case CSSSampleId::kAliasWebkitShapeImageThreshold:
      return os << "CSSSampleId::kAliasWebkitShapeImageThreshold";
    case CSSSampleId::kAliasWebkitShapeMargin:
      return os << "CSSSampleId::kAliasWebkitShapeMargin";
    case CSSSampleId::kAliasWebkitShapeOutside:
      return os << "CSSSampleId::kAliasWebkitShapeOutside";
    case CSSSampleId::kScrollSnapType:
      return os << "CSSSampleId::kScrollSnapType";
    case CSSSampleId::kTranslate:
      return os << "CSSSampleId::kTranslate";
    case CSSSampleId::kRotate:
      return os << "CSSSampleId::kRotate";
    case CSSSampleId::kScale:
      return os << "CSSSampleId::kScale";
    case CSSSampleId::kImageOrientation:
      return os << "CSSSampleId::kImageOrientation";
    case CSSSampleId::kBackdropFilter:
      return os << "CSSSampleId::kBackdropFilter";
    case CSSSampleId::kTextCombineUpright:
      return os << "CSSSampleId::kTextCombineUpright";
    case CSSSampleId::kTextOrientation:
      return os << "CSSSampleId::kTextOrientation";
    case CSSSampleId::kGridColumnGap:
      return os << "CSSSampleId::kGridColumnGap";
    case CSSSampleId::kGridRowGap:
      return os << "CSSSampleId::kGridRowGap";
    case CSSSampleId::kGridGap:
      return os << "CSSSampleId::kGridGap";
    case CSSSampleId::kFontFeatureSettings:
      return os << "CSSSampleId::kFontFeatureSettings";
    case CSSSampleId::kVariable:
      return os << "CSSSampleId::kVariable";
    case CSSSampleId::kFontDisplay:
      return os << "CSSSampleId::kFontDisplay";
    case CSSSampleId::kContain:
      return os << "CSSSampleId::kContain";
    case CSSSampleId::kD:
      return os << "CSSSampleId::kD";
    case CSSSampleId::kLineHeightStep:
      return os << "CSSSampleId::kLineHeightStep";
    case CSSSampleId::kBreakAfter:
      return os << "CSSSampleId::kBreakAfter";
    case CSSSampleId::kBreakBefore:
      return os << "CSSSampleId::kBreakBefore";
    case CSSSampleId::kBreakInside:
      return os << "CSSSampleId::kBreakInside";
    case CSSSampleId::kColumnCount:
      return os << "CSSSampleId::kColumnCount";
    case CSSSampleId::kColumnGap:
      return os << "CSSSampleId::kColumnGap";
    case CSSSampleId::kColumnRule:
      return os << "CSSSampleId::kColumnRule";
    case CSSSampleId::kColumnRuleColor:
      return os << "CSSSampleId::kColumnRuleColor";
    case CSSSampleId::kColumnRuleStyle:
      return os << "CSSSampleId::kColumnRuleStyle";
    case CSSSampleId::kColumnRuleWidth:
      return os << "CSSSampleId::kColumnRuleWidth";
    case CSSSampleId::kColumnSpan:
      return os << "CSSSampleId::kColumnSpan";
    case CSSSampleId::kColumnWidth:
      return os << "CSSSampleId::kColumnWidth";
    case CSSSampleId::kColumns:
      return os << "CSSSampleId::kColumns";
    case CSSSampleId::kFontVariantCaps:
      return os << "CSSSampleId::kFontVariantCaps";
    case CSSSampleId::kHyphens:
      return os << "CSSSampleId::kHyphens";
    case CSSSampleId::kFontVariantNumeric:
      return os << "CSSSampleId::kFontVariantNumeric";
    case CSSSampleId::kTextSizeAdjust:
      return os << "CSSSampleId::kTextSizeAdjust";
    case CSSSampleId::kAliasWebkitTextSizeAdjust:
      return os << "CSSSampleId::kAliasWebkitTextSizeAdjust";
    case CSSSampleId::kOverflowAnchor:
      return os << "CSSSampleId::kOverflowAnchor";
    case CSSSampleId::kUserSelect:
      return os << "CSSSampleId::kUserSelect";
    case CSSSampleId::kOffsetDistance:
      return os << "CSSSampleId::kOffsetDistance";
    case CSSSampleId::kOffsetPath:
      return os << "CSSSampleId::kOffsetPath";
    case CSSSampleId::kOffset:
      return os << "CSSSampleId::kOffset";
    case CSSSampleId::kOffsetAnchor:
      return os << "CSSSampleId::kOffsetAnchor";
    case CSSSampleId::kOffsetPosition:
      return os << "CSSSampleId::kOffsetPosition";
    case CSSSampleId::kCaretColor:
      return os << "CSSSampleId::kCaretColor";
    case CSSSampleId::kOffsetRotate:
      return os << "CSSSampleId::kOffsetRotate";
    case CSSSampleId::kFontVariationSettings:
      return os << "CSSSampleId::kFontVariationSettings";
    case CSSSampleId::kInlineSize:
      return os << "CSSSampleId::kInlineSize";
    case CSSSampleId::kBlockSize:
      return os << "CSSSampleId::kBlockSize";
    case CSSSampleId::kMinInlineSize:
      return os << "CSSSampleId::kMinInlineSize";
    case CSSSampleId::kMinBlockSize:
      return os << "CSSSampleId::kMinBlockSize";
    case CSSSampleId::kMaxInlineSize:
      return os << "CSSSampleId::kMaxInlineSize";
    case CSSSampleId::kMaxBlockSize:
      return os << "CSSSampleId::kMaxBlockSize";
    case CSSSampleId::kLineBreak:
      return os << "CSSSampleId::kLineBreak";
    case CSSSampleId::kPlaceContent:
      return os << "CSSSampleId::kPlaceContent";
    case CSSSampleId::kPlaceItems:
      return os << "CSSSampleId::kPlaceItems";
    case CSSSampleId::kTransformBox:
      return os << "CSSSampleId::kTransformBox";
    case CSSSampleId::kPlaceSelf:
      return os << "CSSSampleId::kPlaceSelf";
    case CSSSampleId::kScrollSnapAlign:
      return os << "CSSSampleId::kScrollSnapAlign";
    case CSSSampleId::kScrollPadding:
      return os << "CSSSampleId::kScrollPadding";
    case CSSSampleId::kScrollPaddingTop:
      return os << "CSSSampleId::kScrollPaddingTop";
    case CSSSampleId::kScrollPaddingRight:
      return os << "CSSSampleId::kScrollPaddingRight";
    case CSSSampleId::kScrollPaddingBottom:
      return os << "CSSSampleId::kScrollPaddingBottom";
    case CSSSampleId::kScrollPaddingLeft:
      return os << "CSSSampleId::kScrollPaddingLeft";
    case CSSSampleId::kScrollPaddingBlock:
      return os << "CSSSampleId::kScrollPaddingBlock";
    case CSSSampleId::kScrollPaddingBlockStart:
      return os << "CSSSampleId::kScrollPaddingBlockStart";
    case CSSSampleId::kScrollPaddingBlockEnd:
      return os << "CSSSampleId::kScrollPaddingBlockEnd";
    case CSSSampleId::kScrollPaddingInline:
      return os << "CSSSampleId::kScrollPaddingInline";
    case CSSSampleId::kScrollPaddingInlineStart:
      return os << "CSSSampleId::kScrollPaddingInlineStart";
    case CSSSampleId::kScrollPaddingInlineEnd:
      return os << "CSSSampleId::kScrollPaddingInlineEnd";
    case CSSSampleId::kScrollMargin:
      return os << "CSSSampleId::kScrollMargin";
    case CSSSampleId::kScrollMarginTop:
      return os << "CSSSampleId::kScrollMarginTop";
    case CSSSampleId::kScrollMarginRight:
      return os << "CSSSampleId::kScrollMarginRight";
    case CSSSampleId::kScrollMarginBottom:
      return os << "CSSSampleId::kScrollMarginBottom";
    case CSSSampleId::kScrollMarginLeft:
      return os << "CSSSampleId::kScrollMarginLeft";
    case CSSSampleId::kScrollMarginBlock:
      return os << "CSSSampleId::kScrollMarginBlock";
    case CSSSampleId::kScrollMarginBlockStart:
      return os << "CSSSampleId::kScrollMarginBlockStart";
    case CSSSampleId::kScrollMarginBlockEnd:
      return os << "CSSSampleId::kScrollMarginBlockEnd";
    case CSSSampleId::kScrollMarginInline:
      return os << "CSSSampleId::kScrollMarginInline";
    case CSSSampleId::kScrollMarginInlineStart:
      return os << "CSSSampleId::kScrollMarginInlineStart";
    case CSSSampleId::kScrollMarginInlineEnd:
      return os << "CSSSampleId::kScrollMarginInlineEnd";
    case CSSSampleId::kScrollSnapStop:
      return os << "CSSSampleId::kScrollSnapStop";
    case CSSSampleId::kOverscrollBehavior:
      return os << "CSSSampleId::kOverscrollBehavior";
    case CSSSampleId::kOverscrollBehaviorX:
      return os << "CSSSampleId::kOverscrollBehaviorX";
    case CSSSampleId::kOverscrollBehaviorY:
      return os << "CSSSampleId::kOverscrollBehaviorY";
    case CSSSampleId::kFontVariantEastAsian:
      return os << "CSSSampleId::kFontVariantEastAsian";
    case CSSSampleId::kTextDecorationSkipInk:
      return os << "CSSSampleId::kTextDecorationSkipInk";
    case CSSSampleId::kScrollCustomization:
      return os << "CSSSampleId::kScrollCustomization";
    case CSSSampleId::kRowGap:
      return os << "CSSSampleId::kRowGap";
    case CSSSampleId::kGap:
      return os << "CSSSampleId::kGap";
    case CSSSampleId::kViewportFit:
      return os << "CSSSampleId::kViewportFit";
    case CSSSampleId::kMarginBlockStart:
      return os << "CSSSampleId::kMarginBlockStart";
    case CSSSampleId::kMarginBlockEnd:
      return os << "CSSSampleId::kMarginBlockEnd";
    case CSSSampleId::kMarginInlineStart:
      return os << "CSSSampleId::kMarginInlineStart";
    case CSSSampleId::kMarginInlineEnd:
      return os << "CSSSampleId::kMarginInlineEnd";
    case CSSSampleId::kPaddingBlockStart:
      return os << "CSSSampleId::kPaddingBlockStart";
    case CSSSampleId::kPaddingBlockEnd:
      return os << "CSSSampleId::kPaddingBlockEnd";
    case CSSSampleId::kPaddingInlineStart:
      return os << "CSSSampleId::kPaddingInlineStart";
    case CSSSampleId::kPaddingInlineEnd:
      return os << "CSSSampleId::kPaddingInlineEnd";
    case CSSSampleId::kBorderBlockEndColor:
      return os << "CSSSampleId::kBorderBlockEndColor";
    case CSSSampleId::kBorderBlockEndStyle:
      return os << "CSSSampleId::kBorderBlockEndStyle";
    case CSSSampleId::kBorderBlockEndWidth:
      return os << "CSSSampleId::kBorderBlockEndWidth";
    case CSSSampleId::kBorderBlockStartColor:
      return os << "CSSSampleId::kBorderBlockStartColor";
    case CSSSampleId::kBorderBlockStartStyle:
      return os << "CSSSampleId::kBorderBlockStartStyle";
    case CSSSampleId::kBorderBlockStartWidth:
      return os << "CSSSampleId::kBorderBlockStartWidth";
    case CSSSampleId::kBorderInlineEndColor:
      return os << "CSSSampleId::kBorderInlineEndColor";
    case CSSSampleId::kBorderInlineEndStyle:
      return os << "CSSSampleId::kBorderInlineEndStyle";
    case CSSSampleId::kBorderInlineEndWidth:
      return os << "CSSSampleId::kBorderInlineEndWidth";
    case CSSSampleId::kBorderInlineStartColor:
      return os << "CSSSampleId::kBorderInlineStartColor";
    case CSSSampleId::kBorderInlineStartStyle:
      return os << "CSSSampleId::kBorderInlineStartStyle";
    case CSSSampleId::kBorderInlineStartWidth:
      return os << "CSSSampleId::kBorderInlineStartWidth";
    case CSSSampleId::kBorderBlockStart:
      return os << "CSSSampleId::kBorderBlockStart";
    case CSSSampleId::kBorderBlockEnd:
      return os << "CSSSampleId::kBorderBlockEnd";
    case CSSSampleId::kBorderInlineStart:
      return os << "CSSSampleId::kBorderInlineStart";
    case CSSSampleId::kBorderInlineEnd:
      return os << "CSSSampleId::kBorderInlineEnd";
    case CSSSampleId::kMarginBlock:
      return os << "CSSSampleId::kMarginBlock";
    case CSSSampleId::kMarginInline:
      return os << "CSSSampleId::kMarginInline";
    case CSSSampleId::kPaddingBlock:
      return os << "CSSSampleId::kPaddingBlock";
    case CSSSampleId::kPaddingInline:
      return os << "CSSSampleId::kPaddingInline";
    case CSSSampleId::kBorderBlockColor:
      return os << "CSSSampleId::kBorderBlockColor";
    case CSSSampleId::kBorderBlockStyle:
      return os << "CSSSampleId::kBorderBlockStyle";
    case CSSSampleId::kBorderBlockWidth:
      return os << "CSSSampleId::kBorderBlockWidth";
    case CSSSampleId::kBorderInlineColor:
      return os << "CSSSampleId::kBorderInlineColor";
    case CSSSampleId::kBorderInlineStyle:
      return os << "CSSSampleId::kBorderInlineStyle";
    case CSSSampleId::kBorderInlineWidth:
      return os << "CSSSampleId::kBorderInlineWidth";
    case CSSSampleId::kBorderBlock:
      return os << "CSSSampleId::kBorderBlock";
    case CSSSampleId::kBorderInline:
      return os << "CSSSampleId::kBorderInline";
    case CSSSampleId::kInsetBlockStart:
      return os << "CSSSampleId::kInsetBlockStart";
    case CSSSampleId::kInsetBlockEnd:
      return os << "CSSSampleId::kInsetBlockEnd";
    case CSSSampleId::kInsetBlock:
      return os << "CSSSampleId::kInsetBlock";
    case CSSSampleId::kInsetInlineStart:
      return os << "CSSSampleId::kInsetInlineStart";
    case CSSSampleId::kInsetInlineEnd:
      return os << "CSSSampleId::kInsetInlineEnd";
    case CSSSampleId::kInsetInline:
      return os << "CSSSampleId::kInsetInline";
    case CSSSampleId::kInset:
      return os << "CSSSampleId::kInset";
    case CSSSampleId::kColorScheme:
      return os << "CSSSampleId::kColorScheme";
    case CSSSampleId::kOverflowInline:
      return os << "CSSSampleId::kOverflowInline";
    case CSSSampleId::kOverflowBlock:
      return os << "CSSSampleId::kOverflowBlock";
    case CSSSampleId::kForcedColorAdjust:
      return os << "CSSSampleId::kForcedColorAdjust";
    case CSSSampleId::kInherits:
      return os << "CSSSampleId::kInherits";
    case CSSSampleId::kInitialValue:
      return os << "CSSSampleId::kInitialValue";
    case CSSSampleId::kSyntax:
      return os << "CSSSampleId::kSyntax";
    case CSSSampleId::kOverscrollBehaviorInline:
      return os << "CSSSampleId::kOverscrollBehaviorInline";
    case CSSSampleId::kOverscrollBehaviorBlock:
      return os << "CSSSampleId::kOverscrollBehaviorBlock";
    case CSSSampleId::kFontOpticalSizing:
      return os << "CSSSampleId::kFontOpticalSizing";
    case CSSSampleId::kContainIntrinsicBlockSize:
      return os << "CSSSampleId::kContainIntrinsicBlockSize";
    case CSSSampleId::kContainIntrinsicHeight:
      return os << "CSSSampleId::kContainIntrinsicHeight";
    case CSSSampleId::kContainIntrinsicInlineSize:
      return os << "CSSSampleId::kContainIntrinsicInlineSize";
    case CSSSampleId::kContainIntrinsicSize:
      return os << "CSSSampleId::kContainIntrinsicSize";
    case CSSSampleId::kContainIntrinsicWidth:
      return os << "CSSSampleId::kContainIntrinsicWidth";
    case CSSSampleId::kRenderSubtree:
      return os << "CSSSampleId::kRenderSubtree";
    case CSSSampleId::kOriginTrialTestProperty:
      return os << "CSSSampleId::kOriginTrialTestProperty";
    default:
      return os << "Unknown CSSSampleId value: " << static_cast<int32_t>(value);
  }
}

namespace internal {

}  // namespace internal
}  // namespace mojom
}  // namespace blink

#if defined(_MSC_VER)
#pragma warning(pop)
#endif