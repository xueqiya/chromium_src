// third_party/blink/public/mojom/websockets/websocket_connector.mojom-test-utils.cc is auto generated by mojom_bindings_generator.py, do not edit

// Copyright 2019 The Chromium Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.

#if defined(__clang__)
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wunused-private-field"
#elif defined(_MSC_VER)
#pragma warning(push)
#pragma warning(disable:4056)
#pragma warning(disable:4065)
#pragma warning(disable:4756)
#endif


#include "third_party/blink/public/mojom/websockets/websocket_connector.mojom-test-utils.h"

#include <utility>

#include "base/bind.h"
#include "base/run_loop.h"
#include "services/network/public/mojom/site_for_cookies.mojom.h"
#include "services/network/public/mojom/websocket.mojom.h"
#include "url/mojom/url.mojom.h"


#ifndef THIRD_PARTY_BLINK_PUBLIC_MOJOM_WEBSOCKETS_WEBSOCKET_CONNECTOR_MOJOM_JUMBO_H_
#define THIRD_PARTY_BLINK_PUBLIC_MOJOM_WEBSOCKETS_WEBSOCKET_CONNECTOR_MOJOM_JUMBO_H_
#include "services/network/public/cpp/site_for_cookies_mojom_traits.h"
#include "url/mojom/url_gurl_mojom_traits.h"
#endif


namespace blink {
namespace mojom {


void WebSocketConnectorInterceptorForTesting::Connect(const ::GURL& url, const std::vector<std::string>& requested_protocols, const ::net::SiteForCookies& site_for_cookies, const base::Optional<std::string>& user_agent, mojo::PendingRemote<::network::mojom::WebSocketHandshakeClient> handshake_client) {
  GetForwardingInterface()->Connect(std::move(url), std::move(requested_protocols), std::move(site_for_cookies), std::move(user_agent), std::move(handshake_client));
}
WebSocketConnectorAsyncWaiter::WebSocketConnectorAsyncWaiter(
    WebSocketConnector* proxy) : proxy_(proxy) {}

WebSocketConnectorAsyncWaiter::~WebSocketConnectorAsyncWaiter() = default;






}  // namespace mojom
}  // namespace blink

#if defined(__clang__)
#pragma clang diagnostic pop
#elif defined(_MSC_VER)
#pragma warning(pop)
#endif