// third_party/blink/public/mojom/filesystem/file_system.mojom-forward.h is auto generated by mojom_bindings_generator.py, do not edit

// Copyright 2019 The Chromium Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.

#ifndef THIRD_PARTY_BLINK_PUBLIC_MOJOM_FILESYSTEM_FILE_SYSTEM_MOJOM_FORWARD_H_
#define THIRD_PARTY_BLINK_PUBLIC_MOJOM_FILESYSTEM_FILE_SYSTEM_MOJOM_FORWARD_H_

#include <stdint.h>

#include "mojo/public/cpp/bindings/struct_forward.h"

#include "mojo/public/cpp/bindings/deprecated_interface_types_forward.h"


#include "mojo/public/interfaces/bindings/native_struct.mojom-forward.h"






namespace blink {
namespace mojom {
class FileSystemInfoDataView;


enum class FileSystemType : int32_t;
class FileSystemInfo;
using FileSystemInfoPtr = mojo::StructPtr<FileSystemInfo>;

class FileSystemCancellableOperation;

using FileSystemCancellableOperationPtr = mojo::InterfacePtr<FileSystemCancellableOperation>;
using FileSystemCancellableOperationPtrInfo = mojo::InterfacePtrInfo<FileSystemCancellableOperation>;
using ThreadSafeFileSystemCancellableOperationPtr =
    mojo::ThreadSafeInterfacePtr<FileSystemCancellableOperation>;

using FileSystemCancellableOperationRequest = mojo::InterfaceRequest<FileSystemCancellableOperation>;

using FileSystemCancellableOperationAssociatedPtr =
    mojo::AssociatedInterfacePtr<FileSystemCancellableOperation>;
using ThreadSafeFileSystemCancellableOperationAssociatedPtr =
    mojo::ThreadSafeAssociatedInterfacePtr<FileSystemCancellableOperation>;
using FileSystemCancellableOperationAssociatedPtrInfo =
    mojo::AssociatedInterfacePtrInfo<FileSystemCancellableOperation>;

using FileSystemCancellableOperationAssociatedRequest =
    mojo::AssociatedInterfaceRequest<FileSystemCancellableOperation>;

class FileSystemOperationListener;

using FileSystemOperationListenerPtr = mojo::InterfacePtr<FileSystemOperationListener>;
using FileSystemOperationListenerPtrInfo = mojo::InterfacePtrInfo<FileSystemOperationListener>;
using ThreadSafeFileSystemOperationListenerPtr =
    mojo::ThreadSafeInterfacePtr<FileSystemOperationListener>;

using FileSystemOperationListenerRequest = mojo::InterfaceRequest<FileSystemOperationListener>;

using FileSystemOperationListenerAssociatedPtr =
    mojo::AssociatedInterfacePtr<FileSystemOperationListener>;
using ThreadSafeFileSystemOperationListenerAssociatedPtr =
    mojo::ThreadSafeAssociatedInterfacePtr<FileSystemOperationListener>;
using FileSystemOperationListenerAssociatedPtrInfo =
    mojo::AssociatedInterfacePtrInfo<FileSystemOperationListener>;

using FileSystemOperationListenerAssociatedRequest =
    mojo::AssociatedInterfaceRequest<FileSystemOperationListener>;

class ReceivedSnapshotListener;

using ReceivedSnapshotListenerPtr = mojo::InterfacePtr<ReceivedSnapshotListener>;
using ReceivedSnapshotListenerPtrInfo = mojo::InterfacePtrInfo<ReceivedSnapshotListener>;
using ThreadSafeReceivedSnapshotListenerPtr =
    mojo::ThreadSafeInterfacePtr<ReceivedSnapshotListener>;

using ReceivedSnapshotListenerRequest = mojo::InterfaceRequest<ReceivedSnapshotListener>;

using ReceivedSnapshotListenerAssociatedPtr =
    mojo::AssociatedInterfacePtr<ReceivedSnapshotListener>;
using ThreadSafeReceivedSnapshotListenerAssociatedPtr =
    mojo::ThreadSafeAssociatedInterfacePtr<ReceivedSnapshotListener>;
using ReceivedSnapshotListenerAssociatedPtrInfo =
    mojo::AssociatedInterfacePtrInfo<ReceivedSnapshotListener>;

using ReceivedSnapshotListenerAssociatedRequest =
    mojo::AssociatedInterfaceRequest<ReceivedSnapshotListener>;

class FileSystemManager;

using FileSystemManagerPtr = mojo::InterfacePtr<FileSystemManager>;
using FileSystemManagerPtrInfo = mojo::InterfacePtrInfo<FileSystemManager>;
using ThreadSafeFileSystemManagerPtr =
    mojo::ThreadSafeInterfacePtr<FileSystemManager>;

using FileSystemManagerRequest = mojo::InterfaceRequest<FileSystemManager>;

using FileSystemManagerAssociatedPtr =
    mojo::AssociatedInterfacePtr<FileSystemManager>;
using ThreadSafeFileSystemManagerAssociatedPtr =
    mojo::ThreadSafeAssociatedInterfacePtr<FileSystemManager>;
using FileSystemManagerAssociatedPtrInfo =
    mojo::AssociatedInterfacePtrInfo<FileSystemManager>;

using FileSystemManagerAssociatedRequest =
    mojo::AssociatedInterfaceRequest<FileSystemManager>;




}  // namespace mojom
}  // namespace blink

#endif  // THIRD_PARTY_BLINK_PUBLIC_MOJOM_FILESYSTEM_FILE_SYSTEM_MOJOM_FORWARD_H_