// third_party/blink/public/mojom/frame/find_in_page.mojom-blink-forward.h is auto generated by mojom_bindings_generator.py, do not edit

// Copyright 2019 The Chromium Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.

#ifndef THIRD_PARTY_BLINK_PUBLIC_MOJOM_FRAME_FIND_IN_PAGE_MOJOM_BLINK_FORWARD_H_
#define THIRD_PARTY_BLINK_PUBLIC_MOJOM_FRAME_FIND_IN_PAGE_MOJOM_BLINK_FORWARD_H_

#include <stdint.h>

#include "mojo/public/cpp/bindings/struct_forward.h"

#include "mojo/public/cpp/bindings/deprecated_interface_types_forward.h"


#include "mojo/public/interfaces/bindings/native_struct.mojom-forward.h"




namespace blink {
namespace mojom {

enum class StopFindAction : int32_t;

enum class FindMatchUpdateType : int32_t;
}  // namespace blink
}  // namespace mojom

namespace WTF {
template <typename T>
struct DefaultHash;
}

namespace WTF {
struct blink_mojom_internal_StopFindAction_DataHashFn;

template <>
struct DefaultHash<::blink::mojom::StopFindAction> {
  using Hash = blink_mojom_internal_StopFindAction_DataHashFn;
};
}  // namespace WTF

namespace WTF {
struct blink_mojom_internal_FindMatchUpdateType_DataHashFn;

template <>
struct DefaultHash<::blink::mojom::FindMatchUpdateType> {
  using Hash = blink_mojom_internal_FindMatchUpdateType_DataHashFn;
};
}  // namespace WTF


namespace blink {
namespace mojom {
namespace blink {
using StopFindAction = StopFindAction;  // Alias for definition in the parent namespace.
using FindMatchUpdateType = FindMatchUpdateType;  // Alias for definition in the parent namespace.
class FindOptions;
using FindOptionsPtr = mojo::StructPtr<FindOptions>;

class FindInPage;

using FindInPagePtr = mojo::InterfacePtr<FindInPage>;
using FindInPagePtrInfo = mojo::InterfacePtrInfo<FindInPage>;
using ThreadSafeFindInPagePtr =
    mojo::ThreadSafeInterfacePtr<FindInPage>;

using FindInPageRequest = mojo::InterfaceRequest<FindInPage>;

using FindInPageAssociatedPtr =
    mojo::AssociatedInterfacePtr<FindInPage>;
using ThreadSafeFindInPageAssociatedPtr =
    mojo::ThreadSafeAssociatedInterfacePtr<FindInPage>;
using FindInPageAssociatedPtrInfo =
    mojo::AssociatedInterfacePtrInfo<FindInPage>;

using FindInPageAssociatedRequest =
    mojo::AssociatedInterfaceRequest<FindInPage>;

class FindInPageClient;

using FindInPageClientPtr = mojo::InterfacePtr<FindInPageClient>;
using FindInPageClientPtrInfo = mojo::InterfacePtrInfo<FindInPageClient>;
using ThreadSafeFindInPageClientPtr =
    mojo::ThreadSafeInterfacePtr<FindInPageClient>;

using FindInPageClientRequest = mojo::InterfaceRequest<FindInPageClient>;

using FindInPageClientAssociatedPtr =
    mojo::AssociatedInterfacePtr<FindInPageClient>;
using ThreadSafeFindInPageClientAssociatedPtr =
    mojo::ThreadSafeAssociatedInterfacePtr<FindInPageClient>;
using FindInPageClientAssociatedPtrInfo =
    mojo::AssociatedInterfacePtrInfo<FindInPageClient>;

using FindInPageClientAssociatedRequest =
    mojo::AssociatedInterfaceRequest<FindInPageClient>;




}  // namespace blink
}  // namespace mojom
}  // namespace blink

#endif  // THIRD_PARTY_BLINK_PUBLIC_MOJOM_FRAME_FIND_IN_PAGE_MOJOM_BLINK_FORWARD_H_