// third_party/blink/public/mojom/permissions/permission.mojom-forward.h is auto generated by mojom_bindings_generator.py, do not edit

// Copyright 2019 The Chromium Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.

#ifndef THIRD_PARTY_BLINK_PUBLIC_MOJOM_PERMISSIONS_PERMISSION_MOJOM_FORWARD_H_
#define THIRD_PARTY_BLINK_PUBLIC_MOJOM_PERMISSIONS_PERMISSION_MOJOM_FORWARD_H_

#include <stdint.h>

#include "mojo/public/cpp/bindings/struct_forward.h"

#include "mojo/public/cpp/bindings/deprecated_interface_types_forward.h"


#include "mojo/public/interfaces/bindings/native_struct.mojom-forward.h"






namespace blink {
namespace mojom {
class MidiPermissionDescriptorDataView;

class ClipboardPermissionDescriptorDataView;

class WakeLockPermissionDescriptorDataView;

class PermissionDescriptorDataView;

class PermissionDescriptorExtensionDataView;

enum class PermissionName : int32_t;

enum class WakeLockType : int32_t;
class MidiPermissionDescriptor;
using MidiPermissionDescriptorPtr = mojo::InlinedStructPtr<MidiPermissionDescriptor>;

class ClipboardPermissionDescriptor;
using ClipboardPermissionDescriptorPtr = mojo::InlinedStructPtr<ClipboardPermissionDescriptor>;

class WakeLockPermissionDescriptor;
using WakeLockPermissionDescriptorPtr = mojo::InlinedStructPtr<WakeLockPermissionDescriptor>;

class PermissionDescriptor;
using PermissionDescriptorPtr = mojo::StructPtr<PermissionDescriptor>;

class PermissionDescriptorExtension;

typedef mojo::StructPtr<PermissionDescriptorExtension> PermissionDescriptorExtensionPtr;

class PermissionObserver;

using PermissionObserverPtr = mojo::InterfacePtr<PermissionObserver>;
using PermissionObserverPtrInfo = mojo::InterfacePtrInfo<PermissionObserver>;
using ThreadSafePermissionObserverPtr =
    mojo::ThreadSafeInterfacePtr<PermissionObserver>;

using PermissionObserverRequest = mojo::InterfaceRequest<PermissionObserver>;

using PermissionObserverAssociatedPtr =
    mojo::AssociatedInterfacePtr<PermissionObserver>;
using ThreadSafePermissionObserverAssociatedPtr =
    mojo::ThreadSafeAssociatedInterfacePtr<PermissionObserver>;
using PermissionObserverAssociatedPtrInfo =
    mojo::AssociatedInterfacePtrInfo<PermissionObserver>;

using PermissionObserverAssociatedRequest =
    mojo::AssociatedInterfaceRequest<PermissionObserver>;

class PermissionService;

using PermissionServicePtr = mojo::InterfacePtr<PermissionService>;
using PermissionServicePtrInfo = mojo::InterfacePtrInfo<PermissionService>;
using ThreadSafePermissionServicePtr =
    mojo::ThreadSafeInterfacePtr<PermissionService>;

using PermissionServiceRequest = mojo::InterfaceRequest<PermissionService>;

using PermissionServiceAssociatedPtr =
    mojo::AssociatedInterfacePtr<PermissionService>;
using ThreadSafePermissionServiceAssociatedPtr =
    mojo::ThreadSafeAssociatedInterfacePtr<PermissionService>;
using PermissionServiceAssociatedPtrInfo =
    mojo::AssociatedInterfacePtrInfo<PermissionService>;

using PermissionServiceAssociatedRequest =
    mojo::AssociatedInterfaceRequest<PermissionService>;




}  // namespace mojom
}  // namespace blink

#endif  // THIRD_PARTY_BLINK_PUBLIC_MOJOM_PERMISSIONS_PERMISSION_MOJOM_FORWARD_H_