// third_party/blink/public/mojom/permissions/permission_automation.mojom-blink-test-utils.cc is auto generated by mojom_bindings_generator.py, do not edit

// Copyright 2019 The Chromium Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.

#if defined(__clang__)
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wunused-private-field"
#elif defined(_MSC_VER)
#pragma warning(push)
#pragma warning(disable:4056)
#pragma warning(disable:4065)
#pragma warning(disable:4756)
#endif


#include "third_party/blink/public/mojom/permissions/permission_automation.mojom-blink-test-utils.h"

#include <utility>

#include "base/bind.h"
#include "base/run_loop.h"
#include "mojo/public/cpp/bindings/lib/wtf_serialization.h"
#include "third_party/blink/public/mojom/permissions/permission.mojom-blink.h"
#include "third_party/blink/public/mojom/permissions/permission_status.mojom-blink.h"
#include "url/mojom/url.mojom-blink.h"


#ifndef THIRD_PARTY_BLINK_PUBLIC_MOJOM_PERMISSIONS_PERMISSION_AUTOMATION_MOJOM_BLINK_JUMBO_H_
#define THIRD_PARTY_BLINK_PUBLIC_MOJOM_PERMISSIONS_PERMISSION_AUTOMATION_MOJOM_BLINK_JUMBO_H_
#include "third_party/blink/renderer/platform/mojo/kurl_mojom_traits.h"
#endif


namespace blink {
namespace test {
namespace mojom {
namespace blink {


void PermissionAutomationInterceptorForTesting::SetPermission(::blink::mojom::blink::PermissionDescriptorPtr descriptor, ::blink::mojom::blink::PermissionStatus status, const ::blink::KURL& origin, const ::blink::KURL& embedding_origin, SetPermissionCallback callback) {
  GetForwardingInterface()->SetPermission(std::move(descriptor), std::move(status), std::move(origin), std::move(embedding_origin), std::move(callback));
}
PermissionAutomationAsyncWaiter::PermissionAutomationAsyncWaiter(
    PermissionAutomation* proxy) : proxy_(proxy) {}

PermissionAutomationAsyncWaiter::~PermissionAutomationAsyncWaiter() = default;

void PermissionAutomationAsyncWaiter::SetPermission(
    ::blink::mojom::blink::PermissionDescriptorPtr descriptor, ::blink::mojom::blink::PermissionStatus status, const ::blink::KURL& origin, const ::blink::KURL& embedding_origin, bool* out_success) {
  base::RunLoop loop;
  proxy_->SetPermission(std::move(descriptor),std::move(status),std::move(origin),std::move(embedding_origin),
      base::BindOnce(
          [](base::RunLoop* loop,
             bool* out_success
,
             bool success) {*out_success = std::move(success);
            loop->Quit();
          },
          &loop,
          out_success));
  loop.Run();
}





}  // namespace blink
}  // namespace mojom
}  // namespace test
}  // namespace blink

#if defined(__clang__)
#pragma clang diagnostic pop
#elif defined(_MSC_VER)
#pragma warning(pop)
#endif