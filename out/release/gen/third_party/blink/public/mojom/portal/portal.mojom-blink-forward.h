// third_party/blink/public/mojom/portal/portal.mojom-blink-forward.h is auto generated by mojom_bindings_generator.py, do not edit

// Copyright 2019 The Chromium Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.

#ifndef THIRD_PARTY_BLINK_PUBLIC_MOJOM_PORTAL_PORTAL_MOJOM_BLINK_FORWARD_H_
#define THIRD_PARTY_BLINK_PUBLIC_MOJOM_PORTAL_PORTAL_MOJOM_BLINK_FORWARD_H_

#include <stdint.h>



#include "mojo/public/cpp/bindings/deprecated_interface_types_forward.h"






namespace blink {
namespace mojom {

enum class PortalActivateResult : int32_t;
}  // namespace blink
}  // namespace mojom

namespace WTF {
template <typename T>
struct DefaultHash;
}

namespace WTF {
struct blink_mojom_internal_PortalActivateResult_DataHashFn;

template <>
struct DefaultHash<::blink::mojom::PortalActivateResult> {
  using Hash = blink_mojom_internal_PortalActivateResult_DataHashFn;
};
}  // namespace WTF


namespace blink {
namespace mojom {
namespace blink {
using PortalActivateResult = PortalActivateResult;  // Alias for definition in the parent namespace.
class Portal;

using PortalPtr = mojo::InterfacePtr<Portal>;
using PortalPtrInfo = mojo::InterfacePtrInfo<Portal>;
using ThreadSafePortalPtr =
    mojo::ThreadSafeInterfacePtr<Portal>;

using PortalRequest = mojo::InterfaceRequest<Portal>;

using PortalAssociatedPtr =
    mojo::AssociatedInterfacePtr<Portal>;
using ThreadSafePortalAssociatedPtr =
    mojo::ThreadSafeAssociatedInterfacePtr<Portal>;
using PortalAssociatedPtrInfo =
    mojo::AssociatedInterfacePtrInfo<Portal>;

using PortalAssociatedRequest =
    mojo::AssociatedInterfaceRequest<Portal>;

class PortalClient;

using PortalClientPtr = mojo::InterfacePtr<PortalClient>;
using PortalClientPtrInfo = mojo::InterfacePtrInfo<PortalClient>;
using ThreadSafePortalClientPtr =
    mojo::ThreadSafeInterfacePtr<PortalClient>;

using PortalClientRequest = mojo::InterfaceRequest<PortalClient>;

using PortalClientAssociatedPtr =
    mojo::AssociatedInterfacePtr<PortalClient>;
using ThreadSafePortalClientAssociatedPtr =
    mojo::ThreadSafeAssociatedInterfacePtr<PortalClient>;
using PortalClientAssociatedPtrInfo =
    mojo::AssociatedInterfacePtrInfo<PortalClient>;

using PortalClientAssociatedRequest =
    mojo::AssociatedInterfaceRequest<PortalClient>;

class PortalHost;

using PortalHostPtr = mojo::InterfacePtr<PortalHost>;
using PortalHostPtrInfo = mojo::InterfacePtrInfo<PortalHost>;
using ThreadSafePortalHostPtr =
    mojo::ThreadSafeInterfacePtr<PortalHost>;

using PortalHostRequest = mojo::InterfaceRequest<PortalHost>;

using PortalHostAssociatedPtr =
    mojo::AssociatedInterfacePtr<PortalHost>;
using ThreadSafePortalHostAssociatedPtr =
    mojo::ThreadSafeAssociatedInterfacePtr<PortalHost>;
using PortalHostAssociatedPtrInfo =
    mojo::AssociatedInterfacePtrInfo<PortalHost>;

using PortalHostAssociatedRequest =
    mojo::AssociatedInterfaceRequest<PortalHost>;




}  // namespace blink
}  // namespace mojom
}  // namespace blink

#endif  // THIRD_PARTY_BLINK_PUBLIC_MOJOM_PORTAL_PORTAL_MOJOM_BLINK_FORWARD_H_