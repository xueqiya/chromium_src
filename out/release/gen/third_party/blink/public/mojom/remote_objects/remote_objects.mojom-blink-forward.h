// third_party/blink/public/mojom/remote_objects/remote_objects.mojom-blink-forward.h is auto generated by mojom_bindings_generator.py, do not edit

// Copyright 2019 The Chromium Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.

#ifndef THIRD_PARTY_BLINK_PUBLIC_MOJOM_REMOTE_OBJECTS_REMOTE_OBJECTS_MOJOM_BLINK_FORWARD_H_
#define THIRD_PARTY_BLINK_PUBLIC_MOJOM_REMOTE_OBJECTS_REMOTE_OBJECTS_MOJOM_BLINK_FORWARD_H_

#include <stdint.h>

#include "mojo/public/cpp/bindings/struct_forward.h"

#include "mojo/public/cpp/bindings/deprecated_interface_types_forward.h"


#include "mojo/public/interfaces/bindings/native_struct.mojom-forward.h"




namespace blink {
namespace mojom {

enum class SingletonJavaScriptValue : int32_t;

enum class RemoteInvocationError : int32_t;
}  // namespace blink
}  // namespace mojom

namespace WTF {
template <typename T>
struct DefaultHash;
}

namespace WTF {
struct blink_mojom_internal_SingletonJavaScriptValue_DataHashFn;

template <>
struct DefaultHash<::blink::mojom::SingletonJavaScriptValue> {
  using Hash = blink_mojom_internal_SingletonJavaScriptValue_DataHashFn;
};
}  // namespace WTF

namespace WTF {
struct blink_mojom_internal_RemoteInvocationError_DataHashFn;

template <>
struct DefaultHash<::blink::mojom::RemoteInvocationError> {
  using Hash = blink_mojom_internal_RemoteInvocationError_DataHashFn;
};
}  // namespace WTF


namespace blink {
namespace mojom {
namespace blink {
using SingletonJavaScriptValue = SingletonJavaScriptValue;  // Alias for definition in the parent namespace.
using RemoteInvocationError = RemoteInvocationError;  // Alias for definition in the parent namespace.
class RemoteInvocationResult;
using RemoteInvocationResultPtr = mojo::StructPtr<RemoteInvocationResult>;

class RemoteInvocationArgument;

typedef mojo::StructPtr<RemoteInvocationArgument> RemoteInvocationArgumentPtr;

class RemoteInvocationResultValue;

typedef mojo::StructPtr<RemoteInvocationResultValue> RemoteInvocationResultValuePtr;

class RemoteObjectHost;

using RemoteObjectHostPtr = mojo::InterfacePtr<RemoteObjectHost>;
using RemoteObjectHostPtrInfo = mojo::InterfacePtrInfo<RemoteObjectHost>;
using ThreadSafeRemoteObjectHostPtr =
    mojo::ThreadSafeInterfacePtr<RemoteObjectHost>;

using RemoteObjectHostRequest = mojo::InterfaceRequest<RemoteObjectHost>;

using RemoteObjectHostAssociatedPtr =
    mojo::AssociatedInterfacePtr<RemoteObjectHost>;
using ThreadSafeRemoteObjectHostAssociatedPtr =
    mojo::ThreadSafeAssociatedInterfacePtr<RemoteObjectHost>;
using RemoteObjectHostAssociatedPtrInfo =
    mojo::AssociatedInterfacePtrInfo<RemoteObjectHost>;

using RemoteObjectHostAssociatedRequest =
    mojo::AssociatedInterfaceRequest<RemoteObjectHost>;

class RemoteObject;

using RemoteObjectPtr = mojo::InterfacePtr<RemoteObject>;
using RemoteObjectPtrInfo = mojo::InterfacePtrInfo<RemoteObject>;
using ThreadSafeRemoteObjectPtr =
    mojo::ThreadSafeInterfacePtr<RemoteObject>;

using RemoteObjectRequest = mojo::InterfaceRequest<RemoteObject>;

using RemoteObjectAssociatedPtr =
    mojo::AssociatedInterfacePtr<RemoteObject>;
using ThreadSafeRemoteObjectAssociatedPtr =
    mojo::ThreadSafeAssociatedInterfacePtr<RemoteObject>;
using RemoteObjectAssociatedPtrInfo =
    mojo::AssociatedInterfacePtrInfo<RemoteObject>;

using RemoteObjectAssociatedRequest =
    mojo::AssociatedInterfaceRequest<RemoteObject>;

class RemoteObjectGatewayFactory;

using RemoteObjectGatewayFactoryPtr = mojo::InterfacePtr<RemoteObjectGatewayFactory>;
using RemoteObjectGatewayFactoryPtrInfo = mojo::InterfacePtrInfo<RemoteObjectGatewayFactory>;
using ThreadSafeRemoteObjectGatewayFactoryPtr =
    mojo::ThreadSafeInterfacePtr<RemoteObjectGatewayFactory>;

using RemoteObjectGatewayFactoryRequest = mojo::InterfaceRequest<RemoteObjectGatewayFactory>;

using RemoteObjectGatewayFactoryAssociatedPtr =
    mojo::AssociatedInterfacePtr<RemoteObjectGatewayFactory>;
using ThreadSafeRemoteObjectGatewayFactoryAssociatedPtr =
    mojo::ThreadSafeAssociatedInterfacePtr<RemoteObjectGatewayFactory>;
using RemoteObjectGatewayFactoryAssociatedPtrInfo =
    mojo::AssociatedInterfacePtrInfo<RemoteObjectGatewayFactory>;

using RemoteObjectGatewayFactoryAssociatedRequest =
    mojo::AssociatedInterfaceRequest<RemoteObjectGatewayFactory>;

class RemoteObjectGateway;

using RemoteObjectGatewayPtr = mojo::InterfacePtr<RemoteObjectGateway>;
using RemoteObjectGatewayPtrInfo = mojo::InterfacePtrInfo<RemoteObjectGateway>;
using ThreadSafeRemoteObjectGatewayPtr =
    mojo::ThreadSafeInterfacePtr<RemoteObjectGateway>;

using RemoteObjectGatewayRequest = mojo::InterfaceRequest<RemoteObjectGateway>;

using RemoteObjectGatewayAssociatedPtr =
    mojo::AssociatedInterfacePtr<RemoteObjectGateway>;
using ThreadSafeRemoteObjectGatewayAssociatedPtr =
    mojo::ThreadSafeAssociatedInterfacePtr<RemoteObjectGateway>;
using RemoteObjectGatewayAssociatedPtrInfo =
    mojo::AssociatedInterfacePtrInfo<RemoteObjectGateway>;

using RemoteObjectGatewayAssociatedRequest =
    mojo::AssociatedInterfaceRequest<RemoteObjectGateway>;




}  // namespace blink
}  // namespace mojom
}  // namespace blink

#endif  // THIRD_PARTY_BLINK_PUBLIC_MOJOM_REMOTE_OBJECTS_REMOTE_OBJECTS_MOJOM_BLINK_FORWARD_H_