// third_party/blink/public/mojom/screen_enumeration/screen_enumeration.mojom-blink-test-utils.cc is auto generated by mojom_bindings_generator.py, do not edit

// Copyright 2019 The Chromium Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.

#if defined(__clang__)
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wunused-private-field"
#elif defined(_MSC_VER)
#pragma warning(push)
#pragma warning(disable:4056)
#pragma warning(disable:4065)
#pragma warning(disable:4756)
#endif


#include "third_party/blink/public/mojom/screen_enumeration/screen_enumeration.mojom-blink-test-utils.h"

#include <utility>

#include "base/bind.h"
#include "base/run_loop.h"
#include "mojo/public/cpp/bindings/lib/wtf_serialization.h"
#include "ui/display/mojom/display.mojom-blink.h"


#ifndef THIRD_PARTY_BLINK_PUBLIC_MOJOM_SCREEN_ENUMERATION_SCREEN_ENUMERATION_MOJOM_BLINK_JUMBO_H_
#define THIRD_PARTY_BLINK_PUBLIC_MOJOM_SCREEN_ENUMERATION_SCREEN_ENUMERATION_MOJOM_BLINK_JUMBO_H_
#include "third_party/blink/renderer/platform/mojo/geometry_mojom_traits.h"
#include "ui/display/mojom/display_mojom_traits.h"
#include "ui/gfx/geometry/mojom/geometry_mojom_traits.h"
#include "ui/gfx/mojom/color_space_mojom_traits.h"
#endif


namespace blink {
namespace mojom {
namespace blink {


void ScreenEnumerationInterceptorForTesting::GetDisplays(GetDisplaysCallback callback) {
  GetForwardingInterface()->GetDisplays(std::move(callback));
}
ScreenEnumerationAsyncWaiter::ScreenEnumerationAsyncWaiter(
    ScreenEnumeration* proxy) : proxy_(proxy) {}

ScreenEnumerationAsyncWaiter::~ScreenEnumerationAsyncWaiter() = default;

void ScreenEnumerationAsyncWaiter::GetDisplays(
    WTF::Vector<::display::mojom::blink::DisplayPtr>* out_displays, int64_t* out_internal_id, int64_t* out_primary_id, bool* out_success) {
  base::RunLoop loop;
  proxy_->GetDisplays(
      base::BindOnce(
          [](base::RunLoop* loop,
             WTF::Vector<::display::mojom::blink::DisplayPtr>* out_displays
,
             int64_t* out_internal_id
,
             int64_t* out_primary_id
,
             bool* out_success
,
             WTF::Vector<::display::mojom::blink::DisplayPtr> displays,
             int64_t internal_id,
             int64_t primary_id,
             bool success) {*out_displays = std::move(displays);*out_internal_id = std::move(internal_id);*out_primary_id = std::move(primary_id);*out_success = std::move(success);
            loop->Quit();
          },
          &loop,
          out_displays,
          out_internal_id,
          out_primary_id,
          out_success));
  loop.Run();
}





}  // namespace blink
}  // namespace mojom
}  // namespace blink

#if defined(__clang__)
#pragma clang diagnostic pop
#elif defined(_MSC_VER)
#pragma warning(pop)
#endif