// third_party/blink/public/mojom/web_launch/web_launch.mojom-test-utils.cc is auto generated by mojom_bindings_generator.py, do not edit

// Copyright 2019 The Chromium Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.

#if defined(__clang__)
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wunused-private-field"
#elif defined(_MSC_VER)
#pragma warning(push)
#pragma warning(disable:4056)
#pragma warning(disable:4065)
#pragma warning(disable:4756)
#endif


#include "third_party/blink/public/mojom/web_launch/web_launch.mojom-test-utils.h"

#include <utility>

#include "base/bind.h"
#include "base/run_loop.h"
#include "third_party/blink/public/mojom/native_file_system/native_file_system_directory_handle.mojom.h"
#include "url/mojom/url.mojom.h"


#ifndef THIRD_PARTY_BLINK_PUBLIC_MOJOM_WEB_LAUNCH_WEB_LAUNCH_MOJOM_JUMBO_H_
#define THIRD_PARTY_BLINK_PUBLIC_MOJOM_WEB_LAUNCH_WEB_LAUNCH_MOJOM_JUMBO_H_
#endif


namespace blink {
namespace mojom {


void WebLaunchServiceInterceptorForTesting::SetLaunchFiles(std::vector<::blink::mojom::NativeFileSystemEntryPtr> files) {
  GetForwardingInterface()->SetLaunchFiles(std::move(files));
}
WebLaunchServiceAsyncWaiter::WebLaunchServiceAsyncWaiter(
    WebLaunchService* proxy) : proxy_(proxy) {}

WebLaunchServiceAsyncWaiter::~WebLaunchServiceAsyncWaiter() = default;






}  // namespace mojom
}  // namespace blink

#if defined(__clang__)
#pragma clang diagnostic pop
#elif defined(_MSC_VER)
#pragma warning(pop)
#endif