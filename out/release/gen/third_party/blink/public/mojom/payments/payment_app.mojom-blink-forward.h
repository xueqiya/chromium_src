// third_party/blink/public/mojom/payments/payment_app.mojom-blink-forward.h is auto generated by mojom_bindings_generator.py, do not edit

// Copyright 2019 The Chromium Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.

#ifndef THIRD_PARTY_BLINK_PUBLIC_MOJOM_PAYMENTS_PAYMENT_APP_MOJOM_BLINK_FORWARD_H_
#define THIRD_PARTY_BLINK_PUBLIC_MOJOM_PAYMENTS_PAYMENT_APP_MOJOM_BLINK_FORWARD_H_

#include <stdint.h>

#include "mojo/public/cpp/bindings/struct_forward.h"

#include "mojo/public/cpp/bindings/deprecated_interface_types_forward.h"


#include "mojo/public/interfaces/bindings/native_struct.mojom-forward.h"




namespace payments {
namespace mojom {

enum class PaymentHandlerStatus : int32_t;

enum class PaymentEventResponseType : int32_t;

enum class PaymentDelegation : int32_t;
}  // namespace payments
}  // namespace mojom

namespace WTF {
template <typename T>
struct DefaultHash;
}

namespace WTF {
struct payments_mojom_internal_PaymentHandlerStatus_DataHashFn;

template <>
struct DefaultHash<::payments::mojom::PaymentHandlerStatus> {
  using Hash = payments_mojom_internal_PaymentHandlerStatus_DataHashFn;
};
}  // namespace WTF

namespace WTF {
struct payments_mojom_internal_PaymentEventResponseType_DataHashFn;

template <>
struct DefaultHash<::payments::mojom::PaymentEventResponseType> {
  using Hash = payments_mojom_internal_PaymentEventResponseType_DataHashFn;
};
}  // namespace WTF

namespace WTF {
struct payments_mojom_internal_PaymentDelegation_DataHashFn;

template <>
struct DefaultHash<::payments::mojom::PaymentDelegation> {
  using Hash = payments_mojom_internal_PaymentDelegation_DataHashFn;
};
}  // namespace WTF


namespace payments {
namespace mojom {
namespace blink {
using PaymentHandlerStatus = PaymentHandlerStatus;  // Alias for definition in the parent namespace.
using PaymentEventResponseType = PaymentEventResponseType;  // Alias for definition in the parent namespace.
using PaymentDelegation = PaymentDelegation;  // Alias for definition in the parent namespace.
class PaymentInstrument;
using PaymentInstrumentPtr = mojo::StructPtr<PaymentInstrument>;

class CanMakePaymentEventData;
using CanMakePaymentEventDataPtr = mojo::StructPtr<CanMakePaymentEventData>;

class PaymentRequestEventData;
using PaymentRequestEventDataPtr = mojo::StructPtr<PaymentRequestEventData>;

class PaymentHandlerResponse;
using PaymentHandlerResponsePtr = mojo::StructPtr<PaymentHandlerResponse>;

class PaymentManager;

using PaymentManagerPtr = mojo::InterfacePtr<PaymentManager>;
using PaymentManagerPtrInfo = mojo::InterfacePtrInfo<PaymentManager>;
using ThreadSafePaymentManagerPtr =
    mojo::ThreadSafeInterfacePtr<PaymentManager>;

using PaymentManagerRequest = mojo::InterfaceRequest<PaymentManager>;

using PaymentManagerAssociatedPtr =
    mojo::AssociatedInterfacePtr<PaymentManager>;
using ThreadSafePaymentManagerAssociatedPtr =
    mojo::ThreadSafeAssociatedInterfacePtr<PaymentManager>;
using PaymentManagerAssociatedPtrInfo =
    mojo::AssociatedInterfacePtrInfo<PaymentManager>;

using PaymentManagerAssociatedRequest =
    mojo::AssociatedInterfaceRequest<PaymentManager>;

class PaymentHandlerResponseCallback;

using PaymentHandlerResponseCallbackPtr = mojo::InterfacePtr<PaymentHandlerResponseCallback>;
using PaymentHandlerResponseCallbackPtrInfo = mojo::InterfacePtrInfo<PaymentHandlerResponseCallback>;
using ThreadSafePaymentHandlerResponseCallbackPtr =
    mojo::ThreadSafeInterfacePtr<PaymentHandlerResponseCallback>;

using PaymentHandlerResponseCallbackRequest = mojo::InterfaceRequest<PaymentHandlerResponseCallback>;

using PaymentHandlerResponseCallbackAssociatedPtr =
    mojo::AssociatedInterfacePtr<PaymentHandlerResponseCallback>;
using ThreadSafePaymentHandlerResponseCallbackAssociatedPtr =
    mojo::ThreadSafeAssociatedInterfacePtr<PaymentHandlerResponseCallback>;
using PaymentHandlerResponseCallbackAssociatedPtrInfo =
    mojo::AssociatedInterfacePtrInfo<PaymentHandlerResponseCallback>;

using PaymentHandlerResponseCallbackAssociatedRequest =
    mojo::AssociatedInterfaceRequest<PaymentHandlerResponseCallback>;




}  // namespace blink
}  // namespace mojom
}  // namespace payments

#endif  // THIRD_PARTY_BLINK_PUBLIC_MOJOM_PAYMENTS_PAYMENT_APP_MOJOM_BLINK_FORWARD_H_