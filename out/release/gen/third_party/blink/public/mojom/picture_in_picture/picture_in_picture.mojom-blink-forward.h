// third_party/blink/public/mojom/picture_in_picture/picture_in_picture.mojom-blink-forward.h is auto generated by mojom_bindings_generator.py, do not edit

// Copyright 2019 The Chromium Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.

#ifndef THIRD_PARTY_BLINK_PUBLIC_MOJOM_PICTURE_IN_PICTURE_PICTURE_IN_PICTURE_MOJOM_BLINK_FORWARD_H_
#define THIRD_PARTY_BLINK_PUBLIC_MOJOM_PICTURE_IN_PICTURE_PICTURE_IN_PICTURE_MOJOM_BLINK_FORWARD_H_





#include "mojo/public/cpp/bindings/deprecated_interface_types_forward.h"






namespace blink {
namespace mojom {
}  // namespace blink
}  // namespace mojom


namespace blink {
namespace mojom {
namespace blink {
class PictureInPictureSessionObserver;

using PictureInPictureSessionObserverPtr = mojo::InterfacePtr<PictureInPictureSessionObserver>;
using PictureInPictureSessionObserverPtrInfo = mojo::InterfacePtrInfo<PictureInPictureSessionObserver>;
using ThreadSafePictureInPictureSessionObserverPtr =
    mojo::ThreadSafeInterfacePtr<PictureInPictureSessionObserver>;

using PictureInPictureSessionObserverRequest = mojo::InterfaceRequest<PictureInPictureSessionObserver>;

using PictureInPictureSessionObserverAssociatedPtr =
    mojo::AssociatedInterfacePtr<PictureInPictureSessionObserver>;
using ThreadSafePictureInPictureSessionObserverAssociatedPtr =
    mojo::ThreadSafeAssociatedInterfacePtr<PictureInPictureSessionObserver>;
using PictureInPictureSessionObserverAssociatedPtrInfo =
    mojo::AssociatedInterfacePtrInfo<PictureInPictureSessionObserver>;

using PictureInPictureSessionObserverAssociatedRequest =
    mojo::AssociatedInterfaceRequest<PictureInPictureSessionObserver>;

class PictureInPictureSession;

using PictureInPictureSessionPtr = mojo::InterfacePtr<PictureInPictureSession>;
using PictureInPictureSessionPtrInfo = mojo::InterfacePtrInfo<PictureInPictureSession>;
using ThreadSafePictureInPictureSessionPtr =
    mojo::ThreadSafeInterfacePtr<PictureInPictureSession>;

using PictureInPictureSessionRequest = mojo::InterfaceRequest<PictureInPictureSession>;

using PictureInPictureSessionAssociatedPtr =
    mojo::AssociatedInterfacePtr<PictureInPictureSession>;
using ThreadSafePictureInPictureSessionAssociatedPtr =
    mojo::ThreadSafeAssociatedInterfacePtr<PictureInPictureSession>;
using PictureInPictureSessionAssociatedPtrInfo =
    mojo::AssociatedInterfacePtrInfo<PictureInPictureSession>;

using PictureInPictureSessionAssociatedRequest =
    mojo::AssociatedInterfaceRequest<PictureInPictureSession>;

class PictureInPictureService;

using PictureInPictureServicePtr = mojo::InterfacePtr<PictureInPictureService>;
using PictureInPictureServicePtrInfo = mojo::InterfacePtrInfo<PictureInPictureService>;
using ThreadSafePictureInPictureServicePtr =
    mojo::ThreadSafeInterfacePtr<PictureInPictureService>;

using PictureInPictureServiceRequest = mojo::InterfaceRequest<PictureInPictureService>;

using PictureInPictureServiceAssociatedPtr =
    mojo::AssociatedInterfacePtr<PictureInPictureService>;
using ThreadSafePictureInPictureServiceAssociatedPtr =
    mojo::ThreadSafeAssociatedInterfacePtr<PictureInPictureService>;
using PictureInPictureServiceAssociatedPtrInfo =
    mojo::AssociatedInterfacePtrInfo<PictureInPictureService>;

using PictureInPictureServiceAssociatedRequest =
    mojo::AssociatedInterfaceRequest<PictureInPictureService>;




}  // namespace blink
}  // namespace mojom
}  // namespace blink

#endif  // THIRD_PARTY_BLINK_PUBLIC_MOJOM_PICTURE_IN_PICTURE_PICTURE_IN_PICTURE_MOJOM_BLINK_FORWARD_H_