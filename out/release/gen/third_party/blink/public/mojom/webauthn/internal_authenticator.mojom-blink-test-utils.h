// third_party/blink/public/mojom/webauthn/internal_authenticator.mojom-blink-test-utils.h is auto generated by mojom_bindings_generator.py, do not edit

// Copyright 2019 The Chromium Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.

#ifndef THIRD_PARTY_BLINK_PUBLIC_MOJOM_WEBAUTHN_INTERNAL_AUTHENTICATOR_MOJOM_BLINK_TEST_UTILS_H_
#define THIRD_PARTY_BLINK_PUBLIC_MOJOM_WEBAUTHN_INTERNAL_AUTHENTICATOR_MOJOM_BLINK_TEST_UTILS_H_

#include "third_party/blink/public/mojom/webauthn/internal_authenticator.mojom-blink.h"
#include "third_party/blink/renderer/platform/platform_export.h"


namespace blink {
namespace mojom {
namespace blink {


class PLATFORM_EXPORT InternalAuthenticatorInterceptorForTesting : public InternalAuthenticator {
  virtual InternalAuthenticator* GetForwardingInterface() = 0;
  void MakeCredential(::blink::mojom::blink::PublicKeyCredentialCreationOptionsPtr options, MakeCredentialCallback callback) override;
  void GetAssertion(::blink::mojom::blink::PublicKeyCredentialRequestOptionsPtr options, GetAssertionCallback callback) override;
  void IsUserVerifyingPlatformAuthenticatorAvailable(IsUserVerifyingPlatformAuthenticatorAvailableCallback callback) override;
};
class PLATFORM_EXPORT InternalAuthenticatorAsyncWaiter {
 public:
  explicit InternalAuthenticatorAsyncWaiter(InternalAuthenticator* proxy);
  ~InternalAuthenticatorAsyncWaiter();
  void MakeCredential(
      ::blink::mojom::blink::PublicKeyCredentialCreationOptionsPtr options, ::blink::mojom::blink::AuthenticatorStatus* out_status, ::blink::mojom::blink::MakeCredentialAuthenticatorResponsePtr* out_credential);
  void GetAssertion(
      ::blink::mojom::blink::PublicKeyCredentialRequestOptionsPtr options, ::blink::mojom::blink::AuthenticatorStatus* out_status, ::blink::mojom::blink::GetAssertionAuthenticatorResponsePtr* out_credential);
  void IsUserVerifyingPlatformAuthenticatorAvailable(
      bool* out_available);

 private:
  InternalAuthenticator* const proxy_;

  DISALLOW_COPY_AND_ASSIGN(InternalAuthenticatorAsyncWaiter);
};




}  // namespace blink
}  // namespace mojom
}  // namespace blink

#endif  // THIRD_PARTY_BLINK_PUBLIC_MOJOM_WEBAUTHN_INTERNAL_AUTHENTICATOR_MOJOM_BLINK_TEST_UTILS_H_