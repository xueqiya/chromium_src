// third_party/blink/public/mojom/background_sync/background_sync.mojom-blink-forward.h is auto generated by mojom_bindings_generator.py, do not edit

// Copyright 2019 The Chromium Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.

#ifndef THIRD_PARTY_BLINK_PUBLIC_MOJOM_BACKGROUND_SYNC_BACKGROUND_SYNC_MOJOM_BLINK_FORWARD_H_
#define THIRD_PARTY_BLINK_PUBLIC_MOJOM_BACKGROUND_SYNC_BACKGROUND_SYNC_MOJOM_BLINK_FORWARD_H_

#include <stdint.h>

#include "mojo/public/cpp/bindings/struct_forward.h"

#include "mojo/public/cpp/bindings/deprecated_interface_types_forward.h"


#include "mojo/public/interfaces/bindings/native_struct.mojom-forward.h"




namespace blink {
namespace mojom {

enum class BackgroundSyncError : int32_t;

enum class BackgroundSyncState : int32_t;

enum class BackgroundSyncEventLastChance : int32_t;

enum class BackgroundSyncType : int32_t;
}  // namespace blink
}  // namespace mojom

namespace WTF {
template <typename T>
struct DefaultHash;
}

namespace WTF {
struct blink_mojom_internal_BackgroundSyncError_DataHashFn;

template <>
struct DefaultHash<::blink::mojom::BackgroundSyncError> {
  using Hash = blink_mojom_internal_BackgroundSyncError_DataHashFn;
};
}  // namespace WTF

namespace WTF {
struct blink_mojom_internal_BackgroundSyncState_DataHashFn;

template <>
struct DefaultHash<::blink::mojom::BackgroundSyncState> {
  using Hash = blink_mojom_internal_BackgroundSyncState_DataHashFn;
};
}  // namespace WTF

namespace WTF {
struct blink_mojom_internal_BackgroundSyncEventLastChance_DataHashFn;

template <>
struct DefaultHash<::blink::mojom::BackgroundSyncEventLastChance> {
  using Hash = blink_mojom_internal_BackgroundSyncEventLastChance_DataHashFn;
};
}  // namespace WTF

namespace WTF {
struct blink_mojom_internal_BackgroundSyncType_DataHashFn;

template <>
struct DefaultHash<::blink::mojom::BackgroundSyncType> {
  using Hash = blink_mojom_internal_BackgroundSyncType_DataHashFn;
};
}  // namespace WTF


namespace blink {
namespace mojom {
namespace blink {
using BackgroundSyncError = BackgroundSyncError;  // Alias for definition in the parent namespace.
using BackgroundSyncState = BackgroundSyncState;  // Alias for definition in the parent namespace.
using BackgroundSyncEventLastChance = BackgroundSyncEventLastChance;  // Alias for definition in the parent namespace.
using BackgroundSyncType = BackgroundSyncType;  // Alias for definition in the parent namespace.
class SyncRegistrationOptions;
using SyncRegistrationOptionsPtr = mojo::InlinedStructPtr<SyncRegistrationOptions>;

class BackgroundSyncRegistrationInfo;
using BackgroundSyncRegistrationInfoPtr = mojo::InlinedStructPtr<BackgroundSyncRegistrationInfo>;

class OneShotBackgroundSyncService;

using OneShotBackgroundSyncServicePtr = mojo::InterfacePtr<OneShotBackgroundSyncService>;
using OneShotBackgroundSyncServicePtrInfo = mojo::InterfacePtrInfo<OneShotBackgroundSyncService>;
using ThreadSafeOneShotBackgroundSyncServicePtr =
    mojo::ThreadSafeInterfacePtr<OneShotBackgroundSyncService>;

using OneShotBackgroundSyncServiceRequest = mojo::InterfaceRequest<OneShotBackgroundSyncService>;

using OneShotBackgroundSyncServiceAssociatedPtr =
    mojo::AssociatedInterfacePtr<OneShotBackgroundSyncService>;
using ThreadSafeOneShotBackgroundSyncServiceAssociatedPtr =
    mojo::ThreadSafeAssociatedInterfacePtr<OneShotBackgroundSyncService>;
using OneShotBackgroundSyncServiceAssociatedPtrInfo =
    mojo::AssociatedInterfacePtrInfo<OneShotBackgroundSyncService>;

using OneShotBackgroundSyncServiceAssociatedRequest =
    mojo::AssociatedInterfaceRequest<OneShotBackgroundSyncService>;

class PeriodicBackgroundSyncService;

using PeriodicBackgroundSyncServicePtr = mojo::InterfacePtr<PeriodicBackgroundSyncService>;
using PeriodicBackgroundSyncServicePtrInfo = mojo::InterfacePtrInfo<PeriodicBackgroundSyncService>;
using ThreadSafePeriodicBackgroundSyncServicePtr =
    mojo::ThreadSafeInterfacePtr<PeriodicBackgroundSyncService>;

using PeriodicBackgroundSyncServiceRequest = mojo::InterfaceRequest<PeriodicBackgroundSyncService>;

using PeriodicBackgroundSyncServiceAssociatedPtr =
    mojo::AssociatedInterfacePtr<PeriodicBackgroundSyncService>;
using ThreadSafePeriodicBackgroundSyncServiceAssociatedPtr =
    mojo::ThreadSafeAssociatedInterfacePtr<PeriodicBackgroundSyncService>;
using PeriodicBackgroundSyncServiceAssociatedPtrInfo =
    mojo::AssociatedInterfacePtrInfo<PeriodicBackgroundSyncService>;

using PeriodicBackgroundSyncServiceAssociatedRequest =
    mojo::AssociatedInterfaceRequest<PeriodicBackgroundSyncService>;




}  // namespace blink
}  // namespace mojom
}  // namespace blink

#endif  // THIRD_PARTY_BLINK_PUBLIC_MOJOM_BACKGROUND_SYNC_BACKGROUND_SYNC_MOJOM_BLINK_FORWARD_H_