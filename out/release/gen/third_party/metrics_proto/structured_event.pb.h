// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: structured_event.proto

#ifndef GOOGLE_PROTOBUF_INCLUDED_structured_5fevent_2eproto
#define GOOGLE_PROTOBUF_INCLUDED_structured_5fevent_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3009000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3009000 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata_lite.h>
#include <google/protobuf/message_lite.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_structured_5fevent_2eproto
PROTOBUF_NAMESPACE_OPEN
namespace internal {
class AnyMetadata;
}  // namespace internal
PROTOBUF_NAMESPACE_CLOSE

// Internal implementation detail -- do not use these members.
struct TableStruct_structured_5fevent_2eproto {
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTableField entries[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::AuxillaryParseTableField aux[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTable schema[2]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::FieldMetadata field_metadata[];
  static const ::PROTOBUF_NAMESPACE_ID::internal::SerializationTable serialization_table[];
  static const ::PROTOBUF_NAMESPACE_ID::uint32 offsets[];
};
namespace metrics {
class StructuredEventProto;
class StructuredEventProtoDefaultTypeInternal;
extern StructuredEventProtoDefaultTypeInternal _StructuredEventProto_default_instance_;
class StructuredEventProto_Metric;
class StructuredEventProto_MetricDefaultTypeInternal;
extern StructuredEventProto_MetricDefaultTypeInternal _StructuredEventProto_Metric_default_instance_;
}  // namespace metrics
PROTOBUF_NAMESPACE_OPEN
template<> ::metrics::StructuredEventProto* Arena::CreateMaybeMessage<::metrics::StructuredEventProto>(Arena*);
template<> ::metrics::StructuredEventProto_Metric* Arena::CreateMaybeMessage<::metrics::StructuredEventProto_Metric>(Arena*);
PROTOBUF_NAMESPACE_CLOSE
namespace metrics {

// ===================================================================

class StructuredEventProto_Metric :
    public ::PROTOBUF_NAMESPACE_ID::MessageLite /* @@protoc_insertion_point(class_definition:metrics.StructuredEventProto.Metric) */ {
 public:
  StructuredEventProto_Metric();
  virtual ~StructuredEventProto_Metric();

  StructuredEventProto_Metric(const StructuredEventProto_Metric& from);
  StructuredEventProto_Metric(StructuredEventProto_Metric&& from) noexcept
    : StructuredEventProto_Metric() {
    *this = ::std::move(from);
  }

  inline StructuredEventProto_Metric& operator=(const StructuredEventProto_Metric& from) {
    CopyFrom(from);
    return *this;
  }
  inline StructuredEventProto_Metric& operator=(StructuredEventProto_Metric&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const std::string& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline std::string* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const StructuredEventProto_Metric& default_instance();

  enum ValueCase {
    kValueHmac = 2,
    kValueInt64 = 3,
    VALUE_NOT_SET = 0,
  };

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const StructuredEventProto_Metric* internal_default_instance() {
    return reinterpret_cast<const StructuredEventProto_Metric*>(
               &_StructuredEventProto_Metric_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(StructuredEventProto_Metric& a, StructuredEventProto_Metric& b) {
    a.Swap(&b);
  }
  inline void Swap(StructuredEventProto_Metric* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline StructuredEventProto_Metric* New() const final {
    return CreateMaybeMessage<StructuredEventProto_Metric>(nullptr);
  }

  StructuredEventProto_Metric* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<StructuredEventProto_Metric>(arena);
  }
  void CheckTypeAndMergeFrom(const ::PROTOBUF_NAMESPACE_ID::MessageLite& from)
    final;
  void CopyFrom(const StructuredEventProto_Metric& from);
  void MergeFrom(const StructuredEventProto_Metric& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  #else
  bool MergePartialFromCodedStream(
      ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const final;
  void DiscardUnknownFields();
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(StructuredEventProto_Metric* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "metrics.StructuredEventProto.Metric";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  std::string GetTypeName() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kNameHashFieldNumber = 1,
    kValueHmacFieldNumber = 2,
    kValueInt64FieldNumber = 3,
  };
  // optional fixed64 name_hash = 1;
  bool has_name_hash() const;
  void clear_name_hash();
  ::PROTOBUF_NAMESPACE_ID::uint64 name_hash() const;
  void set_name_hash(::PROTOBUF_NAMESPACE_ID::uint64 value);

  // optional fixed64 value_hmac = 2;
  bool has_value_hmac() const;
  void clear_value_hmac();
  ::PROTOBUF_NAMESPACE_ID::uint64 value_hmac() const;
  void set_value_hmac(::PROTOBUF_NAMESPACE_ID::uint64 value);

  // optional int64 value_int64 = 3;
  bool has_value_int64() const;
  void clear_value_int64();
  ::PROTOBUF_NAMESPACE_ID::int64 value_int64() const;
  void set_value_int64(::PROTOBUF_NAMESPACE_ID::int64 value);

  void clear_value();
  ValueCase value_case() const;
  // @@protoc_insertion_point(class_scope:metrics.StructuredEventProto.Metric)
 private:
  class _Internal;
  void set_has_value_hmac();
  void set_has_value_int64();

  inline bool has_value() const;
  inline void clear_has_value();

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArenaLite _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::uint64 name_hash_;
  union ValueUnion {
    ValueUnion() {}
    ::PROTOBUF_NAMESPACE_ID::uint64 value_hmac_;
    ::PROTOBUF_NAMESPACE_ID::int64 value_int64_;
  } value_;
  ::PROTOBUF_NAMESPACE_ID::uint32 _oneof_case_[1];

  friend struct ::TableStruct_structured_5fevent_2eproto;
};
// -------------------------------------------------------------------

class StructuredEventProto :
    public ::PROTOBUF_NAMESPACE_ID::MessageLite /* @@protoc_insertion_point(class_definition:metrics.StructuredEventProto) */ {
 public:
  StructuredEventProto();
  virtual ~StructuredEventProto();

  StructuredEventProto(const StructuredEventProto& from);
  StructuredEventProto(StructuredEventProto&& from) noexcept
    : StructuredEventProto() {
    *this = ::std::move(from);
  }

  inline StructuredEventProto& operator=(const StructuredEventProto& from) {
    CopyFrom(from);
    return *this;
  }
  inline StructuredEventProto& operator=(StructuredEventProto&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const std::string& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline std::string* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const StructuredEventProto& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const StructuredEventProto* internal_default_instance() {
    return reinterpret_cast<const StructuredEventProto*>(
               &_StructuredEventProto_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  friend void swap(StructuredEventProto& a, StructuredEventProto& b) {
    a.Swap(&b);
  }
  inline void Swap(StructuredEventProto* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline StructuredEventProto* New() const final {
    return CreateMaybeMessage<StructuredEventProto>(nullptr);
  }

  StructuredEventProto* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<StructuredEventProto>(arena);
  }
  void CheckTypeAndMergeFrom(const ::PROTOBUF_NAMESPACE_ID::MessageLite& from)
    final;
  void CopyFrom(const StructuredEventProto& from);
  void MergeFrom(const StructuredEventProto& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  #else
  bool MergePartialFromCodedStream(
      ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const final;
  void DiscardUnknownFields();
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(StructuredEventProto* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "metrics.StructuredEventProto";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  std::string GetTypeName() const final;

  // nested types ----------------------------------------------------

  typedef StructuredEventProto_Metric Metric;

  // accessors -------------------------------------------------------

  enum : int {
    kMetricsFieldNumber = 3,
    kProfileEventIdFieldNumber = 1,
    kEventNameHashFieldNumber = 2,
  };
  // repeated .metrics.StructuredEventProto.Metric metrics = 3;
  int metrics_size() const;
  void clear_metrics();
  ::metrics::StructuredEventProto_Metric* mutable_metrics(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::metrics::StructuredEventProto_Metric >*
      mutable_metrics();
  const ::metrics::StructuredEventProto_Metric& metrics(int index) const;
  ::metrics::StructuredEventProto_Metric* add_metrics();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::metrics::StructuredEventProto_Metric >&
      metrics() const;

  // optional fixed64 profile_event_id = 1;
  bool has_profile_event_id() const;
  void clear_profile_event_id();
  ::PROTOBUF_NAMESPACE_ID::uint64 profile_event_id() const;
  void set_profile_event_id(::PROTOBUF_NAMESPACE_ID::uint64 value);

  // optional fixed64 event_name_hash = 2;
  bool has_event_name_hash() const;
  void clear_event_name_hash();
  ::PROTOBUF_NAMESPACE_ID::uint64 event_name_hash() const;
  void set_event_name_hash(::PROTOBUF_NAMESPACE_ID::uint64 value);

  // @@protoc_insertion_point(class_scope:metrics.StructuredEventProto)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArenaLite _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::metrics::StructuredEventProto_Metric > metrics_;
  ::PROTOBUF_NAMESPACE_ID::uint64 profile_event_id_;
  ::PROTOBUF_NAMESPACE_ID::uint64 event_name_hash_;
  friend struct ::TableStruct_structured_5fevent_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// StructuredEventProto_Metric

// optional fixed64 name_hash = 1;
inline bool StructuredEventProto_Metric::has_name_hash() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void StructuredEventProto_Metric::clear_name_hash() {
  name_hash_ = PROTOBUF_ULONGLONG(0);
  _has_bits_[0] &= ~0x00000001u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 StructuredEventProto_Metric::name_hash() const {
  // @@protoc_insertion_point(field_get:metrics.StructuredEventProto.Metric.name_hash)
  return name_hash_;
}
inline void StructuredEventProto_Metric::set_name_hash(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _has_bits_[0] |= 0x00000001u;
  name_hash_ = value;
  // @@protoc_insertion_point(field_set:metrics.StructuredEventProto.Metric.name_hash)
}

// optional fixed64 value_hmac = 2;
inline bool StructuredEventProto_Metric::has_value_hmac() const {
  return value_case() == kValueHmac;
}
inline void StructuredEventProto_Metric::set_has_value_hmac() {
  _oneof_case_[0] = kValueHmac;
}
inline void StructuredEventProto_Metric::clear_value_hmac() {
  if (has_value_hmac()) {
    value_.value_hmac_ = PROTOBUF_ULONGLONG(0);
    clear_has_value();
  }
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 StructuredEventProto_Metric::value_hmac() const {
  // @@protoc_insertion_point(field_get:metrics.StructuredEventProto.Metric.value_hmac)
  if (has_value_hmac()) {
    return value_.value_hmac_;
  }
  return PROTOBUF_ULONGLONG(0);
}
inline void StructuredEventProto_Metric::set_value_hmac(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  if (!has_value_hmac()) {
    clear_value();
    set_has_value_hmac();
  }
  value_.value_hmac_ = value;
  // @@protoc_insertion_point(field_set:metrics.StructuredEventProto.Metric.value_hmac)
}

// optional int64 value_int64 = 3;
inline bool StructuredEventProto_Metric::has_value_int64() const {
  return value_case() == kValueInt64;
}
inline void StructuredEventProto_Metric::set_has_value_int64() {
  _oneof_case_[0] = kValueInt64;
}
inline void StructuredEventProto_Metric::clear_value_int64() {
  if (has_value_int64()) {
    value_.value_int64_ = PROTOBUF_LONGLONG(0);
    clear_has_value();
  }
}
inline ::PROTOBUF_NAMESPACE_ID::int64 StructuredEventProto_Metric::value_int64() const {
  // @@protoc_insertion_point(field_get:metrics.StructuredEventProto.Metric.value_int64)
  if (has_value_int64()) {
    return value_.value_int64_;
  }
  return PROTOBUF_LONGLONG(0);
}
inline void StructuredEventProto_Metric::set_value_int64(::PROTOBUF_NAMESPACE_ID::int64 value) {
  if (!has_value_int64()) {
    clear_value();
    set_has_value_int64();
  }
  value_.value_int64_ = value;
  // @@protoc_insertion_point(field_set:metrics.StructuredEventProto.Metric.value_int64)
}

inline bool StructuredEventProto_Metric::has_value() const {
  return value_case() != VALUE_NOT_SET;
}
inline void StructuredEventProto_Metric::clear_has_value() {
  _oneof_case_[0] = VALUE_NOT_SET;
}
inline StructuredEventProto_Metric::ValueCase StructuredEventProto_Metric::value_case() const {
  return StructuredEventProto_Metric::ValueCase(_oneof_case_[0]);
}
// -------------------------------------------------------------------

// StructuredEventProto

// optional fixed64 profile_event_id = 1;
inline bool StructuredEventProto::has_profile_event_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void StructuredEventProto::clear_profile_event_id() {
  profile_event_id_ = PROTOBUF_ULONGLONG(0);
  _has_bits_[0] &= ~0x00000001u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 StructuredEventProto::profile_event_id() const {
  // @@protoc_insertion_point(field_get:metrics.StructuredEventProto.profile_event_id)
  return profile_event_id_;
}
inline void StructuredEventProto::set_profile_event_id(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _has_bits_[0] |= 0x00000001u;
  profile_event_id_ = value;
  // @@protoc_insertion_point(field_set:metrics.StructuredEventProto.profile_event_id)
}

// optional fixed64 event_name_hash = 2;
inline bool StructuredEventProto::has_event_name_hash() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void StructuredEventProto::clear_event_name_hash() {
  event_name_hash_ = PROTOBUF_ULONGLONG(0);
  _has_bits_[0] &= ~0x00000002u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 StructuredEventProto::event_name_hash() const {
  // @@protoc_insertion_point(field_get:metrics.StructuredEventProto.event_name_hash)
  return event_name_hash_;
}
inline void StructuredEventProto::set_event_name_hash(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _has_bits_[0] |= 0x00000002u;
  event_name_hash_ = value;
  // @@protoc_insertion_point(field_set:metrics.StructuredEventProto.event_name_hash)
}

// repeated .metrics.StructuredEventProto.Metric metrics = 3;
inline int StructuredEventProto::metrics_size() const {
  return metrics_.size();
}
inline void StructuredEventProto::clear_metrics() {
  metrics_.Clear();
}
inline ::metrics::StructuredEventProto_Metric* StructuredEventProto::mutable_metrics(int index) {
  // @@protoc_insertion_point(field_mutable:metrics.StructuredEventProto.metrics)
  return metrics_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::metrics::StructuredEventProto_Metric >*
StructuredEventProto::mutable_metrics() {
  // @@protoc_insertion_point(field_mutable_list:metrics.StructuredEventProto.metrics)
  return &metrics_;
}
inline const ::metrics::StructuredEventProto_Metric& StructuredEventProto::metrics(int index) const {
  // @@protoc_insertion_point(field_get:metrics.StructuredEventProto.metrics)
  return metrics_.Get(index);
}
inline ::metrics::StructuredEventProto_Metric* StructuredEventProto::add_metrics() {
  // @@protoc_insertion_point(field_add:metrics.StructuredEventProto.metrics)
  return metrics_.Add();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::metrics::StructuredEventProto_Metric >&
StructuredEventProto::metrics() const {
  // @@protoc_insertion_point(field_list:metrics.StructuredEventProto.metrics)
  return metrics_;
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace metrics

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // GOOGLE_PROTOBUF_INCLUDED_GOOGLE_PROTOBUF_INCLUDED_structured_5fevent_2eproto
