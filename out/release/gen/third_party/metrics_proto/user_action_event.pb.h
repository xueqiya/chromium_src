// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: user_action_event.proto

#ifndef GOOGLE_PROTOBUF_INCLUDED_user_5faction_5fevent_2eproto
#define GOOGLE_PROTOBUF_INCLUDED_user_5faction_5fevent_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3009000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3009000 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata_lite.h>
#include <google/protobuf/message_lite.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_user_5faction_5fevent_2eproto
PROTOBUF_NAMESPACE_OPEN
namespace internal {
class AnyMetadata;
}  // namespace internal
PROTOBUF_NAMESPACE_CLOSE

// Internal implementation detail -- do not use these members.
struct TableStruct_user_5faction_5fevent_2eproto {
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTableField entries[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::AuxillaryParseTableField aux[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTable schema[1]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::FieldMetadata field_metadata[];
  static const ::PROTOBUF_NAMESPACE_ID::internal::SerializationTable serialization_table[];
  static const ::PROTOBUF_NAMESPACE_ID::uint32 offsets[];
};
namespace metrics {
class UserActionEventProto;
class UserActionEventProtoDefaultTypeInternal;
extern UserActionEventProtoDefaultTypeInternal _UserActionEventProto_default_instance_;
}  // namespace metrics
PROTOBUF_NAMESPACE_OPEN
template<> ::metrics::UserActionEventProto* Arena::CreateMaybeMessage<::metrics::UserActionEventProto>(Arena*);
PROTOBUF_NAMESPACE_CLOSE
namespace metrics {

// ===================================================================

class UserActionEventProto :
    public ::PROTOBUF_NAMESPACE_ID::MessageLite /* @@protoc_insertion_point(class_definition:metrics.UserActionEventProto) */ {
 public:
  UserActionEventProto();
  virtual ~UserActionEventProto();

  UserActionEventProto(const UserActionEventProto& from);
  UserActionEventProto(UserActionEventProto&& from) noexcept
    : UserActionEventProto() {
    *this = ::std::move(from);
  }

  inline UserActionEventProto& operator=(const UserActionEventProto& from) {
    CopyFrom(from);
    return *this;
  }
  inline UserActionEventProto& operator=(UserActionEventProto&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const std::string& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline std::string* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const UserActionEventProto& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const UserActionEventProto* internal_default_instance() {
    return reinterpret_cast<const UserActionEventProto*>(
               &_UserActionEventProto_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(UserActionEventProto& a, UserActionEventProto& b) {
    a.Swap(&b);
  }
  inline void Swap(UserActionEventProto* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline UserActionEventProto* New() const final {
    return CreateMaybeMessage<UserActionEventProto>(nullptr);
  }

  UserActionEventProto* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<UserActionEventProto>(arena);
  }
  void CheckTypeAndMergeFrom(const ::PROTOBUF_NAMESPACE_ID::MessageLite& from)
    final;
  void CopyFrom(const UserActionEventProto& from);
  void MergeFrom(const UserActionEventProto& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  #else
  bool MergePartialFromCodedStream(
      ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const final;
  void DiscardUnknownFields();
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(UserActionEventProto* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "metrics.UserActionEventProto";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  std::string GetTypeName() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kNameHashFieldNumber = 1,
    kTimeSecFieldNumber = 2,
  };
  // optional fixed64 name_hash = 1;
  bool has_name_hash() const;
  void clear_name_hash();
  ::PROTOBUF_NAMESPACE_ID::uint64 name_hash() const;
  void set_name_hash(::PROTOBUF_NAMESPACE_ID::uint64 value);

  // optional int64 time_sec = 2;
  bool has_time_sec() const;
  void clear_time_sec();
  ::PROTOBUF_NAMESPACE_ID::int64 time_sec() const;
  void set_time_sec(::PROTOBUF_NAMESPACE_ID::int64 value);

  // @@protoc_insertion_point(class_scope:metrics.UserActionEventProto)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArenaLite _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::uint64 name_hash_;
  ::PROTOBUF_NAMESPACE_ID::int64 time_sec_;
  friend struct ::TableStruct_user_5faction_5fevent_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// UserActionEventProto

// optional fixed64 name_hash = 1;
inline bool UserActionEventProto::has_name_hash() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void UserActionEventProto::clear_name_hash() {
  name_hash_ = PROTOBUF_ULONGLONG(0);
  _has_bits_[0] &= ~0x00000001u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 UserActionEventProto::name_hash() const {
  // @@protoc_insertion_point(field_get:metrics.UserActionEventProto.name_hash)
  return name_hash_;
}
inline void UserActionEventProto::set_name_hash(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _has_bits_[0] |= 0x00000001u;
  name_hash_ = value;
  // @@protoc_insertion_point(field_set:metrics.UserActionEventProto.name_hash)
}

// optional int64 time_sec = 2;
inline bool UserActionEventProto::has_time_sec() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void UserActionEventProto::clear_time_sec() {
  time_sec_ = PROTOBUF_LONGLONG(0);
  _has_bits_[0] &= ~0x00000002u;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 UserActionEventProto::time_sec() const {
  // @@protoc_insertion_point(field_get:metrics.UserActionEventProto.time_sec)
  return time_sec_;
}
inline void UserActionEventProto::set_time_sec(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _has_bits_[0] |= 0x00000002u;
  time_sec_ = value;
  // @@protoc_insertion_point(field_set:metrics.UserActionEventProto.time_sec)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)

}  // namespace metrics

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // GOOGLE_PROTOBUF_INCLUDED_GOOGLE_PROTOBUF_INCLUDED_user_5faction_5fevent_2eproto
