// Copyright 2014 The Chromium Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.


// This file is autogenerated by
//     base/android/jni_generator/jni_generator.py
// For
//     org/chromium/media/MediaDrmStorageBridge

#ifndef org_chromium_media_MediaDrmStorageBridge_JNI
#define org_chromium_media_MediaDrmStorageBridge_JNI

#include <jni.h>

#include "../../../../../../../base/android/jni_generator/jni_generator_helper.h"


// Step 1: Forward declarations.

JNI_REGISTRATION_EXPORT extern const char kClassPath_org_chromium_media_MediaDrmStorageBridge[];
const char kClassPath_org_chromium_media_MediaDrmStorageBridge[] =
    "org/chromium/media/MediaDrmStorageBridge";

JNI_REGISTRATION_EXPORT extern const char
    kClassPath_org_chromium_media_MediaDrmStorageBridge_00024PersistentInfo[];
const char kClassPath_org_chromium_media_MediaDrmStorageBridge_00024PersistentInfo[] =
    "org/chromium/media/MediaDrmStorageBridge$PersistentInfo";
// Leaking this jclass as we cannot use LazyInstance from some threads.
JNI_REGISTRATION_EXPORT std::atomic<jclass>
    g_org_chromium_media_MediaDrmStorageBridge_clazz(nullptr);
#ifndef org_chromium_media_MediaDrmStorageBridge_clazz_defined
#define org_chromium_media_MediaDrmStorageBridge_clazz_defined
inline jclass org_chromium_media_MediaDrmStorageBridge_clazz(JNIEnv* env) {
  return base::android::LazyGetClass(env, kClassPath_org_chromium_media_MediaDrmStorageBridge,
      &g_org_chromium_media_MediaDrmStorageBridge_clazz);
}
#endif
// Leaking this jclass as we cannot use LazyInstance from some threads.
JNI_REGISTRATION_EXPORT std::atomic<jclass>
    g_org_chromium_media_MediaDrmStorageBridge_00024PersistentInfo_clazz(nullptr);
#ifndef org_chromium_media_MediaDrmStorageBridge_00024PersistentInfo_clazz_defined
#define org_chromium_media_MediaDrmStorageBridge_00024PersistentInfo_clazz_defined
inline jclass org_chromium_media_MediaDrmStorageBridge_00024PersistentInfo_clazz(JNIEnv* env) {
  return base::android::LazyGetClass(env,
      kClassPath_org_chromium_media_MediaDrmStorageBridge_00024PersistentInfo,
      &g_org_chromium_media_MediaDrmStorageBridge_00024PersistentInfo_clazz);
}
#endif


// Step 2: Constants (optional).


// Step 3: Method stubs.
namespace media {

JNI_GENERATOR_EXPORT void Java_J_N_ME6vNmlv(
    JNIEnv* env,
    jclass jcaller,
    jlong nativeMediaDrmStorageBridge,
    jobject caller,
    jobject cb) {
  MediaDrmStorageBridge* native =
      reinterpret_cast<MediaDrmStorageBridge*>(nativeMediaDrmStorageBridge);
  CHECK_NATIVE_PTR(env, jcaller, native, "OnProvisioned");
  return native->OnProvisioned(env, base::android::JavaParamRef<jobject>(env, caller),
      base::android::JavaParamRef<jobject>(env, cb));
}

JNI_GENERATOR_EXPORT void Java_J_N_Mmi_1qOX8(
    JNIEnv* env,
    jclass jcaller,
    jlong nativeMediaDrmStorageBridge,
    jobject caller,
    jbyteArray sessionId,
    jobject cb) {
  MediaDrmStorageBridge* native =
      reinterpret_cast<MediaDrmStorageBridge*>(nativeMediaDrmStorageBridge);
  CHECK_NATIVE_PTR(env, jcaller, native, "OnLoadInfo");
  return native->OnLoadInfo(env, base::android::JavaParamRef<jobject>(env, caller),
      base::android::JavaParamRef<jbyteArray>(env, sessionId),
      base::android::JavaParamRef<jobject>(env, cb));
}

JNI_GENERATOR_EXPORT void Java_J_N_MeALR1v2(
    JNIEnv* env,
    jclass jcaller,
    jlong nativeMediaDrmStorageBridge,
    jobject caller,
    jobject info,
    jobject cb) {
  MediaDrmStorageBridge* native =
      reinterpret_cast<MediaDrmStorageBridge*>(nativeMediaDrmStorageBridge);
  CHECK_NATIVE_PTR(env, jcaller, native, "OnSaveInfo");
  return native->OnSaveInfo(env, base::android::JavaParamRef<jobject>(env, caller),
      base::android::JavaParamRef<jobject>(env, info), base::android::JavaParamRef<jobject>(env,
      cb));
}

JNI_GENERATOR_EXPORT void Java_J_N_MYa_1y6Dg(
    JNIEnv* env,
    jclass jcaller,
    jlong nativeMediaDrmStorageBridge,
    jobject caller,
    jbyteArray sessionId,
    jobject cb) {
  MediaDrmStorageBridge* native =
      reinterpret_cast<MediaDrmStorageBridge*>(nativeMediaDrmStorageBridge);
  CHECK_NATIVE_PTR(env, jcaller, native, "OnClearInfo");
  return native->OnClearInfo(env, base::android::JavaParamRef<jobject>(env, caller),
      base::android::JavaParamRef<jbyteArray>(env, sessionId),
      base::android::JavaParamRef<jobject>(env, cb));
}


static std::atomic<jmethodID>
    g_org_chromium_media_MediaDrmStorageBridge_00024PersistentInfo_create(nullptr);
static base::android::ScopedJavaLocalRef<jobject> Java_PersistentInfo_create(JNIEnv* env, const
    base::android::JavaRef<jbyteArray>& emeId,
    const base::android::JavaRef<jbyteArray>& keySetId,
    const base::android::JavaRef<jstring>& mime,
    JniIntWrapper keyType) {
  jclass clazz = org_chromium_media_MediaDrmStorageBridge_00024PersistentInfo_clazz(env);
  CHECK_CLAZZ(env, clazz,
      org_chromium_media_MediaDrmStorageBridge_00024PersistentInfo_clazz(env), NULL);

  jni_generator::JniJavaCallContextChecked call_context;
  call_context.Init<
      base::android::MethodID::TYPE_STATIC>(
          env,
          clazz,
          "create",
          "([B[BLjava/lang/String;I)Lorg/chromium/media/MediaDrmStorageBridge$PersistentInfo;",
          &g_org_chromium_media_MediaDrmStorageBridge_00024PersistentInfo_create);

  jobject ret =
      env->CallStaticObjectMethod(clazz,
          call_context.base.method_id, emeId.obj(), keySetId.obj(), mime.obj(), as_jint(keyType));
  return base::android::ScopedJavaLocalRef<jobject>(env, ret);
}

static std::atomic<jmethodID>
    g_org_chromium_media_MediaDrmStorageBridge_00024PersistentInfo_emeId(nullptr);
static base::android::ScopedJavaLocalRef<jbyteArray> Java_PersistentInfo_emeId(JNIEnv* env, const
    base::android::JavaRef<jobject>& obj) {
  jclass clazz = org_chromium_media_MediaDrmStorageBridge_00024PersistentInfo_clazz(env);
  CHECK_CLAZZ(env, obj.obj(),
      org_chromium_media_MediaDrmStorageBridge_00024PersistentInfo_clazz(env), NULL);

  jni_generator::JniJavaCallContextChecked call_context;
  call_context.Init<
      base::android::MethodID::TYPE_INSTANCE>(
          env,
          clazz,
          "emeId",
          "()[B",
          &g_org_chromium_media_MediaDrmStorageBridge_00024PersistentInfo_emeId);

  jbyteArray ret =
      static_cast<jbyteArray>(env->CallObjectMethod(obj.obj(),
          call_context.base.method_id));
  return base::android::ScopedJavaLocalRef<jbyteArray>(env, ret);
}

static std::atomic<jmethodID>
    g_org_chromium_media_MediaDrmStorageBridge_00024PersistentInfo_keySetId(nullptr);
static base::android::ScopedJavaLocalRef<jbyteArray> Java_PersistentInfo_keySetId(JNIEnv* env, const
    base::android::JavaRef<jobject>& obj) {
  jclass clazz = org_chromium_media_MediaDrmStorageBridge_00024PersistentInfo_clazz(env);
  CHECK_CLAZZ(env, obj.obj(),
      org_chromium_media_MediaDrmStorageBridge_00024PersistentInfo_clazz(env), NULL);

  jni_generator::JniJavaCallContextChecked call_context;
  call_context.Init<
      base::android::MethodID::TYPE_INSTANCE>(
          env,
          clazz,
          "keySetId",
          "()[B",
          &g_org_chromium_media_MediaDrmStorageBridge_00024PersistentInfo_keySetId);

  jbyteArray ret =
      static_cast<jbyteArray>(env->CallObjectMethod(obj.obj(),
          call_context.base.method_id));
  return base::android::ScopedJavaLocalRef<jbyteArray>(env, ret);
}

static std::atomic<jmethodID>
    g_org_chromium_media_MediaDrmStorageBridge_00024PersistentInfo_mimeType(nullptr);
static base::android::ScopedJavaLocalRef<jstring> Java_PersistentInfo_mimeType(JNIEnv* env, const
    base::android::JavaRef<jobject>& obj) {
  jclass clazz = org_chromium_media_MediaDrmStorageBridge_00024PersistentInfo_clazz(env);
  CHECK_CLAZZ(env, obj.obj(),
      org_chromium_media_MediaDrmStorageBridge_00024PersistentInfo_clazz(env), NULL);

  jni_generator::JniJavaCallContextChecked call_context;
  call_context.Init<
      base::android::MethodID::TYPE_INSTANCE>(
          env,
          clazz,
          "mimeType",
          "()Ljava/lang/String;",
          &g_org_chromium_media_MediaDrmStorageBridge_00024PersistentInfo_mimeType);

  jstring ret =
      static_cast<jstring>(env->CallObjectMethod(obj.obj(),
          call_context.base.method_id));
  return base::android::ScopedJavaLocalRef<jstring>(env, ret);
}

static std::atomic<jmethodID>
    g_org_chromium_media_MediaDrmStorageBridge_00024PersistentInfo_keyType(nullptr);
static jint Java_PersistentInfo_keyType(JNIEnv* env, const base::android::JavaRef<jobject>& obj) {
  jclass clazz = org_chromium_media_MediaDrmStorageBridge_00024PersistentInfo_clazz(env);
  CHECK_CLAZZ(env, obj.obj(),
      org_chromium_media_MediaDrmStorageBridge_00024PersistentInfo_clazz(env), 0);

  jni_generator::JniJavaCallContextChecked call_context;
  call_context.Init<
      base::android::MethodID::TYPE_INSTANCE>(
          env,
          clazz,
          "keyType",
          "()I",
          &g_org_chromium_media_MediaDrmStorageBridge_00024PersistentInfo_keyType);

  jint ret =
      env->CallIntMethod(obj.obj(),
          call_context.base.method_id);
  return ret;
}

}  // namespace media

// Step 4: Generated test functions (optional).


#endif  // org_chromium_media_MediaDrmStorageBridge_JNI
