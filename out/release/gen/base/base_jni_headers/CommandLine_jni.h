// Copyright 2014 The Chromium Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.


// This file is autogenerated by
//     base/android/jni_generator/jni_generator.py
// For
//     org/chromium/base/CommandLine

#ifndef org_chromium_base_CommandLine_JNI
#define org_chromium_base_CommandLine_JNI

#include <jni.h>

#include "../../../../../base/android/jni_generator/jni_generator_helper.h"


// Step 1: Forward declarations.


// Step 2: Constants (optional).


// Step 3: Method stubs.
static void JNI_CommandLine_Init(JNIEnv* env, const base::android::JavaParamRef<jobjectArray>&
    args);

JNI_GENERATOR_EXPORT void Java_J_N_MDkrKi31(
    JNIEnv* env,
    jclass jcaller,
    jobjectArray args) {
  return JNI_CommandLine_Init(env, base::android::JavaParamRef<jobjectArray>(env, args));
}

static jboolean JNI_CommandLine_HasSwitch(JNIEnv* env, const base::android::JavaParamRef<jstring>&
    switchString);

JNI_GENERATOR_EXPORT jboolean Java_J_N_MsCvypjU(
    JNIEnv* env,
    jclass jcaller,
    jstring switchString) {
  return JNI_CommandLine_HasSwitch(env, base::android::JavaParamRef<jstring>(env, switchString));
}

static base::android::ScopedJavaLocalRef<jstring> JNI_CommandLine_GetSwitchValue(JNIEnv* env, const
    base::android::JavaParamRef<jstring>& switchString);

JNI_GENERATOR_EXPORT jstring Java_J_N_MZJ2lrZY(
    JNIEnv* env,
    jclass jcaller,
    jstring switchString) {
  return JNI_CommandLine_GetSwitchValue(env, base::android::JavaParamRef<jstring>(env,
      switchString)).Release();
}

static void JNI_CommandLine_AppendSwitch(JNIEnv* env, const base::android::JavaParamRef<jstring>&
    switchString);

JNI_GENERATOR_EXPORT void Java_J_N_M5K_1ewhl(
    JNIEnv* env,
    jclass jcaller,
    jstring switchString) {
  return JNI_CommandLine_AppendSwitch(env, base::android::JavaParamRef<jstring>(env, switchString));
}

static void JNI_CommandLine_AppendSwitchWithValue(JNIEnv* env, const
    base::android::JavaParamRef<jstring>& switchString,
    const base::android::JavaParamRef<jstring>& value);

JNI_GENERATOR_EXPORT void Java_J_N_MUoYiNbY(
    JNIEnv* env,
    jclass jcaller,
    jstring switchString,
    jstring value) {
  return JNI_CommandLine_AppendSwitchWithValue(env, base::android::JavaParamRef<jstring>(env,
      switchString), base::android::JavaParamRef<jstring>(env, value));
}

static void JNI_CommandLine_AppendSwitchesAndArguments(JNIEnv* env, const
    base::android::JavaParamRef<jobjectArray>& array);

JNI_GENERATOR_EXPORT void Java_J_N_MPquHBNa(
    JNIEnv* env,
    jclass jcaller,
    jobjectArray array) {
  return JNI_CommandLine_AppendSwitchesAndArguments(env,
      base::android::JavaParamRef<jobjectArray>(env, array));
}

static void JNI_CommandLine_RemoveSwitch(JNIEnv* env, const base::android::JavaParamRef<jstring>&
    switchString);

JNI_GENERATOR_EXPORT void Java_J_N_M1cMYXGO(
    JNIEnv* env,
    jclass jcaller,
    jstring switchString) {
  return JNI_CommandLine_RemoveSwitch(env, base::android::JavaParamRef<jstring>(env, switchString));
}


// Step 4: Generated test functions (optional).


#endif  // org_chromium_base_CommandLine_JNI
