// Copyright 2014 The Chromium Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.


// This file is autogenerated by
//     base/android/jni_generator/jni_generator.py
// For
//     org/chromium/base/metrics/RecordUserAction

#ifndef org_chromium_base_metrics_RecordUserAction_JNI
#define org_chromium_base_metrics_RecordUserAction_JNI

#include <jni.h>

#include "../../../../../base/android/jni_generator/jni_generator_helper.h"


// Step 1: Forward declarations.

JNI_REGISTRATION_EXPORT extern const char kClassPath_org_chromium_base_metrics_RecordUserAction[];
const char kClassPath_org_chromium_base_metrics_RecordUserAction[] =
    "org/chromium/base/metrics/RecordUserAction";

JNI_REGISTRATION_EXPORT extern const char
    kClassPath_org_chromium_base_metrics_RecordUserAction_00024UserActionCallback[];
const char kClassPath_org_chromium_base_metrics_RecordUserAction_00024UserActionCallback[] =
    "org/chromium/base/metrics/RecordUserAction$UserActionCallback";
// Leaking this jclass as we cannot use LazyInstance from some threads.
JNI_REGISTRATION_EXPORT std::atomic<jclass>
    g_org_chromium_base_metrics_RecordUserAction_clazz(nullptr);
#ifndef org_chromium_base_metrics_RecordUserAction_clazz_defined
#define org_chromium_base_metrics_RecordUserAction_clazz_defined
inline jclass org_chromium_base_metrics_RecordUserAction_clazz(JNIEnv* env) {
  return base::android::LazyGetClass(env, kClassPath_org_chromium_base_metrics_RecordUserAction,
      &g_org_chromium_base_metrics_RecordUserAction_clazz);
}
#endif
// Leaking this jclass as we cannot use LazyInstance from some threads.
JNI_REGISTRATION_EXPORT std::atomic<jclass>
    g_org_chromium_base_metrics_RecordUserAction_00024UserActionCallback_clazz(nullptr);
#ifndef org_chromium_base_metrics_RecordUserAction_00024UserActionCallback_clazz_defined
#define org_chromium_base_metrics_RecordUserAction_00024UserActionCallback_clazz_defined
inline jclass org_chromium_base_metrics_RecordUserAction_00024UserActionCallback_clazz(JNIEnv* env)
    {
  return base::android::LazyGetClass(env,
      kClassPath_org_chromium_base_metrics_RecordUserAction_00024UserActionCallback,
      &g_org_chromium_base_metrics_RecordUserAction_00024UserActionCallback_clazz);
}
#endif


// Step 2: Constants (optional).


// Step 3: Method stubs.
namespace base {
namespace android {

static void JNI_RecordUserAction_RecordUserAction(JNIEnv* env, const
    base::android::JavaParamRef<jstring>& action);

JNI_GENERATOR_EXPORT void Java_J_N_MlFl3ytt(
    JNIEnv* env,
    jclass jcaller,
    jstring action) {
  return JNI_RecordUserAction_RecordUserAction(env, base::android::JavaParamRef<jstring>(env,
      action));
}

static jlong JNI_RecordUserAction_AddActionCallbackForTesting(JNIEnv* env, const
    base::android::JavaParamRef<jobject>& callback);

JNI_GENERATOR_EXPORT jlong Java_J_N_MH0bOwlk(
    JNIEnv* env,
    jclass jcaller,
    jobject callback) {
  return JNI_RecordUserAction_AddActionCallbackForTesting(env,
      base::android::JavaParamRef<jobject>(env, callback));
}

static void JNI_RecordUserAction_RemoveActionCallbackForTesting(JNIEnv* env, jlong callbackId);

JNI_GENERATOR_EXPORT void Java_J_N_MJl0LdjQ(
    JNIEnv* env,
    jclass jcaller,
    jlong callbackId) {
  return JNI_RecordUserAction_RemoveActionCallbackForTesting(env, callbackId);
}


static std::atomic<jmethodID>
    g_org_chromium_base_metrics_RecordUserAction_00024UserActionCallback_onActionRecorded(nullptr);
static void Java_UserActionCallback_onActionRecorded(JNIEnv* env, const
    base::android::JavaRef<jobject>& obj, const base::android::JavaRef<jstring>& action) {
  jclass clazz = org_chromium_base_metrics_RecordUserAction_00024UserActionCallback_clazz(env);
  CHECK_CLAZZ(env, obj.obj(),
      org_chromium_base_metrics_RecordUserAction_00024UserActionCallback_clazz(env));

  jni_generator::JniJavaCallContextChecked call_context;
  call_context.Init<
      base::android::MethodID::TYPE_INSTANCE>(
          env,
          clazz,
          "onActionRecorded",
          "(Ljava/lang/String;)V",
          &g_org_chromium_base_metrics_RecordUserAction_00024UserActionCallback_onActionRecorded);

     env->CallVoidMethod(obj.obj(),
          call_context.base.method_id, action.obj());
}

}  // namespace android
}  // namespace base

// Step 4: Generated test functions (optional).


#endif  // org_chromium_base_metrics_RecordUserAction_JNI
