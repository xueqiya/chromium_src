// Copyright 2014 The Chromium Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.


// This file is autogenerated by
//     base/android/jni_generator/jni_generator.py
// For
//     org/chromium/base/LocaleUtils

#ifndef org_chromium_base_LocaleUtils_JNI
#define org_chromium_base_LocaleUtils_JNI

#include <jni.h>

#include "../../../../../base/android/jni_generator/jni_generator_helper.h"


// Step 1: Forward declarations.

JNI_REGISTRATION_EXPORT extern const char kClassPath_org_chromium_base_LocaleUtils[];
const char kClassPath_org_chromium_base_LocaleUtils[] = "org/chromium/base/LocaleUtils";
// Leaking this jclass as we cannot use LazyInstance from some threads.
JNI_REGISTRATION_EXPORT std::atomic<jclass> g_org_chromium_base_LocaleUtils_clazz(nullptr);
#ifndef org_chromium_base_LocaleUtils_clazz_defined
#define org_chromium_base_LocaleUtils_clazz_defined
inline jclass org_chromium_base_LocaleUtils_clazz(JNIEnv* env) {
  return base::android::LazyGetClass(env, kClassPath_org_chromium_base_LocaleUtils,
      &g_org_chromium_base_LocaleUtils_clazz);
}
#endif


// Step 2: Constants (optional).


// Step 3: Method stubs.

static std::atomic<jmethodID> g_org_chromium_base_LocaleUtils_getDefaultLocaleString(nullptr);
static base::android::ScopedJavaLocalRef<jstring> Java_LocaleUtils_getDefaultLocaleString(JNIEnv*
    env) {
  jclass clazz = org_chromium_base_LocaleUtils_clazz(env);
  CHECK_CLAZZ(env, clazz,
      org_chromium_base_LocaleUtils_clazz(env), NULL);

  jni_generator::JniJavaCallContextChecked call_context;
  call_context.Init<
      base::android::MethodID::TYPE_STATIC>(
          env,
          clazz,
          "getDefaultLocaleString",
          "()Ljava/lang/String;",
          &g_org_chromium_base_LocaleUtils_getDefaultLocaleString);

  jstring ret =
      static_cast<jstring>(env->CallStaticObjectMethod(clazz,
          call_context.base.method_id));
  return base::android::ScopedJavaLocalRef<jstring>(env, ret);
}

static std::atomic<jmethodID> g_org_chromium_base_LocaleUtils_getDefaultLocaleListString(nullptr);
static base::android::ScopedJavaLocalRef<jstring>
    Java_LocaleUtils_getDefaultLocaleListString(JNIEnv* env) {
  jclass clazz = org_chromium_base_LocaleUtils_clazz(env);
  CHECK_CLAZZ(env, clazz,
      org_chromium_base_LocaleUtils_clazz(env), NULL);

  jni_generator::JniJavaCallContextChecked call_context;
  call_context.Init<
      base::android::MethodID::TYPE_STATIC>(
          env,
          clazz,
          "getDefaultLocaleListString",
          "()Ljava/lang/String;",
          &g_org_chromium_base_LocaleUtils_getDefaultLocaleListString);

  jstring ret =
      static_cast<jstring>(env->CallStaticObjectMethod(clazz,
          call_context.base.method_id));
  return base::android::ScopedJavaLocalRef<jstring>(env, ret);
}

static std::atomic<jmethodID> g_org_chromium_base_LocaleUtils_getDefaultCountryCode(nullptr);
static base::android::ScopedJavaLocalRef<jstring> Java_LocaleUtils_getDefaultCountryCode(JNIEnv*
    env) {
  jclass clazz = org_chromium_base_LocaleUtils_clazz(env);
  CHECK_CLAZZ(env, clazz,
      org_chromium_base_LocaleUtils_clazz(env), NULL);

  jni_generator::JniJavaCallContextChecked call_context;
  call_context.Init<
      base::android::MethodID::TYPE_STATIC>(
          env,
          clazz,
          "getDefaultCountryCode",
          "()Ljava/lang/String;",
          &g_org_chromium_base_LocaleUtils_getDefaultCountryCode);

  jstring ret =
      static_cast<jstring>(env->CallStaticObjectMethod(clazz,
          call_context.base.method_id));
  return base::android::ScopedJavaLocalRef<jstring>(env, ret);
}

// Step 4: Generated test functions (optional).


#endif  // org_chromium_base_LocaleUtils_JNI
