// Copyright 2014 The Chromium Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.


// This file is autogenerated by
//     base/android/jni_generator/jni_generator.py
// For
//     org/chromium/base/library_loader/LibraryPrefetcher

#ifndef org_chromium_base_library_loader_LibraryPrefetcher_JNI
#define org_chromium_base_library_loader_LibraryPrefetcher_JNI

#include <jni.h>

#include "../../../../../base/android/jni_generator/jni_generator_helper.h"


// Step 1: Forward declarations.


// Step 2: Constants (optional).


// Step 3: Method stubs.
namespace base {
namespace android {

static void JNI_LibraryPrefetcher_ForkAndPrefetchNativeLibrary(JNIEnv* env);

JNI_GENERATOR_EXPORT void Java_J_N_MUjpxN8d(
    JNIEnv* env,
    jclass jcaller) {
  return JNI_LibraryPrefetcher_ForkAndPrefetchNativeLibrary(env);
}

static jint JNI_LibraryPrefetcher_PercentageOfResidentNativeLibraryCode(JNIEnv* env);

JNI_GENERATOR_EXPORT jint Java_J_N_MdFgVRJJ(
    JNIEnv* env,
    jclass jcaller) {
  return JNI_LibraryPrefetcher_PercentageOfResidentNativeLibraryCode(env);
}

static void JNI_LibraryPrefetcher_PeriodicallyCollectResidency(JNIEnv* env);

JNI_GENERATOR_EXPORT void Java_J_N_MLXZo1U6(
    JNIEnv* env,
    jclass jcaller) {
  return JNI_LibraryPrefetcher_PeriodicallyCollectResidency(env);
}


}  // namespace android
}  // namespace base

// Step 4: Generated test functions (optional).


#endif  // org_chromium_base_library_loader_LibraryPrefetcher_JNI
