// Copyright 2014 The Chromium Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.


// This file is autogenerated by
//     base/android/jni_generator/jni_generator.py
// For
//     org/chromium/base/Callback

#ifndef org_chromium_base_Callback_JNI
#define org_chromium_base_Callback_JNI

#include <jni.h>

#include "../../../../../base/android/jni_generator/jni_generator_helper.h"


// Step 1: Forward declarations.

JNI_REGISTRATION_EXPORT extern const char kClassPath_org_chromium_base_Callback[];
const char kClassPath_org_chromium_base_Callback[] = "org/chromium/base/Callback";

JNI_REGISTRATION_EXPORT extern const char kClassPath_org_chromium_base_Callback_00024Helper[];
const char kClassPath_org_chromium_base_Callback_00024Helper[] =
    "org/chromium/base/Callback$Helper";
// Leaking this jclass as we cannot use LazyInstance from some threads.
JNI_REGISTRATION_EXPORT std::atomic<jclass> g_org_chromium_base_Callback_clazz(nullptr);
#ifndef org_chromium_base_Callback_clazz_defined
#define org_chromium_base_Callback_clazz_defined
inline jclass org_chromium_base_Callback_clazz(JNIEnv* env) {
  return base::android::LazyGetClass(env, kClassPath_org_chromium_base_Callback,
      &g_org_chromium_base_Callback_clazz);
}
#endif
// Leaking this jclass as we cannot use LazyInstance from some threads.
JNI_REGISTRATION_EXPORT std::atomic<jclass> g_org_chromium_base_Callback_00024Helper_clazz(nullptr);
#ifndef org_chromium_base_Callback_00024Helper_clazz_defined
#define org_chromium_base_Callback_00024Helper_clazz_defined
inline jclass org_chromium_base_Callback_00024Helper_clazz(JNIEnv* env) {
  return base::android::LazyGetClass(env, kClassPath_org_chromium_base_Callback_00024Helper,
      &g_org_chromium_base_Callback_00024Helper_clazz);
}
#endif


// Step 2: Constants (optional).


// Step 3: Method stubs.

static std::atomic<jmethodID>
    g_org_chromium_base_Callback_00024Helper_onObjectResultFromNative(nullptr);
static void Java_Helper_onObjectResultFromNative(JNIEnv* env, const base::android::JavaRef<jobject>&
    callback,
    const base::android::JavaRef<jobject>& result) {
  jclass clazz = org_chromium_base_Callback_00024Helper_clazz(env);
  CHECK_CLAZZ(env, clazz,
      org_chromium_base_Callback_00024Helper_clazz(env));

  jni_generator::JniJavaCallContextChecked call_context;
  call_context.Init<
      base::android::MethodID::TYPE_STATIC>(
          env,
          clazz,
          "onObjectResultFromNative",
          "(Lorg/chromium/base/Callback;Ljava/lang/Object;)V",
          &g_org_chromium_base_Callback_00024Helper_onObjectResultFromNative);

     env->CallStaticVoidMethod(clazz,
          call_context.base.method_id, callback.obj(), result.obj());
}

static std::atomic<jmethodID>
    g_org_chromium_base_Callback_00024Helper_onBooleanResultFromNative(nullptr);
static void Java_Helper_onBooleanResultFromNative(JNIEnv* env, const
    base::android::JavaRef<jobject>& callback,
    jboolean result) {
  jclass clazz = org_chromium_base_Callback_00024Helper_clazz(env);
  CHECK_CLAZZ(env, clazz,
      org_chromium_base_Callback_00024Helper_clazz(env));

  jni_generator::JniJavaCallContextChecked call_context;
  call_context.Init<
      base::android::MethodID::TYPE_STATIC>(
          env,
          clazz,
          "onBooleanResultFromNative",
          "(Lorg/chromium/base/Callback;Z)V",
          &g_org_chromium_base_Callback_00024Helper_onBooleanResultFromNative);

     env->CallStaticVoidMethod(clazz,
          call_context.base.method_id, callback.obj(), result);
}

static std::atomic<jmethodID>
    g_org_chromium_base_Callback_00024Helper_onIntResultFromNative(nullptr);
static void Java_Helper_onIntResultFromNative(JNIEnv* env, const base::android::JavaRef<jobject>&
    callback,
    JniIntWrapper result) {
  jclass clazz = org_chromium_base_Callback_00024Helper_clazz(env);
  CHECK_CLAZZ(env, clazz,
      org_chromium_base_Callback_00024Helper_clazz(env));

  jni_generator::JniJavaCallContextChecked call_context;
  call_context.Init<
      base::android::MethodID::TYPE_STATIC>(
          env,
          clazz,
          "onIntResultFromNative",
          "(Lorg/chromium/base/Callback;I)V",
          &g_org_chromium_base_Callback_00024Helper_onIntResultFromNative);

     env->CallStaticVoidMethod(clazz,
          call_context.base.method_id, callback.obj(), as_jint(result));
}

static std::atomic<jmethodID> g_org_chromium_base_Callback_00024Helper_runRunnable(nullptr);
static void Java_Helper_runRunnable(JNIEnv* env, const base::android::JavaRef<jobject>& runnable) {
  jclass clazz = org_chromium_base_Callback_00024Helper_clazz(env);
  CHECK_CLAZZ(env, clazz,
      org_chromium_base_Callback_00024Helper_clazz(env));

  jni_generator::JniJavaCallContextChecked call_context;
  call_context.Init<
      base::android::MethodID::TYPE_STATIC>(
          env,
          clazz,
          "runRunnable",
          "(Ljava/lang/Runnable;)V",
          &g_org_chromium_base_Callback_00024Helper_runRunnable);

     env->CallStaticVoidMethod(clazz,
          call_context.base.method_id, runnable.obj());
}

// Step 4: Generated test functions (optional).


#endif  // org_chromium_base_Callback_JNI
