// Copyright 2014 The Chromium Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.


// This file is autogenerated by
//     base/android/jni_generator/jni_generator.py
// For
//     org/chromium/android_webview/AwPacProcessor

#ifndef org_chromium_android_webview_AwPacProcessor_JNI
#define org_chromium_android_webview_AwPacProcessor_JNI

#include <jni.h>

#include "../../../../../base/android/jni_generator/jni_generator_helper.h"


// Step 1: Forward declarations.


// Step 2: Constants (optional).


// Step 3: Method stubs.
namespace android_webview {

static jlong JNI_AwPacProcessor_GetDefaultPacProcessor(JNIEnv* env);

JNI_GENERATOR_EXPORT jlong Java_J_N_Mf2TcTCl(
    JNIEnv* env,
    jclass jcaller) {
  return JNI_AwPacProcessor_GetDefaultPacProcessor(env);
}

JNI_GENERATOR_EXPORT jboolean Java_J_N_MEjwJwuS(
    JNIEnv* env,
    jclass jcaller,
    jlong nativeAwPacProcessor,
    jobject caller,
    jstring script) {
  AwPacProcessor* native = reinterpret_cast<AwPacProcessor*>(nativeAwPacProcessor);
  CHECK_NATIVE_PTR(env, jcaller, native, "SetProxyScript", false);
  return native->SetProxyScript(env, base::android::JavaParamRef<jobject>(env, caller),
      base::android::JavaParamRef<jstring>(env, script));
}

JNI_GENERATOR_EXPORT jstring Java_J_N_ME9i0MKK(
    JNIEnv* env,
    jclass jcaller,
    jlong nativeAwPacProcessor,
    jobject caller,
    jstring url) {
  AwPacProcessor* native = reinterpret_cast<AwPacProcessor*>(nativeAwPacProcessor);
  CHECK_NATIVE_PTR(env, jcaller, native, "MakeProxyRequest", NULL);
  return native->MakeProxyRequest(env, base::android::JavaParamRef<jobject>(env, caller),
      base::android::JavaParamRef<jstring>(env, url)).Release();
}


}  // namespace android_webview

// Step 4: Generated test functions (optional).


#endif  // org_chromium_android_webview_AwPacProcessor_JNI
