// Copyright 2014 The Chromium Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.


// This file is autogenerated by
//     base/android/jni_generator/jni_generator.py
// For
//     org/chromium/android_webview/safe_browsing/AwSafeBrowsingConfigHelper

#ifndef org_chromium_android_webview_safe_browsing_AwSafeBrowsingConfigHelper_JNI
#define org_chromium_android_webview_safe_browsing_AwSafeBrowsingConfigHelper_JNI

#include <jni.h>

#include "../../../../../base/android/jni_generator/jni_generator_helper.h"


// Step 1: Forward declarations.

JNI_REGISTRATION_EXPORT extern const char
    kClassPath_org_chromium_android_1webview_safe_1browsing_AwSafeBrowsingConfigHelper[];
const char kClassPath_org_chromium_android_1webview_safe_1browsing_AwSafeBrowsingConfigHelper[] =
    "org/chromium/android_webview/safe_browsing/AwSafeBrowsingConfigHelper";
// Leaking this jclass as we cannot use LazyInstance from some threads.
JNI_REGISTRATION_EXPORT std::atomic<jclass>
    g_org_chromium_android_1webview_safe_1browsing_AwSafeBrowsingConfigHelper_clazz(nullptr);
#ifndef org_chromium_android_1webview_safe_1browsing_AwSafeBrowsingConfigHelper_clazz_defined
#define org_chromium_android_1webview_safe_1browsing_AwSafeBrowsingConfigHelper_clazz_defined
inline jclass org_chromium_android_1webview_safe_1browsing_AwSafeBrowsingConfigHelper_clazz(JNIEnv*
    env) {
  return base::android::LazyGetClass(env,
      kClassPath_org_chromium_android_1webview_safe_1browsing_AwSafeBrowsingConfigHelper,
      &g_org_chromium_android_1webview_safe_1browsing_AwSafeBrowsingConfigHelper_clazz);
}
#endif


// Step 2: Constants (optional).


// Step 3: Method stubs.
namespace android_webview {


static std::atomic<jmethodID>
    g_org_chromium_android_1webview_safe_1browsing_AwSafeBrowsingConfigHelper_getSafeBrowsingUserOptIn(nullptr);
static jboolean Java_AwSafeBrowsingConfigHelper_getSafeBrowsingUserOptIn(JNIEnv* env) {
  jclass clazz = org_chromium_android_1webview_safe_1browsing_AwSafeBrowsingConfigHelper_clazz(env);
  CHECK_CLAZZ(env, clazz,
      org_chromium_android_1webview_safe_1browsing_AwSafeBrowsingConfigHelper_clazz(env), false);

  jni_generator::JniJavaCallContextChecked call_context;
  call_context.Init<
      base::android::MethodID::TYPE_STATIC>(
          env,
          clazz,
          "getSafeBrowsingUserOptIn",
          "()Z",
&g_org_chromium_android_1webview_safe_1browsing_AwSafeBrowsingConfigHelper_getSafeBrowsingUserOptIn);

  jboolean ret =
      env->CallStaticBooleanMethod(clazz,
          call_context.base.method_id);
  return ret;
}

}  // namespace android_webview

// Step 4: Generated test functions (optional).


#endif  // org_chromium_android_webview_safe_browsing_AwSafeBrowsingConfigHelper_JNI
