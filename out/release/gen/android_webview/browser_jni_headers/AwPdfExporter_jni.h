// Copyright 2014 The Chromium Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.


// This file is autogenerated by
//     base/android/jni_generator/jni_generator.py
// For
//     org/chromium/android_webview/AwPdfExporter

#ifndef org_chromium_android_webview_AwPdfExporter_JNI
#define org_chromium_android_webview_AwPdfExporter_JNI

#include <jni.h>

#include "../../../../../base/android/jni_generator/jni_generator_helper.h"


// Step 1: Forward declarations.

JNI_REGISTRATION_EXPORT extern const char kClassPath_org_chromium_android_1webview_AwPdfExporter[];
const char kClassPath_org_chromium_android_1webview_AwPdfExporter[] =
    "org/chromium/android_webview/AwPdfExporter";
// Leaking this jclass as we cannot use LazyInstance from some threads.
JNI_REGISTRATION_EXPORT std::atomic<jclass>
    g_org_chromium_android_1webview_AwPdfExporter_clazz(nullptr);
#ifndef org_chromium_android_1webview_AwPdfExporter_clazz_defined
#define org_chromium_android_1webview_AwPdfExporter_clazz_defined
inline jclass org_chromium_android_1webview_AwPdfExporter_clazz(JNIEnv* env) {
  return base::android::LazyGetClass(env, kClassPath_org_chromium_android_1webview_AwPdfExporter,
      &g_org_chromium_android_1webview_AwPdfExporter_clazz);
}
#endif


// Step 2: Constants (optional).


// Step 3: Method stubs.
namespace android_webview {

JNI_GENERATOR_EXPORT void Java_J_N_Mp2j15Oh(
    JNIEnv* env,
    jclass jcaller,
    jlong nativeAwPdfExporter,
    jobject caller,
    jint fd,
    jintArray pages,
    jobject cancellationSignal) {
  AwPdfExporter* native = reinterpret_cast<AwPdfExporter*>(nativeAwPdfExporter);
  CHECK_NATIVE_PTR(env, jcaller, native, "ExportToPdf");
  return native->ExportToPdf(env, base::android::JavaParamRef<jobject>(env, caller), fd,
      base::android::JavaParamRef<jintArray>(env, pages), base::android::JavaParamRef<jobject>(env,
      cancellationSignal));
}


static std::atomic<jmethodID>
    g_org_chromium_android_1webview_AwPdfExporter_setNativeAwPdfExporter(nullptr);
static void Java_AwPdfExporter_setNativeAwPdfExporter(JNIEnv* env, const
    base::android::JavaRef<jobject>& obj, jlong nativePdfExporter) {
  jclass clazz = org_chromium_android_1webview_AwPdfExporter_clazz(env);
  CHECK_CLAZZ(env, obj.obj(),
      org_chromium_android_1webview_AwPdfExporter_clazz(env));

  jni_generator::JniJavaCallContextChecked call_context;
  call_context.Init<
      base::android::MethodID::TYPE_INSTANCE>(
          env,
          clazz,
          "setNativeAwPdfExporter",
          "(J)V",
          &g_org_chromium_android_1webview_AwPdfExporter_setNativeAwPdfExporter);

     env->CallVoidMethod(obj.obj(),
          call_context.base.method_id, nativePdfExporter);
}

static std::atomic<jmethodID> g_org_chromium_android_1webview_AwPdfExporter_didExportPdf(nullptr);
static void Java_AwPdfExporter_didExportPdf(JNIEnv* env, const base::android::JavaRef<jobject>& obj,
    JniIntWrapper pageCount) {
  jclass clazz = org_chromium_android_1webview_AwPdfExporter_clazz(env);
  CHECK_CLAZZ(env, obj.obj(),
      org_chromium_android_1webview_AwPdfExporter_clazz(env));

  jni_generator::JniJavaCallContextChecked call_context;
  call_context.Init<
      base::android::MethodID::TYPE_INSTANCE>(
          env,
          clazz,
          "didExportPdf",
          "(I)V",
          &g_org_chromium_android_1webview_AwPdfExporter_didExportPdf);

     env->CallVoidMethod(obj.obj(),
          call_context.base.method_id, as_jint(pageCount));
}

static std::atomic<jmethodID> g_org_chromium_android_1webview_AwPdfExporter_getPageWidth(nullptr);
static jint Java_AwPdfExporter_getPageWidth(JNIEnv* env, const base::android::JavaRef<jobject>& obj)
    {
  jclass clazz = org_chromium_android_1webview_AwPdfExporter_clazz(env);
  CHECK_CLAZZ(env, obj.obj(),
      org_chromium_android_1webview_AwPdfExporter_clazz(env), 0);

  jni_generator::JniJavaCallContextChecked call_context;
  call_context.Init<
      base::android::MethodID::TYPE_INSTANCE>(
          env,
          clazz,
          "getPageWidth",
          "()I",
          &g_org_chromium_android_1webview_AwPdfExporter_getPageWidth);

  jint ret =
      env->CallIntMethod(obj.obj(),
          call_context.base.method_id);
  return ret;
}

static std::atomic<jmethodID> g_org_chromium_android_1webview_AwPdfExporter_getPageHeight(nullptr);
static jint Java_AwPdfExporter_getPageHeight(JNIEnv* env, const base::android::JavaRef<jobject>&
    obj) {
  jclass clazz = org_chromium_android_1webview_AwPdfExporter_clazz(env);
  CHECK_CLAZZ(env, obj.obj(),
      org_chromium_android_1webview_AwPdfExporter_clazz(env), 0);

  jni_generator::JniJavaCallContextChecked call_context;
  call_context.Init<
      base::android::MethodID::TYPE_INSTANCE>(
          env,
          clazz,
          "getPageHeight",
          "()I",
          &g_org_chromium_android_1webview_AwPdfExporter_getPageHeight);

  jint ret =
      env->CallIntMethod(obj.obj(),
          call_context.base.method_id);
  return ret;
}

static std::atomic<jmethodID> g_org_chromium_android_1webview_AwPdfExporter_getDpi(nullptr);
static jint Java_AwPdfExporter_getDpi(JNIEnv* env, const base::android::JavaRef<jobject>& obj) {
  jclass clazz = org_chromium_android_1webview_AwPdfExporter_clazz(env);
  CHECK_CLAZZ(env, obj.obj(),
      org_chromium_android_1webview_AwPdfExporter_clazz(env), 0);

  jni_generator::JniJavaCallContextChecked call_context;
  call_context.Init<
      base::android::MethodID::TYPE_INSTANCE>(
          env,
          clazz,
          "getDpi",
          "()I",
          &g_org_chromium_android_1webview_AwPdfExporter_getDpi);

  jint ret =
      env->CallIntMethod(obj.obj(),
          call_context.base.method_id);
  return ret;
}

static std::atomic<jmethodID> g_org_chromium_android_1webview_AwPdfExporter_getLeftMargin(nullptr);
static jint Java_AwPdfExporter_getLeftMargin(JNIEnv* env, const base::android::JavaRef<jobject>&
    obj) {
  jclass clazz = org_chromium_android_1webview_AwPdfExporter_clazz(env);
  CHECK_CLAZZ(env, obj.obj(),
      org_chromium_android_1webview_AwPdfExporter_clazz(env), 0);

  jni_generator::JniJavaCallContextChecked call_context;
  call_context.Init<
      base::android::MethodID::TYPE_INSTANCE>(
          env,
          clazz,
          "getLeftMargin",
          "()I",
          &g_org_chromium_android_1webview_AwPdfExporter_getLeftMargin);

  jint ret =
      env->CallIntMethod(obj.obj(),
          call_context.base.method_id);
  return ret;
}

static std::atomic<jmethodID> g_org_chromium_android_1webview_AwPdfExporter_getRightMargin(nullptr);
static jint Java_AwPdfExporter_getRightMargin(JNIEnv* env, const base::android::JavaRef<jobject>&
    obj) {
  jclass clazz = org_chromium_android_1webview_AwPdfExporter_clazz(env);
  CHECK_CLAZZ(env, obj.obj(),
      org_chromium_android_1webview_AwPdfExporter_clazz(env), 0);

  jni_generator::JniJavaCallContextChecked call_context;
  call_context.Init<
      base::android::MethodID::TYPE_INSTANCE>(
          env,
          clazz,
          "getRightMargin",
          "()I",
          &g_org_chromium_android_1webview_AwPdfExporter_getRightMargin);

  jint ret =
      env->CallIntMethod(obj.obj(),
          call_context.base.method_id);
  return ret;
}

static std::atomic<jmethodID> g_org_chromium_android_1webview_AwPdfExporter_getTopMargin(nullptr);
static jint Java_AwPdfExporter_getTopMargin(JNIEnv* env, const base::android::JavaRef<jobject>& obj)
    {
  jclass clazz = org_chromium_android_1webview_AwPdfExporter_clazz(env);
  CHECK_CLAZZ(env, obj.obj(),
      org_chromium_android_1webview_AwPdfExporter_clazz(env), 0);

  jni_generator::JniJavaCallContextChecked call_context;
  call_context.Init<
      base::android::MethodID::TYPE_INSTANCE>(
          env,
          clazz,
          "getTopMargin",
          "()I",
          &g_org_chromium_android_1webview_AwPdfExporter_getTopMargin);

  jint ret =
      env->CallIntMethod(obj.obj(),
          call_context.base.method_id);
  return ret;
}

static std::atomic<jmethodID>
    g_org_chromium_android_1webview_AwPdfExporter_getBottomMargin(nullptr);
static jint Java_AwPdfExporter_getBottomMargin(JNIEnv* env, const base::android::JavaRef<jobject>&
    obj) {
  jclass clazz = org_chromium_android_1webview_AwPdfExporter_clazz(env);
  CHECK_CLAZZ(env, obj.obj(),
      org_chromium_android_1webview_AwPdfExporter_clazz(env), 0);

  jni_generator::JniJavaCallContextChecked call_context;
  call_context.Init<
      base::android::MethodID::TYPE_INSTANCE>(
          env,
          clazz,
          "getBottomMargin",
          "()I",
          &g_org_chromium_android_1webview_AwPdfExporter_getBottomMargin);

  jint ret =
      env->CallIntMethod(obj.obj(),
          call_context.base.method_id);
  return ret;
}

}  // namespace android_webview

// Step 4: Generated test functions (optional).


#endif  // org_chromium_android_webview_AwPdfExporter_JNI
