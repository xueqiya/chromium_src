// android_webview/common/js_java_interaction/interfaces.mojom-params-data.h is auto generated by mojom_bindings_generator.py, do not edit

// Copyright 2019 The Chromium Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.

#ifndef ANDROID_WEBVIEW_COMMON_JS_JAVA_INTERACTION_INTERFACES_MOJOM_PARAMS_DATA_H_
#define ANDROID_WEBVIEW_COMMON_JS_JAVA_INTERACTION_INTERFACES_MOJOM_PARAMS_DATA_H_

#include "base/logging.h"
#include "base/macros.h"
#include "mojo/public/cpp/bindings/lib/bindings_internal.h"
#include "mojo/public/cpp/bindings/lib/buffer.h"
#include "mojo/public/cpp/bindings/lib/validation_context.h"

#if defined(__clang__)
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wunused-private-field"
#elif defined(_MSC_VER)
#pragma warning(push)
#pragma warning(disable:4056)
#pragma warning(disable:4065)
#pragma warning(disable:4756)
#endif
namespace android_webview {
namespace mojom {
namespace internal {
class  JsToJavaMessaging_PostMessage_Params_Data {
 public:
  class BufferWriter {
   public:
    BufferWriter() = default;

    void Allocate(mojo::internal::Buffer* serialization_buffer) {
      serialization_buffer_ = serialization_buffer;
      index_ = serialization_buffer_->Allocate(sizeof(JsToJavaMessaging_PostMessage_Params_Data));
      new (data()) JsToJavaMessaging_PostMessage_Params_Data();
    }

    bool is_null() const { return !serialization_buffer_; }
    JsToJavaMessaging_PostMessage_Params_Data* data() {
      DCHECK(!is_null());
      return serialization_buffer_->Get<JsToJavaMessaging_PostMessage_Params_Data>(index_);
    }
    JsToJavaMessaging_PostMessage_Params_Data* operator->() { return data(); }

   private:
    mojo::internal::Buffer* serialization_buffer_ = nullptr;
    size_t index_ = 0;

    DISALLOW_COPY_AND_ASSIGN(BufferWriter);
  };

  static bool Validate(const void* data,
                       mojo::internal::ValidationContext* validation_context);

  mojo::internal::StructHeader header_;
  mojo::internal::Pointer<::mojo_base::mojom::internal::String16_Data> message;
  mojo::internal::Pointer<mojo::internal::Array_Data<mojo::internal::Handle_Data>> ports;

 private:
  JsToJavaMessaging_PostMessage_Params_Data();
  ~JsToJavaMessaging_PostMessage_Params_Data() = delete;
};
static_assert(sizeof(JsToJavaMessaging_PostMessage_Params_Data) == 24,
              "Bad sizeof(JsToJavaMessaging_PostMessage_Params_Data)");
class  JsToJavaMessaging_SetJavaToJsMessaging_Params_Data {
 public:
  class BufferWriter {
   public:
    BufferWriter() = default;

    void Allocate(mojo::internal::Buffer* serialization_buffer) {
      serialization_buffer_ = serialization_buffer;
      index_ = serialization_buffer_->Allocate(sizeof(JsToJavaMessaging_SetJavaToJsMessaging_Params_Data));
      new (data()) JsToJavaMessaging_SetJavaToJsMessaging_Params_Data();
    }

    bool is_null() const { return !serialization_buffer_; }
    JsToJavaMessaging_SetJavaToJsMessaging_Params_Data* data() {
      DCHECK(!is_null());
      return serialization_buffer_->Get<JsToJavaMessaging_SetJavaToJsMessaging_Params_Data>(index_);
    }
    JsToJavaMessaging_SetJavaToJsMessaging_Params_Data* operator->() { return data(); }

   private:
    mojo::internal::Buffer* serialization_buffer_ = nullptr;
    size_t index_ = 0;

    DISALLOW_COPY_AND_ASSIGN(BufferWriter);
  };

  static bool Validate(const void* data,
                       mojo::internal::ValidationContext* validation_context);

  mojo::internal::StructHeader header_;
  mojo::internal::AssociatedInterface_Data java_to_js_messaging;

 private:
  JsToJavaMessaging_SetJavaToJsMessaging_Params_Data();
  ~JsToJavaMessaging_SetJavaToJsMessaging_Params_Data() = delete;
};
static_assert(sizeof(JsToJavaMessaging_SetJavaToJsMessaging_Params_Data) == 16,
              "Bad sizeof(JsToJavaMessaging_SetJavaToJsMessaging_Params_Data)");
class  JavaToJsMessaging_OnPostMessage_Params_Data {
 public:
  class BufferWriter {
   public:
    BufferWriter() = default;

    void Allocate(mojo::internal::Buffer* serialization_buffer) {
      serialization_buffer_ = serialization_buffer;
      index_ = serialization_buffer_->Allocate(sizeof(JavaToJsMessaging_OnPostMessage_Params_Data));
      new (data()) JavaToJsMessaging_OnPostMessage_Params_Data();
    }

    bool is_null() const { return !serialization_buffer_; }
    JavaToJsMessaging_OnPostMessage_Params_Data* data() {
      DCHECK(!is_null());
      return serialization_buffer_->Get<JavaToJsMessaging_OnPostMessage_Params_Data>(index_);
    }
    JavaToJsMessaging_OnPostMessage_Params_Data* operator->() { return data(); }

   private:
    mojo::internal::Buffer* serialization_buffer_ = nullptr;
    size_t index_ = 0;

    DISALLOW_COPY_AND_ASSIGN(BufferWriter);
  };

  static bool Validate(const void* data,
                       mojo::internal::ValidationContext* validation_context);

  mojo::internal::StructHeader header_;
  mojo::internal::Pointer<::mojo_base::mojom::internal::String16_Data> message;

 private:
  JavaToJsMessaging_OnPostMessage_Params_Data();
  ~JavaToJsMessaging_OnPostMessage_Params_Data() = delete;
};
static_assert(sizeof(JavaToJsMessaging_OnPostMessage_Params_Data) == 16,
              "Bad sizeof(JavaToJsMessaging_OnPostMessage_Params_Data)");
class  JsJavaConfigurator_SetJsObjects_Params_Data {
 public:
  class BufferWriter {
   public:
    BufferWriter() = default;

    void Allocate(mojo::internal::Buffer* serialization_buffer) {
      serialization_buffer_ = serialization_buffer;
      index_ = serialization_buffer_->Allocate(sizeof(JsJavaConfigurator_SetJsObjects_Params_Data));
      new (data()) JsJavaConfigurator_SetJsObjects_Params_Data();
    }

    bool is_null() const { return !serialization_buffer_; }
    JsJavaConfigurator_SetJsObjects_Params_Data* data() {
      DCHECK(!is_null());
      return serialization_buffer_->Get<JsJavaConfigurator_SetJsObjects_Params_Data>(index_);
    }
    JsJavaConfigurator_SetJsObjects_Params_Data* operator->() { return data(); }

   private:
    mojo::internal::Buffer* serialization_buffer_ = nullptr;
    size_t index_ = 0;

    DISALLOW_COPY_AND_ASSIGN(BufferWriter);
  };

  static bool Validate(const void* data,
                       mojo::internal::ValidationContext* validation_context);

  mojo::internal::StructHeader header_;
  mojo::internal::Pointer<mojo::internal::Array_Data<mojo::internal::Pointer<internal::JsObject_Data>>> js_objects;

 private:
  JsJavaConfigurator_SetJsObjects_Params_Data();
  ~JsJavaConfigurator_SetJsObjects_Params_Data() = delete;
};
static_assert(sizeof(JsJavaConfigurator_SetJsObjects_Params_Data) == 16,
              "Bad sizeof(JsJavaConfigurator_SetJsObjects_Params_Data)");

}  // namespace internal
class JsToJavaMessaging_PostMessage_ParamsDataView {
 public:
  JsToJavaMessaging_PostMessage_ParamsDataView() {}

  JsToJavaMessaging_PostMessage_ParamsDataView(
      internal::JsToJavaMessaging_PostMessage_Params_Data* data,
      mojo::internal::SerializationContext* context)
      : data_(data), context_(context) {}

  bool is_null() const { return !data_; }
  inline void GetMessageDataView(
      ::mojo_base::mojom::String16DataView* output);

  template <typename UserType>
  WARN_UNUSED_RESULT bool ReadMessage(UserType* output) {
    auto* pointer = data_->message.Get();
    return mojo::internal::Deserialize<::mojo_base::mojom::String16DataView>(
        pointer, output, context_);
  }
  inline void GetPortsDataView(
      mojo::ArrayDataView<mojo::ScopedMessagePipeHandle>* output);

  template <typename UserType>
  WARN_UNUSED_RESULT bool ReadPorts(UserType* output) {
    auto* pointer = data_->ports.Get();
    return mojo::internal::Deserialize<mojo::ArrayDataView<mojo::ScopedMessagePipeHandle>>(
        pointer, output, context_);
  }
 private:
  internal::JsToJavaMessaging_PostMessage_Params_Data* data_ = nullptr;
  mojo::internal::SerializationContext* context_ = nullptr;
};

class JsToJavaMessaging_SetJavaToJsMessaging_ParamsDataView {
 public:
  JsToJavaMessaging_SetJavaToJsMessaging_ParamsDataView() {}

  JsToJavaMessaging_SetJavaToJsMessaging_ParamsDataView(
      internal::JsToJavaMessaging_SetJavaToJsMessaging_Params_Data* data,
      mojo::internal::SerializationContext* context)
      : data_(data), context_(context) {}

  bool is_null() const { return !data_; }
  template <typename UserType>
  UserType TakeJavaToJsMessaging() {
    UserType result;
    bool ret =
        mojo::internal::Deserialize<::android_webview::mojom::JavaToJsMessagingAssociatedPtrInfoDataView>(
            &data_->java_to_js_messaging, &result, context_);
    DCHECK(ret);
    return result;
  }
 private:
  internal::JsToJavaMessaging_SetJavaToJsMessaging_Params_Data* data_ = nullptr;
  mojo::internal::SerializationContext* context_ = nullptr;
};

class JavaToJsMessaging_OnPostMessage_ParamsDataView {
 public:
  JavaToJsMessaging_OnPostMessage_ParamsDataView() {}

  JavaToJsMessaging_OnPostMessage_ParamsDataView(
      internal::JavaToJsMessaging_OnPostMessage_Params_Data* data,
      mojo::internal::SerializationContext* context)
      : data_(data), context_(context) {}

  bool is_null() const { return !data_; }
  inline void GetMessageDataView(
      ::mojo_base::mojom::String16DataView* output);

  template <typename UserType>
  WARN_UNUSED_RESULT bool ReadMessage(UserType* output) {
    auto* pointer = data_->message.Get();
    return mojo::internal::Deserialize<::mojo_base::mojom::String16DataView>(
        pointer, output, context_);
  }
 private:
  internal::JavaToJsMessaging_OnPostMessage_Params_Data* data_ = nullptr;
  mojo::internal::SerializationContext* context_ = nullptr;
};

class JsJavaConfigurator_SetJsObjects_ParamsDataView {
 public:
  JsJavaConfigurator_SetJsObjects_ParamsDataView() {}

  JsJavaConfigurator_SetJsObjects_ParamsDataView(
      internal::JsJavaConfigurator_SetJsObjects_Params_Data* data,
      mojo::internal::SerializationContext* context)
      : data_(data), context_(context) {}

  bool is_null() const { return !data_; }
  inline void GetJsObjectsDataView(
      mojo::ArrayDataView<JsObjectDataView>* output);

  template <typename UserType>
  WARN_UNUSED_RESULT bool ReadJsObjects(UserType* output) {
    auto* pointer = data_->js_objects.Get();
    return mojo::internal::Deserialize<mojo::ArrayDataView<::android_webview::mojom::JsObjectDataView>>(
        pointer, output, context_);
  }
 private:
  internal::JsJavaConfigurator_SetJsObjects_Params_Data* data_ = nullptr;
  mojo::internal::SerializationContext* context_ = nullptr;
};


inline void JsToJavaMessaging_PostMessage_ParamsDataView::GetMessageDataView(
    ::mojo_base::mojom::String16DataView* output) {
  auto pointer = data_->message.Get();
  *output = ::mojo_base::mojom::String16DataView(pointer, context_);
}
inline void JsToJavaMessaging_PostMessage_ParamsDataView::GetPortsDataView(
    mojo::ArrayDataView<mojo::ScopedMessagePipeHandle>* output) {
  auto pointer = data_->ports.Get();
  *output = mojo::ArrayDataView<mojo::ScopedMessagePipeHandle>(pointer, context_);
}




inline void JavaToJsMessaging_OnPostMessage_ParamsDataView::GetMessageDataView(
    ::mojo_base::mojom::String16DataView* output) {
  auto pointer = data_->message.Get();
  *output = ::mojo_base::mojom::String16DataView(pointer, context_);
}


inline void JsJavaConfigurator_SetJsObjects_ParamsDataView::GetJsObjectsDataView(
    mojo::ArrayDataView<JsObjectDataView>* output) {
  auto pointer = data_->js_objects.Get();
  *output = mojo::ArrayDataView<JsObjectDataView>(pointer, context_);
}

}  // namespace mojom
}  // namespace android_webview

#if defined(__clang__)
#pragma clang diagnostic pop
#elif defined(_MSC_VER)
#pragma warning(pop)
#endif

#endif  // ANDROID_WEBVIEW_COMMON_JS_JAVA_INTERACTION_INTERFACES_MOJOM_PARAMS_DATA_H_