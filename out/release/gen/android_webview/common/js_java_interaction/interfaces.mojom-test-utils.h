// android_webview/common/js_java_interaction/interfaces.mojom-test-utils.h is auto generated by mojom_bindings_generator.py, do not edit

// Copyright 2019 The Chromium Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.

#ifndef ANDROID_WEBVIEW_COMMON_JS_JAVA_INTERACTION_INTERFACES_MOJOM_TEST_UTILS_H_
#define ANDROID_WEBVIEW_COMMON_JS_JAVA_INTERACTION_INTERFACES_MOJOM_TEST_UTILS_H_

#include "android_webview/common/js_java_interaction/interfaces.mojom.h"


namespace android_webview {
namespace mojom {


class  JsToJavaMessagingInterceptorForTesting : public JsToJavaMessaging {
  virtual JsToJavaMessaging* GetForwardingInterface() = 0;
  void PostMessage(const ::base::string16& message, std::vector<mojo::ScopedMessagePipeHandle> ports) override;
  void SetJavaToJsMessaging(mojo::PendingAssociatedRemote<JavaToJsMessaging> java_to_js_messaging) override;
};
class  JsToJavaMessagingAsyncWaiter {
 public:
  explicit JsToJavaMessagingAsyncWaiter(JsToJavaMessaging* proxy);
  ~JsToJavaMessagingAsyncWaiter();

 private:
  JsToJavaMessaging* const proxy_;

  DISALLOW_COPY_AND_ASSIGN(JsToJavaMessagingAsyncWaiter);
};


class  JavaToJsMessagingInterceptorForTesting : public JavaToJsMessaging {
  virtual JavaToJsMessaging* GetForwardingInterface() = 0;
  void OnPostMessage(const ::base::string16& message) override;
};
class  JavaToJsMessagingAsyncWaiter {
 public:
  explicit JavaToJsMessagingAsyncWaiter(JavaToJsMessaging* proxy);
  ~JavaToJsMessagingAsyncWaiter();

 private:
  JavaToJsMessaging* const proxy_;

  DISALLOW_COPY_AND_ASSIGN(JavaToJsMessagingAsyncWaiter);
};


class  JsJavaConfiguratorInterceptorForTesting : public JsJavaConfigurator {
  virtual JsJavaConfigurator* GetForwardingInterface() = 0;
  void SetJsObjects(std::vector<JsObjectPtr> js_objects) override;
};
class  JsJavaConfiguratorAsyncWaiter {
 public:
  explicit JsJavaConfiguratorAsyncWaiter(JsJavaConfigurator* proxy);
  ~JsJavaConfiguratorAsyncWaiter();

 private:
  JsJavaConfigurator* const proxy_;

  DISALLOW_COPY_AND_ASSIGN(JsJavaConfiguratorAsyncWaiter);
};




}  // namespace mojom
}  // namespace android_webview

#endif  // ANDROID_WEBVIEW_COMMON_JS_JAVA_INTERACTION_INTERFACES_MOJOM_TEST_UTILS_H_