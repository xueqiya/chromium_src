// components/performance_manager/public/mojom/coordination_unit.mojom-blink-forward.h is auto generated by mojom_bindings_generator.py, do not edit

// Copyright 2019 The Chromium Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.

#ifndef COMPONENTS_PERFORMANCE_MANAGER_PUBLIC_MOJOM_COORDINATION_UNIT_MOJOM_BLINK_FORWARD_H_
#define COMPONENTS_PERFORMANCE_MANAGER_PUBLIC_MOJOM_COORDINATION_UNIT_MOJOM_BLINK_FORWARD_H_

#include <stdint.h>



#include "mojo/public/cpp/bindings/deprecated_interface_types_forward.h"






namespace performance_manager {
namespace mojom {

enum class CoordinationUnitType : int32_t;

enum class InterventionPolicy : int32_t;
}  // namespace performance_manager
}  // namespace mojom

namespace WTF {
template <typename T>
struct DefaultHash;
}

namespace WTF {
struct performance_manager_mojom_internal_CoordinationUnitType_DataHashFn;

template <>
struct DefaultHash<::performance_manager::mojom::CoordinationUnitType> {
  using Hash = performance_manager_mojom_internal_CoordinationUnitType_DataHashFn;
};
}  // namespace WTF

namespace WTF {
struct performance_manager_mojom_internal_InterventionPolicy_DataHashFn;

template <>
struct DefaultHash<::performance_manager::mojom::InterventionPolicy> {
  using Hash = performance_manager_mojom_internal_InterventionPolicy_DataHashFn;
};
}  // namespace WTF


namespace performance_manager {
namespace mojom {
namespace blink {
using CoordinationUnitType = CoordinationUnitType;  // Alias for definition in the parent namespace.
using InterventionPolicy = InterventionPolicy;  // Alias for definition in the parent namespace.
class DocumentCoordinationUnit;

using DocumentCoordinationUnitPtr = mojo::InterfacePtr<DocumentCoordinationUnit>;
using DocumentCoordinationUnitPtrInfo = mojo::InterfacePtrInfo<DocumentCoordinationUnit>;
using ThreadSafeDocumentCoordinationUnitPtr =
    mojo::ThreadSafeInterfacePtr<DocumentCoordinationUnit>;

using DocumentCoordinationUnitRequest = mojo::InterfaceRequest<DocumentCoordinationUnit>;

using DocumentCoordinationUnitAssociatedPtr =
    mojo::AssociatedInterfacePtr<DocumentCoordinationUnit>;
using ThreadSafeDocumentCoordinationUnitAssociatedPtr =
    mojo::ThreadSafeAssociatedInterfacePtr<DocumentCoordinationUnit>;
using DocumentCoordinationUnitAssociatedPtrInfo =
    mojo::AssociatedInterfacePtrInfo<DocumentCoordinationUnit>;

using DocumentCoordinationUnitAssociatedRequest =
    mojo::AssociatedInterfaceRequest<DocumentCoordinationUnit>;

class ProcessCoordinationUnit;

using ProcessCoordinationUnitPtr = mojo::InterfacePtr<ProcessCoordinationUnit>;
using ProcessCoordinationUnitPtrInfo = mojo::InterfacePtrInfo<ProcessCoordinationUnit>;
using ThreadSafeProcessCoordinationUnitPtr =
    mojo::ThreadSafeInterfacePtr<ProcessCoordinationUnit>;

using ProcessCoordinationUnitRequest = mojo::InterfaceRequest<ProcessCoordinationUnit>;

using ProcessCoordinationUnitAssociatedPtr =
    mojo::AssociatedInterfacePtr<ProcessCoordinationUnit>;
using ThreadSafeProcessCoordinationUnitAssociatedPtr =
    mojo::ThreadSafeAssociatedInterfacePtr<ProcessCoordinationUnit>;
using ProcessCoordinationUnitAssociatedPtrInfo =
    mojo::AssociatedInterfacePtrInfo<ProcessCoordinationUnit>;

using ProcessCoordinationUnitAssociatedRequest =
    mojo::AssociatedInterfaceRequest<ProcessCoordinationUnit>;




}  // namespace blink
}  // namespace mojom
}  // namespace performance_manager

#endif  // COMPONENTS_PERFORMANCE_MANAGER_PUBLIC_MOJOM_COORDINATION_UNIT_MOJOM_BLINK_FORWARD_H_