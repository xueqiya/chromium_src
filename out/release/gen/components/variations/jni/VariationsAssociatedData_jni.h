// Copyright 2014 The Chromium Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.


// This file is autogenerated by
//     base/android/jni_generator/jni_generator.py
// For
//     org/chromium/components/variations/VariationsAssociatedData

#ifndef org_chromium_components_variations_VariationsAssociatedData_JNI
#define org_chromium_components_variations_VariationsAssociatedData_JNI

#include <jni.h>

#include "../../../../../../base/android/jni_generator/jni_generator_helper.h"


// Step 1: Forward declarations.


// Step 2: Constants (optional).


// Step 3: Method stubs.
namespace variations {
namespace android {

static base::android::ScopedJavaLocalRef<jstring>
    JNI_VariationsAssociatedData_GetVariationParamValue(JNIEnv* env, const
    base::android::JavaParamRef<jstring>& trialName,
    const base::android::JavaParamRef<jstring>& paramName);

JNI_GENERATOR_EXPORT jstring Java_J_N_MOVY9QtZ(
    JNIEnv* env,
    jclass jcaller,
    jstring trialName,
    jstring paramName) {
  return JNI_VariationsAssociatedData_GetVariationParamValue(env,
      base::android::JavaParamRef<jstring>(env, trialName),
      base::android::JavaParamRef<jstring>(env, paramName)).Release();
}

static base::android::ScopedJavaLocalRef<jstring>
    JNI_VariationsAssociatedData_GetFeedbackVariations(JNIEnv* env);

JNI_GENERATOR_EXPORT jstring Java_J_N_Mkq2qJev(
    JNIEnv* env,
    jclass jcaller) {
  return JNI_VariationsAssociatedData_GetFeedbackVariations(env).Release();
}


}  // namespace android
}  // namespace variations

// Step 4: Generated test functions (optional).


#endif  // org_chromium_components_variations_VariationsAssociatedData_JNI
