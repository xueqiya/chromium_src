// Copyright 2014 The Chromium Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.


// This file is autogenerated by
//     base/android/jni_generator/jni_generator.py
// For
//     org/chromium/components/crash/CrashKeys

#ifndef org_chromium_components_crash_CrashKeys_JNI
#define org_chromium_components_crash_CrashKeys_JNI

#include <jni.h>

#include "../../../../../../../base/android/jni_generator/jni_generator_helper.h"


// Step 1: Forward declarations.

JNI_REGISTRATION_EXPORT extern const char kClassPath_org_chromium_components_crash_CrashKeys[];
const char kClassPath_org_chromium_components_crash_CrashKeys[] =
    "org/chromium/components/crash/CrashKeys";
// Leaking this jclass as we cannot use LazyInstance from some threads.
JNI_REGISTRATION_EXPORT std::atomic<jclass>
    g_org_chromium_components_crash_CrashKeys_clazz(nullptr);
#ifndef org_chromium_components_crash_CrashKeys_clazz_defined
#define org_chromium_components_crash_CrashKeys_clazz_defined
inline jclass org_chromium_components_crash_CrashKeys_clazz(JNIEnv* env) {
  return base::android::LazyGetClass(env, kClassPath_org_chromium_components_crash_CrashKeys,
      &g_org_chromium_components_crash_CrashKeys_clazz);
}
#endif


// Step 2: Constants (optional).


// Step 3: Method stubs.
static void JNI_CrashKeys_Set(JNIEnv* env, const base::android::JavaParamRef<jobject>& caller,
    jint key,
    const base::android::JavaParamRef<jstring>& value);

JNI_GENERATOR_EXPORT void Java_J_N_Mk_00024gnuuz(
    JNIEnv* env,
    jclass jcaller,
    jobject caller,
    jint key,
    jstring value) {
  return JNI_CrashKeys_Set(env, base::android::JavaParamRef<jobject>(env, caller), key,
      base::android::JavaParamRef<jstring>(env, value));
}


static std::atomic<jmethodID> g_org_chromium_components_crash_CrashKeys_getInstance(nullptr);
static base::android::ScopedJavaLocalRef<jobject> Java_CrashKeys_getInstance(JNIEnv* env) {
  jclass clazz = org_chromium_components_crash_CrashKeys_clazz(env);
  CHECK_CLAZZ(env, clazz,
      org_chromium_components_crash_CrashKeys_clazz(env), NULL);

  jni_generator::JniJavaCallContextChecked call_context;
  call_context.Init<
      base::android::MethodID::TYPE_STATIC>(
          env,
          clazz,
          "getInstance",
          "()Lorg/chromium/components/crash/CrashKeys;",
          &g_org_chromium_components_crash_CrashKeys_getInstance);

  jobject ret =
      env->CallStaticObjectMethod(clazz,
          call_context.base.method_id);
  return base::android::ScopedJavaLocalRef<jobject>(env, ret);
}

static std::atomic<jmethodID> g_org_chromium_components_crash_CrashKeys_set(nullptr);
static void Java_CrashKeys_set(JNIEnv* env, const base::android::JavaRef<jobject>& obj,
    JniIntWrapper keyIndex,
    const base::android::JavaRef<jstring>& value) {
  jclass clazz = org_chromium_components_crash_CrashKeys_clazz(env);
  CHECK_CLAZZ(env, obj.obj(),
      org_chromium_components_crash_CrashKeys_clazz(env));

  jni_generator::JniJavaCallContextChecked call_context;
  call_context.Init<
      base::android::MethodID::TYPE_INSTANCE>(
          env,
          clazz,
          "set",
          "(ILjava/lang/String;)V",
          &g_org_chromium_components_crash_CrashKeys_set);

     env->CallVoidMethod(obj.obj(),
          call_context.base.method_id, as_jint(keyIndex), value.obj());
}

static std::atomic<jmethodID> g_org_chromium_components_crash_CrashKeys_flushToNative(nullptr);
static void Java_CrashKeys_flushToNative(JNIEnv* env, const base::android::JavaRef<jobject>& obj) {
  jclass clazz = org_chromium_components_crash_CrashKeys_clazz(env);
  CHECK_CLAZZ(env, obj.obj(),
      org_chromium_components_crash_CrashKeys_clazz(env));

  jni_generator::JniJavaCallContextChecked call_context;
  call_context.Init<
      base::android::MethodID::TYPE_INSTANCE>(
          env,
          clazz,
          "flushToNative",
          "()V",
          &g_org_chromium_components_crash_CrashKeys_flushToNative);

     env->CallVoidMethod(obj.obj(),
          call_context.base.method_id);
}

// Step 4: Generated test functions (optional).


#endif  // org_chromium_components_crash_CrashKeys_JNI
