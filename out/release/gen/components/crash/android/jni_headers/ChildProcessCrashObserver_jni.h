// Copyright 2014 The Chromium Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.


// This file is autogenerated by
//     base/android/jni_generator/jni_generator.py
// For
//     org/chromium/components/crash/browser/ChildProcessCrashObserver

#ifndef org_chromium_components_crash_browser_ChildProcessCrashObserver_JNI
#define org_chromium_components_crash_browser_ChildProcessCrashObserver_JNI

#include <jni.h>

#include "../../../../../../../base/android/jni_generator/jni_generator_helper.h"


// Step 1: Forward declarations.

JNI_REGISTRATION_EXPORT extern const char
    kClassPath_org_chromium_components_crash_browser_ChildProcessCrashObserver[];
const char kClassPath_org_chromium_components_crash_browser_ChildProcessCrashObserver[] =
    "org/chromium/components/crash/browser/ChildProcessCrashObserver";
// Leaking this jclass as we cannot use LazyInstance from some threads.
JNI_REGISTRATION_EXPORT std::atomic<jclass>
    g_org_chromium_components_crash_browser_ChildProcessCrashObserver_clazz(nullptr);
#ifndef org_chromium_components_crash_browser_ChildProcessCrashObserver_clazz_defined
#define org_chromium_components_crash_browser_ChildProcessCrashObserver_clazz_defined
inline jclass org_chromium_components_crash_browser_ChildProcessCrashObserver_clazz(JNIEnv* env) {
  return base::android::LazyGetClass(env,
      kClassPath_org_chromium_components_crash_browser_ChildProcessCrashObserver,
      &g_org_chromium_components_crash_browser_ChildProcessCrashObserver_clazz);
}
#endif


// Step 2: Constants (optional).


// Step 3: Method stubs.

static std::atomic<jmethodID>
    g_org_chromium_components_crash_browser_ChildProcessCrashObserver_childCrashed(nullptr);
static void Java_ChildProcessCrashObserver_childCrashed(JNIEnv* env, JniIntWrapper pid) {
  jclass clazz = org_chromium_components_crash_browser_ChildProcessCrashObserver_clazz(env);
  CHECK_CLAZZ(env, clazz,
      org_chromium_components_crash_browser_ChildProcessCrashObserver_clazz(env));

  jni_generator::JniJavaCallContextChecked call_context;
  call_context.Init<
      base::android::MethodID::TYPE_STATIC>(
          env,
          clazz,
          "childCrashed",
          "(I)V",
          &g_org_chromium_components_crash_browser_ChildProcessCrashObserver_childCrashed);

     env->CallStaticVoidMethod(clazz,
          call_context.base.method_id, as_jint(pid));
}

// Step 4: Generated test functions (optional).


#endif  // org_chromium_components_crash_browser_ChildProcessCrashObserver_JNI
