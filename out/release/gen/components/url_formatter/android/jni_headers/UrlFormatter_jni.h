// Copyright 2014 The Chromium Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.


// This file is autogenerated by
//     base/android/jni_generator/jni_generator.py
// For
//     org/chromium/components/url_formatter/UrlFormatter

#ifndef org_chromium_components_url_formatter_UrlFormatter_JNI
#define org_chromium_components_url_formatter_UrlFormatter_JNI

#include <jni.h>

#include "../../../../../../../base/android/jni_generator/jni_generator_helper.h"


// Step 1: Forward declarations.


// Step 2: Constants (optional).


// Step 3: Method stubs.
namespace url_formatter {
namespace android {

static base::android::ScopedJavaLocalRef<jstring> JNI_UrlFormatter_FixupUrl(JNIEnv* env, const
    base::android::JavaParamRef<jstring>& url);

JNI_GENERATOR_EXPORT jstring Java_J_N_Ml2KxI_00024W(
    JNIEnv* env,
    jclass jcaller,
    jstring url) {
  return JNI_UrlFormatter_FixupUrl(env, base::android::JavaParamRef<jstring>(env, url)).Release();
}

static base::android::ScopedJavaLocalRef<jstring>
    JNI_UrlFormatter_FormatUrlForDisplayOmitScheme(JNIEnv* env, const
    base::android::JavaParamRef<jstring>& url);

JNI_GENERATOR_EXPORT jstring Java_J_N_M25QTkfm(
    JNIEnv* env,
    jclass jcaller,
    jstring url) {
  return JNI_UrlFormatter_FormatUrlForDisplayOmitScheme(env,
      base::android::JavaParamRef<jstring>(env, url)).Release();
}

static base::android::ScopedJavaLocalRef<jstring>
    JNI_UrlFormatter_FormatUrlForDisplayOmitHTTPScheme(JNIEnv* env, const
    base::android::JavaParamRef<jstring>& url);

JNI_GENERATOR_EXPORT jstring Java_J_N_MWAcU8Kr(
    JNIEnv* env,
    jclass jcaller,
    jstring url) {
  return JNI_UrlFormatter_FormatUrlForDisplayOmitHTTPScheme(env,
      base::android::JavaParamRef<jstring>(env, url)).Release();
}

static base::android::ScopedJavaLocalRef<jstring>
    JNI_UrlFormatter_FormatUrlForDisplayOmitSchemeOmitTrivialSubdomains(JNIEnv* env, const
    base::android::JavaParamRef<jstring>& url);

JNI_GENERATOR_EXPORT jstring Java_J_N_MeroQv_00024e(
    JNIEnv* env,
    jclass jcaller,
    jstring url) {
  return JNI_UrlFormatter_FormatUrlForDisplayOmitSchemeOmitTrivialSubdomains(env,
      base::android::JavaParamRef<jstring>(env, url)).Release();
}

static base::android::ScopedJavaLocalRef<jstring> JNI_UrlFormatter_FormatUrlForCopy(JNIEnv* env,
    const base::android::JavaParamRef<jstring>& url);

JNI_GENERATOR_EXPORT jstring Java_J_N_MWcP3rTG(
    JNIEnv* env,
    jclass jcaller,
    jstring url) {
  return JNI_UrlFormatter_FormatUrlForCopy(env, base::android::JavaParamRef<jstring>(env,
      url)).Release();
}

static base::android::ScopedJavaLocalRef<jstring>
    JNI_UrlFormatter_FormatUrlForSecurityDisplay(JNIEnv* env, const
    base::android::JavaParamRef<jstring>& url,
    jint schemeDisplay);

JNI_GENERATOR_EXPORT jstring Java_J_N_MN7bz_1Mm(
    JNIEnv* env,
    jclass jcaller,
    jstring url,
    jint schemeDisplay) {
  return JNI_UrlFormatter_FormatUrlForSecurityDisplay(env, base::android::JavaParamRef<jstring>(env,
      url), schemeDisplay).Release();
}


}  // namespace android
}  // namespace url_formatter

// Step 4: Generated test functions (optional).


#endif  // org_chromium_components_url_formatter_UrlFormatter_JNI
