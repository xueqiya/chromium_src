// components/data_reduction_proxy/core/common/data_reduction_proxy.mojom-test-utils.h is auto generated by mojom_bindings_generator.py, do not edit

// Copyright 2019 The Chromium Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.

#ifndef COMPONENTS_DATA_REDUCTION_PROXY_CORE_COMMON_DATA_REDUCTION_PROXY_MOJOM_TEST_UTILS_H_
#define COMPONENTS_DATA_REDUCTION_PROXY_CORE_COMMON_DATA_REDUCTION_PROXY_MOJOM_TEST_UTILS_H_

#include "components/data_reduction_proxy/core/common/data_reduction_proxy.mojom.h"


namespace data_reduction_proxy {
namespace mojom {


class  DataReductionProxyThrottleConfigObserverInterceptorForTesting : public DataReductionProxyThrottleConfigObserver {
  virtual DataReductionProxyThrottleConfigObserver* GetForwardingInterface() = 0;
  void OnThrottleConfigChanged(DataReductionProxyThrottleConfigPtr config) override;
};
class  DataReductionProxyThrottleConfigObserverAsyncWaiter {
 public:
  explicit DataReductionProxyThrottleConfigObserverAsyncWaiter(DataReductionProxyThrottleConfigObserver* proxy);
  ~DataReductionProxyThrottleConfigObserverAsyncWaiter();

 private:
  DataReductionProxyThrottleConfigObserver* const proxy_;

  DISALLOW_COPY_AND_ASSIGN(DataReductionProxyThrottleConfigObserverAsyncWaiter);
};


class  DataReductionProxyInterceptorForTesting : public DataReductionProxy {
  virtual DataReductionProxy* GetForwardingInterface() = 0;
  void MarkProxiesAsBad(::base::TimeDelta bypass_duration, const ::net::ProxyList& bad_proxies, MarkProxiesAsBadCallback callback) override;
  void AddThrottleConfigObserver(mojo::PendingRemote<DataReductionProxyThrottleConfigObserver> observer) override;
  void Clone(mojo::PendingReceiver<DataReductionProxy> receiver) override;
};
class  DataReductionProxyAsyncWaiter {
 public:
  explicit DataReductionProxyAsyncWaiter(DataReductionProxy* proxy);
  ~DataReductionProxyAsyncWaiter();
  void MarkProxiesAsBad(
      ::base::TimeDelta bypass_duration, const ::net::ProxyList& bad_proxies);

 private:
  DataReductionProxy* const proxy_;

  DISALLOW_COPY_AND_ASSIGN(DataReductionProxyAsyncWaiter);
};




}  // namespace mojom
}  // namespace data_reduction_proxy

#endif  // COMPONENTS_DATA_REDUCTION_PROXY_CORE_COMMON_DATA_REDUCTION_PROXY_MOJOM_TEST_UTILS_H_