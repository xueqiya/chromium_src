// components/services/storage/public/mojom/indexed_db_control.mojom-test-utils.h is auto generated by mojom_bindings_generator.py, do not edit

// Copyright 2019 The Chromium Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.

#ifndef COMPONENTS_SERVICES_STORAGE_PUBLIC_MOJOM_INDEXED_DB_CONTROL_MOJOM_TEST_UTILS_H_
#define COMPONENTS_SERVICES_STORAGE_PUBLIC_MOJOM_INDEXED_DB_CONTROL_MOJOM_TEST_UTILS_H_

#include "components/services/storage/public/mojom/indexed_db_control.mojom.h"


namespace storage {
namespace mojom {


class  IndexedDBControlInterceptorForTesting : public IndexedDBControl {
  virtual IndexedDBControl* GetForwardingInterface() = 0;
  void GetUsage(GetUsageCallback callback) override;
  void DeleteForOrigin(const ::url::Origin& origin, DeleteForOriginCallback callback) override;
  void ForceClose(const ::url::Origin& origin, ForceCloseReason reason, ForceCloseCallback callback) override;
  void GetConnectionCount(const ::url::Origin& origin, GetConnectionCountCallback callback) override;
  void DownloadOriginData(const ::url::Origin& origin, DownloadOriginDataCallback callback) override;
  void GetAllOriginsDetails(GetAllOriginsDetailsCallback callback) override;
};
class  IndexedDBControlAsyncWaiter {
 public:
  explicit IndexedDBControlAsyncWaiter(IndexedDBControl* proxy);
  ~IndexedDBControlAsyncWaiter();
  void GetUsage(
      std::vector<IndexedDBStorageUsageInfoPtr>* out_info);
  void DeleteForOrigin(
      const ::url::Origin& origin, bool* out_success);
  void ForceClose(
      const ::url::Origin& origin, ForceCloseReason reason);
  void GetConnectionCount(
      const ::url::Origin& origin, uint64_t* out_connection_count);
  void DownloadOriginData(
      const ::url::Origin& origin, bool* out_success, ::base::FilePath* out_temp_path, ::base::FilePath* out_zip_path);
  void GetAllOriginsDetails(
      bool* out_incognito, ::base::Value* out_details);

 private:
  IndexedDBControl* const proxy_;

  DISALLOW_COPY_AND_ASSIGN(IndexedDBControlAsyncWaiter);
};




}  // namespace mojom
}  // namespace storage

#endif  // COMPONENTS_SERVICES_STORAGE_PUBLIC_MOJOM_INDEXED_DB_CONTROL_MOJOM_TEST_UTILS_H_