// components/services/storage/public/mojom/local_storage_control.mojom-test-utils.h is auto generated by mojom_bindings_generator.py, do not edit

// Copyright 2019 The Chromium Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.

#ifndef COMPONENTS_SERVICES_STORAGE_PUBLIC_MOJOM_LOCAL_STORAGE_CONTROL_MOJOM_TEST_UTILS_H_
#define COMPONENTS_SERVICES_STORAGE_PUBLIC_MOJOM_LOCAL_STORAGE_CONTROL_MOJOM_TEST_UTILS_H_

#include "components/services/storage/public/mojom/local_storage_control.mojom.h"


namespace storage {
namespace mojom {


class  LocalStorageControlInterceptorForTesting : public LocalStorageControl {
  virtual LocalStorageControl* GetForwardingInterface() = 0;
  void BindStorageArea(const ::url::Origin& origin, mojo::PendingReceiver<::blink::mojom::StorageArea> receiver) override;
  void GetUsage(GetUsageCallback callback) override;
  void DeleteStorage(const ::url::Origin& origin, DeleteStorageCallback callback) override;
  void CleanUpStorage(CleanUpStorageCallback callback) override;
  void Flush(FlushCallback callback) override;
  void PurgeMemory() override;
  void ApplyPolicyUpdates(std::vector<LocalStoragePolicyUpdatePtr> policy_updates) override;
  void ForceKeepSessionState() override;
};
class  LocalStorageControlAsyncWaiter {
 public:
  explicit LocalStorageControlAsyncWaiter(LocalStorageControl* proxy);
  ~LocalStorageControlAsyncWaiter();
  void GetUsage(
      std::vector<LocalStorageUsageInfoPtr>* out_info);
  void DeleteStorage(
      const ::url::Origin& origin);
  void CleanUpStorage(
      );
  void Flush(
      );

 private:
  LocalStorageControl* const proxy_;

  DISALLOW_COPY_AND_ASSIGN(LocalStorageControlAsyncWaiter);
};




}  // namespace mojom
}  // namespace storage

#endif  // COMPONENTS_SERVICES_STORAGE_PUBLIC_MOJOM_LOCAL_STORAGE_CONTROL_MOJOM_TEST_UTILS_H_