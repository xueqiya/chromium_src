// components/services/storage/public/mojom/storage_service.mojom-test-utils.cc is auto generated by mojom_bindings_generator.py, do not edit

// Copyright 2019 The Chromium Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.

#if defined(__clang__)
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wunused-private-field"
#elif defined(_MSC_VER)
#pragma warning(push)
#pragma warning(disable:4056)
#pragma warning(disable:4065)
#pragma warning(disable:4756)
#endif


#include "components/services/storage/public/mojom/storage_service.mojom-test-utils.h"

#include <utility>

#include "base/bind.h"
#include "base/run_loop.h"
#include "components/services/storage/public/mojom/partition.mojom.h"
#include "mojo/public/mojom/base/file_path.mojom.h"


#ifndef COMPONENTS_SERVICES_STORAGE_PUBLIC_MOJOM_STORAGE_SERVICE_MOJOM_JUMBO_H_
#define COMPONENTS_SERVICES_STORAGE_PUBLIC_MOJOM_STORAGE_SERVICE_MOJOM_JUMBO_H_
#include "mojo/public/cpp/base/file_path_mojom_traits.h"
#endif


namespace storage {
namespace mojom {


void StorageServiceInterceptorForTesting::BindPartition(const base::Optional<::base::FilePath>& path, mojo::PendingReceiver<::storage::mojom::Partition> receiver) {
  GetForwardingInterface()->BindPartition(std::move(path), std::move(receiver));
}
StorageServiceAsyncWaiter::StorageServiceAsyncWaiter(
    StorageService* proxy) : proxy_(proxy) {}

StorageServiceAsyncWaiter::~StorageServiceAsyncWaiter() = default;






}  // namespace mojom
}  // namespace storage

#if defined(__clang__)
#pragma clang diagnostic pop
#elif defined(_MSC_VER)
#pragma warning(pop)
#endif