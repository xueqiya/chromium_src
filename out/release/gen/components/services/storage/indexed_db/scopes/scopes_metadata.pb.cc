// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: scopes_metadata.proto

#include "scopes_metadata.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/io/zero_copy_stream_impl_lite.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
extern PROTOBUF_INTERNAL_EXPORT_scopes_5fmetadata_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_LevelDBScopesKeyRange_scopes_5fmetadata_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_scopes_5fmetadata_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_LevelDBScopesScopeMetadata_LevelDBScopesLock_scopes_5fmetadata_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_scopes_5fmetadata_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_LevelDBScopesUndoTask_Delete_scopes_5fmetadata_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_scopes_5fmetadata_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_LevelDBScopesUndoTask_Put_scopes_5fmetadata_2eproto;
namespace content {
class LevelDBScopesKeyRangeDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<LevelDBScopesKeyRange> _instance;
} _LevelDBScopesKeyRange_default_instance_;
class LevelDBScopesMetadataDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<LevelDBScopesMetadata> _instance;
} _LevelDBScopesMetadata_default_instance_;
class LevelDBScopesScopeMetadata_LevelDBScopesLockDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<LevelDBScopesScopeMetadata_LevelDBScopesLock> _instance;
} _LevelDBScopesScopeMetadata_LevelDBScopesLock_default_instance_;
class LevelDBScopesScopeMetadataDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<LevelDBScopesScopeMetadata> _instance;
} _LevelDBScopesScopeMetadata_default_instance_;
class LevelDBScopesUndoTask_PutDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<LevelDBScopesUndoTask_Put> _instance;
} _LevelDBScopesUndoTask_Put_default_instance_;
class LevelDBScopesUndoTask_DeleteDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<LevelDBScopesUndoTask_Delete> _instance;
} _LevelDBScopesUndoTask_Delete_default_instance_;
class LevelDBScopesUndoTaskDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<LevelDBScopesUndoTask> _instance;
  const ::content::LevelDBScopesUndoTask_Put* put_;
  const ::content::LevelDBScopesUndoTask_Delete* delete__;
  const ::content::LevelDBScopesKeyRange* delete_range_;
} _LevelDBScopesUndoTask_default_instance_;
class LevelDBScopesCleanupTaskDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<LevelDBScopesCleanupTask> _instance;
  const ::content::LevelDBScopesKeyRange* delete_range_;
  const ::content::LevelDBScopesKeyRange* delete_range_and_compact_;
} _LevelDBScopesCleanupTask_default_instance_;
}  // namespace content
static void InitDefaultsscc_info_LevelDBScopesCleanupTask_scopes_5fmetadata_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::content::_LevelDBScopesCleanupTask_default_instance_;
    new (ptr) ::content::LevelDBScopesCleanupTask();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::content::LevelDBScopesCleanupTask::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_LevelDBScopesCleanupTask_scopes_5fmetadata_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsscc_info_LevelDBScopesCleanupTask_scopes_5fmetadata_2eproto}, {
      &scc_info_LevelDBScopesKeyRange_scopes_5fmetadata_2eproto.base,}};

static void InitDefaultsscc_info_LevelDBScopesKeyRange_scopes_5fmetadata_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::content::_LevelDBScopesKeyRange_default_instance_;
    new (ptr) ::content::LevelDBScopesKeyRange();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::content::LevelDBScopesKeyRange::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_LevelDBScopesKeyRange_scopes_5fmetadata_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsscc_info_LevelDBScopesKeyRange_scopes_5fmetadata_2eproto}, {}};

static void InitDefaultsscc_info_LevelDBScopesMetadata_scopes_5fmetadata_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::content::_LevelDBScopesMetadata_default_instance_;
    new (ptr) ::content::LevelDBScopesMetadata();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::content::LevelDBScopesMetadata::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_LevelDBScopesMetadata_scopes_5fmetadata_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsscc_info_LevelDBScopesMetadata_scopes_5fmetadata_2eproto}, {}};

static void InitDefaultsscc_info_LevelDBScopesScopeMetadata_scopes_5fmetadata_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::content::_LevelDBScopesScopeMetadata_default_instance_;
    new (ptr) ::content::LevelDBScopesScopeMetadata();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::content::LevelDBScopesScopeMetadata::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_LevelDBScopesScopeMetadata_scopes_5fmetadata_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsscc_info_LevelDBScopesScopeMetadata_scopes_5fmetadata_2eproto}, {
      &scc_info_LevelDBScopesScopeMetadata_LevelDBScopesLock_scopes_5fmetadata_2eproto.base,}};

static void InitDefaultsscc_info_LevelDBScopesScopeMetadata_LevelDBScopesLock_scopes_5fmetadata_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::content::_LevelDBScopesScopeMetadata_LevelDBScopesLock_default_instance_;
    new (ptr) ::content::LevelDBScopesScopeMetadata_LevelDBScopesLock();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::content::LevelDBScopesScopeMetadata_LevelDBScopesLock::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_LevelDBScopesScopeMetadata_LevelDBScopesLock_scopes_5fmetadata_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsscc_info_LevelDBScopesScopeMetadata_LevelDBScopesLock_scopes_5fmetadata_2eproto}, {
      &scc_info_LevelDBScopesKeyRange_scopes_5fmetadata_2eproto.base,}};

static void InitDefaultsscc_info_LevelDBScopesUndoTask_scopes_5fmetadata_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::content::_LevelDBScopesUndoTask_default_instance_;
    new (ptr) ::content::LevelDBScopesUndoTask();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::content::LevelDBScopesUndoTask::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<3> scc_info_LevelDBScopesUndoTask_scopes_5fmetadata_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 3, InitDefaultsscc_info_LevelDBScopesUndoTask_scopes_5fmetadata_2eproto}, {
      &scc_info_LevelDBScopesUndoTask_Put_scopes_5fmetadata_2eproto.base,
      &scc_info_LevelDBScopesUndoTask_Delete_scopes_5fmetadata_2eproto.base,
      &scc_info_LevelDBScopesKeyRange_scopes_5fmetadata_2eproto.base,}};

static void InitDefaultsscc_info_LevelDBScopesUndoTask_Delete_scopes_5fmetadata_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::content::_LevelDBScopesUndoTask_Delete_default_instance_;
    new (ptr) ::content::LevelDBScopesUndoTask_Delete();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::content::LevelDBScopesUndoTask_Delete::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_LevelDBScopesUndoTask_Delete_scopes_5fmetadata_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsscc_info_LevelDBScopesUndoTask_Delete_scopes_5fmetadata_2eproto}, {}};

static void InitDefaultsscc_info_LevelDBScopesUndoTask_Put_scopes_5fmetadata_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::content::_LevelDBScopesUndoTask_Put_default_instance_;
    new (ptr) ::content::LevelDBScopesUndoTask_Put();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::content::LevelDBScopesUndoTask_Put::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_LevelDBScopesUndoTask_Put_scopes_5fmetadata_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsscc_info_LevelDBScopesUndoTask_Put_scopes_5fmetadata_2eproto}, {}};

namespace content {

// ===================================================================

void LevelDBScopesKeyRange::InitAsDefaultInstance() {
}
class LevelDBScopesKeyRange::_Internal {
 public:
};

LevelDBScopesKeyRange::LevelDBScopesKeyRange()
  : ::PROTOBUF_NAMESPACE_ID::MessageLite(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:content.LevelDBScopesKeyRange)
}
LevelDBScopesKeyRange::LevelDBScopesKeyRange(const LevelDBScopesKeyRange& from)
  : ::PROTOBUF_NAMESPACE_ID::MessageLite(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  begin_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from.begin().empty()) {
    begin_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.begin_);
  }
  end_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from.end().empty()) {
    end_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.end_);
  }
  // @@protoc_insertion_point(copy_constructor:content.LevelDBScopesKeyRange)
}

void LevelDBScopesKeyRange::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_LevelDBScopesKeyRange_scopes_5fmetadata_2eproto.base);
  begin_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  end_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

LevelDBScopesKeyRange::~LevelDBScopesKeyRange() {
  // @@protoc_insertion_point(destructor:content.LevelDBScopesKeyRange)
  SharedDtor();
}

void LevelDBScopesKeyRange::SharedDtor() {
  begin_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  end_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void LevelDBScopesKeyRange::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const LevelDBScopesKeyRange& LevelDBScopesKeyRange::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_LevelDBScopesKeyRange_scopes_5fmetadata_2eproto.base);
  return *internal_default_instance();
}


void LevelDBScopesKeyRange::Clear() {
// @@protoc_insertion_point(message_clear_start:content.LevelDBScopesKeyRange)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  begin_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  end_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* LevelDBScopesKeyRange::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // bytes begin = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(mutable_begin(), ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // bytes end = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(mutable_end(), ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool LevelDBScopesKeyRange::MergePartialFromCodedStream(
    ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::PROTOBUF_NAMESPACE_ID::uint32 tag;
  ::PROTOBUF_NAMESPACE_ID::internal::LiteUnknownFieldSetter unknown_fields_setter(
      &_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::io::StringOutputStream unknown_fields_output(
      unknown_fields_setter.buffer());
  ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_output, false);
  // @@protoc_insertion_point(parse_start:content.LevelDBScopesKeyRange)
  for (;;) {
    ::std::pair<::PROTOBUF_NAMESPACE_ID::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bytes begin = 1;
      case 1: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (10 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadBytes(
                input, this->mutable_begin()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes end = 2;
      case 2: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (18 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadBytes(
                input, this->mutable_end()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:content.LevelDBScopesKeyRange)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:content.LevelDBScopesKeyRange)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void LevelDBScopesKeyRange::SerializeWithCachedSizes(
    ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:content.LevelDBScopesKeyRange)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes begin = 1;
  if (this->begin().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBytesMaybeAliased(
      1, this->begin(), output);
  }

  // bytes end = 2;
  if (this->end().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBytesMaybeAliased(
      2, this->end(), output);
  }

  output->WriteRaw(_internal_metadata_.unknown_fields().data(),
                   static_cast<int>(_internal_metadata_.unknown_fields().size()));
  // @@protoc_insertion_point(serialize_end:content.LevelDBScopesKeyRange)
}

size_t LevelDBScopesKeyRange::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:content.LevelDBScopesKeyRange)
  size_t total_size = 0;

  total_size += _internal_metadata_.unknown_fields().size();

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bytes begin = 1;
  if (this->begin().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->begin());
  }

  // bytes end = 2;
  if (this->end().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->end());
  }

  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void LevelDBScopesKeyRange::CheckTypeAndMergeFrom(
    const ::PROTOBUF_NAMESPACE_ID::MessageLite& from) {
  MergeFrom(*::PROTOBUF_NAMESPACE_ID::internal::DownCast<const LevelDBScopesKeyRange*>(
      &from));
}

void LevelDBScopesKeyRange::MergeFrom(const LevelDBScopesKeyRange& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:content.LevelDBScopesKeyRange)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.begin().size() > 0) {

    begin_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.begin_);
  }
  if (from.end().size() > 0) {

    end_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.end_);
  }
}

void LevelDBScopesKeyRange::CopyFrom(const LevelDBScopesKeyRange& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:content.LevelDBScopesKeyRange)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LevelDBScopesKeyRange::IsInitialized() const {
  return true;
}

void LevelDBScopesKeyRange::InternalSwap(LevelDBScopesKeyRange* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  begin_.Swap(&other->begin_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  end_.Swap(&other->end_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
}

std::string LevelDBScopesKeyRange::GetTypeName() const {
  return "content.LevelDBScopesKeyRange";
}


// ===================================================================

void LevelDBScopesMetadata::InitAsDefaultInstance() {
}
class LevelDBScopesMetadata::_Internal {
 public:
};

LevelDBScopesMetadata::LevelDBScopesMetadata()
  : ::PROTOBUF_NAMESPACE_ID::MessageLite(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:content.LevelDBScopesMetadata)
}
LevelDBScopesMetadata::LevelDBScopesMetadata(const LevelDBScopesMetadata& from)
  : ::PROTOBUF_NAMESPACE_ID::MessageLite(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  version_ = from.version_;
  // @@protoc_insertion_point(copy_constructor:content.LevelDBScopesMetadata)
}

void LevelDBScopesMetadata::SharedCtor() {
  version_ = PROTOBUF_LONGLONG(0);
}

LevelDBScopesMetadata::~LevelDBScopesMetadata() {
  // @@protoc_insertion_point(destructor:content.LevelDBScopesMetadata)
  SharedDtor();
}

void LevelDBScopesMetadata::SharedDtor() {
}

void LevelDBScopesMetadata::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const LevelDBScopesMetadata& LevelDBScopesMetadata::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_LevelDBScopesMetadata_scopes_5fmetadata_2eproto.base);
  return *internal_default_instance();
}


void LevelDBScopesMetadata::Clear() {
// @@protoc_insertion_point(message_clear_start:content.LevelDBScopesMetadata)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  version_ = PROTOBUF_LONGLONG(0);
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* LevelDBScopesMetadata::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // int64 version = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          version_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool LevelDBScopesMetadata::MergePartialFromCodedStream(
    ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::PROTOBUF_NAMESPACE_ID::uint32 tag;
  ::PROTOBUF_NAMESPACE_ID::internal::LiteUnknownFieldSetter unknown_fields_setter(
      &_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::io::StringOutputStream unknown_fields_output(
      unknown_fields_setter.buffer());
  ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_output, false);
  // @@protoc_insertion_point(parse_start:content.LevelDBScopesMetadata)
  for (;;) {
    ::std::pair<::PROTOBUF_NAMESPACE_ID::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int64 version = 1;
      case 1: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (8 & 0xFF)) {

          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   ::PROTOBUF_NAMESPACE_ID::int64, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_INT64>(
                 input, &version_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:content.LevelDBScopesMetadata)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:content.LevelDBScopesMetadata)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void LevelDBScopesMetadata::SerializeWithCachedSizes(
    ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:content.LevelDBScopesMetadata)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 version = 1;
  if (this->version() != 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64(1, this->version(), output);
  }

  output->WriteRaw(_internal_metadata_.unknown_fields().data(),
                   static_cast<int>(_internal_metadata_.unknown_fields().size()));
  // @@protoc_insertion_point(serialize_end:content.LevelDBScopesMetadata)
}

size_t LevelDBScopesMetadata::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:content.LevelDBScopesMetadata)
  size_t total_size = 0;

  total_size += _internal_metadata_.unknown_fields().size();

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int64 version = 1;
  if (this->version() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
        this->version());
  }

  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void LevelDBScopesMetadata::CheckTypeAndMergeFrom(
    const ::PROTOBUF_NAMESPACE_ID::MessageLite& from) {
  MergeFrom(*::PROTOBUF_NAMESPACE_ID::internal::DownCast<const LevelDBScopesMetadata*>(
      &from));
}

void LevelDBScopesMetadata::MergeFrom(const LevelDBScopesMetadata& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:content.LevelDBScopesMetadata)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.version() != 0) {
    set_version(from.version());
  }
}

void LevelDBScopesMetadata::CopyFrom(const LevelDBScopesMetadata& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:content.LevelDBScopesMetadata)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LevelDBScopesMetadata::IsInitialized() const {
  return true;
}

void LevelDBScopesMetadata::InternalSwap(LevelDBScopesMetadata* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(version_, other->version_);
}

std::string LevelDBScopesMetadata::GetTypeName() const {
  return "content.LevelDBScopesMetadata";
}


// ===================================================================

void LevelDBScopesScopeMetadata_LevelDBScopesLock::InitAsDefaultInstance() {
  ::content::_LevelDBScopesScopeMetadata_LevelDBScopesLock_default_instance_._instance.get_mutable()->range_ = const_cast< ::content::LevelDBScopesKeyRange*>(
      ::content::LevelDBScopesKeyRange::internal_default_instance());
}
class LevelDBScopesScopeMetadata_LevelDBScopesLock::_Internal {
 public:
  static const ::content::LevelDBScopesKeyRange& range(const LevelDBScopesScopeMetadata_LevelDBScopesLock* msg);
};

const ::content::LevelDBScopesKeyRange&
LevelDBScopesScopeMetadata_LevelDBScopesLock::_Internal::range(const LevelDBScopesScopeMetadata_LevelDBScopesLock* msg) {
  return *msg->range_;
}
LevelDBScopesScopeMetadata_LevelDBScopesLock::LevelDBScopesScopeMetadata_LevelDBScopesLock()
  : ::PROTOBUF_NAMESPACE_ID::MessageLite(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:content.LevelDBScopesScopeMetadata.LevelDBScopesLock)
}
LevelDBScopesScopeMetadata_LevelDBScopesLock::LevelDBScopesScopeMetadata_LevelDBScopesLock(const LevelDBScopesScopeMetadata_LevelDBScopesLock& from)
  : ::PROTOBUF_NAMESPACE_ID::MessageLite(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_range()) {
    range_ = new ::content::LevelDBScopesKeyRange(*from.range_);
  } else {
    range_ = nullptr;
  }
  level_ = from.level_;
  // @@protoc_insertion_point(copy_constructor:content.LevelDBScopesScopeMetadata.LevelDBScopesLock)
}

void LevelDBScopesScopeMetadata_LevelDBScopesLock::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_LevelDBScopesScopeMetadata_LevelDBScopesLock_scopes_5fmetadata_2eproto.base);
  ::memset(&range_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&level_) -
      reinterpret_cast<char*>(&range_)) + sizeof(level_));
}

LevelDBScopesScopeMetadata_LevelDBScopesLock::~LevelDBScopesScopeMetadata_LevelDBScopesLock() {
  // @@protoc_insertion_point(destructor:content.LevelDBScopesScopeMetadata.LevelDBScopesLock)
  SharedDtor();
}

void LevelDBScopesScopeMetadata_LevelDBScopesLock::SharedDtor() {
  if (this != internal_default_instance()) delete range_;
}

void LevelDBScopesScopeMetadata_LevelDBScopesLock::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const LevelDBScopesScopeMetadata_LevelDBScopesLock& LevelDBScopesScopeMetadata_LevelDBScopesLock::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_LevelDBScopesScopeMetadata_LevelDBScopesLock_scopes_5fmetadata_2eproto.base);
  return *internal_default_instance();
}


void LevelDBScopesScopeMetadata_LevelDBScopesLock::Clear() {
// @@protoc_insertion_point(message_clear_start:content.LevelDBScopesScopeMetadata.LevelDBScopesLock)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == nullptr && range_ != nullptr) {
    delete range_;
  }
  range_ = nullptr;
  level_ = PROTOBUF_LONGLONG(0);
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* LevelDBScopesScopeMetadata_LevelDBScopesLock::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // int64 level = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          level_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .content.LevelDBScopesKeyRange range = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ctx->ParseMessage(mutable_range(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool LevelDBScopesScopeMetadata_LevelDBScopesLock::MergePartialFromCodedStream(
    ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::PROTOBUF_NAMESPACE_ID::uint32 tag;
  ::PROTOBUF_NAMESPACE_ID::internal::LiteUnknownFieldSetter unknown_fields_setter(
      &_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::io::StringOutputStream unknown_fields_output(
      unknown_fields_setter.buffer());
  ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_output, false);
  // @@protoc_insertion_point(parse_start:content.LevelDBScopesScopeMetadata.LevelDBScopesLock)
  for (;;) {
    ::std::pair<::PROTOBUF_NAMESPACE_ID::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int64 level = 1;
      case 1: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (8 & 0xFF)) {

          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   ::PROTOBUF_NAMESPACE_ID::int64, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_INT64>(
                 input, &level_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .content.LevelDBScopesKeyRange range = 2;
      case 2: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (18 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadMessage(
               input, mutable_range()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:content.LevelDBScopesScopeMetadata.LevelDBScopesLock)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:content.LevelDBScopesScopeMetadata.LevelDBScopesLock)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void LevelDBScopesScopeMetadata_LevelDBScopesLock::SerializeWithCachedSizes(
    ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:content.LevelDBScopesScopeMetadata.LevelDBScopesLock)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 level = 1;
  if (this->level() != 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64(1, this->level(), output);
  }

  // .content.LevelDBScopesKeyRange range = 2;
  if (this->has_range()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteMessage(
      2, _Internal::range(this), output);
  }

  output->WriteRaw(_internal_metadata_.unknown_fields().data(),
                   static_cast<int>(_internal_metadata_.unknown_fields().size()));
  // @@protoc_insertion_point(serialize_end:content.LevelDBScopesScopeMetadata.LevelDBScopesLock)
}

size_t LevelDBScopesScopeMetadata_LevelDBScopesLock::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:content.LevelDBScopesScopeMetadata.LevelDBScopesLock)
  size_t total_size = 0;

  total_size += _internal_metadata_.unknown_fields().size();

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .content.LevelDBScopesKeyRange range = 2;
  if (this->has_range()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *range_);
  }

  // int64 level = 1;
  if (this->level() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
        this->level());
  }

  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void LevelDBScopesScopeMetadata_LevelDBScopesLock::CheckTypeAndMergeFrom(
    const ::PROTOBUF_NAMESPACE_ID::MessageLite& from) {
  MergeFrom(*::PROTOBUF_NAMESPACE_ID::internal::DownCast<const LevelDBScopesScopeMetadata_LevelDBScopesLock*>(
      &from));
}

void LevelDBScopesScopeMetadata_LevelDBScopesLock::MergeFrom(const LevelDBScopesScopeMetadata_LevelDBScopesLock& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:content.LevelDBScopesScopeMetadata.LevelDBScopesLock)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_range()) {
    mutable_range()->::content::LevelDBScopesKeyRange::MergeFrom(from.range());
  }
  if (from.level() != 0) {
    set_level(from.level());
  }
}

void LevelDBScopesScopeMetadata_LevelDBScopesLock::CopyFrom(const LevelDBScopesScopeMetadata_LevelDBScopesLock& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:content.LevelDBScopesScopeMetadata.LevelDBScopesLock)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LevelDBScopesScopeMetadata_LevelDBScopesLock::IsInitialized() const {
  return true;
}

void LevelDBScopesScopeMetadata_LevelDBScopesLock::InternalSwap(LevelDBScopesScopeMetadata_LevelDBScopesLock* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(range_, other->range_);
  swap(level_, other->level_);
}

std::string LevelDBScopesScopeMetadata_LevelDBScopesLock::GetTypeName() const {
  return "content.LevelDBScopesScopeMetadata.LevelDBScopesLock";
}


// ===================================================================

void LevelDBScopesScopeMetadata::InitAsDefaultInstance() {
}
class LevelDBScopesScopeMetadata::_Internal {
 public:
};

LevelDBScopesScopeMetadata::LevelDBScopesScopeMetadata()
  : ::PROTOBUF_NAMESPACE_ID::MessageLite(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:content.LevelDBScopesScopeMetadata)
}
LevelDBScopesScopeMetadata::LevelDBScopesScopeMetadata(const LevelDBScopesScopeMetadata& from)
  : ::PROTOBUF_NAMESPACE_ID::MessageLite(),
      _internal_metadata_(nullptr),
      locks_(from.locks_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ignore_cleanup_tasks_ = from.ignore_cleanup_tasks_;
  // @@protoc_insertion_point(copy_constructor:content.LevelDBScopesScopeMetadata)
}

void LevelDBScopesScopeMetadata::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_LevelDBScopesScopeMetadata_scopes_5fmetadata_2eproto.base);
  ignore_cleanup_tasks_ = false;
}

LevelDBScopesScopeMetadata::~LevelDBScopesScopeMetadata() {
  // @@protoc_insertion_point(destructor:content.LevelDBScopesScopeMetadata)
  SharedDtor();
}

void LevelDBScopesScopeMetadata::SharedDtor() {
}

void LevelDBScopesScopeMetadata::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const LevelDBScopesScopeMetadata& LevelDBScopesScopeMetadata::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_LevelDBScopesScopeMetadata_scopes_5fmetadata_2eproto.base);
  return *internal_default_instance();
}


void LevelDBScopesScopeMetadata::Clear() {
// @@protoc_insertion_point(message_clear_start:content.LevelDBScopesScopeMetadata)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  locks_.Clear();
  ignore_cleanup_tasks_ = false;
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* LevelDBScopesScopeMetadata::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // repeated .content.LevelDBScopesScopeMetadata.LevelDBScopesLock locks = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(add_locks(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<::PROTOBUF_NAMESPACE_ID::uint8>(ptr) == 10);
        } else goto handle_unusual;
        continue;
      // bool ignore_cleanup_tasks = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          ignore_cleanup_tasks_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool LevelDBScopesScopeMetadata::MergePartialFromCodedStream(
    ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::PROTOBUF_NAMESPACE_ID::uint32 tag;
  ::PROTOBUF_NAMESPACE_ID::internal::LiteUnknownFieldSetter unknown_fields_setter(
      &_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::io::StringOutputStream unknown_fields_output(
      unknown_fields_setter.buffer());
  ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_output, false);
  // @@protoc_insertion_point(parse_start:content.LevelDBScopesScopeMetadata)
  for (;;) {
    ::std::pair<::PROTOBUF_NAMESPACE_ID::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .content.LevelDBScopesScopeMetadata.LevelDBScopesLock locks = 1;
      case 1: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (10 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadMessage(
                input, add_locks()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool ignore_cleanup_tasks = 2;
      case 2: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (16 & 0xFF)) {

          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   bool, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_BOOL>(
                 input, &ignore_cleanup_tasks_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:content.LevelDBScopesScopeMetadata)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:content.LevelDBScopesScopeMetadata)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void LevelDBScopesScopeMetadata::SerializeWithCachedSizes(
    ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:content.LevelDBScopesScopeMetadata)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .content.LevelDBScopesScopeMetadata.LevelDBScopesLock locks = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->locks_size()); i < n; i++) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteMessage(
      1,
      this->locks(static_cast<int>(i)),
      output);
  }

  // bool ignore_cleanup_tasks = 2;
  if (this->ignore_cleanup_tasks() != 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBool(2, this->ignore_cleanup_tasks(), output);
  }

  output->WriteRaw(_internal_metadata_.unknown_fields().data(),
                   static_cast<int>(_internal_metadata_.unknown_fields().size()));
  // @@protoc_insertion_point(serialize_end:content.LevelDBScopesScopeMetadata)
}

size_t LevelDBScopesScopeMetadata::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:content.LevelDBScopesScopeMetadata)
  size_t total_size = 0;

  total_size += _internal_metadata_.unknown_fields().size();

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .content.LevelDBScopesScopeMetadata.LevelDBScopesLock locks = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->locks_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          this->locks(static_cast<int>(i)));
    }
  }

  // bool ignore_cleanup_tasks = 2;
  if (this->ignore_cleanup_tasks() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void LevelDBScopesScopeMetadata::CheckTypeAndMergeFrom(
    const ::PROTOBUF_NAMESPACE_ID::MessageLite& from) {
  MergeFrom(*::PROTOBUF_NAMESPACE_ID::internal::DownCast<const LevelDBScopesScopeMetadata*>(
      &from));
}

void LevelDBScopesScopeMetadata::MergeFrom(const LevelDBScopesScopeMetadata& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:content.LevelDBScopesScopeMetadata)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  locks_.MergeFrom(from.locks_);
  if (from.ignore_cleanup_tasks() != 0) {
    set_ignore_cleanup_tasks(from.ignore_cleanup_tasks());
  }
}

void LevelDBScopesScopeMetadata::CopyFrom(const LevelDBScopesScopeMetadata& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:content.LevelDBScopesScopeMetadata)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LevelDBScopesScopeMetadata::IsInitialized() const {
  return true;
}

void LevelDBScopesScopeMetadata::InternalSwap(LevelDBScopesScopeMetadata* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  CastToBase(&locks_)->InternalSwap(CastToBase(&other->locks_));
  swap(ignore_cleanup_tasks_, other->ignore_cleanup_tasks_);
}

std::string LevelDBScopesScopeMetadata::GetTypeName() const {
  return "content.LevelDBScopesScopeMetadata";
}


// ===================================================================

void LevelDBScopesUndoTask_Put::InitAsDefaultInstance() {
}
class LevelDBScopesUndoTask_Put::_Internal {
 public:
};

LevelDBScopesUndoTask_Put::LevelDBScopesUndoTask_Put()
  : ::PROTOBUF_NAMESPACE_ID::MessageLite(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:content.LevelDBScopesUndoTask.Put)
}
LevelDBScopesUndoTask_Put::LevelDBScopesUndoTask_Put(const LevelDBScopesUndoTask_Put& from)
  : ::PROTOBUF_NAMESPACE_ID::MessageLite(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  key_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from.key().empty()) {
    key_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.key_);
  }
  value_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from.value().empty()) {
    value_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.value_);
  }
  // @@protoc_insertion_point(copy_constructor:content.LevelDBScopesUndoTask.Put)
}

void LevelDBScopesUndoTask_Put::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_LevelDBScopesUndoTask_Put_scopes_5fmetadata_2eproto.base);
  key_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  value_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

LevelDBScopesUndoTask_Put::~LevelDBScopesUndoTask_Put() {
  // @@protoc_insertion_point(destructor:content.LevelDBScopesUndoTask.Put)
  SharedDtor();
}

void LevelDBScopesUndoTask_Put::SharedDtor() {
  key_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  value_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void LevelDBScopesUndoTask_Put::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const LevelDBScopesUndoTask_Put& LevelDBScopesUndoTask_Put::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_LevelDBScopesUndoTask_Put_scopes_5fmetadata_2eproto.base);
  return *internal_default_instance();
}


void LevelDBScopesUndoTask_Put::Clear() {
// @@protoc_insertion_point(message_clear_start:content.LevelDBScopesUndoTask.Put)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  key_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  value_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* LevelDBScopesUndoTask_Put::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // bytes key = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(mutable_key(), ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // bytes value = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(mutable_value(), ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool LevelDBScopesUndoTask_Put::MergePartialFromCodedStream(
    ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::PROTOBUF_NAMESPACE_ID::uint32 tag;
  ::PROTOBUF_NAMESPACE_ID::internal::LiteUnknownFieldSetter unknown_fields_setter(
      &_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::io::StringOutputStream unknown_fields_output(
      unknown_fields_setter.buffer());
  ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_output, false);
  // @@protoc_insertion_point(parse_start:content.LevelDBScopesUndoTask.Put)
  for (;;) {
    ::std::pair<::PROTOBUF_NAMESPACE_ID::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bytes key = 1;
      case 1: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (10 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadBytes(
                input, this->mutable_key()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes value = 2;
      case 2: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (18 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadBytes(
                input, this->mutable_value()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:content.LevelDBScopesUndoTask.Put)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:content.LevelDBScopesUndoTask.Put)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void LevelDBScopesUndoTask_Put::SerializeWithCachedSizes(
    ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:content.LevelDBScopesUndoTask.Put)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes key = 1;
  if (this->key().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBytesMaybeAliased(
      1, this->key(), output);
  }

  // bytes value = 2;
  if (this->value().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBytesMaybeAliased(
      2, this->value(), output);
  }

  output->WriteRaw(_internal_metadata_.unknown_fields().data(),
                   static_cast<int>(_internal_metadata_.unknown_fields().size()));
  // @@protoc_insertion_point(serialize_end:content.LevelDBScopesUndoTask.Put)
}

size_t LevelDBScopesUndoTask_Put::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:content.LevelDBScopesUndoTask.Put)
  size_t total_size = 0;

  total_size += _internal_metadata_.unknown_fields().size();

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bytes key = 1;
  if (this->key().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->key());
  }

  // bytes value = 2;
  if (this->value().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->value());
  }

  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void LevelDBScopesUndoTask_Put::CheckTypeAndMergeFrom(
    const ::PROTOBUF_NAMESPACE_ID::MessageLite& from) {
  MergeFrom(*::PROTOBUF_NAMESPACE_ID::internal::DownCast<const LevelDBScopesUndoTask_Put*>(
      &from));
}

void LevelDBScopesUndoTask_Put::MergeFrom(const LevelDBScopesUndoTask_Put& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:content.LevelDBScopesUndoTask.Put)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.key().size() > 0) {

    key_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.key_);
  }
  if (from.value().size() > 0) {

    value_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.value_);
  }
}

void LevelDBScopesUndoTask_Put::CopyFrom(const LevelDBScopesUndoTask_Put& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:content.LevelDBScopesUndoTask.Put)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LevelDBScopesUndoTask_Put::IsInitialized() const {
  return true;
}

void LevelDBScopesUndoTask_Put::InternalSwap(LevelDBScopesUndoTask_Put* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  key_.Swap(&other->key_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  value_.Swap(&other->value_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
}

std::string LevelDBScopesUndoTask_Put::GetTypeName() const {
  return "content.LevelDBScopesUndoTask.Put";
}


// ===================================================================

void LevelDBScopesUndoTask_Delete::InitAsDefaultInstance() {
}
class LevelDBScopesUndoTask_Delete::_Internal {
 public:
};

LevelDBScopesUndoTask_Delete::LevelDBScopesUndoTask_Delete()
  : ::PROTOBUF_NAMESPACE_ID::MessageLite(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:content.LevelDBScopesUndoTask.Delete)
}
LevelDBScopesUndoTask_Delete::LevelDBScopesUndoTask_Delete(const LevelDBScopesUndoTask_Delete& from)
  : ::PROTOBUF_NAMESPACE_ID::MessageLite(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  key_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from.key().empty()) {
    key_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.key_);
  }
  // @@protoc_insertion_point(copy_constructor:content.LevelDBScopesUndoTask.Delete)
}

void LevelDBScopesUndoTask_Delete::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_LevelDBScopesUndoTask_Delete_scopes_5fmetadata_2eproto.base);
  key_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

LevelDBScopesUndoTask_Delete::~LevelDBScopesUndoTask_Delete() {
  // @@protoc_insertion_point(destructor:content.LevelDBScopesUndoTask.Delete)
  SharedDtor();
}

void LevelDBScopesUndoTask_Delete::SharedDtor() {
  key_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void LevelDBScopesUndoTask_Delete::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const LevelDBScopesUndoTask_Delete& LevelDBScopesUndoTask_Delete::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_LevelDBScopesUndoTask_Delete_scopes_5fmetadata_2eproto.base);
  return *internal_default_instance();
}


void LevelDBScopesUndoTask_Delete::Clear() {
// @@protoc_insertion_point(message_clear_start:content.LevelDBScopesUndoTask.Delete)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  key_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* LevelDBScopesUndoTask_Delete::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // bytes key = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(mutable_key(), ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool LevelDBScopesUndoTask_Delete::MergePartialFromCodedStream(
    ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::PROTOBUF_NAMESPACE_ID::uint32 tag;
  ::PROTOBUF_NAMESPACE_ID::internal::LiteUnknownFieldSetter unknown_fields_setter(
      &_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::io::StringOutputStream unknown_fields_output(
      unknown_fields_setter.buffer());
  ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_output, false);
  // @@protoc_insertion_point(parse_start:content.LevelDBScopesUndoTask.Delete)
  for (;;) {
    ::std::pair<::PROTOBUF_NAMESPACE_ID::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bytes key = 1;
      case 1: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (10 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadBytes(
                input, this->mutable_key()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:content.LevelDBScopesUndoTask.Delete)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:content.LevelDBScopesUndoTask.Delete)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void LevelDBScopesUndoTask_Delete::SerializeWithCachedSizes(
    ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:content.LevelDBScopesUndoTask.Delete)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes key = 1;
  if (this->key().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBytesMaybeAliased(
      1, this->key(), output);
  }

  output->WriteRaw(_internal_metadata_.unknown_fields().data(),
                   static_cast<int>(_internal_metadata_.unknown_fields().size()));
  // @@protoc_insertion_point(serialize_end:content.LevelDBScopesUndoTask.Delete)
}

size_t LevelDBScopesUndoTask_Delete::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:content.LevelDBScopesUndoTask.Delete)
  size_t total_size = 0;

  total_size += _internal_metadata_.unknown_fields().size();

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bytes key = 1;
  if (this->key().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->key());
  }

  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void LevelDBScopesUndoTask_Delete::CheckTypeAndMergeFrom(
    const ::PROTOBUF_NAMESPACE_ID::MessageLite& from) {
  MergeFrom(*::PROTOBUF_NAMESPACE_ID::internal::DownCast<const LevelDBScopesUndoTask_Delete*>(
      &from));
}

void LevelDBScopesUndoTask_Delete::MergeFrom(const LevelDBScopesUndoTask_Delete& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:content.LevelDBScopesUndoTask.Delete)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.key().size() > 0) {

    key_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.key_);
  }
}

void LevelDBScopesUndoTask_Delete::CopyFrom(const LevelDBScopesUndoTask_Delete& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:content.LevelDBScopesUndoTask.Delete)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LevelDBScopesUndoTask_Delete::IsInitialized() const {
  return true;
}

void LevelDBScopesUndoTask_Delete::InternalSwap(LevelDBScopesUndoTask_Delete* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  key_.Swap(&other->key_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
}

std::string LevelDBScopesUndoTask_Delete::GetTypeName() const {
  return "content.LevelDBScopesUndoTask.Delete";
}


// ===================================================================

void LevelDBScopesUndoTask::InitAsDefaultInstance() {
}
class LevelDBScopesUndoTask::_Internal {
 public:
  static const ::content::LevelDBScopesUndoTask_Put& put(const LevelDBScopesUndoTask* msg);
  static const ::content::LevelDBScopesUndoTask_Delete& delete_(const LevelDBScopesUndoTask* msg);
  static const ::content::LevelDBScopesKeyRange& delete_range(const LevelDBScopesUndoTask* msg);
};

const ::content::LevelDBScopesUndoTask_Put&
LevelDBScopesUndoTask::_Internal::put(const LevelDBScopesUndoTask* msg) {
  return *msg->operation_.put_;
}
const ::content::LevelDBScopesUndoTask_Delete&
LevelDBScopesUndoTask::_Internal::delete_(const LevelDBScopesUndoTask* msg) {
  return *msg->operation_.delete__;
}
const ::content::LevelDBScopesKeyRange&
LevelDBScopesUndoTask::_Internal::delete_range(const LevelDBScopesUndoTask* msg) {
  return *msg->operation_.delete_range_;
}
void LevelDBScopesUndoTask::set_allocated_put(::content::LevelDBScopesUndoTask_Put* put) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  clear_operation();
  if (put) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      put = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, put, submessage_arena);
    }
    set_has_put();
    operation_.put_ = put;
  }
  // @@protoc_insertion_point(field_set_allocated:content.LevelDBScopesUndoTask.put)
}
void LevelDBScopesUndoTask::set_allocated_delete_(::content::LevelDBScopesUndoTask_Delete* delete_) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  clear_operation();
  if (delete_) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      delete_ = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, delete_, submessage_arena);
    }
    set_has_delete_();
    operation_.delete__ = delete_;
  }
  // @@protoc_insertion_point(field_set_allocated:content.LevelDBScopesUndoTask.delete)
}
void LevelDBScopesUndoTask::set_allocated_delete_range(::content::LevelDBScopesKeyRange* delete_range) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  clear_operation();
  if (delete_range) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      delete_range = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, delete_range, submessage_arena);
    }
    set_has_delete_range();
    operation_.delete_range_ = delete_range;
  }
  // @@protoc_insertion_point(field_set_allocated:content.LevelDBScopesUndoTask.delete_range)
}
LevelDBScopesUndoTask::LevelDBScopesUndoTask()
  : ::PROTOBUF_NAMESPACE_ID::MessageLite(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:content.LevelDBScopesUndoTask)
}
LevelDBScopesUndoTask::LevelDBScopesUndoTask(const LevelDBScopesUndoTask& from)
  : ::PROTOBUF_NAMESPACE_ID::MessageLite(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  clear_has_operation();
  switch (from.operation_case()) {
    case kPut: {
      mutable_put()->::content::LevelDBScopesUndoTask_Put::MergeFrom(from.put());
      break;
    }
    case kDelete: {
      mutable_delete_()->::content::LevelDBScopesUndoTask_Delete::MergeFrom(from.delete_());
      break;
    }
    case kDeleteRange: {
      mutable_delete_range()->::content::LevelDBScopesKeyRange::MergeFrom(from.delete_range());
      break;
    }
    case OPERATION_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:content.LevelDBScopesUndoTask)
}

void LevelDBScopesUndoTask::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_LevelDBScopesUndoTask_scopes_5fmetadata_2eproto.base);
  clear_has_operation();
}

LevelDBScopesUndoTask::~LevelDBScopesUndoTask() {
  // @@protoc_insertion_point(destructor:content.LevelDBScopesUndoTask)
  SharedDtor();
}

void LevelDBScopesUndoTask::SharedDtor() {
  if (has_operation()) {
    clear_operation();
  }
}

void LevelDBScopesUndoTask::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const LevelDBScopesUndoTask& LevelDBScopesUndoTask::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_LevelDBScopesUndoTask_scopes_5fmetadata_2eproto.base);
  return *internal_default_instance();
}


void LevelDBScopesUndoTask::clear_operation() {
// @@protoc_insertion_point(one_of_clear_start:content.LevelDBScopesUndoTask)
  switch (operation_case()) {
    case kPut: {
      delete operation_.put_;
      break;
    }
    case kDelete: {
      delete operation_.delete__;
      break;
    }
    case kDeleteRange: {
      delete operation_.delete_range_;
      break;
    }
    case OPERATION_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = OPERATION_NOT_SET;
}


void LevelDBScopesUndoTask::Clear() {
// @@protoc_insertion_point(message_clear_start:content.LevelDBScopesUndoTask)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  clear_operation();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* LevelDBScopesUndoTask::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .content.LevelDBScopesUndoTask.Put put = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(mutable_put(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .content.LevelDBScopesUndoTask.Delete delete = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ctx->ParseMessage(mutable_delete_(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .content.LevelDBScopesKeyRange delete_range = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          ptr = ctx->ParseMessage(mutable_delete_range(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool LevelDBScopesUndoTask::MergePartialFromCodedStream(
    ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::PROTOBUF_NAMESPACE_ID::uint32 tag;
  ::PROTOBUF_NAMESPACE_ID::internal::LiteUnknownFieldSetter unknown_fields_setter(
      &_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::io::StringOutputStream unknown_fields_output(
      unknown_fields_setter.buffer());
  ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_output, false);
  // @@protoc_insertion_point(parse_start:content.LevelDBScopesUndoTask)
  for (;;) {
    ::std::pair<::PROTOBUF_NAMESPACE_ID::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .content.LevelDBScopesUndoTask.Put put = 1;
      case 1: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (10 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadMessage(
               input, mutable_put()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .content.LevelDBScopesUndoTask.Delete delete = 2;
      case 2: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (18 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadMessage(
               input, mutable_delete_()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .content.LevelDBScopesKeyRange delete_range = 3;
      case 3: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (26 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadMessage(
               input, mutable_delete_range()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:content.LevelDBScopesUndoTask)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:content.LevelDBScopesUndoTask)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void LevelDBScopesUndoTask::SerializeWithCachedSizes(
    ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:content.LevelDBScopesUndoTask)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .content.LevelDBScopesUndoTask.Put put = 1;
  if (has_put()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteMessage(
      1, _Internal::put(this), output);
  }

  // .content.LevelDBScopesUndoTask.Delete delete = 2;
  if (has_delete_()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteMessage(
      2, _Internal::delete_(this), output);
  }

  // .content.LevelDBScopesKeyRange delete_range = 3;
  if (has_delete_range()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteMessage(
      3, _Internal::delete_range(this), output);
  }

  output->WriteRaw(_internal_metadata_.unknown_fields().data(),
                   static_cast<int>(_internal_metadata_.unknown_fields().size()));
  // @@protoc_insertion_point(serialize_end:content.LevelDBScopesUndoTask)
}

size_t LevelDBScopesUndoTask::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:content.LevelDBScopesUndoTask)
  size_t total_size = 0;

  total_size += _internal_metadata_.unknown_fields().size();

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  switch (operation_case()) {
    // .content.LevelDBScopesUndoTask.Put put = 1;
    case kPut: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *operation_.put_);
      break;
    }
    // .content.LevelDBScopesUndoTask.Delete delete = 2;
    case kDelete: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *operation_.delete__);
      break;
    }
    // .content.LevelDBScopesKeyRange delete_range = 3;
    case kDeleteRange: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *operation_.delete_range_);
      break;
    }
    case OPERATION_NOT_SET: {
      break;
    }
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void LevelDBScopesUndoTask::CheckTypeAndMergeFrom(
    const ::PROTOBUF_NAMESPACE_ID::MessageLite& from) {
  MergeFrom(*::PROTOBUF_NAMESPACE_ID::internal::DownCast<const LevelDBScopesUndoTask*>(
      &from));
}

void LevelDBScopesUndoTask::MergeFrom(const LevelDBScopesUndoTask& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:content.LevelDBScopesUndoTask)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  switch (from.operation_case()) {
    case kPut: {
      mutable_put()->::content::LevelDBScopesUndoTask_Put::MergeFrom(from.put());
      break;
    }
    case kDelete: {
      mutable_delete_()->::content::LevelDBScopesUndoTask_Delete::MergeFrom(from.delete_());
      break;
    }
    case kDeleteRange: {
      mutable_delete_range()->::content::LevelDBScopesKeyRange::MergeFrom(from.delete_range());
      break;
    }
    case OPERATION_NOT_SET: {
      break;
    }
  }
}

void LevelDBScopesUndoTask::CopyFrom(const LevelDBScopesUndoTask& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:content.LevelDBScopesUndoTask)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LevelDBScopesUndoTask::IsInitialized() const {
  return true;
}

void LevelDBScopesUndoTask::InternalSwap(LevelDBScopesUndoTask* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(operation_, other->operation_);
  swap(_oneof_case_[0], other->_oneof_case_[0]);
}

std::string LevelDBScopesUndoTask::GetTypeName() const {
  return "content.LevelDBScopesUndoTask";
}


// ===================================================================

void LevelDBScopesCleanupTask::InitAsDefaultInstance() {
}
class LevelDBScopesCleanupTask::_Internal {
 public:
  static const ::content::LevelDBScopesKeyRange& delete_range(const LevelDBScopesCleanupTask* msg);
  static const ::content::LevelDBScopesKeyRange& delete_range_and_compact(const LevelDBScopesCleanupTask* msg);
};

const ::content::LevelDBScopesKeyRange&
LevelDBScopesCleanupTask::_Internal::delete_range(const LevelDBScopesCleanupTask* msg) {
  return *msg->operation_.delete_range_;
}
const ::content::LevelDBScopesKeyRange&
LevelDBScopesCleanupTask::_Internal::delete_range_and_compact(const LevelDBScopesCleanupTask* msg) {
  return *msg->operation_.delete_range_and_compact_;
}
void LevelDBScopesCleanupTask::set_allocated_delete_range(::content::LevelDBScopesKeyRange* delete_range) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  clear_operation();
  if (delete_range) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      delete_range = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, delete_range, submessage_arena);
    }
    set_has_delete_range();
    operation_.delete_range_ = delete_range;
  }
  // @@protoc_insertion_point(field_set_allocated:content.LevelDBScopesCleanupTask.delete_range)
}
void LevelDBScopesCleanupTask::set_allocated_delete_range_and_compact(::content::LevelDBScopesKeyRange* delete_range_and_compact) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  clear_operation();
  if (delete_range_and_compact) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      delete_range_and_compact = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, delete_range_and_compact, submessage_arena);
    }
    set_has_delete_range_and_compact();
    operation_.delete_range_and_compact_ = delete_range_and_compact;
  }
  // @@protoc_insertion_point(field_set_allocated:content.LevelDBScopesCleanupTask.delete_range_and_compact)
}
LevelDBScopesCleanupTask::LevelDBScopesCleanupTask()
  : ::PROTOBUF_NAMESPACE_ID::MessageLite(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:content.LevelDBScopesCleanupTask)
}
LevelDBScopesCleanupTask::LevelDBScopesCleanupTask(const LevelDBScopesCleanupTask& from)
  : ::PROTOBUF_NAMESPACE_ID::MessageLite(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  clear_has_operation();
  switch (from.operation_case()) {
    case kDeleteRange: {
      mutable_delete_range()->::content::LevelDBScopesKeyRange::MergeFrom(from.delete_range());
      break;
    }
    case kDeleteRangeAndCompact: {
      mutable_delete_range_and_compact()->::content::LevelDBScopesKeyRange::MergeFrom(from.delete_range_and_compact());
      break;
    }
    case OPERATION_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:content.LevelDBScopesCleanupTask)
}

void LevelDBScopesCleanupTask::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_LevelDBScopesCleanupTask_scopes_5fmetadata_2eproto.base);
  clear_has_operation();
}

LevelDBScopesCleanupTask::~LevelDBScopesCleanupTask() {
  // @@protoc_insertion_point(destructor:content.LevelDBScopesCleanupTask)
  SharedDtor();
}

void LevelDBScopesCleanupTask::SharedDtor() {
  if (has_operation()) {
    clear_operation();
  }
}

void LevelDBScopesCleanupTask::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const LevelDBScopesCleanupTask& LevelDBScopesCleanupTask::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_LevelDBScopesCleanupTask_scopes_5fmetadata_2eproto.base);
  return *internal_default_instance();
}


void LevelDBScopesCleanupTask::clear_operation() {
// @@protoc_insertion_point(one_of_clear_start:content.LevelDBScopesCleanupTask)
  switch (operation_case()) {
    case kDeleteRange: {
      delete operation_.delete_range_;
      break;
    }
    case kDeleteRangeAndCompact: {
      delete operation_.delete_range_and_compact_;
      break;
    }
    case OPERATION_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = OPERATION_NOT_SET;
}


void LevelDBScopesCleanupTask::Clear() {
// @@protoc_insertion_point(message_clear_start:content.LevelDBScopesCleanupTask)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  clear_operation();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* LevelDBScopesCleanupTask::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .content.LevelDBScopesKeyRange delete_range = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(mutable_delete_range(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .content.LevelDBScopesKeyRange delete_range_and_compact = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ctx->ParseMessage(mutable_delete_range_and_compact(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool LevelDBScopesCleanupTask::MergePartialFromCodedStream(
    ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::PROTOBUF_NAMESPACE_ID::uint32 tag;
  ::PROTOBUF_NAMESPACE_ID::internal::LiteUnknownFieldSetter unknown_fields_setter(
      &_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::io::StringOutputStream unknown_fields_output(
      unknown_fields_setter.buffer());
  ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_output, false);
  // @@protoc_insertion_point(parse_start:content.LevelDBScopesCleanupTask)
  for (;;) {
    ::std::pair<::PROTOBUF_NAMESPACE_ID::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .content.LevelDBScopesKeyRange delete_range = 1;
      case 1: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (10 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadMessage(
               input, mutable_delete_range()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .content.LevelDBScopesKeyRange delete_range_and_compact = 2;
      case 2: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (18 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadMessage(
               input, mutable_delete_range_and_compact()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:content.LevelDBScopesCleanupTask)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:content.LevelDBScopesCleanupTask)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void LevelDBScopesCleanupTask::SerializeWithCachedSizes(
    ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:content.LevelDBScopesCleanupTask)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .content.LevelDBScopesKeyRange delete_range = 1;
  if (has_delete_range()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteMessage(
      1, _Internal::delete_range(this), output);
  }

  // .content.LevelDBScopesKeyRange delete_range_and_compact = 2;
  if (has_delete_range_and_compact()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteMessage(
      2, _Internal::delete_range_and_compact(this), output);
  }

  output->WriteRaw(_internal_metadata_.unknown_fields().data(),
                   static_cast<int>(_internal_metadata_.unknown_fields().size()));
  // @@protoc_insertion_point(serialize_end:content.LevelDBScopesCleanupTask)
}

size_t LevelDBScopesCleanupTask::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:content.LevelDBScopesCleanupTask)
  size_t total_size = 0;

  total_size += _internal_metadata_.unknown_fields().size();

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  switch (operation_case()) {
    // .content.LevelDBScopesKeyRange delete_range = 1;
    case kDeleteRange: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *operation_.delete_range_);
      break;
    }
    // .content.LevelDBScopesKeyRange delete_range_and_compact = 2;
    case kDeleteRangeAndCompact: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *operation_.delete_range_and_compact_);
      break;
    }
    case OPERATION_NOT_SET: {
      break;
    }
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void LevelDBScopesCleanupTask::CheckTypeAndMergeFrom(
    const ::PROTOBUF_NAMESPACE_ID::MessageLite& from) {
  MergeFrom(*::PROTOBUF_NAMESPACE_ID::internal::DownCast<const LevelDBScopesCleanupTask*>(
      &from));
}

void LevelDBScopesCleanupTask::MergeFrom(const LevelDBScopesCleanupTask& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:content.LevelDBScopesCleanupTask)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  switch (from.operation_case()) {
    case kDeleteRange: {
      mutable_delete_range()->::content::LevelDBScopesKeyRange::MergeFrom(from.delete_range());
      break;
    }
    case kDeleteRangeAndCompact: {
      mutable_delete_range_and_compact()->::content::LevelDBScopesKeyRange::MergeFrom(from.delete_range_and_compact());
      break;
    }
    case OPERATION_NOT_SET: {
      break;
    }
  }
}

void LevelDBScopesCleanupTask::CopyFrom(const LevelDBScopesCleanupTask& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:content.LevelDBScopesCleanupTask)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LevelDBScopesCleanupTask::IsInitialized() const {
  return true;
}

void LevelDBScopesCleanupTask::InternalSwap(LevelDBScopesCleanupTask* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(operation_, other->operation_);
  swap(_oneof_case_[0], other->_oneof_case_[0]);
}

std::string LevelDBScopesCleanupTask::GetTypeName() const {
  return "content.LevelDBScopesCleanupTask";
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace content
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::content::LevelDBScopesKeyRange* Arena::CreateMaybeMessage< ::content::LevelDBScopesKeyRange >(Arena* arena) {
  return Arena::CreateInternal< ::content::LevelDBScopesKeyRange >(arena);
}
template<> PROTOBUF_NOINLINE ::content::LevelDBScopesMetadata* Arena::CreateMaybeMessage< ::content::LevelDBScopesMetadata >(Arena* arena) {
  return Arena::CreateInternal< ::content::LevelDBScopesMetadata >(arena);
}
template<> PROTOBUF_NOINLINE ::content::LevelDBScopesScopeMetadata_LevelDBScopesLock* Arena::CreateMaybeMessage< ::content::LevelDBScopesScopeMetadata_LevelDBScopesLock >(Arena* arena) {
  return Arena::CreateInternal< ::content::LevelDBScopesScopeMetadata_LevelDBScopesLock >(arena);
}
template<> PROTOBUF_NOINLINE ::content::LevelDBScopesScopeMetadata* Arena::CreateMaybeMessage< ::content::LevelDBScopesScopeMetadata >(Arena* arena) {
  return Arena::CreateInternal< ::content::LevelDBScopesScopeMetadata >(arena);
}
template<> PROTOBUF_NOINLINE ::content::LevelDBScopesUndoTask_Put* Arena::CreateMaybeMessage< ::content::LevelDBScopesUndoTask_Put >(Arena* arena) {
  return Arena::CreateInternal< ::content::LevelDBScopesUndoTask_Put >(arena);
}
template<> PROTOBUF_NOINLINE ::content::LevelDBScopesUndoTask_Delete* Arena::CreateMaybeMessage< ::content::LevelDBScopesUndoTask_Delete >(Arena* arena) {
  return Arena::CreateInternal< ::content::LevelDBScopesUndoTask_Delete >(arena);
}
template<> PROTOBUF_NOINLINE ::content::LevelDBScopesUndoTask* Arena::CreateMaybeMessage< ::content::LevelDBScopesUndoTask >(Arena* arena) {
  return Arena::CreateInternal< ::content::LevelDBScopesUndoTask >(arena);
}
template<> PROTOBUF_NOINLINE ::content::LevelDBScopesCleanupTask* Arena::CreateMaybeMessage< ::content::LevelDBScopesCleanupTask >(Arena* arena) {
  return Arena::CreateInternal< ::content::LevelDBScopesCleanupTask >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
