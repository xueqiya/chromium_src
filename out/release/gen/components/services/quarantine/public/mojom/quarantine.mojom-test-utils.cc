// components/services/quarantine/public/mojom/quarantine.mojom-test-utils.cc is auto generated by mojom_bindings_generator.py, do not edit

// Copyright 2019 The Chromium Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.

#if defined(__clang__)
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wunused-private-field"
#elif defined(_MSC_VER)
#pragma warning(push)
#pragma warning(disable:4056)
#pragma warning(disable:4065)
#pragma warning(disable:4756)
#endif


#include "components/services/quarantine/public/mojom/quarantine.mojom-test-utils.h"

#include <utility>

#include "base/bind.h"
#include "base/run_loop.h"
#include "mojo/public/mojom/base/file_path.mojom.h"
#include "url/mojom/url.mojom.h"


#ifndef COMPONENTS_SERVICES_QUARANTINE_PUBLIC_MOJOM_QUARANTINE_MOJOM_JUMBO_H_
#define COMPONENTS_SERVICES_QUARANTINE_PUBLIC_MOJOM_QUARANTINE_MOJOM_JUMBO_H_
#include "mojo/public/cpp/base/file_path_mojom_traits.h"
#include "url/mojom/url_gurl_mojom_traits.h"
#endif


namespace quarantine {
namespace mojom {


void QuarantineInterceptorForTesting::QuarantineFile(const ::base::FilePath& full_path, const ::GURL& source_url, const ::GURL& referrer_url, const std::string& client_guid, QuarantineFileCallback callback) {
  GetForwardingInterface()->QuarantineFile(std::move(full_path), std::move(source_url), std::move(referrer_url), std::move(client_guid), std::move(callback));
}
QuarantineAsyncWaiter::QuarantineAsyncWaiter(
    Quarantine* proxy) : proxy_(proxy) {}

QuarantineAsyncWaiter::~QuarantineAsyncWaiter() = default;

void QuarantineAsyncWaiter::QuarantineFile(
    const ::base::FilePath& full_path, const ::GURL& source_url, const ::GURL& referrer_url, const std::string& client_guid, QuarantineFileResult* out_result) {
  base::RunLoop loop;
  proxy_->QuarantineFile(std::move(full_path),std::move(source_url),std::move(referrer_url),std::move(client_guid),
      base::BindOnce(
          [](base::RunLoop* loop,
             QuarantineFileResult* out_result
,
             QuarantineFileResult result) {*out_result = std::move(result);
            loop->Quit();
          },
          &loop,
          out_result));
  loop.Run();
}





}  // namespace mojom
}  // namespace quarantine

#if defined(__clang__)
#pragma clang diagnostic pop
#elif defined(_MSC_VER)
#pragma warning(pop)
#endif