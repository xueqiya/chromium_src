// Copyright 2014 The Chromium Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.


// This file is autogenerated by
//     base/android/jni_generator/jni_generator.py
// For
//     org/chromium/components/find_in_page/FindInPageBridge

#ifndef org_chromium_components_find_in_page_FindInPageBridge_JNI
#define org_chromium_components_find_in_page_FindInPageBridge_JNI

#include <jni.h>

#include "../../../../../../../base/android/jni_generator/jni_generator_helper.h"


// Step 1: Forward declarations.


// Step 2: Constants (optional).


// Step 3: Method stubs.
namespace find_in_page {

static jlong JNI_FindInPageBridge_Init(JNIEnv* env, const base::android::JavaParamRef<jobject>&
    caller,
    const base::android::JavaParamRef<jobject>& webContents);

JNI_GENERATOR_EXPORT jlong Java_J_N_MW6nK_00024q1(
    JNIEnv* env,
    jclass jcaller,
    jobject caller,
    jobject webContents) {
  return JNI_FindInPageBridge_Init(env, base::android::JavaParamRef<jobject>(env, caller),
      base::android::JavaParamRef<jobject>(env, webContents));
}

JNI_GENERATOR_EXPORT void Java_J_N_MlPioXlo(
    JNIEnv* env,
    jclass jcaller,
    jlong nativeFindInPageBridge,
    jobject caller) {
  FindInPageBridge* native = reinterpret_cast<FindInPageBridge*>(nativeFindInPageBridge);
  CHECK_NATIVE_PTR(env, jcaller, native, "Destroy");
  return native->Destroy(env, base::android::JavaParamRef<jobject>(env, caller));
}

JNI_GENERATOR_EXPORT void Java_J_N_MiKuFRTN(
    JNIEnv* env,
    jclass jcaller,
    jlong nativeFindInPageBridge,
    jobject caller,
    jstring searchString,
    jboolean forwardDirection,
    jboolean caseSensitive) {
  FindInPageBridge* native = reinterpret_cast<FindInPageBridge*>(nativeFindInPageBridge);
  CHECK_NATIVE_PTR(env, jcaller, native, "StartFinding");
  return native->StartFinding(env, base::android::JavaParamRef<jobject>(env, caller),
      base::android::JavaParamRef<jstring>(env, searchString), forwardDirection, caseSensitive);
}

JNI_GENERATOR_EXPORT void Java_J_N_MWOuMqhA(
    JNIEnv* env,
    jclass jcaller,
    jlong nativeFindInPageBridge,
    jobject caller,
    jboolean clearSelection) {
  FindInPageBridge* native = reinterpret_cast<FindInPageBridge*>(nativeFindInPageBridge);
  CHECK_NATIVE_PTR(env, jcaller, native, "StopFinding");
  return native->StopFinding(env, base::android::JavaParamRef<jobject>(env, caller),
      clearSelection);
}

JNI_GENERATOR_EXPORT jstring Java_J_N_M3t_1h9OB(
    JNIEnv* env,
    jclass jcaller,
    jlong nativeFindInPageBridge,
    jobject caller) {
  FindInPageBridge* native = reinterpret_cast<FindInPageBridge*>(nativeFindInPageBridge);
  CHECK_NATIVE_PTR(env, jcaller, native, "GetPreviousFindText", NULL);
  return native->GetPreviousFindText(env, base::android::JavaParamRef<jobject>(env,
      caller)).Release();
}

JNI_GENERATOR_EXPORT void Java_J_N_M4m8QCn_00024(
    JNIEnv* env,
    jclass jcaller,
    jlong nativeFindInPageBridge,
    jobject caller,
    jint currentVersion) {
  FindInPageBridge* native = reinterpret_cast<FindInPageBridge*>(nativeFindInPageBridge);
  CHECK_NATIVE_PTR(env, jcaller, native, "RequestFindMatchRects");
  return native->RequestFindMatchRects(env, base::android::JavaParamRef<jobject>(env, caller),
      currentVersion);
}

JNI_GENERATOR_EXPORT void Java_J_N_MqpwqIAC(
    JNIEnv* env,
    jclass jcaller,
    jlong nativeFindInPageBridge,
    jobject caller,
    jfloat x,
    jfloat y) {
  FindInPageBridge* native = reinterpret_cast<FindInPageBridge*>(nativeFindInPageBridge);
  CHECK_NATIVE_PTR(env, jcaller, native, "ActivateNearestFindResult");
  return native->ActivateNearestFindResult(env, base::android::JavaParamRef<jobject>(env, caller),
      x, y);
}

JNI_GENERATOR_EXPORT void Java_J_N_MNC06_1Rq(
    JNIEnv* env,
    jclass jcaller,
    jlong nativeFindInPageBridge,
    jobject caller) {
  FindInPageBridge* native = reinterpret_cast<FindInPageBridge*>(nativeFindInPageBridge);
  CHECK_NATIVE_PTR(env, jcaller, native, "ActivateFindInPageResultForAccessibility");
  return native->ActivateFindInPageResultForAccessibility(env,
      base::android::JavaParamRef<jobject>(env, caller));
}


}  // namespace find_in_page

// Step 4: Generated test functions (optional).


#endif  // org_chromium_components_find_in_page_FindInPageBridge_JNI
