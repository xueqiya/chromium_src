// Copyright 2014 The Chromium Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.


// This file is autogenerated by
//     base/android/jni_generator/jni_generator.py
// For
//     org/chromium/components/navigation_interception/InterceptNavigationDelegate

#ifndef org_chromium_components_navigation_interception_InterceptNavigationDelegate_JNI
#define org_chromium_components_navigation_interception_InterceptNavigationDelegate_JNI

#include <jni.h>

#include "../../../../../../base/android/jni_generator/jni_generator_helper.h"


// Step 1: Forward declarations.

JNI_REGISTRATION_EXPORT extern const char
    kClassPath_org_chromium_components_navigation_1interception_InterceptNavigationDelegate[];
const char kClassPath_org_chromium_components_navigation_1interception_InterceptNavigationDelegate[]
    = "org/chromium/components/navigation_interception/InterceptNavigationDelegate";
// Leaking this jclass as we cannot use LazyInstance from some threads.
JNI_REGISTRATION_EXPORT std::atomic<jclass>
    g_org_chromium_components_navigation_1interception_InterceptNavigationDelegate_clazz(nullptr);
#ifndef org_chromium_components_navigation_1interception_InterceptNavigationDelegate_clazz_defined
#define org_chromium_components_navigation_1interception_InterceptNavigationDelegate_clazz_defined
inline jclass
    org_chromium_components_navigation_1interception_InterceptNavigationDelegate_clazz(JNIEnv* env)
    {
  return base::android::LazyGetClass(env,
      kClassPath_org_chromium_components_navigation_1interception_InterceptNavigationDelegate,
      &g_org_chromium_components_navigation_1interception_InterceptNavigationDelegate_clazz);
}
#endif


// Step 2: Constants (optional).


// Step 3: Method stubs.

static std::atomic<jmethodID>
    g_org_chromium_components_navigation_1interception_InterceptNavigationDelegate_shouldIgnoreNavigation(nullptr);
static jboolean Java_InterceptNavigationDelegate_shouldIgnoreNavigation(JNIEnv* env, const
    base::android::JavaRef<jobject>& obj, const base::android::JavaRef<jobject>& navigationParams) {
  jclass clazz =
      org_chromium_components_navigation_1interception_InterceptNavigationDelegate_clazz(env);
  CHECK_CLAZZ(env, obj.obj(),
      org_chromium_components_navigation_1interception_InterceptNavigationDelegate_clazz(env),
          false);

  jni_generator::JniJavaCallContextChecked call_context;
  call_context.Init<
      base::android::MethodID::TYPE_INSTANCE>(
          env,
          clazz,
          "shouldIgnoreNavigation",
          "(Lorg/chromium/components/navigation_interception/NavigationParams;)Z",
&g_org_chromium_components_navigation_1interception_InterceptNavigationDelegate_shouldIgnoreNavigation);

  jboolean ret =
      env->CallBooleanMethod(obj.obj(),
          call_context.base.method_id, navigationParams.obj());
  return ret;
}

// Step 4: Generated test functions (optional).


#endif  // org_chromium_components_navigation_interception_InterceptNavigationDelegate_JNI
