// Copyright 2014 The Chromium Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.


// This file is autogenerated by
//     base/android/jni_generator/jni_generator.py
// For
//     org/chromium/components/download/DownloadCollectionBridge

#ifndef org_chromium_components_download_DownloadCollectionBridge_JNI
#define org_chromium_components_download_DownloadCollectionBridge_JNI

#include <jni.h>

#include "../../../../../../../../base/android/jni_generator/jni_generator_helper.h"


// Step 1: Forward declarations.

JNI_REGISTRATION_EXPORT extern const char
    kClassPath_org_chromium_components_download_DownloadCollectionBridge[];
const char kClassPath_org_chromium_components_download_DownloadCollectionBridge[] =
    "org/chromium/components/download/DownloadCollectionBridge";

JNI_REGISTRATION_EXPORT extern const char
    kClassPath_org_chromium_components_download_DownloadCollectionBridge_00024DisplayNameInfo[];
const char
    kClassPath_org_chromium_components_download_DownloadCollectionBridge_00024DisplayNameInfo[] =
    "org/chromium/components/download/DownloadCollectionBridge$DisplayNameInfo";
// Leaking this jclass as we cannot use LazyInstance from some threads.
JNI_REGISTRATION_EXPORT std::atomic<jclass>
    g_org_chromium_components_download_DownloadCollectionBridge_clazz(nullptr);
#ifndef org_chromium_components_download_DownloadCollectionBridge_clazz_defined
#define org_chromium_components_download_DownloadCollectionBridge_clazz_defined
inline jclass org_chromium_components_download_DownloadCollectionBridge_clazz(JNIEnv* env) {
  return base::android::LazyGetClass(env,
      kClassPath_org_chromium_components_download_DownloadCollectionBridge,
      &g_org_chromium_components_download_DownloadCollectionBridge_clazz);
}
#endif
// Leaking this jclass as we cannot use LazyInstance from some threads.
JNI_REGISTRATION_EXPORT std::atomic<jclass>
    g_org_chromium_components_download_DownloadCollectionBridge_00024DisplayNameInfo_clazz(nullptr);
#ifndef org_chromium_components_download_DownloadCollectionBridge_00024DisplayNameInfo_clazz_defined
#define org_chromium_components_download_DownloadCollectionBridge_00024DisplayNameInfo_clazz_defined
inline jclass
    org_chromium_components_download_DownloadCollectionBridge_00024DisplayNameInfo_clazz(JNIEnv*
    env) {
  return base::android::LazyGetClass(env,
      kClassPath_org_chromium_components_download_DownloadCollectionBridge_00024DisplayNameInfo,
      &g_org_chromium_components_download_DownloadCollectionBridge_00024DisplayNameInfo_clazz);
}
#endif


// Step 2: Constants (optional).


// Step 3: Method stubs.
namespace download {

static jint JNI_DownloadCollectionBridge_GetExpirationDurationInDays(JNIEnv* env);

JNI_GENERATOR_EXPORT jint Java_J_N_M7rZ5uJE(
    JNIEnv* env,
    jclass jcaller) {
  return JNI_DownloadCollectionBridge_GetExpirationDurationInDays(env);
}


static std::atomic<jmethodID>
    g_org_chromium_components_download_DownloadCollectionBridge_00024DisplayNameInfo_getDownloadUri(nullptr);
static base::android::ScopedJavaLocalRef<jstring> Java_DisplayNameInfo_getDownloadUri(JNIEnv* env,
    const base::android::JavaRef<jobject>& obj) {
  jclass clazz =
      org_chromium_components_download_DownloadCollectionBridge_00024DisplayNameInfo_clazz(env);
  CHECK_CLAZZ(env, obj.obj(),
      org_chromium_components_download_DownloadCollectionBridge_00024DisplayNameInfo_clazz(env),
          NULL);

  jni_generator::JniJavaCallContextChecked call_context;
  call_context.Init<
      base::android::MethodID::TYPE_INSTANCE>(
          env,
          clazz,
          "getDownloadUri",
          "()Ljava/lang/String;",
&g_org_chromium_components_download_DownloadCollectionBridge_00024DisplayNameInfo_getDownloadUri);

  jstring ret =
      static_cast<jstring>(env->CallObjectMethod(obj.obj(),
          call_context.base.method_id));
  return base::android::ScopedJavaLocalRef<jstring>(env, ret);
}

static std::atomic<jmethodID>
    g_org_chromium_components_download_DownloadCollectionBridge_00024DisplayNameInfo_getDisplayName(nullptr);
static base::android::ScopedJavaLocalRef<jstring> Java_DisplayNameInfo_getDisplayName(JNIEnv* env,
    const base::android::JavaRef<jobject>& obj) {
  jclass clazz =
      org_chromium_components_download_DownloadCollectionBridge_00024DisplayNameInfo_clazz(env);
  CHECK_CLAZZ(env, obj.obj(),
      org_chromium_components_download_DownloadCollectionBridge_00024DisplayNameInfo_clazz(env),
          NULL);

  jni_generator::JniJavaCallContextChecked call_context;
  call_context.Init<
      base::android::MethodID::TYPE_INSTANCE>(
          env,
          clazz,
          "getDisplayName",
          "()Ljava/lang/String;",
&g_org_chromium_components_download_DownloadCollectionBridge_00024DisplayNameInfo_getDisplayName);

  jstring ret =
      static_cast<jstring>(env->CallObjectMethod(obj.obj(),
          call_context.base.method_id));
  return base::android::ScopedJavaLocalRef<jstring>(env, ret);
}

static std::atomic<jmethodID>
    g_org_chromium_components_download_DownloadCollectionBridge_createIntermediateUriForPublish(nullptr);
static base::android::ScopedJavaLocalRef<jstring>
    Java_DownloadCollectionBridge_createIntermediateUriForPublish(JNIEnv* env, const
    base::android::JavaRef<jstring>& fileName,
    const base::android::JavaRef<jstring>& mimeType,
    const base::android::JavaRef<jstring>& originalUrl,
    const base::android::JavaRef<jstring>& referrer) {
  jclass clazz = org_chromium_components_download_DownloadCollectionBridge_clazz(env);
  CHECK_CLAZZ(env, clazz,
      org_chromium_components_download_DownloadCollectionBridge_clazz(env), NULL);

  jni_generator::JniJavaCallContextChecked call_context;
  call_context.Init<
      base::android::MethodID::TYPE_STATIC>(
          env,
          clazz,
          "createIntermediateUriForPublish",
"(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;",
&g_org_chromium_components_download_DownloadCollectionBridge_createIntermediateUriForPublish);

  jstring ret =
      static_cast<jstring>(env->CallStaticObjectMethod(clazz,
          call_context.base.method_id, fileName.obj(), mimeType.obj(), originalUrl.obj(),
              referrer.obj()));
  return base::android::ScopedJavaLocalRef<jstring>(env, ret);
}

static std::atomic<jmethodID>
    g_org_chromium_components_download_DownloadCollectionBridge_shouldPublishDownload(nullptr);
static jboolean Java_DownloadCollectionBridge_shouldPublishDownload(JNIEnv* env, const
    base::android::JavaRef<jstring>& filePath) {
  jclass clazz = org_chromium_components_download_DownloadCollectionBridge_clazz(env);
  CHECK_CLAZZ(env, clazz,
      org_chromium_components_download_DownloadCollectionBridge_clazz(env), false);

  jni_generator::JniJavaCallContextChecked call_context;
  call_context.Init<
      base::android::MethodID::TYPE_STATIC>(
          env,
          clazz,
          "shouldPublishDownload",
          "(Ljava/lang/String;)Z",
          &g_org_chromium_components_download_DownloadCollectionBridge_shouldPublishDownload);

  jboolean ret =
      env->CallStaticBooleanMethod(clazz,
          call_context.base.method_id, filePath.obj());
  return ret;
}

static std::atomic<jmethodID>
    g_org_chromium_components_download_DownloadCollectionBridge_copyFileToIntermediateUri(nullptr);
static jboolean Java_DownloadCollectionBridge_copyFileToIntermediateUri(JNIEnv* env, const
    base::android::JavaRef<jstring>& sourcePath,
    const base::android::JavaRef<jstring>& destinationUri) {
  jclass clazz = org_chromium_components_download_DownloadCollectionBridge_clazz(env);
  CHECK_CLAZZ(env, clazz,
      org_chromium_components_download_DownloadCollectionBridge_clazz(env), false);

  jni_generator::JniJavaCallContextChecked call_context;
  call_context.Init<
      base::android::MethodID::TYPE_STATIC>(
          env,
          clazz,
          "copyFileToIntermediateUri",
          "(Ljava/lang/String;Ljava/lang/String;)Z",
          &g_org_chromium_components_download_DownloadCollectionBridge_copyFileToIntermediateUri);

  jboolean ret =
      env->CallStaticBooleanMethod(clazz,
          call_context.base.method_id, sourcePath.obj(), destinationUri.obj());
  return ret;
}

static std::atomic<jmethodID>
    g_org_chromium_components_download_DownloadCollectionBridge_deleteIntermediateUri(nullptr);
static void Java_DownloadCollectionBridge_deleteIntermediateUri(JNIEnv* env, const
    base::android::JavaRef<jstring>& uri) {
  jclass clazz = org_chromium_components_download_DownloadCollectionBridge_clazz(env);
  CHECK_CLAZZ(env, clazz,
      org_chromium_components_download_DownloadCollectionBridge_clazz(env));

  jni_generator::JniJavaCallContextChecked call_context;
  call_context.Init<
      base::android::MethodID::TYPE_STATIC>(
          env,
          clazz,
          "deleteIntermediateUri",
          "(Ljava/lang/String;)V",
          &g_org_chromium_components_download_DownloadCollectionBridge_deleteIntermediateUri);

     env->CallStaticVoidMethod(clazz,
          call_context.base.method_id, uri.obj());
}

static std::atomic<jmethodID>
    g_org_chromium_components_download_DownloadCollectionBridge_publishDownload(nullptr);
static base::android::ScopedJavaLocalRef<jstring>
    Java_DownloadCollectionBridge_publishDownload(JNIEnv* env, const
    base::android::JavaRef<jstring>& intermediateUri) {
  jclass clazz = org_chromium_components_download_DownloadCollectionBridge_clazz(env);
  CHECK_CLAZZ(env, clazz,
      org_chromium_components_download_DownloadCollectionBridge_clazz(env), NULL);

  jni_generator::JniJavaCallContextChecked call_context;
  call_context.Init<
      base::android::MethodID::TYPE_STATIC>(
          env,
          clazz,
          "publishDownload",
          "(Ljava/lang/String;)Ljava/lang/String;",
          &g_org_chromium_components_download_DownloadCollectionBridge_publishDownload);

  jstring ret =
      static_cast<jstring>(env->CallStaticObjectMethod(clazz,
          call_context.base.method_id, intermediateUri.obj()));
  return base::android::ScopedJavaLocalRef<jstring>(env, ret);
}

static std::atomic<jmethodID>
    g_org_chromium_components_download_DownloadCollectionBridge_openIntermediateUri(nullptr);
static jint Java_DownloadCollectionBridge_openIntermediateUri(JNIEnv* env, const
    base::android::JavaRef<jstring>& intermediateUri) {
  jclass clazz = org_chromium_components_download_DownloadCollectionBridge_clazz(env);
  CHECK_CLAZZ(env, clazz,
      org_chromium_components_download_DownloadCollectionBridge_clazz(env), 0);

  jni_generator::JniJavaCallContextChecked call_context;
  call_context.Init<
      base::android::MethodID::TYPE_STATIC>(
          env,
          clazz,
          "openIntermediateUri",
          "(Ljava/lang/String;)I",
          &g_org_chromium_components_download_DownloadCollectionBridge_openIntermediateUri);

  jint ret =
      env->CallStaticIntMethod(clazz,
          call_context.base.method_id, intermediateUri.obj());
  return ret;
}

static std::atomic<jmethodID>
    g_org_chromium_components_download_DownloadCollectionBridge_fileNameExists(nullptr);
static jboolean Java_DownloadCollectionBridge_fileNameExists(JNIEnv* env, const
    base::android::JavaRef<jstring>& fileName) {
  jclass clazz = org_chromium_components_download_DownloadCollectionBridge_clazz(env);
  CHECK_CLAZZ(env, clazz,
      org_chromium_components_download_DownloadCollectionBridge_clazz(env), false);

  jni_generator::JniJavaCallContextChecked call_context;
  call_context.Init<
      base::android::MethodID::TYPE_STATIC>(
          env,
          clazz,
          "fileNameExists",
          "(Ljava/lang/String;)Z",
          &g_org_chromium_components_download_DownloadCollectionBridge_fileNameExists);

  jboolean ret =
      env->CallStaticBooleanMethod(clazz,
          call_context.base.method_id, fileName.obj());
  return ret;
}

static std::atomic<jmethodID>
    g_org_chromium_components_download_DownloadCollectionBridge_renameDownloadUri(nullptr);
static jboolean Java_DownloadCollectionBridge_renameDownloadUri(JNIEnv* env, const
    base::android::JavaRef<jstring>& downloadUri,
    const base::android::JavaRef<jstring>& displayName) {
  jclass clazz = org_chromium_components_download_DownloadCollectionBridge_clazz(env);
  CHECK_CLAZZ(env, clazz,
      org_chromium_components_download_DownloadCollectionBridge_clazz(env), false);

  jni_generator::JniJavaCallContextChecked call_context;
  call_context.Init<
      base::android::MethodID::TYPE_STATIC>(
          env,
          clazz,
          "renameDownloadUri",
          "(Ljava/lang/String;Ljava/lang/String;)Z",
          &g_org_chromium_components_download_DownloadCollectionBridge_renameDownloadUri);

  jboolean ret =
      env->CallStaticBooleanMethod(clazz,
          call_context.base.method_id, downloadUri.obj(), displayName.obj());
  return ret;
}

static std::atomic<jmethodID>
    g_org_chromium_components_download_DownloadCollectionBridge_needToRetrieveDisplayNames(nullptr);
static jboolean Java_DownloadCollectionBridge_needToRetrieveDisplayNames(JNIEnv* env) {
  jclass clazz = org_chromium_components_download_DownloadCollectionBridge_clazz(env);
  CHECK_CLAZZ(env, clazz,
      org_chromium_components_download_DownloadCollectionBridge_clazz(env), false);

  jni_generator::JniJavaCallContextChecked call_context;
  call_context.Init<
      base::android::MethodID::TYPE_STATIC>(
          env,
          clazz,
          "needToRetrieveDisplayNames",
          "()Z",
          &g_org_chromium_components_download_DownloadCollectionBridge_needToRetrieveDisplayNames);

  jboolean ret =
      env->CallStaticBooleanMethod(clazz,
          call_context.base.method_id);
  return ret;
}

static std::atomic<jmethodID>
    g_org_chromium_components_download_DownloadCollectionBridge_getDisplayNamesForDownloads(nullptr);
static base::android::ScopedJavaLocalRef<jobjectArray>
    Java_DownloadCollectionBridge_getDisplayNamesForDownloads(JNIEnv* env) {
  jclass clazz = org_chromium_components_download_DownloadCollectionBridge_clazz(env);
  CHECK_CLAZZ(env, clazz,
      org_chromium_components_download_DownloadCollectionBridge_clazz(env), NULL);

  jni_generator::JniJavaCallContextChecked call_context;
  call_context.Init<
      base::android::MethodID::TYPE_STATIC>(
          env,
          clazz,
          "getDisplayNamesForDownloads",
          "()[Lorg/chromium/components/download/DownloadCollectionBridge$DisplayNameInfo;",
          &g_org_chromium_components_download_DownloadCollectionBridge_getDisplayNamesForDownloads);

  jobjectArray ret =
      static_cast<jobjectArray>(env->CallStaticObjectMethod(clazz,
          call_context.base.method_id));
  return base::android::ScopedJavaLocalRef<jobjectArray>(env, ret);
}

static std::atomic<jmethodID>
    g_org_chromium_components_download_DownloadCollectionBridge_getDisplayName(nullptr);
static base::android::ScopedJavaLocalRef<jstring>
    Java_DownloadCollectionBridge_getDisplayName(JNIEnv* env, const base::android::JavaRef<jstring>&
    downloadUri) {
  jclass clazz = org_chromium_components_download_DownloadCollectionBridge_clazz(env);
  CHECK_CLAZZ(env, clazz,
      org_chromium_components_download_DownloadCollectionBridge_clazz(env), NULL);

  jni_generator::JniJavaCallContextChecked call_context;
  call_context.Init<
      base::android::MethodID::TYPE_STATIC>(
          env,
          clazz,
          "getDisplayName",
          "(Ljava/lang/String;)Ljava/lang/String;",
          &g_org_chromium_components_download_DownloadCollectionBridge_getDisplayName);

  jstring ret =
      static_cast<jstring>(env->CallStaticObjectMethod(clazz,
          call_context.base.method_id, downloadUri.obj()));
  return base::android::ScopedJavaLocalRef<jstring>(env, ret);
}

}  // namespace download

// Step 4: Generated test functions (optional).


#endif  // org_chromium_components_download_DownloadCollectionBridge_JNI
