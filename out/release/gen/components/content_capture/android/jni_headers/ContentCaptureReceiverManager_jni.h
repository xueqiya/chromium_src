// Copyright 2014 The Chromium Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.


// This file is autogenerated by
//     base/android/jni_generator/jni_generator.py
// For
//     org/chromium/components/content_capture/ContentCaptureReceiverManager

#ifndef org_chromium_components_content_capture_ContentCaptureReceiverManager_JNI
#define org_chromium_components_content_capture_ContentCaptureReceiverManager_JNI

#include <jni.h>

#include "../../../../../../../base/android/jni_generator/jni_generator_helper.h"


// Step 1: Forward declarations.

JNI_REGISTRATION_EXPORT extern const char
    kClassPath_org_chromium_components_content_1capture_ContentCaptureReceiverManager[];
const char kClassPath_org_chromium_components_content_1capture_ContentCaptureReceiverManager[] =
    "org/chromium/components/content_capture/ContentCaptureReceiverManager";
// Leaking this jclass as we cannot use LazyInstance from some threads.
JNI_REGISTRATION_EXPORT std::atomic<jclass>
    g_org_chromium_components_content_1capture_ContentCaptureReceiverManager_clazz(nullptr);
#ifndef org_chromium_components_content_1capture_ContentCaptureReceiverManager_clazz_defined
#define org_chromium_components_content_1capture_ContentCaptureReceiverManager_clazz_defined
inline jclass org_chromium_components_content_1capture_ContentCaptureReceiverManager_clazz(JNIEnv*
    env) {
  return base::android::LazyGetClass(env,
      kClassPath_org_chromium_components_content_1capture_ContentCaptureReceiverManager,
      &g_org_chromium_components_content_1capture_ContentCaptureReceiverManager_clazz);
}
#endif


// Step 2: Constants (optional).


// Step 3: Method stubs.
static base::android::ScopedJavaLocalRef<jobject>
    JNI_ContentCaptureReceiverManager_CreateOrGet(JNIEnv* env, const
    base::android::JavaParamRef<jobject>& webContents);

JNI_GENERATOR_EXPORT jobject Java_J_N_MxegY8Dy(
    JNIEnv* env,
    jclass jcaller,
    jobject webContents) {
  return JNI_ContentCaptureReceiverManager_CreateOrGet(env,
      base::android::JavaParamRef<jobject>(env, webContents)).Release();
}


static std::atomic<jmethodID>
    g_org_chromium_components_content_1capture_ContentCaptureReceiverManager_Constructor(nullptr);
static base::android::ScopedJavaLocalRef<jobject>
    Java_ContentCaptureReceiverManager_Constructor(JNIEnv* env) {
  jclass clazz = org_chromium_components_content_1capture_ContentCaptureReceiverManager_clazz(env);
  CHECK_CLAZZ(env, clazz,
      org_chromium_components_content_1capture_ContentCaptureReceiverManager_clazz(env), NULL);

  jni_generator::JniJavaCallContextChecked call_context;
  call_context.Init<
      base::android::MethodID::TYPE_INSTANCE>(
          env,
          clazz,
          "<init>",
          "()V",
          &g_org_chromium_components_content_1capture_ContentCaptureReceiverManager_Constructor);

  jobject ret =
      env->NewObject(clazz,
          call_context.base.method_id);
  return base::android::ScopedJavaLocalRef<jobject>(env, ret);
}

static std::atomic<jmethodID>
    g_org_chromium_components_content_1capture_ContentCaptureReceiverManager_didCaptureContent(nullptr);
static void Java_ContentCaptureReceiverManager_didCaptureContent(JNIEnv* env, const
    base::android::JavaRef<jobject>& obj, const base::android::JavaRef<jobjectArray>& session,
    const base::android::JavaRef<jobject>& data) {
  jclass clazz = org_chromium_components_content_1capture_ContentCaptureReceiverManager_clazz(env);
  CHECK_CLAZZ(env, obj.obj(),
      org_chromium_components_content_1capture_ContentCaptureReceiverManager_clazz(env));

  jni_generator::JniJavaCallContextChecked call_context;
  call_context.Init<
      base::android::MethodID::TYPE_INSTANCE>(
          env,
          clazz,
          "didCaptureContent",
          "([Ljava/lang/Object;Lorg/chromium/components/content_capture/ContentCaptureData;)V",
&g_org_chromium_components_content_1capture_ContentCaptureReceiverManager_didCaptureContent);

     env->CallVoidMethod(obj.obj(),
          call_context.base.method_id, session.obj(), data.obj());
}

static std::atomic<jmethodID>
    g_org_chromium_components_content_1capture_ContentCaptureReceiverManager_didUpdateContent(nullptr);
static void Java_ContentCaptureReceiverManager_didUpdateContent(JNIEnv* env, const
    base::android::JavaRef<jobject>& obj, const base::android::JavaRef<jobjectArray>& session,
    const base::android::JavaRef<jobject>& data) {
  jclass clazz = org_chromium_components_content_1capture_ContentCaptureReceiverManager_clazz(env);
  CHECK_CLAZZ(env, obj.obj(),
      org_chromium_components_content_1capture_ContentCaptureReceiverManager_clazz(env));

  jni_generator::JniJavaCallContextChecked call_context;
  call_context.Init<
      base::android::MethodID::TYPE_INSTANCE>(
          env,
          clazz,
          "didUpdateContent",
          "([Ljava/lang/Object;Lorg/chromium/components/content_capture/ContentCaptureData;)V",
&g_org_chromium_components_content_1capture_ContentCaptureReceiverManager_didUpdateContent);

     env->CallVoidMethod(obj.obj(),
          call_context.base.method_id, session.obj(), data.obj());
}

static std::atomic<jmethodID>
    g_org_chromium_components_content_1capture_ContentCaptureReceiverManager_didRemoveContent(nullptr);
static void Java_ContentCaptureReceiverManager_didRemoveContent(JNIEnv* env, const
    base::android::JavaRef<jobject>& obj, const base::android::JavaRef<jobjectArray>& session,
    const base::android::JavaRef<jlongArray>& data) {
  jclass clazz = org_chromium_components_content_1capture_ContentCaptureReceiverManager_clazz(env);
  CHECK_CLAZZ(env, obj.obj(),
      org_chromium_components_content_1capture_ContentCaptureReceiverManager_clazz(env));

  jni_generator::JniJavaCallContextChecked call_context;
  call_context.Init<
      base::android::MethodID::TYPE_INSTANCE>(
          env,
          clazz,
          "didRemoveContent",
          "([Ljava/lang/Object;[J)V",
&g_org_chromium_components_content_1capture_ContentCaptureReceiverManager_didRemoveContent);

     env->CallVoidMethod(obj.obj(),
          call_context.base.method_id, session.obj(), data.obj());
}

static std::atomic<jmethodID>
    g_org_chromium_components_content_1capture_ContentCaptureReceiverManager_didRemoveSession(nullptr);
static void Java_ContentCaptureReceiverManager_didRemoveSession(JNIEnv* env, const
    base::android::JavaRef<jobject>& obj, const base::android::JavaRef<jobjectArray>& session) {
  jclass clazz = org_chromium_components_content_1capture_ContentCaptureReceiverManager_clazz(env);
  CHECK_CLAZZ(env, obj.obj(),
      org_chromium_components_content_1capture_ContentCaptureReceiverManager_clazz(env));

  jni_generator::JniJavaCallContextChecked call_context;
  call_context.Init<
      base::android::MethodID::TYPE_INSTANCE>(
          env,
          clazz,
          "didRemoveSession",
          "([Ljava/lang/Object;)V",
&g_org_chromium_components_content_1capture_ContentCaptureReceiverManager_didRemoveSession);

     env->CallVoidMethod(obj.obj(),
          call_context.base.method_id, session.obj());
}

// Step 4: Generated test functions (optional).


#endif  // org_chromium_components_content_capture_ContentCaptureReceiverManager_JNI
