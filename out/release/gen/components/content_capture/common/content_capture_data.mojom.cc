// components/content_capture/common/content_capture_data.mojom.cc is auto generated by mojom_bindings_generator.py, do not edit

// Copyright 2013 The Chromium Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.

#if defined(__clang__)
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wunused-private-field"
#elif defined(_MSC_VER)
#pragma warning(push)
#pragma warning(disable:4056)
#pragma warning(disable:4065)
#pragma warning(disable:4756)
#endif

#include "components/content_capture/common/content_capture_data.mojom.h"

#include <math.h>
#include <stdint.h>
#include <utility>

#include "base/hash/md5_constexpr.h"
#include "base/logging.h"
#include "base/run_loop.h"
#include "base/task/common/task_annotator.h"
#include "mojo/public/cpp/bindings/lib/generated_code_util.h"
#include "mojo/public/cpp/bindings/lib/message_internal.h"
#include "mojo/public/cpp/bindings/lib/serialization_util.h"
#include "mojo/public/cpp/bindings/lib/unserialized_message_context.h"
#include "mojo/public/cpp/bindings/lib/validate_params.h"
#include "mojo/public/cpp/bindings/lib/validation_context.h"
#include "mojo/public/cpp/bindings/lib/validation_errors.h"
#include "mojo/public/interfaces/bindings/interface_control_messages.mojom.h"

#include "components/content_capture/common/content_capture_data.mojom-params-data.h"
#include "components/content_capture/common/content_capture_data.mojom-shared-message-ids.h"

#include "components/content_capture/common/content_capture_data.mojom-import-headers.h"


#ifndef COMPONENTS_CONTENT_CAPTURE_COMMON_CONTENT_CAPTURE_DATA_MOJOM_JUMBO_H_
#define COMPONENTS_CONTENT_CAPTURE_COMMON_CONTENT_CAPTURE_DATA_MOJOM_JUMBO_H_
#include "components/content_capture/common/content_capture_mojom_traits.h"
#include "mojo/public/cpp/base/string16_mojom_traits.h"
#include "ui/gfx/geometry/mojom/geometry_mojom_traits.h"
#endif
namespace content_capture {
namespace mojom {
ContentCaptureData::ContentCaptureData()
    : id(),
      value(),
      bounds(),
      children() {}

ContentCaptureData::ContentCaptureData(
    int64_t id_in,
    const ::base::string16& value_in,
    const ::gfx::Rect& bounds_in,
    std::vector<::content_capture::ContentCaptureData> children_in)
    : id(std::move(id_in)),
      value(std::move(value_in)),
      bounds(std::move(bounds_in)),
      children(std::move(children_in)) {}

ContentCaptureData::~ContentCaptureData() = default;

bool ContentCaptureData::Validate(
    const void* data,
    mojo::internal::ValidationContext* validation_context) {
  return Data_::Validate(data, validation_context);
}
}  // namespace mojom
}  // namespace content_capture

namespace mojo {


// static
bool StructTraits<::content_capture::mojom::ContentCaptureData::DataView, ::content_capture::mojom::ContentCaptureDataPtr>::Read(
    ::content_capture::mojom::ContentCaptureData::DataView input,
    ::content_capture::mojom::ContentCaptureDataPtr* output) {
  bool success = true;
  ::content_capture::mojom::ContentCaptureDataPtr result(::content_capture::mojom::ContentCaptureData::New());
  
      if (success)
        result->id = input.id();
      if (success && !input.ReadValue(&result->value))
        success = false;
      if (success && !input.ReadBounds(&result->bounds))
        success = false;
      if (success && !input.ReadChildren(&result->children))
        success = false;
  *output = std::move(result);
  return success;
}

}  // namespace mojo

#if defined(__clang__)
#pragma clang diagnostic pop
#elif defined(_MSC_VER)
#pragma warning(pop)
#endif