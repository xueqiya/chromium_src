// components/tracing/common/background_tracing_agent.mojom-test-utils.h is auto generated by mojom_bindings_generator.py, do not edit

// Copyright 2019 The Chromium Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.

#ifndef COMPONENTS_TRACING_COMMON_BACKGROUND_TRACING_AGENT_MOJOM_TEST_UTILS_H_
#define COMPONENTS_TRACING_COMMON_BACKGROUND_TRACING_AGENT_MOJOM_TEST_UTILS_H_

#include "components/tracing/common/background_tracing_agent.mojom.h"


namespace tracing {
namespace mojom {


class  BackgroundTracingAgentClientInterceptorForTesting : public BackgroundTracingAgentClient {
  virtual BackgroundTracingAgentClient* GetForwardingInterface() = 0;
  void OnInitialized() override;
  void OnTriggerBackgroundTrace(const std::string& histogram_name) override;
  void OnAbortBackgroundTrace() override;
};
class  BackgroundTracingAgentClientAsyncWaiter {
 public:
  explicit BackgroundTracingAgentClientAsyncWaiter(BackgroundTracingAgentClient* proxy);
  ~BackgroundTracingAgentClientAsyncWaiter();

 private:
  BackgroundTracingAgentClient* const proxy_;

  DISALLOW_COPY_AND_ASSIGN(BackgroundTracingAgentClientAsyncWaiter);
};


class  BackgroundTracingAgentInterceptorForTesting : public BackgroundTracingAgent {
  virtual BackgroundTracingAgent* GetForwardingInterface() = 0;
  void SetUMACallback(const std::string& histogram_name, int32_t histogram_lower_value, int32_t histogram_upper_value, bool repeat) override;
  void ClearUMACallback(const std::string& histogram_name) override;
};
class  BackgroundTracingAgentAsyncWaiter {
 public:
  explicit BackgroundTracingAgentAsyncWaiter(BackgroundTracingAgent* proxy);
  ~BackgroundTracingAgentAsyncWaiter();

 private:
  BackgroundTracingAgent* const proxy_;

  DISALLOW_COPY_AND_ASSIGN(BackgroundTracingAgentAsyncWaiter);
};


class  BackgroundTracingAgentProviderInterceptorForTesting : public BackgroundTracingAgentProvider {
  virtual BackgroundTracingAgentProvider* GetForwardingInterface() = 0;
  void Create(uint64_t tracing_process_id, mojo::PendingRemote<BackgroundTracingAgentClient> client, mojo::PendingReceiver<BackgroundTracingAgent> agent) override;
};
class  BackgroundTracingAgentProviderAsyncWaiter {
 public:
  explicit BackgroundTracingAgentProviderAsyncWaiter(BackgroundTracingAgentProvider* proxy);
  ~BackgroundTracingAgentProviderAsyncWaiter();

 private:
  BackgroundTracingAgentProvider* const proxy_;

  DISALLOW_COPY_AND_ASSIGN(BackgroundTracingAgentProviderAsyncWaiter);
};




}  // namespace mojom
}  // namespace tracing

#endif  // COMPONENTS_TRACING_COMMON_BACKGROUND_TRACING_AGENT_MOJOM_TEST_UTILS_H_