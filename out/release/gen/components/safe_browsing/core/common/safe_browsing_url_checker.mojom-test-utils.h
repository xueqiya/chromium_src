// components/safe_browsing/core/common/safe_browsing_url_checker.mojom-test-utils.h is auto generated by mojom_bindings_generator.py, do not edit

// Copyright 2019 The Chromium Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.

#ifndef COMPONENTS_SAFE_BROWSING_CORE_COMMON_SAFE_BROWSING_URL_CHECKER_MOJOM_TEST_UTILS_H_
#define COMPONENTS_SAFE_BROWSING_CORE_COMMON_SAFE_BROWSING_URL_CHECKER_MOJOM_TEST_UTILS_H_

#include "components/safe_browsing/core/common/safe_browsing_url_checker.mojom.h"


namespace safe_browsing {
namespace mojom {


class  SafeBrowsingUrlCheckerInterceptorForTesting : public SafeBrowsingUrlChecker {
  virtual SafeBrowsingUrlChecker* GetForwardingInterface() = 0;
  void CheckUrl(const ::GURL& url, const std::string& method, CheckUrlCallback callback) override;
};
class  SafeBrowsingUrlCheckerAsyncWaiter {
 public:
  explicit SafeBrowsingUrlCheckerAsyncWaiter(SafeBrowsingUrlChecker* proxy);
  ~SafeBrowsingUrlCheckerAsyncWaiter();
  void CheckUrl(
      const ::GURL& url, const std::string& method, mojo::PendingReceiver<UrlCheckNotifier>* out_slow_check_notifier, bool* out_proceed, bool* out_showed_interstitial);

 private:
  SafeBrowsingUrlChecker* const proxy_;

  DISALLOW_COPY_AND_ASSIGN(SafeBrowsingUrlCheckerAsyncWaiter);
};


class  UrlCheckNotifierInterceptorForTesting : public UrlCheckNotifier {
  virtual UrlCheckNotifier* GetForwardingInterface() = 0;
  void OnCompleteCheck(bool proceed, bool showed_interstitial) override;
};
class  UrlCheckNotifierAsyncWaiter {
 public:
  explicit UrlCheckNotifierAsyncWaiter(UrlCheckNotifier* proxy);
  ~UrlCheckNotifierAsyncWaiter();

 private:
  UrlCheckNotifier* const proxy_;

  DISALLOW_COPY_AND_ASSIGN(UrlCheckNotifierAsyncWaiter);
};




}  // namespace mojom
}  // namespace safe_browsing

#endif  // COMPONENTS_SAFE_BROWSING_CORE_COMMON_SAFE_BROWSING_URL_CHECKER_MOJOM_TEST_UTILS_H_