// components/safe_browsing/content/common/safe_browsing.mojom-forward.h is auto generated by mojom_bindings_generator.py, do not edit

// Copyright 2019 The Chromium Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.

#ifndef COMPONENTS_SAFE_BROWSING_CONTENT_COMMON_SAFE_BROWSING_MOJOM_FORWARD_H_
#define COMPONENTS_SAFE_BROWSING_CONTENT_COMMON_SAFE_BROWSING_MOJOM_FORWARD_H_

#include <stdint.h>

#include "mojo/public/cpp/bindings/struct_forward.h"

#include "mojo/public/cpp/bindings/deprecated_interface_types_forward.h"


#include "mojo/public/interfaces/bindings/native_struct.mojom-forward.h"






namespace safe_browsing {
namespace mojom {
class AttributeNameValueDataView;

class ThreatDOMDetailsNodeDataView;


enum class PhishingDetectorResult : int32_t;
class AttributeNameValue;
using AttributeNameValuePtr = mojo::InlinedStructPtr<AttributeNameValue>;

class ThreatDOMDetailsNode;
using ThreatDOMDetailsNodePtr = mojo::StructPtr<ThreatDOMDetailsNode>;

class SafeBrowsing;

using SafeBrowsingPtr = mojo::InterfacePtr<SafeBrowsing>;
using SafeBrowsingPtrInfo = mojo::InterfacePtrInfo<SafeBrowsing>;
using ThreadSafeSafeBrowsingPtr =
    mojo::ThreadSafeInterfacePtr<SafeBrowsing>;

using SafeBrowsingRequest = mojo::InterfaceRequest<SafeBrowsing>;

using SafeBrowsingAssociatedPtr =
    mojo::AssociatedInterfacePtr<SafeBrowsing>;
using ThreadSafeSafeBrowsingAssociatedPtr =
    mojo::ThreadSafeAssociatedInterfacePtr<SafeBrowsing>;
using SafeBrowsingAssociatedPtrInfo =
    mojo::AssociatedInterfacePtrInfo<SafeBrowsing>;

using SafeBrowsingAssociatedRequest =
    mojo::AssociatedInterfaceRequest<SafeBrowsing>;

class ThreatReporter;

using ThreatReporterPtr = mojo::InterfacePtr<ThreatReporter>;
using ThreatReporterPtrInfo = mojo::InterfacePtrInfo<ThreatReporter>;
using ThreadSafeThreatReporterPtr =
    mojo::ThreadSafeInterfacePtr<ThreatReporter>;

using ThreatReporterRequest = mojo::InterfaceRequest<ThreatReporter>;

using ThreatReporterAssociatedPtr =
    mojo::AssociatedInterfacePtr<ThreatReporter>;
using ThreadSafeThreatReporterAssociatedPtr =
    mojo::ThreadSafeAssociatedInterfacePtr<ThreatReporter>;
using ThreatReporterAssociatedPtrInfo =
    mojo::AssociatedInterfacePtrInfo<ThreatReporter>;

using ThreatReporterAssociatedRequest =
    mojo::AssociatedInterfaceRequest<ThreatReporter>;

class PhishingModelSetter;

using PhishingModelSetterPtr = mojo::InterfacePtr<PhishingModelSetter>;
using PhishingModelSetterPtrInfo = mojo::InterfacePtrInfo<PhishingModelSetter>;
using ThreadSafePhishingModelSetterPtr =
    mojo::ThreadSafeInterfacePtr<PhishingModelSetter>;

using PhishingModelSetterRequest = mojo::InterfaceRequest<PhishingModelSetter>;

using PhishingModelSetterAssociatedPtr =
    mojo::AssociatedInterfacePtr<PhishingModelSetter>;
using ThreadSafePhishingModelSetterAssociatedPtr =
    mojo::ThreadSafeAssociatedInterfacePtr<PhishingModelSetter>;
using PhishingModelSetterAssociatedPtrInfo =
    mojo::AssociatedInterfacePtrInfo<PhishingModelSetter>;

using PhishingModelSetterAssociatedRequest =
    mojo::AssociatedInterfaceRequest<PhishingModelSetter>;




}  // namespace mojom
}  // namespace safe_browsing

#endif  // COMPONENTS_SAFE_BROWSING_CONTENT_COMMON_SAFE_BROWSING_MOJOM_FORWARD_H_