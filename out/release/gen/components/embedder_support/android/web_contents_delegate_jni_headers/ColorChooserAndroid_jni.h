// Copyright 2014 The Chromium Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.


// This file is autogenerated by
//     base/android/jni_generator/jni_generator.py
// For
//     org/chromium/components/embedder_support/delegate/ColorChooserAndroid

#ifndef org_chromium_components_embedder_support_delegate_ColorChooserAndroid_JNI
#define org_chromium_components_embedder_support_delegate_ColorChooserAndroid_JNI

#include <jni.h>

#include "../../../../../../../base/android/jni_generator/jni_generator_helper.h"


// Step 1: Forward declarations.

JNI_REGISTRATION_EXPORT extern const char
    kClassPath_org_chromium_components_embedder_1support_delegate_ColorChooserAndroid[];
const char kClassPath_org_chromium_components_embedder_1support_delegate_ColorChooserAndroid[] =
    "org/chromium/components/embedder_support/delegate/ColorChooserAndroid";
// Leaking this jclass as we cannot use LazyInstance from some threads.
JNI_REGISTRATION_EXPORT std::atomic<jclass>
    g_org_chromium_components_embedder_1support_delegate_ColorChooserAndroid_clazz(nullptr);
#ifndef org_chromium_components_embedder_1support_delegate_ColorChooserAndroid_clazz_defined
#define org_chromium_components_embedder_1support_delegate_ColorChooserAndroid_clazz_defined
inline jclass org_chromium_components_embedder_1support_delegate_ColorChooserAndroid_clazz(JNIEnv*
    env) {
  return base::android::LazyGetClass(env,
      kClassPath_org_chromium_components_embedder_1support_delegate_ColorChooserAndroid,
      &g_org_chromium_components_embedder_1support_delegate_ColorChooserAndroid_clazz);
}
#endif


// Step 2: Constants (optional).


// Step 3: Method stubs.
namespace web_contents_delegate_android {

JNI_GENERATOR_EXPORT void Java_J_N_M2zph6xH(
    JNIEnv* env,
    jclass jcaller,
    jlong nativeColorChooserAndroid,
    jobject caller,
    jint color) {
  ColorChooserAndroid* native = reinterpret_cast<ColorChooserAndroid*>(nativeColorChooserAndroid);
  CHECK_NATIVE_PTR(env, jcaller, native, "OnColorChosen");
  return native->OnColorChosen(env, base::android::JavaParamRef<jobject>(env, caller), color);
}


static std::atomic<jmethodID>
    g_org_chromium_components_embedder_1support_delegate_ColorChooserAndroid_closeColorChooser(nullptr);
static void Java_ColorChooserAndroid_closeColorChooser(JNIEnv* env, const
    base::android::JavaRef<jobject>& obj) {
  jclass clazz = org_chromium_components_embedder_1support_delegate_ColorChooserAndroid_clazz(env);
  CHECK_CLAZZ(env, obj.obj(),
      org_chromium_components_embedder_1support_delegate_ColorChooserAndroid_clazz(env));

  jni_generator::JniJavaCallContextChecked call_context;
  call_context.Init<
      base::android::MethodID::TYPE_INSTANCE>(
          env,
          clazz,
          "closeColorChooser",
          "()V",
&g_org_chromium_components_embedder_1support_delegate_ColorChooserAndroid_closeColorChooser);

     env->CallVoidMethod(obj.obj(),
          call_context.base.method_id);
}

static std::atomic<jmethodID>
    g_org_chromium_components_embedder_1support_delegate_ColorChooserAndroid_createColorChooserAndroid(nullptr);
static base::android::ScopedJavaLocalRef<jobject>
    Java_ColorChooserAndroid_createColorChooserAndroid(JNIEnv* env, jlong nativeColorChooserAndroid,
    const base::android::JavaRef<jobject>& windowAndroid,
    JniIntWrapper initialColor,
    const base::android::JavaRef<jobjectArray>& suggestions) {
  jclass clazz = org_chromium_components_embedder_1support_delegate_ColorChooserAndroid_clazz(env);
  CHECK_CLAZZ(env, clazz,
      org_chromium_components_embedder_1support_delegate_ColorChooserAndroid_clazz(env), NULL);

  jni_generator::JniJavaCallContextChecked call_context;
  call_context.Init<
      base::android::MethodID::TYPE_STATIC>(
          env,
          clazz,
          "createColorChooserAndroid",
"(JLorg/chromium/ui/base/WindowAndroid;I[Lorg/chromium/components/embedder_support/delegate/ColorSuggestion;)Lorg/chromium/components/embedder_support/delegate/ColorChooserAndroid;",
&g_org_chromium_components_embedder_1support_delegate_ColorChooserAndroid_createColorChooserAndroid);

  jobject ret =
      env->CallStaticObjectMethod(clazz,
          call_context.base.method_id, nativeColorChooserAndroid, windowAndroid.obj(),
              as_jint(initialColor), suggestions.obj());
  return base::android::ScopedJavaLocalRef<jobject>(env, ret);
}

static std::atomic<jmethodID>
    g_org_chromium_components_embedder_1support_delegate_ColorChooserAndroid_createColorSuggestionArray(nullptr);
static base::android::ScopedJavaLocalRef<jobjectArray>
    Java_ColorChooserAndroid_createColorSuggestionArray(JNIEnv* env, JniIntWrapper size) {
  jclass clazz = org_chromium_components_embedder_1support_delegate_ColorChooserAndroid_clazz(env);
  CHECK_CLAZZ(env, clazz,
      org_chromium_components_embedder_1support_delegate_ColorChooserAndroid_clazz(env), NULL);

  jni_generator::JniJavaCallContextChecked call_context;
  call_context.Init<
      base::android::MethodID::TYPE_STATIC>(
          env,
          clazz,
          "createColorSuggestionArray",
          "(I)[Lorg/chromium/components/embedder_support/delegate/ColorSuggestion;",
&g_org_chromium_components_embedder_1support_delegate_ColorChooserAndroid_createColorSuggestionArray);

  jobjectArray ret =
      static_cast<jobjectArray>(env->CallStaticObjectMethod(clazz,
          call_context.base.method_id, as_jint(size)));
  return base::android::ScopedJavaLocalRef<jobjectArray>(env, ret);
}

static std::atomic<jmethodID>
    g_org_chromium_components_embedder_1support_delegate_ColorChooserAndroid_addToColorSuggestionArray(nullptr);
static void Java_ColorChooserAndroid_addToColorSuggestionArray(JNIEnv* env, const
    base::android::JavaRef<jobjectArray>& array,
    JniIntWrapper index,
    JniIntWrapper color,
    const base::android::JavaRef<jstring>& label) {
  jclass clazz = org_chromium_components_embedder_1support_delegate_ColorChooserAndroid_clazz(env);
  CHECK_CLAZZ(env, clazz,
      org_chromium_components_embedder_1support_delegate_ColorChooserAndroid_clazz(env));

  jni_generator::JniJavaCallContextChecked call_context;
  call_context.Init<
      base::android::MethodID::TYPE_STATIC>(
          env,
          clazz,
          "addToColorSuggestionArray",
"([Lorg/chromium/components/embedder_support/delegate/ColorSuggestion;IILjava/lang/String;)V",
&g_org_chromium_components_embedder_1support_delegate_ColorChooserAndroid_addToColorSuggestionArray);

     env->CallStaticVoidMethod(clazz,
          call_context.base.method_id, array.obj(), as_jint(index), as_jint(color), label.obj());
}

}  // namespace web_contents_delegate_android

// Step 4: Generated test functions (optional).


#endif  // org_chromium_components_embedder_support_delegate_ColorChooserAndroid_JNI
