// Copyright 2014 The Chromium Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.


// This file is autogenerated by
//     base/android/jni_generator/jni_generator.py
// For
//     org/chromium/components/embedder_support/delegate/WebContentsDelegateAndroid

#ifndef org_chromium_components_embedder_support_delegate_WebContentsDelegateAndroid_JNI
#define org_chromium_components_embedder_support_delegate_WebContentsDelegateAndroid_JNI

#include <jni.h>

#include "../../../../../../../base/android/jni_generator/jni_generator_helper.h"


// Step 1: Forward declarations.

JNI_REGISTRATION_EXPORT extern const char
    kClassPath_org_chromium_components_embedder_1support_delegate_WebContentsDelegateAndroid[];
const char
    kClassPath_org_chromium_components_embedder_1support_delegate_WebContentsDelegateAndroid[] =
    "org/chromium/components/embedder_support/delegate/WebContentsDelegateAndroid";
// Leaking this jclass as we cannot use LazyInstance from some threads.
JNI_REGISTRATION_EXPORT std::atomic<jclass>
    g_org_chromium_components_embedder_1support_delegate_WebContentsDelegateAndroid_clazz(nullptr);
#ifndef org_chromium_components_embedder_1support_delegate_WebContentsDelegateAndroid_clazz_defined
#define org_chromium_components_embedder_1support_delegate_WebContentsDelegateAndroid_clazz_defined
inline jclass
    org_chromium_components_embedder_1support_delegate_WebContentsDelegateAndroid_clazz(JNIEnv* env)
    {
  return base::android::LazyGetClass(env,
      kClassPath_org_chromium_components_embedder_1support_delegate_WebContentsDelegateAndroid,
      &g_org_chromium_components_embedder_1support_delegate_WebContentsDelegateAndroid_clazz);
}
#endif


// Step 2: Constants (optional).


// Step 3: Method stubs.
namespace web_contents_delegate_android {


static std::atomic<jmethodID>
    g_org_chromium_components_embedder_1support_delegate_WebContentsDelegateAndroid_openNewTab(nullptr);
static void Java_WebContentsDelegateAndroid_openNewTab(JNIEnv* env, const
    base::android::JavaRef<jobject>& obj, const base::android::JavaRef<jstring>& url,
    const base::android::JavaRef<jstring>& extraHeaders,
    const base::android::JavaRef<jobject>& postData,
    JniIntWrapper disposition,
    jboolean isRendererInitiated) {
  jclass clazz =
      org_chromium_components_embedder_1support_delegate_WebContentsDelegateAndroid_clazz(env);
  CHECK_CLAZZ(env, obj.obj(),
      org_chromium_components_embedder_1support_delegate_WebContentsDelegateAndroid_clazz(env));

  jni_generator::JniJavaCallContextChecked call_context;
  call_context.Init<
      base::android::MethodID::TYPE_INSTANCE>(
          env,
          clazz,
          "openNewTab",
"(Ljava/lang/String;Ljava/lang/String;Lorg/chromium/content_public/common/ResourceRequestBody;IZ)V",
&g_org_chromium_components_embedder_1support_delegate_WebContentsDelegateAndroid_openNewTab);

     env->CallVoidMethod(obj.obj(),
          call_context.base.method_id, url.obj(), extraHeaders.obj(), postData.obj(),
              as_jint(disposition), isRendererInitiated);
}

static std::atomic<jmethodID>
    g_org_chromium_components_embedder_1support_delegate_WebContentsDelegateAndroid_activateContents(nullptr);
static void Java_WebContentsDelegateAndroid_activateContents(JNIEnv* env, const
    base::android::JavaRef<jobject>& obj) {
  jclass clazz =
      org_chromium_components_embedder_1support_delegate_WebContentsDelegateAndroid_clazz(env);
  CHECK_CLAZZ(env, obj.obj(),
      org_chromium_components_embedder_1support_delegate_WebContentsDelegateAndroid_clazz(env));

  jni_generator::JniJavaCallContextChecked call_context;
  call_context.Init<
      base::android::MethodID::TYPE_INSTANCE>(
          env,
          clazz,
          "activateContents",
          "()V",
&g_org_chromium_components_embedder_1support_delegate_WebContentsDelegateAndroid_activateContents);

     env->CallVoidMethod(obj.obj(),
          call_context.base.method_id);
}

static std::atomic<jmethodID>
    g_org_chromium_components_embedder_1support_delegate_WebContentsDelegateAndroid_closeContents(nullptr);
static void Java_WebContentsDelegateAndroid_closeContents(JNIEnv* env, const
    base::android::JavaRef<jobject>& obj) {
  jclass clazz =
      org_chromium_components_embedder_1support_delegate_WebContentsDelegateAndroid_clazz(env);
  CHECK_CLAZZ(env, obj.obj(),
      org_chromium_components_embedder_1support_delegate_WebContentsDelegateAndroid_clazz(env));

  jni_generator::JniJavaCallContextChecked call_context;
  call_context.Init<
      base::android::MethodID::TYPE_INSTANCE>(
          env,
          clazz,
          "closeContents",
          "()V",
&g_org_chromium_components_embedder_1support_delegate_WebContentsDelegateAndroid_closeContents);

     env->CallVoidMethod(obj.obj(),
          call_context.base.method_id);
}

static std::atomic<jmethodID>
    g_org_chromium_components_embedder_1support_delegate_WebContentsDelegateAndroid_loadingStateChanged(nullptr);
static void Java_WebContentsDelegateAndroid_loadingStateChanged(JNIEnv* env, const
    base::android::JavaRef<jobject>& obj, jboolean toDifferentDocument) {
  jclass clazz =
      org_chromium_components_embedder_1support_delegate_WebContentsDelegateAndroid_clazz(env);
  CHECK_CLAZZ(env, obj.obj(),
      org_chromium_components_embedder_1support_delegate_WebContentsDelegateAndroid_clazz(env));

  jni_generator::JniJavaCallContextChecked call_context;
  call_context.Init<
      base::android::MethodID::TYPE_INSTANCE>(
          env,
          clazz,
          "loadingStateChanged",
          "(Z)V",
&g_org_chromium_components_embedder_1support_delegate_WebContentsDelegateAndroid_loadingStateChanged);

     env->CallVoidMethod(obj.obj(),
          call_context.base.method_id, toDifferentDocument);
}

static std::atomic<jmethodID>
    g_org_chromium_components_embedder_1support_delegate_WebContentsDelegateAndroid_navigationStateChanged(nullptr);
static void Java_WebContentsDelegateAndroid_navigationStateChanged(JNIEnv* env, const
    base::android::JavaRef<jobject>& obj, JniIntWrapper flags) {
  jclass clazz =
      org_chromium_components_embedder_1support_delegate_WebContentsDelegateAndroid_clazz(env);
  CHECK_CLAZZ(env, obj.obj(),
      org_chromium_components_embedder_1support_delegate_WebContentsDelegateAndroid_clazz(env));

  jni_generator::JniJavaCallContextChecked call_context;
  call_context.Init<
      base::android::MethodID::TYPE_INSTANCE>(
          env,
          clazz,
          "navigationStateChanged",
          "(I)V",
&g_org_chromium_components_embedder_1support_delegate_WebContentsDelegateAndroid_navigationStateChanged);

     env->CallVoidMethod(obj.obj(),
          call_context.base.method_id, as_jint(flags));
}

static std::atomic<jmethodID>
    g_org_chromium_components_embedder_1support_delegate_WebContentsDelegateAndroid_visibleSSLStateChanged(nullptr);
static void Java_WebContentsDelegateAndroid_visibleSSLStateChanged(JNIEnv* env, const
    base::android::JavaRef<jobject>& obj) {
  jclass clazz =
      org_chromium_components_embedder_1support_delegate_WebContentsDelegateAndroid_clazz(env);
  CHECK_CLAZZ(env, obj.obj(),
      org_chromium_components_embedder_1support_delegate_WebContentsDelegateAndroid_clazz(env));

  jni_generator::JniJavaCallContextChecked call_context;
  call_context.Init<
      base::android::MethodID::TYPE_INSTANCE>(
          env,
          clazz,
          "visibleSSLStateChanged",
          "()V",
&g_org_chromium_components_embedder_1support_delegate_WebContentsDelegateAndroid_visibleSSLStateChanged);

     env->CallVoidMethod(obj.obj(),
          call_context.base.method_id);
}

static std::atomic<jmethodID>
    g_org_chromium_components_embedder_1support_delegate_WebContentsDelegateAndroid_rendererUnresponsive(nullptr);
static void Java_WebContentsDelegateAndroid_rendererUnresponsive(JNIEnv* env, const
    base::android::JavaRef<jobject>& obj) {
  jclass clazz =
      org_chromium_components_embedder_1support_delegate_WebContentsDelegateAndroid_clazz(env);
  CHECK_CLAZZ(env, obj.obj(),
      org_chromium_components_embedder_1support_delegate_WebContentsDelegateAndroid_clazz(env));

  jni_generator::JniJavaCallContextChecked call_context;
  call_context.Init<
      base::android::MethodID::TYPE_INSTANCE>(
          env,
          clazz,
          "rendererUnresponsive",
          "()V",
&g_org_chromium_components_embedder_1support_delegate_WebContentsDelegateAndroid_rendererUnresponsive);

     env->CallVoidMethod(obj.obj(),
          call_context.base.method_id);
}

static std::atomic<jmethodID>
    g_org_chromium_components_embedder_1support_delegate_WebContentsDelegateAndroid_rendererResponsive(nullptr);
static void Java_WebContentsDelegateAndroid_rendererResponsive(JNIEnv* env, const
    base::android::JavaRef<jobject>& obj) {
  jclass clazz =
      org_chromium_components_embedder_1support_delegate_WebContentsDelegateAndroid_clazz(env);
  CHECK_CLAZZ(env, obj.obj(),
      org_chromium_components_embedder_1support_delegate_WebContentsDelegateAndroid_clazz(env));

  jni_generator::JniJavaCallContextChecked call_context;
  call_context.Init<
      base::android::MethodID::TYPE_INSTANCE>(
          env,
          clazz,
          "rendererResponsive",
          "()V",
&g_org_chromium_components_embedder_1support_delegate_WebContentsDelegateAndroid_rendererResponsive);

     env->CallVoidMethod(obj.obj(),
          call_context.base.method_id);
}

static std::atomic<jmethodID>
    g_org_chromium_components_embedder_1support_delegate_WebContentsDelegateAndroid_webContentsCreated(nullptr);
static void Java_WebContentsDelegateAndroid_webContentsCreated(JNIEnv* env, const
    base::android::JavaRef<jobject>& obj, const base::android::JavaRef<jobject>& sourceWebContents,
    jlong openerRenderProcessId,
    jlong openerRenderFrameId,
    const base::android::JavaRef<jstring>& frameName,
    const base::android::JavaRef<jstring>& targetUrl,
    const base::android::JavaRef<jobject>& newWebContents) {
  jclass clazz =
      org_chromium_components_embedder_1support_delegate_WebContentsDelegateAndroid_clazz(env);
  CHECK_CLAZZ(env, obj.obj(),
      org_chromium_components_embedder_1support_delegate_WebContentsDelegateAndroid_clazz(env));

  jni_generator::JniJavaCallContextChecked call_context;
  call_context.Init<
      base::android::MethodID::TYPE_INSTANCE>(
          env,
          clazz,
          "webContentsCreated",
"(Lorg/chromium/content_public/browser/WebContents;JJLjava/lang/String;Ljava/lang/String;Lorg/chromium/content_public/browser/WebContents;)V",
&g_org_chromium_components_embedder_1support_delegate_WebContentsDelegateAndroid_webContentsCreated);

     env->CallVoidMethod(obj.obj(),
          call_context.base.method_id, sourceWebContents.obj(), openerRenderProcessId,
              openerRenderFrameId, frameName.obj(), targetUrl.obj(), newWebContents.obj());
}

static std::atomic<jmethodID>
    g_org_chromium_components_embedder_1support_delegate_WebContentsDelegateAndroid_shouldCreateWebContents(nullptr);
static jboolean Java_WebContentsDelegateAndroid_shouldCreateWebContents(JNIEnv* env, const
    base::android::JavaRef<jobject>& obj, const base::android::JavaRef<jstring>& targetUrl) {
  jclass clazz =
      org_chromium_components_embedder_1support_delegate_WebContentsDelegateAndroid_clazz(env);
  CHECK_CLAZZ(env, obj.obj(),
      org_chromium_components_embedder_1support_delegate_WebContentsDelegateAndroid_clazz(env),
          false);

  jni_generator::JniJavaCallContextChecked call_context;
  call_context.Init<
      base::android::MethodID::TYPE_INSTANCE>(
          env,
          clazz,
          "shouldCreateWebContents",
          "(Ljava/lang/String;)Z",
&g_org_chromium_components_embedder_1support_delegate_WebContentsDelegateAndroid_shouldCreateWebContents);

  jboolean ret =
      env->CallBooleanMethod(obj.obj(),
          call_context.base.method_id, targetUrl.obj());
  return ret;
}

static std::atomic<jmethodID>
    g_org_chromium_components_embedder_1support_delegate_WebContentsDelegateAndroid_onUpdateUrl(nullptr);
static void Java_WebContentsDelegateAndroid_onUpdateUrl(JNIEnv* env, const
    base::android::JavaRef<jobject>& obj, const base::android::JavaRef<jstring>& url) {
  jclass clazz =
      org_chromium_components_embedder_1support_delegate_WebContentsDelegateAndroid_clazz(env);
  CHECK_CLAZZ(env, obj.obj(),
      org_chromium_components_embedder_1support_delegate_WebContentsDelegateAndroid_clazz(env));

  jni_generator::JniJavaCallContextChecked call_context;
  call_context.Init<
      base::android::MethodID::TYPE_INSTANCE>(
          env,
          clazz,
          "onUpdateUrl",
          "(Ljava/lang/String;)V",
&g_org_chromium_components_embedder_1support_delegate_WebContentsDelegateAndroid_onUpdateUrl);

     env->CallVoidMethod(obj.obj(),
          call_context.base.method_id, url.obj());
}

static std::atomic<jmethodID>
    g_org_chromium_components_embedder_1support_delegate_WebContentsDelegateAndroid_takeFocus(nullptr);
static jboolean Java_WebContentsDelegateAndroid_takeFocus(JNIEnv* env, const
    base::android::JavaRef<jobject>& obj, jboolean reverse) {
  jclass clazz =
      org_chromium_components_embedder_1support_delegate_WebContentsDelegateAndroid_clazz(env);
  CHECK_CLAZZ(env, obj.obj(),
      org_chromium_components_embedder_1support_delegate_WebContentsDelegateAndroid_clazz(env),
          false);

  jni_generator::JniJavaCallContextChecked call_context;
  call_context.Init<
      base::android::MethodID::TYPE_INSTANCE>(
          env,
          clazz,
          "takeFocus",
          "(Z)Z",
&g_org_chromium_components_embedder_1support_delegate_WebContentsDelegateAndroid_takeFocus);

  jboolean ret =
      env->CallBooleanMethod(obj.obj(),
          call_context.base.method_id, reverse);
  return ret;
}

static std::atomic<jmethodID>
    g_org_chromium_components_embedder_1support_delegate_WebContentsDelegateAndroid_handleKeyboardEvent(nullptr);
static void Java_WebContentsDelegateAndroid_handleKeyboardEvent(JNIEnv* env, const
    base::android::JavaRef<jobject>& obj, const base::android::JavaRef<jobject>& event) {
  jclass clazz =
      org_chromium_components_embedder_1support_delegate_WebContentsDelegateAndroid_clazz(env);
  CHECK_CLAZZ(env, obj.obj(),
      org_chromium_components_embedder_1support_delegate_WebContentsDelegateAndroid_clazz(env));

  jni_generator::JniJavaCallContextChecked call_context;
  call_context.Init<
      base::android::MethodID::TYPE_INSTANCE>(
          env,
          clazz,
          "handleKeyboardEvent",
          "(Landroid/view/KeyEvent;)V",
&g_org_chromium_components_embedder_1support_delegate_WebContentsDelegateAndroid_handleKeyboardEvent);

     env->CallVoidMethod(obj.obj(),
          call_context.base.method_id, event.obj());
}

static std::atomic<jmethodID>
    g_org_chromium_components_embedder_1support_delegate_WebContentsDelegateAndroid_addMessageToConsole(nullptr);
static jboolean Java_WebContentsDelegateAndroid_addMessageToConsole(JNIEnv* env, const
    base::android::JavaRef<jobject>& obj, JniIntWrapper level,
    const base::android::JavaRef<jstring>& message,
    JniIntWrapper lineNumber,
    const base::android::JavaRef<jstring>& sourceId) {
  jclass clazz =
      org_chromium_components_embedder_1support_delegate_WebContentsDelegateAndroid_clazz(env);
  CHECK_CLAZZ(env, obj.obj(),
      org_chromium_components_embedder_1support_delegate_WebContentsDelegateAndroid_clazz(env),
          false);

  jni_generator::JniJavaCallContextChecked call_context;
  call_context.Init<
      base::android::MethodID::TYPE_INSTANCE>(
          env,
          clazz,
          "addMessageToConsole",
          "(ILjava/lang/String;ILjava/lang/String;)Z",
&g_org_chromium_components_embedder_1support_delegate_WebContentsDelegateAndroid_addMessageToConsole);

  jboolean ret =
      env->CallBooleanMethod(obj.obj(),
          call_context.base.method_id, as_jint(level), message.obj(), as_jint(lineNumber),
              sourceId.obj());
  return ret;
}

static std::atomic<jmethodID>
    g_org_chromium_components_embedder_1support_delegate_WebContentsDelegateAndroid_showRepostFormWarningDialog(nullptr);
static void Java_WebContentsDelegateAndroid_showRepostFormWarningDialog(JNIEnv* env, const
    base::android::JavaRef<jobject>& obj) {
  jclass clazz =
      org_chromium_components_embedder_1support_delegate_WebContentsDelegateAndroid_clazz(env);
  CHECK_CLAZZ(env, obj.obj(),
      org_chromium_components_embedder_1support_delegate_WebContentsDelegateAndroid_clazz(env));

  jni_generator::JniJavaCallContextChecked call_context;
  call_context.Init<
      base::android::MethodID::TYPE_INSTANCE>(
          env,
          clazz,
          "showRepostFormWarningDialog",
          "()V",
&g_org_chromium_components_embedder_1support_delegate_WebContentsDelegateAndroid_showRepostFormWarningDialog);

     env->CallVoidMethod(obj.obj(),
          call_context.base.method_id);
}

static std::atomic<jmethodID>
    g_org_chromium_components_embedder_1support_delegate_WebContentsDelegateAndroid_enterFullscreenModeForTab(nullptr);
static void Java_WebContentsDelegateAndroid_enterFullscreenModeForTab(JNIEnv* env, const
    base::android::JavaRef<jobject>& obj, jboolean prefersNavigationBar) {
  jclass clazz =
      org_chromium_components_embedder_1support_delegate_WebContentsDelegateAndroid_clazz(env);
  CHECK_CLAZZ(env, obj.obj(),
      org_chromium_components_embedder_1support_delegate_WebContentsDelegateAndroid_clazz(env));

  jni_generator::JniJavaCallContextChecked call_context;
  call_context.Init<
      base::android::MethodID::TYPE_INSTANCE>(
          env,
          clazz,
          "enterFullscreenModeForTab",
          "(Z)V",
&g_org_chromium_components_embedder_1support_delegate_WebContentsDelegateAndroid_enterFullscreenModeForTab);

     env->CallVoidMethod(obj.obj(),
          call_context.base.method_id, prefersNavigationBar);
}

static std::atomic<jmethodID>
    g_org_chromium_components_embedder_1support_delegate_WebContentsDelegateAndroid_exitFullscreenModeForTab(nullptr);
static void Java_WebContentsDelegateAndroid_exitFullscreenModeForTab(JNIEnv* env, const
    base::android::JavaRef<jobject>& obj) {
  jclass clazz =
      org_chromium_components_embedder_1support_delegate_WebContentsDelegateAndroid_clazz(env);
  CHECK_CLAZZ(env, obj.obj(),
      org_chromium_components_embedder_1support_delegate_WebContentsDelegateAndroid_clazz(env));

  jni_generator::JniJavaCallContextChecked call_context;
  call_context.Init<
      base::android::MethodID::TYPE_INSTANCE>(
          env,
          clazz,
          "exitFullscreenModeForTab",
          "()V",
&g_org_chromium_components_embedder_1support_delegate_WebContentsDelegateAndroid_exitFullscreenModeForTab);

     env->CallVoidMethod(obj.obj(),
          call_context.base.method_id);
}

static std::atomic<jmethodID>
    g_org_chromium_components_embedder_1support_delegate_WebContentsDelegateAndroid_isFullscreenForTabOrPending(nullptr);
static jboolean Java_WebContentsDelegateAndroid_isFullscreenForTabOrPending(JNIEnv* env, const
    base::android::JavaRef<jobject>& obj) {
  jclass clazz =
      org_chromium_components_embedder_1support_delegate_WebContentsDelegateAndroid_clazz(env);
  CHECK_CLAZZ(env, obj.obj(),
      org_chromium_components_embedder_1support_delegate_WebContentsDelegateAndroid_clazz(env),
          false);

  jni_generator::JniJavaCallContextChecked call_context;
  call_context.Init<
      base::android::MethodID::TYPE_INSTANCE>(
          env,
          clazz,
          "isFullscreenForTabOrPending",
          "()Z",
&g_org_chromium_components_embedder_1support_delegate_WebContentsDelegateAndroid_isFullscreenForTabOrPending);

  jboolean ret =
      env->CallBooleanMethod(obj.obj(),
          call_context.base.method_id);
  return ret;
}

static std::atomic<jmethodID>
    g_org_chromium_components_embedder_1support_delegate_WebContentsDelegateAndroid_shouldBlockMediaRequest(nullptr);
static jboolean Java_WebContentsDelegateAndroid_shouldBlockMediaRequest(JNIEnv* env, const
    base::android::JavaRef<jobject>& obj, const base::android::JavaRef<jstring>& url) {
  jclass clazz =
      org_chromium_components_embedder_1support_delegate_WebContentsDelegateAndroid_clazz(env);
  CHECK_CLAZZ(env, obj.obj(),
      org_chromium_components_embedder_1support_delegate_WebContentsDelegateAndroid_clazz(env),
          false);

  jni_generator::JniJavaCallContextChecked call_context;
  call_context.Init<
      base::android::MethodID::TYPE_INSTANCE>(
          env,
          clazz,
          "shouldBlockMediaRequest",
          "(Ljava/lang/String;)Z",
&g_org_chromium_components_embedder_1support_delegate_WebContentsDelegateAndroid_shouldBlockMediaRequest);

  jboolean ret =
      env->CallBooleanMethod(obj.obj(),
          call_context.base.method_id, url.obj());
  return ret;
}

static std::atomic<jmethodID>
    g_org_chromium_components_embedder_1support_delegate_WebContentsDelegateAndroid_getTopControlsHeight(nullptr);
static jint Java_WebContentsDelegateAndroid_getTopControlsHeight(JNIEnv* env, const
    base::android::JavaRef<jobject>& obj) {
  jclass clazz =
      org_chromium_components_embedder_1support_delegate_WebContentsDelegateAndroid_clazz(env);
  CHECK_CLAZZ(env, obj.obj(),
      org_chromium_components_embedder_1support_delegate_WebContentsDelegateAndroid_clazz(env), 0);

  jni_generator::JniJavaCallContextChecked call_context;
  call_context.Init<
      base::android::MethodID::TYPE_INSTANCE>(
          env,
          clazz,
          "getTopControlsHeight",
          "()I",
&g_org_chromium_components_embedder_1support_delegate_WebContentsDelegateAndroid_getTopControlsHeight);

  jint ret =
      env->CallIntMethod(obj.obj(),
          call_context.base.method_id);
  return ret;
}

static std::atomic<jmethodID>
    g_org_chromium_components_embedder_1support_delegate_WebContentsDelegateAndroid_getTopControlsMinHeight(nullptr);
static jint Java_WebContentsDelegateAndroid_getTopControlsMinHeight(JNIEnv* env, const
    base::android::JavaRef<jobject>& obj) {
  jclass clazz =
      org_chromium_components_embedder_1support_delegate_WebContentsDelegateAndroid_clazz(env);
  CHECK_CLAZZ(env, obj.obj(),
      org_chromium_components_embedder_1support_delegate_WebContentsDelegateAndroid_clazz(env), 0);

  jni_generator::JniJavaCallContextChecked call_context;
  call_context.Init<
      base::android::MethodID::TYPE_INSTANCE>(
          env,
          clazz,
          "getTopControlsMinHeight",
          "()I",
&g_org_chromium_components_embedder_1support_delegate_WebContentsDelegateAndroid_getTopControlsMinHeight);

  jint ret =
      env->CallIntMethod(obj.obj(),
          call_context.base.method_id);
  return ret;
}

static std::atomic<jmethodID>
    g_org_chromium_components_embedder_1support_delegate_WebContentsDelegateAndroid_getBottomControlsHeight(nullptr);
static jint Java_WebContentsDelegateAndroid_getBottomControlsHeight(JNIEnv* env, const
    base::android::JavaRef<jobject>& obj) {
  jclass clazz =
      org_chromium_components_embedder_1support_delegate_WebContentsDelegateAndroid_clazz(env);
  CHECK_CLAZZ(env, obj.obj(),
      org_chromium_components_embedder_1support_delegate_WebContentsDelegateAndroid_clazz(env), 0);

  jni_generator::JniJavaCallContextChecked call_context;
  call_context.Init<
      base::android::MethodID::TYPE_INSTANCE>(
          env,
          clazz,
          "getBottomControlsHeight",
          "()I",
&g_org_chromium_components_embedder_1support_delegate_WebContentsDelegateAndroid_getBottomControlsHeight);

  jint ret =
      env->CallIntMethod(obj.obj(),
          call_context.base.method_id);
  return ret;
}

static std::atomic<jmethodID>
    g_org_chromium_components_embedder_1support_delegate_WebContentsDelegateAndroid_getBottomControlsMinHeight(nullptr);
static jint Java_WebContentsDelegateAndroid_getBottomControlsMinHeight(JNIEnv* env, const
    base::android::JavaRef<jobject>& obj) {
  jclass clazz =
      org_chromium_components_embedder_1support_delegate_WebContentsDelegateAndroid_clazz(env);
  CHECK_CLAZZ(env, obj.obj(),
      org_chromium_components_embedder_1support_delegate_WebContentsDelegateAndroid_clazz(env), 0);

  jni_generator::JniJavaCallContextChecked call_context;
  call_context.Init<
      base::android::MethodID::TYPE_INSTANCE>(
          env,
          clazz,
          "getBottomControlsMinHeight",
          "()I",
&g_org_chromium_components_embedder_1support_delegate_WebContentsDelegateAndroid_getBottomControlsMinHeight);

  jint ret =
      env->CallIntMethod(obj.obj(),
          call_context.base.method_id);
  return ret;
}

static std::atomic<jmethodID>
    g_org_chromium_components_embedder_1support_delegate_WebContentsDelegateAndroid_shouldAnimateBrowserControlsHeightChanges(nullptr);
static jboolean Java_WebContentsDelegateAndroid_shouldAnimateBrowserControlsHeightChanges(JNIEnv*
    env, const base::android::JavaRef<jobject>& obj) {
  jclass clazz =
      org_chromium_components_embedder_1support_delegate_WebContentsDelegateAndroid_clazz(env);
  CHECK_CLAZZ(env, obj.obj(),
      org_chromium_components_embedder_1support_delegate_WebContentsDelegateAndroid_clazz(env),
          false);

  jni_generator::JniJavaCallContextChecked call_context;
  call_context.Init<
      base::android::MethodID::TYPE_INSTANCE>(
          env,
          clazz,
          "shouldAnimateBrowserControlsHeightChanges",
          "()Z",
&g_org_chromium_components_embedder_1support_delegate_WebContentsDelegateAndroid_shouldAnimateBrowserControlsHeightChanges);

  jboolean ret =
      env->CallBooleanMethod(obj.obj(),
          call_context.base.method_id);
  return ret;
}

static std::atomic<jmethodID>
    g_org_chromium_components_embedder_1support_delegate_WebContentsDelegateAndroid_controlsResizeView(nullptr);
static jboolean Java_WebContentsDelegateAndroid_controlsResizeView(JNIEnv* env, const
    base::android::JavaRef<jobject>& obj) {
  jclass clazz =
      org_chromium_components_embedder_1support_delegate_WebContentsDelegateAndroid_clazz(env);
  CHECK_CLAZZ(env, obj.obj(),
      org_chromium_components_embedder_1support_delegate_WebContentsDelegateAndroid_clazz(env),
          false);

  jni_generator::JniJavaCallContextChecked call_context;
  call_context.Init<
      base::android::MethodID::TYPE_INSTANCE>(
          env,
          clazz,
          "controlsResizeView",
          "()Z",
&g_org_chromium_components_embedder_1support_delegate_WebContentsDelegateAndroid_controlsResizeView);

  jboolean ret =
      env->CallBooleanMethod(obj.obj(),
          call_context.base.method_id);
  return ret;
}

}  // namespace web_contents_delegate_android

// Step 4: Generated test functions (optional).


#endif  // org_chromium_components_embedder_support_delegate_WebContentsDelegateAndroid_JNI
