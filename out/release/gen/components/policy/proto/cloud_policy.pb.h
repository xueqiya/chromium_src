// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: cloud_policy.proto

#ifndef GOOGLE_PROTOBUF_INCLUDED_cloud_5fpolicy_2eproto
#define GOOGLE_PROTOBUF_INCLUDED_cloud_5fpolicy_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3009000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3009000 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata_lite.h>
#include <google/protobuf/message_lite.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include "policy_common_definitions.pb.h"
// @@protoc_insertion_point(includes)
#include "components/policy/proto/policy_proto_export.h"
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_cloud_5fpolicy_2eproto POLICY_PROTO_EXPORT
PROTOBUF_NAMESPACE_OPEN
namespace internal {
class AnyMetadata;
}  // namespace internal
PROTOBUF_NAMESPACE_CLOSE

// Internal implementation detail -- do not use these members.
struct POLICY_PROTO_EXPORT TableStruct_cloud_5fpolicy_2eproto {
static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTableField entries[]
PROTOBUF_SECTION_VARIABLE(protodesc_cold);
static const ::PROTOBUF_NAMESPACE_ID::internal::AuxillaryParseTableField aux[]
PROTOBUF_SECTION_VARIABLE(protodesc_cold);
static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTable schema[1]
PROTOBUF_SECTION_VARIABLE(protodesc_cold);
static const ::PROTOBUF_NAMESPACE_ID::internal::FieldMetadata field_metadata[];
static const ::PROTOBUF_NAMESPACE_ID::internal::SerializationTable serialization_table[];
static const ::PROTOBUF_NAMESPACE_ID::uint32 offsets[];
};
namespace enterprise_management {
class CloudPolicySettings;
class CloudPolicySettingsDefaultTypeInternal;
POLICY_PROTO_EXPORT extern CloudPolicySettingsDefaultTypeInternal _CloudPolicySettings_default_instance_;
}  // namespace enterprise_management
PROTOBUF_NAMESPACE_OPEN
template<> POLICY_PROTO_EXPORT ::enterprise_management::CloudPolicySettings* Arena::CreateMaybeMessage<::enterprise_management::CloudPolicySettings>(Arena*);
PROTOBUF_NAMESPACE_CLOSE
namespace enterprise_management {

// ===================================================================

class POLICY_PROTO_EXPORT CloudPolicySettings :
public ::PROTOBUF_NAMESPACE_ID::MessageLite /* @@protoc_insertion_point(class_definition:enterprise_management.CloudPolicySettings) */ {
public:
CloudPolicySettings();
virtual ~CloudPolicySettings();

CloudPolicySettings(const CloudPolicySettings& from);
CloudPolicySettings(CloudPolicySettings&& from) noexcept
: CloudPolicySettings() {
*this = ::std::move(from);
}

inline CloudPolicySettings& operator=(const CloudPolicySettings& from) {
CopyFrom(from);
return *this;
}
inline CloudPolicySettings& operator=(CloudPolicySettings&& from) noexcept {
if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
if (this != &from) InternalSwap(&from);
} else {
CopyFrom(from);
}
return *this;
}

inline const std::string& unknown_fields() const {
return _internal_metadata_.unknown_fields();
}
inline std::string* mutable_unknown_fields() {
return _internal_metadata_.mutable_unknown_fields();
}

static const CloudPolicySettings& default_instance();

static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
static inline const CloudPolicySettings* internal_default_instance() {
return reinterpret_cast<const CloudPolicySettings*>(
&_CloudPolicySettings_default_instance_);
}
static constexpr int kIndexInFileMessages =
0;

friend void swap(CloudPolicySettings& a, CloudPolicySettings& b) {
a.Swap(&b);
}
inline void Swap(CloudPolicySettings* other) {
if (other == this) return;
InternalSwap(other);
}

// implements Message ----------------------------------------------

inline CloudPolicySettings* New() const final {
return CreateMaybeMessage<CloudPolicySettings>(nullptr);
}

CloudPolicySettings* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
return CreateMaybeMessage<CloudPolicySettings>(arena);
}
void CheckTypeAndMergeFrom(const ::PROTOBUF_NAMESPACE_ID::MessageLite& from)
final;
void CopyFrom(const CloudPolicySettings& from);
void MergeFrom(const CloudPolicySettings& from);
PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
bool IsInitialized() const final;

size_t ByteSizeLong() const final;
#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
#else
bool MergePartialFromCodedStream(
::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) final;
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
void SerializeWithCachedSizes(
::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const final;
void DiscardUnknownFields();
int GetCachedSize() const final { return _cached_size_.Get(); }

private:
inline void SharedCtor();
inline void SharedDtor();
void SetCachedSize(int size) const;
void InternalSwap(CloudPolicySettings* other);
friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
return "enterprise_management.CloudPolicySettings";
}
private:
inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
return nullptr;
}
inline void* MaybeArenaPtr() const {
return nullptr;
}
public:

std::string GetTypeName() const final;

// nested types ----------------------------------------------------

// accessors -------------------------------------------------------

enum : int {
kHomepageLocationFieldNumber = 3,
kAlternateErrorPagesEnabledFieldNumber = 7,
kSearchSuggestEnabledFieldNumber = 8,
kJavascriptEnabledFieldNumber = 11,
kIncognitoEnabledFieldNumber = 12,
kSavingBrowserHistoryDisabledFieldNumber = 13,
kPrintingEnabledFieldNumber = 14,
kSafeBrowsingEnabledFieldNumber = 16,
kPasswordManagerEnabledFieldNumber = 18,
kAutoFillEnabledFieldNumber = 20,
kProxyModeFieldNumber = 23,
kProxyServerModeFieldNumber = 24,
kProxyServerFieldNumber = 25,
kProxyPacUrlFieldNumber = 26,
kProxyBypassListFieldNumber = 27,
kAuthSchemesFieldNumber = 28,
kDisableAuthNegotiateCnameLookupFieldNumber = 29,
kAuthServerWhitelistFieldNumber = 31,
kAuthNegotiateDelegateWhitelistFieldNumber = 32,
kDefaultSearchProviderEnabledFieldNumber = 42,
kDefaultSearchProviderNameFieldNumber = 43,
kDefaultSearchProviderKeywordFieldNumber = 44,
kDefaultSearchProviderSearchURLFieldNumber = 45,
kDefaultSearchProviderSuggestURLFieldNumber = 46,
kDefaultSearchProviderIconURLFieldNumber = 48,
kDefaultSearchProviderEncodingsFieldNumber = 49,
kDefaultCookiesSettingFieldNumber = 50,
kDefaultJavaScriptSettingFieldNumber = 52,
kDefaultPopupsSettingFieldNumber = 54,
kDefaultGeolocationSettingFieldNumber = 56,
kCookiesBlockedForUrlsFieldNumber = 69,
kCookiesSessionOnlyForUrlsFieldNumber = 70,
kJavaScriptAllowedForUrlsFieldNumber = 73,
kJavaScriptBlockedForUrlsFieldNumber = 74,
kPopupsAllowedForUrlsFieldNumber = 77,
kPopupsBlockedForUrlsFieldNumber = 78,
kCookiesAllowedForUrlsFieldNumber = 79,
kTranslateEnabledFieldNumber = 82,
kEditBookmarksEnabledFieldNumber = 85,
kIncognitoModeAvailabilityFieldNumber = 95,
kURLBlacklistFieldNumber = 105,
kURLWhitelistFieldNumber = 106,
kProxySettingsFieldNumber = 118,
kDisableSafeBrowsingProceedAnywayFieldNumber = 152,
kDefaultSearchProviderAlternateURLsFieldNumber = 163,
kForceSafeSearchFieldNumber = 164,
kSigninAllowedFieldNumber = 192,
kVariationsRestrictParameterFieldNumber = 198,
kManagedBookmarksFieldNumber = 229,
kDefaultSearchProviderImageURLFieldNumber = 231,
kDefaultSearchProviderSearchURLPostParamsFieldNumber = 232,
kDefaultSearchProviderSuggestURLPostParamsFieldNumber = 233,
kDefaultSearchProviderImageURLPostParamsFieldNumber = 235,
kDefaultSearchProviderNewTabURLFieldNumber = 239,
kDataCompressionProxyEnabledFieldNumber = 243,
kEnableDeprecatedWebPlatformFeaturesFieldNumber = 272,
kNetworkPredictionOptionsFieldNumber = 275,
kSSLVersionMinFieldNumber = 281,
kContextualSearchEnabledFieldNumber = 283,
kForceGoogleSafeSearchFieldNumber = 284,
kForceYouTubeSafetyModeFieldNumber = 285,
kSSLErrorOverrideAllowedFieldNumber = 302,
kAuthAndroidNegotiateAccountTypeFieldNumber = 307,
kDefaultWebBluetoothGuardSettingFieldNumber = 322,
kAllowedDomainsForAppsFieldNumber = 333,
kEnableMediaRouterFieldNumber = 335,
kCertificateTransparencyEnforcementDisabledForUrlsFieldNumber = 337,
kNTPContentSuggestionsEnabledFieldNumber = 340,
kWebRtcUdpPortRangeFieldNumber = 341,
kForceBrowserSigninFieldNumber = 348,
kForceYouTubeRestrictFieldNumber = 350,
kAutofillCreditCardEnabledFieldNumber = 394,
kNtlmV2EnabledFieldNumber = 395,
kRestrictAccountsToPatternsFieldNumber = 412,
kDefaultWebUsbGuardSettingFieldNumber = 436,
kCertificateTransparencyEnforcementDisabledForCasFieldNumber = 437,
kCertificateTransparencyEnforcementDisabledForLegacyCasFieldNumber = 438,
kWebUsbAskForUrlsFieldNumber = 441,
kWebUsbBlockedForUrlsFieldNumber = 442,
kIsolateOriginsAndroidFieldNumber = 447,
kSitePerProcessAndroidFieldNumber = 448,
kOverrideSecurityRestrictionsOnInsecureOriginFieldNumber = 459,
kAutofillAddressEnabledFieldNumber = 461,
kUrlKeyedAnonymizedDataCollectionEnabledFieldNumber = 463,
kCoalesceH2ConnectionsWithClientCertificatesForHostsFieldNumber = 468,
kEnterpriseHardwarePlatformAPIEnabledFieldNumber = 485,
kWebUsbAllowDevicesForUrlsFieldNumber = 488,
kBrowserSigninFieldNumber = 489,
kAllowPopupsDuringPageUnloadFieldNumber = 535,
kPasswordLeakDetectionEnabledFieldNumber = 582,
kHSTSPolicyBypassListFieldNumber = 603,
kAllowSyncXHRInPageDismissalFieldNumber = 606,
kSharedClipboardEnabledFieldNumber = 612,
kLegacySameSiteCookieBehaviorEnabledFieldNumber = 625,
kLegacySameSiteCookieBehaviorEnabledForDomainListFieldNumber = 626,
kTLS13HardeningForLocalAnchorsEnabledFieldNumber = 628,
kWebComponentsV0EnabledFieldNumber = 646,
kSyncTypesListDisabledFieldNumber = 651,
kPaymentMethodQueryEnabledFieldNumber = 653,
};
// optional .enterprise_management.StringPolicyProto HomepageLocation = 3;
bool has_homepagelocation() const;
void clear_homepagelocation();
const ::enterprise_management::StringPolicyProto& homepagelocation() const;
::enterprise_management::StringPolicyProto* release_homepagelocation();
::enterprise_management::StringPolicyProto* mutable_homepagelocation();
void set_allocated_homepagelocation(::enterprise_management::StringPolicyProto* homepagelocation);

// optional .enterprise_management.BooleanPolicyProto AlternateErrorPagesEnabled = 7;
bool has_alternateerrorpagesenabled() const;
void clear_alternateerrorpagesenabled();
const ::enterprise_management::BooleanPolicyProto& alternateerrorpagesenabled() const;
::enterprise_management::BooleanPolicyProto* release_alternateerrorpagesenabled();
::enterprise_management::BooleanPolicyProto* mutable_alternateerrorpagesenabled();
void set_allocated_alternateerrorpagesenabled(::enterprise_management::BooleanPolicyProto* alternateerrorpagesenabled);

// optional .enterprise_management.BooleanPolicyProto SearchSuggestEnabled = 8;
bool has_searchsuggestenabled() const;
void clear_searchsuggestenabled();
const ::enterprise_management::BooleanPolicyProto& searchsuggestenabled() const;
::enterprise_management::BooleanPolicyProto* release_searchsuggestenabled();
::enterprise_management::BooleanPolicyProto* mutable_searchsuggestenabled();
void set_allocated_searchsuggestenabled(::enterprise_management::BooleanPolicyProto* searchsuggestenabled);

// optional .enterprise_management.BooleanPolicyProto JavascriptEnabled = 11;
bool has_javascriptenabled() const;
void clear_javascriptenabled();
const ::enterprise_management::BooleanPolicyProto& javascriptenabled() const;
::enterprise_management::BooleanPolicyProto* release_javascriptenabled();
::enterprise_management::BooleanPolicyProto* mutable_javascriptenabled();
void set_allocated_javascriptenabled(::enterprise_management::BooleanPolicyProto* javascriptenabled);

// optional .enterprise_management.BooleanPolicyProto IncognitoEnabled = 12;
bool has_incognitoenabled() const;
void clear_incognitoenabled();
const ::enterprise_management::BooleanPolicyProto& incognitoenabled() const;
::enterprise_management::BooleanPolicyProto* release_incognitoenabled();
::enterprise_management::BooleanPolicyProto* mutable_incognitoenabled();
void set_allocated_incognitoenabled(::enterprise_management::BooleanPolicyProto* incognitoenabled);

// optional .enterprise_management.BooleanPolicyProto SavingBrowserHistoryDisabled = 13;
bool has_savingbrowserhistorydisabled() const;
void clear_savingbrowserhistorydisabled();
const ::enterprise_management::BooleanPolicyProto& savingbrowserhistorydisabled() const;
::enterprise_management::BooleanPolicyProto* release_savingbrowserhistorydisabled();
::enterprise_management::BooleanPolicyProto* mutable_savingbrowserhistorydisabled();
void set_allocated_savingbrowserhistorydisabled(::enterprise_management::BooleanPolicyProto* savingbrowserhistorydisabled);

// optional .enterprise_management.BooleanPolicyProto PrintingEnabled = 14;
bool has_printingenabled() const;
void clear_printingenabled();
const ::enterprise_management::BooleanPolicyProto& printingenabled() const;
::enterprise_management::BooleanPolicyProto* release_printingenabled();
::enterprise_management::BooleanPolicyProto* mutable_printingenabled();
void set_allocated_printingenabled(::enterprise_management::BooleanPolicyProto* printingenabled);

// optional .enterprise_management.BooleanPolicyProto SafeBrowsingEnabled = 16;
bool has_safebrowsingenabled() const;
void clear_safebrowsingenabled();
const ::enterprise_management::BooleanPolicyProto& safebrowsingenabled() const;
::enterprise_management::BooleanPolicyProto* release_safebrowsingenabled();
::enterprise_management::BooleanPolicyProto* mutable_safebrowsingenabled();
void set_allocated_safebrowsingenabled(::enterprise_management::BooleanPolicyProto* safebrowsingenabled);

// optional .enterprise_management.BooleanPolicyProto PasswordManagerEnabled = 18;
bool has_passwordmanagerenabled() const;
void clear_passwordmanagerenabled();
const ::enterprise_management::BooleanPolicyProto& passwordmanagerenabled() const;
::enterprise_management::BooleanPolicyProto* release_passwordmanagerenabled();
::enterprise_management::BooleanPolicyProto* mutable_passwordmanagerenabled();
void set_allocated_passwordmanagerenabled(::enterprise_management::BooleanPolicyProto* passwordmanagerenabled);

// optional .enterprise_management.BooleanPolicyProto AutoFillEnabled = 20;
bool has_autofillenabled() const;
void clear_autofillenabled();
const ::enterprise_management::BooleanPolicyProto& autofillenabled() const;
::enterprise_management::BooleanPolicyProto* release_autofillenabled();
::enterprise_management::BooleanPolicyProto* mutable_autofillenabled();
void set_allocated_autofillenabled(::enterprise_management::BooleanPolicyProto* autofillenabled);

// optional .enterprise_management.StringPolicyProto ProxyMode = 23;
bool has_proxymode() const;
void clear_proxymode();
const ::enterprise_management::StringPolicyProto& proxymode() const;
::enterprise_management::StringPolicyProto* release_proxymode();
::enterprise_management::StringPolicyProto* mutable_proxymode();
void set_allocated_proxymode(::enterprise_management::StringPolicyProto* proxymode);

// optional .enterprise_management.IntegerPolicyProto ProxyServerMode = 24;
bool has_proxyservermode() const;
void clear_proxyservermode();
const ::enterprise_management::IntegerPolicyProto& proxyservermode() const;
::enterprise_management::IntegerPolicyProto* release_proxyservermode();
::enterprise_management::IntegerPolicyProto* mutable_proxyservermode();
void set_allocated_proxyservermode(::enterprise_management::IntegerPolicyProto* proxyservermode);

// optional .enterprise_management.StringPolicyProto ProxyServer = 25;
bool has_proxyserver() const;
void clear_proxyserver();
const ::enterprise_management::StringPolicyProto& proxyserver() const;
::enterprise_management::StringPolicyProto* release_proxyserver();
::enterprise_management::StringPolicyProto* mutable_proxyserver();
void set_allocated_proxyserver(::enterprise_management::StringPolicyProto* proxyserver);

// optional .enterprise_management.StringPolicyProto ProxyPacUrl = 26;
bool has_proxypacurl() const;
void clear_proxypacurl();
const ::enterprise_management::StringPolicyProto& proxypacurl() const;
::enterprise_management::StringPolicyProto* release_proxypacurl();
::enterprise_management::StringPolicyProto* mutable_proxypacurl();
void set_allocated_proxypacurl(::enterprise_management::StringPolicyProto* proxypacurl);

// optional .enterprise_management.StringPolicyProto ProxyBypassList = 27;
bool has_proxybypasslist() const;
void clear_proxybypasslist();
const ::enterprise_management::StringPolicyProto& proxybypasslist() const;
::enterprise_management::StringPolicyProto* release_proxybypasslist();
::enterprise_management::StringPolicyProto* mutable_proxybypasslist();
void set_allocated_proxybypasslist(::enterprise_management::StringPolicyProto* proxybypasslist);

// optional .enterprise_management.StringPolicyProto AuthSchemes = 28;
bool has_authschemes() const;
void clear_authschemes();
const ::enterprise_management::StringPolicyProto& authschemes() const;
::enterprise_management::StringPolicyProto* release_authschemes();
::enterprise_management::StringPolicyProto* mutable_authschemes();
void set_allocated_authschemes(::enterprise_management::StringPolicyProto* authschemes);

// optional .enterprise_management.BooleanPolicyProto DisableAuthNegotiateCnameLookup = 29;
bool has_disableauthnegotiatecnamelookup() const;
void clear_disableauthnegotiatecnamelookup();
const ::enterprise_management::BooleanPolicyProto& disableauthnegotiatecnamelookup() const;
::enterprise_management::BooleanPolicyProto* release_disableauthnegotiatecnamelookup();
::enterprise_management::BooleanPolicyProto* mutable_disableauthnegotiatecnamelookup();
void set_allocated_disableauthnegotiatecnamelookup(::enterprise_management::BooleanPolicyProto* disableauthnegotiatecnamelookup);

// optional .enterprise_management.StringPolicyProto AuthServerWhitelist = 31;
bool has_authserverwhitelist() const;
void clear_authserverwhitelist();
const ::enterprise_management::StringPolicyProto& authserverwhitelist() const;
::enterprise_management::StringPolicyProto* release_authserverwhitelist();
::enterprise_management::StringPolicyProto* mutable_authserverwhitelist();
void set_allocated_authserverwhitelist(::enterprise_management::StringPolicyProto* authserverwhitelist);

// optional .enterprise_management.StringPolicyProto AuthNegotiateDelegateWhitelist = 32;
bool has_authnegotiatedelegatewhitelist() const;
void clear_authnegotiatedelegatewhitelist();
const ::enterprise_management::StringPolicyProto& authnegotiatedelegatewhitelist() const;
::enterprise_management::StringPolicyProto* release_authnegotiatedelegatewhitelist();
::enterprise_management::StringPolicyProto* mutable_authnegotiatedelegatewhitelist();
void set_allocated_authnegotiatedelegatewhitelist(::enterprise_management::StringPolicyProto* authnegotiatedelegatewhitelist);

// optional .enterprise_management.BooleanPolicyProto DefaultSearchProviderEnabled = 42;
bool has_defaultsearchproviderenabled() const;
void clear_defaultsearchproviderenabled();
const ::enterprise_management::BooleanPolicyProto& defaultsearchproviderenabled() const;
::enterprise_management::BooleanPolicyProto* release_defaultsearchproviderenabled();
::enterprise_management::BooleanPolicyProto* mutable_defaultsearchproviderenabled();
void set_allocated_defaultsearchproviderenabled(::enterprise_management::BooleanPolicyProto* defaultsearchproviderenabled);

// optional .enterprise_management.StringPolicyProto DefaultSearchProviderName = 43;
bool has_defaultsearchprovidername() const;
void clear_defaultsearchprovidername();
const ::enterprise_management::StringPolicyProto& defaultsearchprovidername() const;
::enterprise_management::StringPolicyProto* release_defaultsearchprovidername();
::enterprise_management::StringPolicyProto* mutable_defaultsearchprovidername();
void set_allocated_defaultsearchprovidername(::enterprise_management::StringPolicyProto* defaultsearchprovidername);

// optional .enterprise_management.StringPolicyProto DefaultSearchProviderKeyword = 44;
bool has_defaultsearchproviderkeyword() const;
void clear_defaultsearchproviderkeyword();
const ::enterprise_management::StringPolicyProto& defaultsearchproviderkeyword() const;
::enterprise_management::StringPolicyProto* release_defaultsearchproviderkeyword();
::enterprise_management::StringPolicyProto* mutable_defaultsearchproviderkeyword();
void set_allocated_defaultsearchproviderkeyword(::enterprise_management::StringPolicyProto* defaultsearchproviderkeyword);

// optional .enterprise_management.StringPolicyProto DefaultSearchProviderSearchURL = 45;
bool has_defaultsearchprovidersearchurl() const;
void clear_defaultsearchprovidersearchurl();
const ::enterprise_management::StringPolicyProto& defaultsearchprovidersearchurl() const;
::enterprise_management::StringPolicyProto* release_defaultsearchprovidersearchurl();
::enterprise_management::StringPolicyProto* mutable_defaultsearchprovidersearchurl();
void set_allocated_defaultsearchprovidersearchurl(::enterprise_management::StringPolicyProto* defaultsearchprovidersearchurl);

// optional .enterprise_management.StringPolicyProto DefaultSearchProviderSuggestURL = 46;
bool has_defaultsearchprovidersuggesturl() const;
void clear_defaultsearchprovidersuggesturl();
const ::enterprise_management::StringPolicyProto& defaultsearchprovidersuggesturl() const;
::enterprise_management::StringPolicyProto* release_defaultsearchprovidersuggesturl();
::enterprise_management::StringPolicyProto* mutable_defaultsearchprovidersuggesturl();
void set_allocated_defaultsearchprovidersuggesturl(::enterprise_management::StringPolicyProto* defaultsearchprovidersuggesturl);

// optional .enterprise_management.StringPolicyProto DefaultSearchProviderIconURL = 48;
bool has_defaultsearchprovidericonurl() const;
void clear_defaultsearchprovidericonurl();
const ::enterprise_management::StringPolicyProto& defaultsearchprovidericonurl() const;
::enterprise_management::StringPolicyProto* release_defaultsearchprovidericonurl();
::enterprise_management::StringPolicyProto* mutable_defaultsearchprovidericonurl();
void set_allocated_defaultsearchprovidericonurl(::enterprise_management::StringPolicyProto* defaultsearchprovidericonurl);

// optional .enterprise_management.StringListPolicyProto DefaultSearchProviderEncodings = 49;
bool has_defaultsearchproviderencodings() const;
void clear_defaultsearchproviderencodings();
const ::enterprise_management::StringListPolicyProto& defaultsearchproviderencodings() const;
::enterprise_management::StringListPolicyProto* release_defaultsearchproviderencodings();
::enterprise_management::StringListPolicyProto* mutable_defaultsearchproviderencodings();
void set_allocated_defaultsearchproviderencodings(::enterprise_management::StringListPolicyProto* defaultsearchproviderencodings);

// optional .enterprise_management.IntegerPolicyProto DefaultCookiesSetting = 50;
bool has_defaultcookiessetting() const;
void clear_defaultcookiessetting();
const ::enterprise_management::IntegerPolicyProto& defaultcookiessetting() const;
::enterprise_management::IntegerPolicyProto* release_defaultcookiessetting();
::enterprise_management::IntegerPolicyProto* mutable_defaultcookiessetting();
void set_allocated_defaultcookiessetting(::enterprise_management::IntegerPolicyProto* defaultcookiessetting);

// optional .enterprise_management.IntegerPolicyProto DefaultJavaScriptSetting = 52;
bool has_defaultjavascriptsetting() const;
void clear_defaultjavascriptsetting();
const ::enterprise_management::IntegerPolicyProto& defaultjavascriptsetting() const;
::enterprise_management::IntegerPolicyProto* release_defaultjavascriptsetting();
::enterprise_management::IntegerPolicyProto* mutable_defaultjavascriptsetting();
void set_allocated_defaultjavascriptsetting(::enterprise_management::IntegerPolicyProto* defaultjavascriptsetting);

// optional .enterprise_management.IntegerPolicyProto DefaultPopupsSetting = 54;
bool has_defaultpopupssetting() const;
void clear_defaultpopupssetting();
const ::enterprise_management::IntegerPolicyProto& defaultpopupssetting() const;
::enterprise_management::IntegerPolicyProto* release_defaultpopupssetting();
::enterprise_management::IntegerPolicyProto* mutable_defaultpopupssetting();
void set_allocated_defaultpopupssetting(::enterprise_management::IntegerPolicyProto* defaultpopupssetting);

// optional .enterprise_management.IntegerPolicyProto DefaultGeolocationSetting = 56;
bool has_defaultgeolocationsetting() const;
void clear_defaultgeolocationsetting();
const ::enterprise_management::IntegerPolicyProto& defaultgeolocationsetting() const;
::enterprise_management::IntegerPolicyProto* release_defaultgeolocationsetting();
::enterprise_management::IntegerPolicyProto* mutable_defaultgeolocationsetting();
void set_allocated_defaultgeolocationsetting(::enterprise_management::IntegerPolicyProto* defaultgeolocationsetting);

// optional .enterprise_management.StringListPolicyProto CookiesBlockedForUrls = 69;
bool has_cookiesblockedforurls() const;
void clear_cookiesblockedforurls();
const ::enterprise_management::StringListPolicyProto& cookiesblockedforurls() const;
::enterprise_management::StringListPolicyProto* release_cookiesblockedforurls();
::enterprise_management::StringListPolicyProto* mutable_cookiesblockedforurls();
void set_allocated_cookiesblockedforurls(::enterprise_management::StringListPolicyProto* cookiesblockedforurls);

// optional .enterprise_management.StringListPolicyProto CookiesSessionOnlyForUrls = 70;
bool has_cookiessessiononlyforurls() const;
void clear_cookiessessiononlyforurls();
const ::enterprise_management::StringListPolicyProto& cookiessessiononlyforurls() const;
::enterprise_management::StringListPolicyProto* release_cookiessessiononlyforurls();
::enterprise_management::StringListPolicyProto* mutable_cookiessessiononlyforurls();
void set_allocated_cookiessessiononlyforurls(::enterprise_management::StringListPolicyProto* cookiessessiononlyforurls);

// optional .enterprise_management.StringListPolicyProto JavaScriptAllowedForUrls = 73;
bool has_javascriptallowedforurls() const;
void clear_javascriptallowedforurls();
const ::enterprise_management::StringListPolicyProto& javascriptallowedforurls() const;
::enterprise_management::StringListPolicyProto* release_javascriptallowedforurls();
::enterprise_management::StringListPolicyProto* mutable_javascriptallowedforurls();
void set_allocated_javascriptallowedforurls(::enterprise_management::StringListPolicyProto* javascriptallowedforurls);

// optional .enterprise_management.StringListPolicyProto JavaScriptBlockedForUrls = 74;
bool has_javascriptblockedforurls() const;
void clear_javascriptblockedforurls();
const ::enterprise_management::StringListPolicyProto& javascriptblockedforurls() const;
::enterprise_management::StringListPolicyProto* release_javascriptblockedforurls();
::enterprise_management::StringListPolicyProto* mutable_javascriptblockedforurls();
void set_allocated_javascriptblockedforurls(::enterprise_management::StringListPolicyProto* javascriptblockedforurls);

// optional .enterprise_management.StringListPolicyProto PopupsAllowedForUrls = 77;
bool has_popupsallowedforurls() const;
void clear_popupsallowedforurls();
const ::enterprise_management::StringListPolicyProto& popupsallowedforurls() const;
::enterprise_management::StringListPolicyProto* release_popupsallowedforurls();
::enterprise_management::StringListPolicyProto* mutable_popupsallowedforurls();
void set_allocated_popupsallowedforurls(::enterprise_management::StringListPolicyProto* popupsallowedforurls);

// optional .enterprise_management.StringListPolicyProto PopupsBlockedForUrls = 78;
bool has_popupsblockedforurls() const;
void clear_popupsblockedforurls();
const ::enterprise_management::StringListPolicyProto& popupsblockedforurls() const;
::enterprise_management::StringListPolicyProto* release_popupsblockedforurls();
::enterprise_management::StringListPolicyProto* mutable_popupsblockedforurls();
void set_allocated_popupsblockedforurls(::enterprise_management::StringListPolicyProto* popupsblockedforurls);

// optional .enterprise_management.StringListPolicyProto CookiesAllowedForUrls = 79;
bool has_cookiesallowedforurls() const;
void clear_cookiesallowedforurls();
const ::enterprise_management::StringListPolicyProto& cookiesallowedforurls() const;
::enterprise_management::StringListPolicyProto* release_cookiesallowedforurls();
::enterprise_management::StringListPolicyProto* mutable_cookiesallowedforurls();
void set_allocated_cookiesallowedforurls(::enterprise_management::StringListPolicyProto* cookiesallowedforurls);

// optional .enterprise_management.BooleanPolicyProto TranslateEnabled = 82;
bool has_translateenabled() const;
void clear_translateenabled();
const ::enterprise_management::BooleanPolicyProto& translateenabled() const;
::enterprise_management::BooleanPolicyProto* release_translateenabled();
::enterprise_management::BooleanPolicyProto* mutable_translateenabled();
void set_allocated_translateenabled(::enterprise_management::BooleanPolicyProto* translateenabled);

// optional .enterprise_management.BooleanPolicyProto EditBookmarksEnabled = 85;
bool has_editbookmarksenabled() const;
void clear_editbookmarksenabled();
const ::enterprise_management::BooleanPolicyProto& editbookmarksenabled() const;
::enterprise_management::BooleanPolicyProto* release_editbookmarksenabled();
::enterprise_management::BooleanPolicyProto* mutable_editbookmarksenabled();
void set_allocated_editbookmarksenabled(::enterprise_management::BooleanPolicyProto* editbookmarksenabled);

// optional .enterprise_management.IntegerPolicyProto IncognitoModeAvailability = 95;
bool has_incognitomodeavailability() const;
void clear_incognitomodeavailability();
const ::enterprise_management::IntegerPolicyProto& incognitomodeavailability() const;
::enterprise_management::IntegerPolicyProto* release_incognitomodeavailability();
::enterprise_management::IntegerPolicyProto* mutable_incognitomodeavailability();
void set_allocated_incognitomodeavailability(::enterprise_management::IntegerPolicyProto* incognitomodeavailability);

// optional .enterprise_management.StringListPolicyProto URLBlacklist = 105;
bool has_urlblacklist() const;
void clear_urlblacklist();
const ::enterprise_management::StringListPolicyProto& urlblacklist() const;
::enterprise_management::StringListPolicyProto* release_urlblacklist();
::enterprise_management::StringListPolicyProto* mutable_urlblacklist();
void set_allocated_urlblacklist(::enterprise_management::StringListPolicyProto* urlblacklist);

// optional .enterprise_management.StringListPolicyProto URLWhitelist = 106;
bool has_urlwhitelist() const;
void clear_urlwhitelist();
const ::enterprise_management::StringListPolicyProto& urlwhitelist() const;
::enterprise_management::StringListPolicyProto* release_urlwhitelist();
::enterprise_management::StringListPolicyProto* mutable_urlwhitelist();
void set_allocated_urlwhitelist(::enterprise_management::StringListPolicyProto* urlwhitelist);

// optional .enterprise_management.StringPolicyProto ProxySettings = 118;
bool has_proxysettings() const;
void clear_proxysettings();
const ::enterprise_management::StringPolicyProto& proxysettings() const;
::enterprise_management::StringPolicyProto* release_proxysettings();
::enterprise_management::StringPolicyProto* mutable_proxysettings();
void set_allocated_proxysettings(::enterprise_management::StringPolicyProto* proxysettings);

// optional .enterprise_management.BooleanPolicyProto DisableSafeBrowsingProceedAnyway = 152;
bool has_disablesafebrowsingproceedanyway() const;
void clear_disablesafebrowsingproceedanyway();
const ::enterprise_management::BooleanPolicyProto& disablesafebrowsingproceedanyway() const;
::enterprise_management::BooleanPolicyProto* release_disablesafebrowsingproceedanyway();
::enterprise_management::BooleanPolicyProto* mutable_disablesafebrowsingproceedanyway();
void set_allocated_disablesafebrowsingproceedanyway(::enterprise_management::BooleanPolicyProto* disablesafebrowsingproceedanyway);

// optional .enterprise_management.StringListPolicyProto DefaultSearchProviderAlternateURLs = 163;
bool has_defaultsearchprovideralternateurls() const;
void clear_defaultsearchprovideralternateurls();
const ::enterprise_management::StringListPolicyProto& defaultsearchprovideralternateurls() const;
::enterprise_management::StringListPolicyProto* release_defaultsearchprovideralternateurls();
::enterprise_management::StringListPolicyProto* mutable_defaultsearchprovideralternateurls();
void set_allocated_defaultsearchprovideralternateurls(::enterprise_management::StringListPolicyProto* defaultsearchprovideralternateurls);

// optional .enterprise_management.BooleanPolicyProto ForceSafeSearch = 164;
bool has_forcesafesearch() const;
void clear_forcesafesearch();
const ::enterprise_management::BooleanPolicyProto& forcesafesearch() const;
::enterprise_management::BooleanPolicyProto* release_forcesafesearch();
::enterprise_management::BooleanPolicyProto* mutable_forcesafesearch();
void set_allocated_forcesafesearch(::enterprise_management::BooleanPolicyProto* forcesafesearch);

// optional .enterprise_management.BooleanPolicyProto SigninAllowed = 192;
bool has_signinallowed() const;
void clear_signinallowed();
const ::enterprise_management::BooleanPolicyProto& signinallowed() const;
::enterprise_management::BooleanPolicyProto* release_signinallowed();
::enterprise_management::BooleanPolicyProto* mutable_signinallowed();
void set_allocated_signinallowed(::enterprise_management::BooleanPolicyProto* signinallowed);

// optional .enterprise_management.StringPolicyProto VariationsRestrictParameter = 198;
bool has_variationsrestrictparameter() const;
void clear_variationsrestrictparameter();
const ::enterprise_management::StringPolicyProto& variationsrestrictparameter() const;
::enterprise_management::StringPolicyProto* release_variationsrestrictparameter();
::enterprise_management::StringPolicyProto* mutable_variationsrestrictparameter();
void set_allocated_variationsrestrictparameter(::enterprise_management::StringPolicyProto* variationsrestrictparameter);

// optional .enterprise_management.StringPolicyProto ManagedBookmarks = 229;
bool has_managedbookmarks() const;
void clear_managedbookmarks();
const ::enterprise_management::StringPolicyProto& managedbookmarks() const;
::enterprise_management::StringPolicyProto* release_managedbookmarks();
::enterprise_management::StringPolicyProto* mutable_managedbookmarks();
void set_allocated_managedbookmarks(::enterprise_management::StringPolicyProto* managedbookmarks);

// optional .enterprise_management.StringPolicyProto DefaultSearchProviderImageURL = 231;
bool has_defaultsearchproviderimageurl() const;
void clear_defaultsearchproviderimageurl();
const ::enterprise_management::StringPolicyProto& defaultsearchproviderimageurl() const;
::enterprise_management::StringPolicyProto* release_defaultsearchproviderimageurl();
::enterprise_management::StringPolicyProto* mutable_defaultsearchproviderimageurl();
void set_allocated_defaultsearchproviderimageurl(::enterprise_management::StringPolicyProto* defaultsearchproviderimageurl);

// optional .enterprise_management.StringPolicyProto DefaultSearchProviderSearchURLPostParams = 232;
bool has_defaultsearchprovidersearchurlpostparams() const;
void clear_defaultsearchprovidersearchurlpostparams();
const ::enterprise_management::StringPolicyProto& defaultsearchprovidersearchurlpostparams() const;
::enterprise_management::StringPolicyProto* release_defaultsearchprovidersearchurlpostparams();
::enterprise_management::StringPolicyProto* mutable_defaultsearchprovidersearchurlpostparams();
void set_allocated_defaultsearchprovidersearchurlpostparams(::enterprise_management::StringPolicyProto* defaultsearchprovidersearchurlpostparams);

// optional .enterprise_management.StringPolicyProto DefaultSearchProviderSuggestURLPostParams = 233;
bool has_defaultsearchprovidersuggesturlpostparams() const;
void clear_defaultsearchprovidersuggesturlpostparams();
const ::enterprise_management::StringPolicyProto& defaultsearchprovidersuggesturlpostparams() const;
::enterprise_management::StringPolicyProto* release_defaultsearchprovidersuggesturlpostparams();
::enterprise_management::StringPolicyProto* mutable_defaultsearchprovidersuggesturlpostparams();
void set_allocated_defaultsearchprovidersuggesturlpostparams(::enterprise_management::StringPolicyProto* defaultsearchprovidersuggesturlpostparams);

// optional .enterprise_management.StringPolicyProto DefaultSearchProviderImageURLPostParams = 235;
bool has_defaultsearchproviderimageurlpostparams() const;
void clear_defaultsearchproviderimageurlpostparams();
const ::enterprise_management::StringPolicyProto& defaultsearchproviderimageurlpostparams() const;
::enterprise_management::StringPolicyProto* release_defaultsearchproviderimageurlpostparams();
::enterprise_management::StringPolicyProto* mutable_defaultsearchproviderimageurlpostparams();
void set_allocated_defaultsearchproviderimageurlpostparams(::enterprise_management::StringPolicyProto* defaultsearchproviderimageurlpostparams);

// optional .enterprise_management.StringPolicyProto DefaultSearchProviderNewTabURL = 239;
bool has_defaultsearchprovidernewtaburl() const;
void clear_defaultsearchprovidernewtaburl();
const ::enterprise_management::StringPolicyProto& defaultsearchprovidernewtaburl() const;
::enterprise_management::StringPolicyProto* release_defaultsearchprovidernewtaburl();
::enterprise_management::StringPolicyProto* mutable_defaultsearchprovidernewtaburl();
void set_allocated_defaultsearchprovidernewtaburl(::enterprise_management::StringPolicyProto* defaultsearchprovidernewtaburl);

// optional .enterprise_management.BooleanPolicyProto DataCompressionProxyEnabled = 243;
bool has_datacompressionproxyenabled() const;
void clear_datacompressionproxyenabled();
const ::enterprise_management::BooleanPolicyProto& datacompressionproxyenabled() const;
::enterprise_management::BooleanPolicyProto* release_datacompressionproxyenabled();
::enterprise_management::BooleanPolicyProto* mutable_datacompressionproxyenabled();
void set_allocated_datacompressionproxyenabled(::enterprise_management::BooleanPolicyProto* datacompressionproxyenabled);

// optional .enterprise_management.StringListPolicyProto EnableDeprecatedWebPlatformFeatures = 272;
bool has_enabledeprecatedwebplatformfeatures() const;
void clear_enabledeprecatedwebplatformfeatures();
const ::enterprise_management::StringListPolicyProto& enabledeprecatedwebplatformfeatures() const;
::enterprise_management::StringListPolicyProto* release_enabledeprecatedwebplatformfeatures();
::enterprise_management::StringListPolicyProto* mutable_enabledeprecatedwebplatformfeatures();
void set_allocated_enabledeprecatedwebplatformfeatures(::enterprise_management::StringListPolicyProto* enabledeprecatedwebplatformfeatures);

// optional .enterprise_management.IntegerPolicyProto NetworkPredictionOptions = 275;
bool has_networkpredictionoptions() const;
void clear_networkpredictionoptions();
const ::enterprise_management::IntegerPolicyProto& networkpredictionoptions() const;
::enterprise_management::IntegerPolicyProto* release_networkpredictionoptions();
::enterprise_management::IntegerPolicyProto* mutable_networkpredictionoptions();
void set_allocated_networkpredictionoptions(::enterprise_management::IntegerPolicyProto* networkpredictionoptions);

// optional .enterprise_management.StringPolicyProto SSLVersionMin = 281;
bool has_sslversionmin() const;
void clear_sslversionmin();
const ::enterprise_management::StringPolicyProto& sslversionmin() const;
::enterprise_management::StringPolicyProto* release_sslversionmin();
::enterprise_management::StringPolicyProto* mutable_sslversionmin();
void set_allocated_sslversionmin(::enterprise_management::StringPolicyProto* sslversionmin);

// optional .enterprise_management.BooleanPolicyProto ContextualSearchEnabled = 283;
bool has_contextualsearchenabled() const;
void clear_contextualsearchenabled();
const ::enterprise_management::BooleanPolicyProto& contextualsearchenabled() const;
::enterprise_management::BooleanPolicyProto* release_contextualsearchenabled();
::enterprise_management::BooleanPolicyProto* mutable_contextualsearchenabled();
void set_allocated_contextualsearchenabled(::enterprise_management::BooleanPolicyProto* contextualsearchenabled);

// optional .enterprise_management.BooleanPolicyProto ForceGoogleSafeSearch = 284;
bool has_forcegooglesafesearch() const;
void clear_forcegooglesafesearch();
const ::enterprise_management::BooleanPolicyProto& forcegooglesafesearch() const;
::enterprise_management::BooleanPolicyProto* release_forcegooglesafesearch();
::enterprise_management::BooleanPolicyProto* mutable_forcegooglesafesearch();
void set_allocated_forcegooglesafesearch(::enterprise_management::BooleanPolicyProto* forcegooglesafesearch);

// optional .enterprise_management.BooleanPolicyProto ForceYouTubeSafetyMode = 285;
bool has_forceyoutubesafetymode() const;
void clear_forceyoutubesafetymode();
const ::enterprise_management::BooleanPolicyProto& forceyoutubesafetymode() const;
::enterprise_management::BooleanPolicyProto* release_forceyoutubesafetymode();
::enterprise_management::BooleanPolicyProto* mutable_forceyoutubesafetymode();
void set_allocated_forceyoutubesafetymode(::enterprise_management::BooleanPolicyProto* forceyoutubesafetymode);

// optional .enterprise_management.BooleanPolicyProto SSLErrorOverrideAllowed = 302;
bool has_sslerroroverrideallowed() const;
void clear_sslerroroverrideallowed();
const ::enterprise_management::BooleanPolicyProto& sslerroroverrideallowed() const;
::enterprise_management::BooleanPolicyProto* release_sslerroroverrideallowed();
::enterprise_management::BooleanPolicyProto* mutable_sslerroroverrideallowed();
void set_allocated_sslerroroverrideallowed(::enterprise_management::BooleanPolicyProto* sslerroroverrideallowed);

// optional .enterprise_management.StringPolicyProto AuthAndroidNegotiateAccountType = 307;
bool has_authandroidnegotiateaccounttype() const;
void clear_authandroidnegotiateaccounttype();
const ::enterprise_management::StringPolicyProto& authandroidnegotiateaccounttype() const;
::enterprise_management::StringPolicyProto* release_authandroidnegotiateaccounttype();
::enterprise_management::StringPolicyProto* mutable_authandroidnegotiateaccounttype();
void set_allocated_authandroidnegotiateaccounttype(::enterprise_management::StringPolicyProto* authandroidnegotiateaccounttype);

// optional .enterprise_management.IntegerPolicyProto DefaultWebBluetoothGuardSetting = 322;
bool has_defaultwebbluetoothguardsetting() const;
void clear_defaultwebbluetoothguardsetting();
const ::enterprise_management::IntegerPolicyProto& defaultwebbluetoothguardsetting() const;
::enterprise_management::IntegerPolicyProto* release_defaultwebbluetoothguardsetting();
::enterprise_management::IntegerPolicyProto* mutable_defaultwebbluetoothguardsetting();
void set_allocated_defaultwebbluetoothguardsetting(::enterprise_management::IntegerPolicyProto* defaultwebbluetoothguardsetting);

// optional .enterprise_management.StringPolicyProto AllowedDomainsForApps = 333;
bool has_alloweddomainsforapps() const;
void clear_alloweddomainsforapps();
const ::enterprise_management::StringPolicyProto& alloweddomainsforapps() const;
::enterprise_management::StringPolicyProto* release_alloweddomainsforapps();
::enterprise_management::StringPolicyProto* mutable_alloweddomainsforapps();
void set_allocated_alloweddomainsforapps(::enterprise_management::StringPolicyProto* alloweddomainsforapps);

// optional .enterprise_management.BooleanPolicyProto EnableMediaRouter = 335;
bool has_enablemediarouter() const;
void clear_enablemediarouter();
const ::enterprise_management::BooleanPolicyProto& enablemediarouter() const;
::enterprise_management::BooleanPolicyProto* release_enablemediarouter();
::enterprise_management::BooleanPolicyProto* mutable_enablemediarouter();
void set_allocated_enablemediarouter(::enterprise_management::BooleanPolicyProto* enablemediarouter);

// optional .enterprise_management.StringListPolicyProto CertificateTransparencyEnforcementDisabledForUrls = 337;
bool has_certificatetransparencyenforcementdisabledforurls() const;
void clear_certificatetransparencyenforcementdisabledforurls();
const ::enterprise_management::StringListPolicyProto& certificatetransparencyenforcementdisabledforurls() const;
::enterprise_management::StringListPolicyProto* release_certificatetransparencyenforcementdisabledforurls();
::enterprise_management::StringListPolicyProto* mutable_certificatetransparencyenforcementdisabledforurls();
void set_allocated_certificatetransparencyenforcementdisabledforurls(::enterprise_management::StringListPolicyProto* certificatetransparencyenforcementdisabledforurls);

// optional .enterprise_management.BooleanPolicyProto NTPContentSuggestionsEnabled = 340;
bool has_ntpcontentsuggestionsenabled() const;
void clear_ntpcontentsuggestionsenabled();
const ::enterprise_management::BooleanPolicyProto& ntpcontentsuggestionsenabled() const;
::enterprise_management::BooleanPolicyProto* release_ntpcontentsuggestionsenabled();
::enterprise_management::BooleanPolicyProto* mutable_ntpcontentsuggestionsenabled();
void set_allocated_ntpcontentsuggestionsenabled(::enterprise_management::BooleanPolicyProto* ntpcontentsuggestionsenabled);

// optional .enterprise_management.StringPolicyProto WebRtcUdpPortRange = 341;
bool has_webrtcudpportrange() const;
void clear_webrtcudpportrange();
const ::enterprise_management::StringPolicyProto& webrtcudpportrange() const;
::enterprise_management::StringPolicyProto* release_webrtcudpportrange();
::enterprise_management::StringPolicyProto* mutable_webrtcudpportrange();
void set_allocated_webrtcudpportrange(::enterprise_management::StringPolicyProto* webrtcudpportrange);

// optional .enterprise_management.BooleanPolicyProto ForceBrowserSignin = 348;
bool has_forcebrowsersignin() const;
void clear_forcebrowsersignin();
const ::enterprise_management::BooleanPolicyProto& forcebrowsersignin() const;
::enterprise_management::BooleanPolicyProto* release_forcebrowsersignin();
::enterprise_management::BooleanPolicyProto* mutable_forcebrowsersignin();
void set_allocated_forcebrowsersignin(::enterprise_management::BooleanPolicyProto* forcebrowsersignin);

// optional .enterprise_management.IntegerPolicyProto ForceYouTubeRestrict = 350;
bool has_forceyoutuberestrict() const;
void clear_forceyoutuberestrict();
const ::enterprise_management::IntegerPolicyProto& forceyoutuberestrict() const;
::enterprise_management::IntegerPolicyProto* release_forceyoutuberestrict();
::enterprise_management::IntegerPolicyProto* mutable_forceyoutuberestrict();
void set_allocated_forceyoutuberestrict(::enterprise_management::IntegerPolicyProto* forceyoutuberestrict);

// optional .enterprise_management.BooleanPolicyProto AutofillCreditCardEnabled = 394;
bool has_autofillcreditcardenabled() const;
void clear_autofillcreditcardenabled();
const ::enterprise_management::BooleanPolicyProto& autofillcreditcardenabled() const;
::enterprise_management::BooleanPolicyProto* release_autofillcreditcardenabled();
::enterprise_management::BooleanPolicyProto* mutable_autofillcreditcardenabled();
void set_allocated_autofillcreditcardenabled(::enterprise_management::BooleanPolicyProto* autofillcreditcardenabled);

// optional .enterprise_management.BooleanPolicyProto NtlmV2Enabled = 395;
bool has_ntlmv2enabled() const;
void clear_ntlmv2enabled();
const ::enterprise_management::BooleanPolicyProto& ntlmv2enabled() const;
::enterprise_management::BooleanPolicyProto* release_ntlmv2enabled();
::enterprise_management::BooleanPolicyProto* mutable_ntlmv2enabled();
void set_allocated_ntlmv2enabled(::enterprise_management::BooleanPolicyProto* ntlmv2enabled);

// optional .enterprise_management.StringListPolicyProto RestrictAccountsToPatterns = 412;
bool has_restrictaccountstopatterns() const;
void clear_restrictaccountstopatterns();
const ::enterprise_management::StringListPolicyProto& restrictaccountstopatterns() const;
::enterprise_management::StringListPolicyProto* release_restrictaccountstopatterns();
::enterprise_management::StringListPolicyProto* mutable_restrictaccountstopatterns();
void set_allocated_restrictaccountstopatterns(::enterprise_management::StringListPolicyProto* restrictaccountstopatterns);

// optional .enterprise_management.IntegerPolicyProto DefaultWebUsbGuardSetting = 436;
bool has_defaultwebusbguardsetting() const;
void clear_defaultwebusbguardsetting();
const ::enterprise_management::IntegerPolicyProto& defaultwebusbguardsetting() const;
::enterprise_management::IntegerPolicyProto* release_defaultwebusbguardsetting();
::enterprise_management::IntegerPolicyProto* mutable_defaultwebusbguardsetting();
void set_allocated_defaultwebusbguardsetting(::enterprise_management::IntegerPolicyProto* defaultwebusbguardsetting);

// optional .enterprise_management.StringListPolicyProto CertificateTransparencyEnforcementDisabledForCas = 437;
bool has_certificatetransparencyenforcementdisabledforcas() const;
void clear_certificatetransparencyenforcementdisabledforcas();
const ::enterprise_management::StringListPolicyProto& certificatetransparencyenforcementdisabledforcas() const;
::enterprise_management::StringListPolicyProto* release_certificatetransparencyenforcementdisabledforcas();
::enterprise_management::StringListPolicyProto* mutable_certificatetransparencyenforcementdisabledforcas();
void set_allocated_certificatetransparencyenforcementdisabledforcas(::enterprise_management::StringListPolicyProto* certificatetransparencyenforcementdisabledforcas);

// optional .enterprise_management.StringListPolicyProto CertificateTransparencyEnforcementDisabledForLegacyCas = 438;
bool has_certificatetransparencyenforcementdisabledforlegacycas() const;
void clear_certificatetransparencyenforcementdisabledforlegacycas();
const ::enterprise_management::StringListPolicyProto& certificatetransparencyenforcementdisabledforlegacycas() const;
::enterprise_management::StringListPolicyProto* release_certificatetransparencyenforcementdisabledforlegacycas();
::enterprise_management::StringListPolicyProto* mutable_certificatetransparencyenforcementdisabledforlegacycas();
void set_allocated_certificatetransparencyenforcementdisabledforlegacycas(::enterprise_management::StringListPolicyProto* certificatetransparencyenforcementdisabledforlegacycas);

// optional .enterprise_management.StringListPolicyProto WebUsbAskForUrls = 441;
bool has_webusbaskforurls() const;
void clear_webusbaskforurls();
const ::enterprise_management::StringListPolicyProto& webusbaskforurls() const;
::enterprise_management::StringListPolicyProto* release_webusbaskforurls();
::enterprise_management::StringListPolicyProto* mutable_webusbaskforurls();
void set_allocated_webusbaskforurls(::enterprise_management::StringListPolicyProto* webusbaskforurls);

// optional .enterprise_management.StringListPolicyProto WebUsbBlockedForUrls = 442;
bool has_webusbblockedforurls() const;
void clear_webusbblockedforurls();
const ::enterprise_management::StringListPolicyProto& webusbblockedforurls() const;
::enterprise_management::StringListPolicyProto* release_webusbblockedforurls();
::enterprise_management::StringListPolicyProto* mutable_webusbblockedforurls();
void set_allocated_webusbblockedforurls(::enterprise_management::StringListPolicyProto* webusbblockedforurls);

// optional .enterprise_management.StringPolicyProto IsolateOriginsAndroid = 447;
bool has_isolateoriginsandroid() const;
void clear_isolateoriginsandroid();
const ::enterprise_management::StringPolicyProto& isolateoriginsandroid() const;
::enterprise_management::StringPolicyProto* release_isolateoriginsandroid();
::enterprise_management::StringPolicyProto* mutable_isolateoriginsandroid();
void set_allocated_isolateoriginsandroid(::enterprise_management::StringPolicyProto* isolateoriginsandroid);

// optional .enterprise_management.BooleanPolicyProto SitePerProcessAndroid = 448;
bool has_siteperprocessandroid() const;
void clear_siteperprocessandroid();
const ::enterprise_management::BooleanPolicyProto& siteperprocessandroid() const;
::enterprise_management::BooleanPolicyProto* release_siteperprocessandroid();
::enterprise_management::BooleanPolicyProto* mutable_siteperprocessandroid();
void set_allocated_siteperprocessandroid(::enterprise_management::BooleanPolicyProto* siteperprocessandroid);

// optional .enterprise_management.StringListPolicyProto OverrideSecurityRestrictionsOnInsecureOrigin = 459;
bool has_overridesecurityrestrictionsoninsecureorigin() const;
void clear_overridesecurityrestrictionsoninsecureorigin();
const ::enterprise_management::StringListPolicyProto& overridesecurityrestrictionsoninsecureorigin() const;
::enterprise_management::StringListPolicyProto* release_overridesecurityrestrictionsoninsecureorigin();
::enterprise_management::StringListPolicyProto* mutable_overridesecurityrestrictionsoninsecureorigin();
void set_allocated_overridesecurityrestrictionsoninsecureorigin(::enterprise_management::StringListPolicyProto* overridesecurityrestrictionsoninsecureorigin);

// optional .enterprise_management.BooleanPolicyProto AutofillAddressEnabled = 461;
bool has_autofilladdressenabled() const;
void clear_autofilladdressenabled();
const ::enterprise_management::BooleanPolicyProto& autofilladdressenabled() const;
::enterprise_management::BooleanPolicyProto* release_autofilladdressenabled();
::enterprise_management::BooleanPolicyProto* mutable_autofilladdressenabled();
void set_allocated_autofilladdressenabled(::enterprise_management::BooleanPolicyProto* autofilladdressenabled);

// optional .enterprise_management.BooleanPolicyProto UrlKeyedAnonymizedDataCollectionEnabled = 463;
bool has_urlkeyedanonymizeddatacollectionenabled() const;
void clear_urlkeyedanonymizeddatacollectionenabled();
const ::enterprise_management::BooleanPolicyProto& urlkeyedanonymizeddatacollectionenabled() const;
::enterprise_management::BooleanPolicyProto* release_urlkeyedanonymizeddatacollectionenabled();
::enterprise_management::BooleanPolicyProto* mutable_urlkeyedanonymizeddatacollectionenabled();
void set_allocated_urlkeyedanonymizeddatacollectionenabled(::enterprise_management::BooleanPolicyProto* urlkeyedanonymizeddatacollectionenabled);

// optional .enterprise_management.StringListPolicyProto CoalesceH2ConnectionsWithClientCertificatesForHosts = 468;
bool has_coalesceh2connectionswithclientcertificatesforhosts() const;
void clear_coalesceh2connectionswithclientcertificatesforhosts();
const ::enterprise_management::StringListPolicyProto& coalesceh2connectionswithclientcertificatesforhosts() const;
::enterprise_management::StringListPolicyProto* release_coalesceh2connectionswithclientcertificatesforhosts();
::enterprise_management::StringListPolicyProto* mutable_coalesceh2connectionswithclientcertificatesforhosts();
void set_allocated_coalesceh2connectionswithclientcertificatesforhosts(::enterprise_management::StringListPolicyProto* coalesceh2connectionswithclientcertificatesforhosts);

// optional .enterprise_management.BooleanPolicyProto EnterpriseHardwarePlatformAPIEnabled = 485;
bool has_enterprisehardwareplatformapienabled() const;
void clear_enterprisehardwareplatformapienabled();
const ::enterprise_management::BooleanPolicyProto& enterprisehardwareplatformapienabled() const;
::enterprise_management::BooleanPolicyProto* release_enterprisehardwareplatformapienabled();
::enterprise_management::BooleanPolicyProto* mutable_enterprisehardwareplatformapienabled();
void set_allocated_enterprisehardwareplatformapienabled(::enterprise_management::BooleanPolicyProto* enterprisehardwareplatformapienabled);

// optional .enterprise_management.StringPolicyProto WebUsbAllowDevicesForUrls = 488;
bool has_webusballowdevicesforurls() const;
void clear_webusballowdevicesforurls();
const ::enterprise_management::StringPolicyProto& webusballowdevicesforurls() const;
::enterprise_management::StringPolicyProto* release_webusballowdevicesforurls();
::enterprise_management::StringPolicyProto* mutable_webusballowdevicesforurls();
void set_allocated_webusballowdevicesforurls(::enterprise_management::StringPolicyProto* webusballowdevicesforurls);

// optional .enterprise_management.IntegerPolicyProto BrowserSignin = 489;
bool has_browsersignin() const;
void clear_browsersignin();
const ::enterprise_management::IntegerPolicyProto& browsersignin() const;
::enterprise_management::IntegerPolicyProto* release_browsersignin();
::enterprise_management::IntegerPolicyProto* mutable_browsersignin();
void set_allocated_browsersignin(::enterprise_management::IntegerPolicyProto* browsersignin);

// optional .enterprise_management.BooleanPolicyProto AllowPopupsDuringPageUnload = 535;
bool has_allowpopupsduringpageunload() const;
void clear_allowpopupsduringpageunload();
const ::enterprise_management::BooleanPolicyProto& allowpopupsduringpageunload() const;
::enterprise_management::BooleanPolicyProto* release_allowpopupsduringpageunload();
::enterprise_management::BooleanPolicyProto* mutable_allowpopupsduringpageunload();
void set_allocated_allowpopupsduringpageunload(::enterprise_management::BooleanPolicyProto* allowpopupsduringpageunload);

// optional .enterprise_management.BooleanPolicyProto PasswordLeakDetectionEnabled = 582;
bool has_passwordleakdetectionenabled() const;
void clear_passwordleakdetectionenabled();
const ::enterprise_management::BooleanPolicyProto& passwordleakdetectionenabled() const;
::enterprise_management::BooleanPolicyProto* release_passwordleakdetectionenabled();
::enterprise_management::BooleanPolicyProto* mutable_passwordleakdetectionenabled();
void set_allocated_passwordleakdetectionenabled(::enterprise_management::BooleanPolicyProto* passwordleakdetectionenabled);

// optional .enterprise_management.StringListPolicyProto HSTSPolicyBypassList = 603;
bool has_hstspolicybypasslist() const;
void clear_hstspolicybypasslist();
const ::enterprise_management::StringListPolicyProto& hstspolicybypasslist() const;
::enterprise_management::StringListPolicyProto* release_hstspolicybypasslist();
::enterprise_management::StringListPolicyProto* mutable_hstspolicybypasslist();
void set_allocated_hstspolicybypasslist(::enterprise_management::StringListPolicyProto* hstspolicybypasslist);

// optional .enterprise_management.BooleanPolicyProto AllowSyncXHRInPageDismissal = 606;
bool has_allowsyncxhrinpagedismissal() const;
void clear_allowsyncxhrinpagedismissal();
const ::enterprise_management::BooleanPolicyProto& allowsyncxhrinpagedismissal() const;
::enterprise_management::BooleanPolicyProto* release_allowsyncxhrinpagedismissal();
::enterprise_management::BooleanPolicyProto* mutable_allowsyncxhrinpagedismissal();
void set_allocated_allowsyncxhrinpagedismissal(::enterprise_management::BooleanPolicyProto* allowsyncxhrinpagedismissal);

// optional .enterprise_management.BooleanPolicyProto SharedClipboardEnabled = 612;
bool has_sharedclipboardenabled() const;
void clear_sharedclipboardenabled();
const ::enterprise_management::BooleanPolicyProto& sharedclipboardenabled() const;
::enterprise_management::BooleanPolicyProto* release_sharedclipboardenabled();
::enterprise_management::BooleanPolicyProto* mutable_sharedclipboardenabled();
void set_allocated_sharedclipboardenabled(::enterprise_management::BooleanPolicyProto* sharedclipboardenabled);

// optional .enterprise_management.IntegerPolicyProto LegacySameSiteCookieBehaviorEnabled = 625;
bool has_legacysamesitecookiebehaviorenabled() const;
void clear_legacysamesitecookiebehaviorenabled();
const ::enterprise_management::IntegerPolicyProto& legacysamesitecookiebehaviorenabled() const;
::enterprise_management::IntegerPolicyProto* release_legacysamesitecookiebehaviorenabled();
::enterprise_management::IntegerPolicyProto* mutable_legacysamesitecookiebehaviorenabled();
void set_allocated_legacysamesitecookiebehaviorenabled(::enterprise_management::IntegerPolicyProto* legacysamesitecookiebehaviorenabled);

// optional .enterprise_management.StringListPolicyProto LegacySameSiteCookieBehaviorEnabledForDomainList = 626;
bool has_legacysamesitecookiebehaviorenabledfordomainlist() const;
void clear_legacysamesitecookiebehaviorenabledfordomainlist();
const ::enterprise_management::StringListPolicyProto& legacysamesitecookiebehaviorenabledfordomainlist() const;
::enterprise_management::StringListPolicyProto* release_legacysamesitecookiebehaviorenabledfordomainlist();
::enterprise_management::StringListPolicyProto* mutable_legacysamesitecookiebehaviorenabledfordomainlist();
void set_allocated_legacysamesitecookiebehaviorenabledfordomainlist(::enterprise_management::StringListPolicyProto* legacysamesitecookiebehaviorenabledfordomainlist);

// optional .enterprise_management.BooleanPolicyProto TLS13HardeningForLocalAnchorsEnabled = 628;
bool has_tls13hardeningforlocalanchorsenabled() const;
void clear_tls13hardeningforlocalanchorsenabled();
const ::enterprise_management::BooleanPolicyProto& tls13hardeningforlocalanchorsenabled() const;
::enterprise_management::BooleanPolicyProto* release_tls13hardeningforlocalanchorsenabled();
::enterprise_management::BooleanPolicyProto* mutable_tls13hardeningforlocalanchorsenabled();
void set_allocated_tls13hardeningforlocalanchorsenabled(::enterprise_management::BooleanPolicyProto* tls13hardeningforlocalanchorsenabled);

// optional .enterprise_management.BooleanPolicyProto WebComponentsV0Enabled = 646;
bool has_webcomponentsv0enabled() const;
void clear_webcomponentsv0enabled();
const ::enterprise_management::BooleanPolicyProto& webcomponentsv0enabled() const;
::enterprise_management::BooleanPolicyProto* release_webcomponentsv0enabled();
::enterprise_management::BooleanPolicyProto* mutable_webcomponentsv0enabled();
void set_allocated_webcomponentsv0enabled(::enterprise_management::BooleanPolicyProto* webcomponentsv0enabled);

// optional .enterprise_management.StringListPolicyProto SyncTypesListDisabled = 651;
bool has_synctypeslistdisabled() const;
void clear_synctypeslistdisabled();
const ::enterprise_management::StringListPolicyProto& synctypeslistdisabled() const;
::enterprise_management::StringListPolicyProto* release_synctypeslistdisabled();
::enterprise_management::StringListPolicyProto* mutable_synctypeslistdisabled();
void set_allocated_synctypeslistdisabled(::enterprise_management::StringListPolicyProto* synctypeslistdisabled);

// optional .enterprise_management.BooleanPolicyProto PaymentMethodQueryEnabled = 653;
bool has_paymentmethodqueryenabled() const;
void clear_paymentmethodqueryenabled();
const ::enterprise_management::BooleanPolicyProto& paymentmethodqueryenabled() const;
::enterprise_management::BooleanPolicyProto* release_paymentmethodqueryenabled();
::enterprise_management::BooleanPolicyProto* mutable_paymentmethodqueryenabled();
void set_allocated_paymentmethodqueryenabled(::enterprise_management::BooleanPolicyProto* paymentmethodqueryenabled);

// @@protoc_insertion_point(class_scope:enterprise_management.CloudPolicySettings)
private:
class _Internal;

::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArenaLite _internal_metadata_;
::PROTOBUF_NAMESPACE_ID::internal::HasBits<4> _has_bits_;
mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
::enterprise_management::StringPolicyProto* homepagelocation_;
::enterprise_management::BooleanPolicyProto* alternateerrorpagesenabled_;
::enterprise_management::BooleanPolicyProto* searchsuggestenabled_;
::enterprise_management::BooleanPolicyProto* javascriptenabled_;
::enterprise_management::BooleanPolicyProto* incognitoenabled_;
::enterprise_management::BooleanPolicyProto* savingbrowserhistorydisabled_;
::enterprise_management::BooleanPolicyProto* printingenabled_;
::enterprise_management::BooleanPolicyProto* safebrowsingenabled_;
::enterprise_management::BooleanPolicyProto* passwordmanagerenabled_;
::enterprise_management::BooleanPolicyProto* autofillenabled_;
::enterprise_management::StringPolicyProto* proxymode_;
::enterprise_management::IntegerPolicyProto* proxyservermode_;
::enterprise_management::StringPolicyProto* proxyserver_;
::enterprise_management::StringPolicyProto* proxypacurl_;
::enterprise_management::StringPolicyProto* proxybypasslist_;
::enterprise_management::StringPolicyProto* authschemes_;
::enterprise_management::BooleanPolicyProto* disableauthnegotiatecnamelookup_;
::enterprise_management::StringPolicyProto* authserverwhitelist_;
::enterprise_management::StringPolicyProto* authnegotiatedelegatewhitelist_;
::enterprise_management::BooleanPolicyProto* defaultsearchproviderenabled_;
::enterprise_management::StringPolicyProto* defaultsearchprovidername_;
::enterprise_management::StringPolicyProto* defaultsearchproviderkeyword_;
::enterprise_management::StringPolicyProto* defaultsearchprovidersearchurl_;
::enterprise_management::StringPolicyProto* defaultsearchprovidersuggesturl_;
::enterprise_management::StringPolicyProto* defaultsearchprovidericonurl_;
::enterprise_management::StringListPolicyProto* defaultsearchproviderencodings_;
::enterprise_management::IntegerPolicyProto* defaultcookiessetting_;
::enterprise_management::IntegerPolicyProto* defaultjavascriptsetting_;
::enterprise_management::IntegerPolicyProto* defaultpopupssetting_;
::enterprise_management::IntegerPolicyProto* defaultgeolocationsetting_;
::enterprise_management::StringListPolicyProto* cookiesblockedforurls_;
::enterprise_management::StringListPolicyProto* cookiessessiononlyforurls_;
::enterprise_management::StringListPolicyProto* javascriptallowedforurls_;
::enterprise_management::StringListPolicyProto* javascriptblockedforurls_;
::enterprise_management::StringListPolicyProto* popupsallowedforurls_;
::enterprise_management::StringListPolicyProto* popupsblockedforurls_;
::enterprise_management::StringListPolicyProto* cookiesallowedforurls_;
::enterprise_management::BooleanPolicyProto* translateenabled_;
::enterprise_management::BooleanPolicyProto* editbookmarksenabled_;
::enterprise_management::IntegerPolicyProto* incognitomodeavailability_;
::enterprise_management::StringListPolicyProto* urlblacklist_;
::enterprise_management::StringListPolicyProto* urlwhitelist_;
::enterprise_management::StringPolicyProto* proxysettings_;
::enterprise_management::BooleanPolicyProto* disablesafebrowsingproceedanyway_;
::enterprise_management::StringListPolicyProto* defaultsearchprovideralternateurls_;
::enterprise_management::BooleanPolicyProto* forcesafesearch_;
::enterprise_management::BooleanPolicyProto* signinallowed_;
::enterprise_management::StringPolicyProto* variationsrestrictparameter_;
::enterprise_management::StringPolicyProto* managedbookmarks_;
::enterprise_management::StringPolicyProto* defaultsearchproviderimageurl_;
::enterprise_management::StringPolicyProto* defaultsearchprovidersearchurlpostparams_;
::enterprise_management::StringPolicyProto* defaultsearchprovidersuggesturlpostparams_;
::enterprise_management::StringPolicyProto* defaultsearchproviderimageurlpostparams_;
::enterprise_management::StringPolicyProto* defaultsearchprovidernewtaburl_;
::enterprise_management::BooleanPolicyProto* datacompressionproxyenabled_;
::enterprise_management::StringListPolicyProto* enabledeprecatedwebplatformfeatures_;
::enterprise_management::IntegerPolicyProto* networkpredictionoptions_;
::enterprise_management::StringPolicyProto* sslversionmin_;
::enterprise_management::BooleanPolicyProto* contextualsearchenabled_;
::enterprise_management::BooleanPolicyProto* forcegooglesafesearch_;
::enterprise_management::BooleanPolicyProto* forceyoutubesafetymode_;
::enterprise_management::BooleanPolicyProto* sslerroroverrideallowed_;
::enterprise_management::StringPolicyProto* authandroidnegotiateaccounttype_;
::enterprise_management::IntegerPolicyProto* defaultwebbluetoothguardsetting_;
::enterprise_management::StringPolicyProto* alloweddomainsforapps_;
::enterprise_management::BooleanPolicyProto* enablemediarouter_;
::enterprise_management::StringListPolicyProto* certificatetransparencyenforcementdisabledforurls_;
::enterprise_management::BooleanPolicyProto* ntpcontentsuggestionsenabled_;
::enterprise_management::StringPolicyProto* webrtcudpportrange_;
::enterprise_management::BooleanPolicyProto* forcebrowsersignin_;
::enterprise_management::IntegerPolicyProto* forceyoutuberestrict_;
::enterprise_management::BooleanPolicyProto* autofillcreditcardenabled_;
::enterprise_management::BooleanPolicyProto* ntlmv2enabled_;
::enterprise_management::StringListPolicyProto* restrictaccountstopatterns_;
::enterprise_management::IntegerPolicyProto* defaultwebusbguardsetting_;
::enterprise_management::StringListPolicyProto* certificatetransparencyenforcementdisabledforcas_;
::enterprise_management::StringListPolicyProto* certificatetransparencyenforcementdisabledforlegacycas_;
::enterprise_management::StringListPolicyProto* webusbaskforurls_;
::enterprise_management::StringListPolicyProto* webusbblockedforurls_;
::enterprise_management::StringPolicyProto* isolateoriginsandroid_;
::enterprise_management::BooleanPolicyProto* siteperprocessandroid_;
::enterprise_management::StringListPolicyProto* overridesecurityrestrictionsoninsecureorigin_;
::enterprise_management::BooleanPolicyProto* autofilladdressenabled_;
::enterprise_management::BooleanPolicyProto* urlkeyedanonymizeddatacollectionenabled_;
::enterprise_management::StringListPolicyProto* coalesceh2connectionswithclientcertificatesforhosts_;
::enterprise_management::BooleanPolicyProto* enterprisehardwareplatformapienabled_;
::enterprise_management::StringPolicyProto* webusballowdevicesforurls_;
::enterprise_management::IntegerPolicyProto* browsersignin_;
::enterprise_management::BooleanPolicyProto* allowpopupsduringpageunload_;
::enterprise_management::BooleanPolicyProto* passwordleakdetectionenabled_;
::enterprise_management::StringListPolicyProto* hstspolicybypasslist_;
::enterprise_management::BooleanPolicyProto* allowsyncxhrinpagedismissal_;
::enterprise_management::BooleanPolicyProto* sharedclipboardenabled_;
::enterprise_management::IntegerPolicyProto* legacysamesitecookiebehaviorenabled_;
::enterprise_management::StringListPolicyProto* legacysamesitecookiebehaviorenabledfordomainlist_;
::enterprise_management::BooleanPolicyProto* tls13hardeningforlocalanchorsenabled_;
::enterprise_management::BooleanPolicyProto* webcomponentsv0enabled_;
::enterprise_management::StringListPolicyProto* synctypeslistdisabled_;
::enterprise_management::BooleanPolicyProto* paymentmethodqueryenabled_;
friend struct ::TableStruct_cloud_5fpolicy_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// CloudPolicySettings

// optional .enterprise_management.StringPolicyProto HomepageLocation = 3;
inline bool CloudPolicySettings::has_homepagelocation() const {
return (_has_bits_[0] & 0x00000001u) != 0;
}
inline const ::enterprise_management::StringPolicyProto& CloudPolicySettings::homepagelocation() const {
const ::enterprise_management::StringPolicyProto* p = homepagelocation_;
// @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.HomepageLocation)
return p != nullptr ? *p : *reinterpret_cast<const ::enterprise_management::StringPolicyProto*>(
&::enterprise_management::_StringPolicyProto_default_instance_);
}
inline ::enterprise_management::StringPolicyProto* CloudPolicySettings::release_homepagelocation() {
// @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.HomepageLocation)
_has_bits_[0] &= ~0x00000001u;
::enterprise_management::StringPolicyProto* temp = homepagelocation_;
homepagelocation_ = nullptr;
return temp;
}
inline ::enterprise_management::StringPolicyProto* CloudPolicySettings::mutable_homepagelocation() {
_has_bits_[0] |= 0x00000001u;
if (homepagelocation_ == nullptr) {
auto* p = CreateMaybeMessage<::enterprise_management::StringPolicyProto>(GetArenaNoVirtual());
homepagelocation_ = p;
}
// @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.HomepageLocation)
return homepagelocation_;
}
inline void CloudPolicySettings::set_allocated_homepagelocation(::enterprise_management::StringPolicyProto* homepagelocation) {
::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
if (message_arena == nullptr) {
delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(homepagelocation_);
}
if (homepagelocation) {
::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
if (message_arena != submessage_arena) {
homepagelocation = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
message_arena, homepagelocation, submessage_arena);
}
_has_bits_[0] |= 0x00000001u;
} else {
_has_bits_[0] &= ~0x00000001u;
}
homepagelocation_ = homepagelocation;
// @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.HomepageLocation)
}

// optional .enterprise_management.BooleanPolicyProto AlternateErrorPagesEnabled = 7;
inline bool CloudPolicySettings::has_alternateerrorpagesenabled() const {
return (_has_bits_[0] & 0x00000002u) != 0;
}
inline const ::enterprise_management::BooleanPolicyProto& CloudPolicySettings::alternateerrorpagesenabled() const {
const ::enterprise_management::BooleanPolicyProto* p = alternateerrorpagesenabled_;
// @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.AlternateErrorPagesEnabled)
return p != nullptr ? *p : *reinterpret_cast<const ::enterprise_management::BooleanPolicyProto*>(
&::enterprise_management::_BooleanPolicyProto_default_instance_);
}
inline ::enterprise_management::BooleanPolicyProto* CloudPolicySettings::release_alternateerrorpagesenabled() {
// @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.AlternateErrorPagesEnabled)
_has_bits_[0] &= ~0x00000002u;
::enterprise_management::BooleanPolicyProto* temp = alternateerrorpagesenabled_;
alternateerrorpagesenabled_ = nullptr;
return temp;
}
inline ::enterprise_management::BooleanPolicyProto* CloudPolicySettings::mutable_alternateerrorpagesenabled() {
_has_bits_[0] |= 0x00000002u;
if (alternateerrorpagesenabled_ == nullptr) {
auto* p = CreateMaybeMessage<::enterprise_management::BooleanPolicyProto>(GetArenaNoVirtual());
alternateerrorpagesenabled_ = p;
}
// @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.AlternateErrorPagesEnabled)
return alternateerrorpagesenabled_;
}
inline void CloudPolicySettings::set_allocated_alternateerrorpagesenabled(::enterprise_management::BooleanPolicyProto* alternateerrorpagesenabled) {
::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
if (message_arena == nullptr) {
delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(alternateerrorpagesenabled_);
}
if (alternateerrorpagesenabled) {
::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
if (message_arena != submessage_arena) {
alternateerrorpagesenabled = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
message_arena, alternateerrorpagesenabled, submessage_arena);
}
_has_bits_[0] |= 0x00000002u;
} else {
_has_bits_[0] &= ~0x00000002u;
}
alternateerrorpagesenabled_ = alternateerrorpagesenabled;
// @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.AlternateErrorPagesEnabled)
}

// optional .enterprise_management.BooleanPolicyProto SearchSuggestEnabled = 8;
inline bool CloudPolicySettings::has_searchsuggestenabled() const {
return (_has_bits_[0] & 0x00000004u) != 0;
}
inline const ::enterprise_management::BooleanPolicyProto& CloudPolicySettings::searchsuggestenabled() const {
const ::enterprise_management::BooleanPolicyProto* p = searchsuggestenabled_;
// @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.SearchSuggestEnabled)
return p != nullptr ? *p : *reinterpret_cast<const ::enterprise_management::BooleanPolicyProto*>(
&::enterprise_management::_BooleanPolicyProto_default_instance_);
}
inline ::enterprise_management::BooleanPolicyProto* CloudPolicySettings::release_searchsuggestenabled() {
// @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.SearchSuggestEnabled)
_has_bits_[0] &= ~0x00000004u;
::enterprise_management::BooleanPolicyProto* temp = searchsuggestenabled_;
searchsuggestenabled_ = nullptr;
return temp;
}
inline ::enterprise_management::BooleanPolicyProto* CloudPolicySettings::mutable_searchsuggestenabled() {
_has_bits_[0] |= 0x00000004u;
if (searchsuggestenabled_ == nullptr) {
auto* p = CreateMaybeMessage<::enterprise_management::BooleanPolicyProto>(GetArenaNoVirtual());
searchsuggestenabled_ = p;
}
// @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.SearchSuggestEnabled)
return searchsuggestenabled_;
}
inline void CloudPolicySettings::set_allocated_searchsuggestenabled(::enterprise_management::BooleanPolicyProto* searchsuggestenabled) {
::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
if (message_arena == nullptr) {
delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(searchsuggestenabled_);
}
if (searchsuggestenabled) {
::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
if (message_arena != submessage_arena) {
searchsuggestenabled = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
message_arena, searchsuggestenabled, submessage_arena);
}
_has_bits_[0] |= 0x00000004u;
} else {
_has_bits_[0] &= ~0x00000004u;
}
searchsuggestenabled_ = searchsuggestenabled;
// @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.SearchSuggestEnabled)
}

// optional .enterprise_management.IntegerPolicyProto NetworkPredictionOptions = 275;
inline bool CloudPolicySettings::has_networkpredictionoptions() const {
return (_has_bits_[1] & 0x01000000u) != 0;
}
inline const ::enterprise_management::IntegerPolicyProto& CloudPolicySettings::networkpredictionoptions() const {
const ::enterprise_management::IntegerPolicyProto* p = networkpredictionoptions_;
// @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.NetworkPredictionOptions)
return p != nullptr ? *p : *reinterpret_cast<const ::enterprise_management::IntegerPolicyProto*>(
&::enterprise_management::_IntegerPolicyProto_default_instance_);
}
inline ::enterprise_management::IntegerPolicyProto* CloudPolicySettings::release_networkpredictionoptions() {
// @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.NetworkPredictionOptions)
_has_bits_[1] &= ~0x01000000u;
::enterprise_management::IntegerPolicyProto* temp = networkpredictionoptions_;
networkpredictionoptions_ = nullptr;
return temp;
}
inline ::enterprise_management::IntegerPolicyProto* CloudPolicySettings::mutable_networkpredictionoptions() {
_has_bits_[1] |= 0x01000000u;
if (networkpredictionoptions_ == nullptr) {
auto* p = CreateMaybeMessage<::enterprise_management::IntegerPolicyProto>(GetArenaNoVirtual());
networkpredictionoptions_ = p;
}
// @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.NetworkPredictionOptions)
return networkpredictionoptions_;
}
inline void CloudPolicySettings::set_allocated_networkpredictionoptions(::enterprise_management::IntegerPolicyProto* networkpredictionoptions) {
::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
if (message_arena == nullptr) {
delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(networkpredictionoptions_);
}
if (networkpredictionoptions) {
::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
if (message_arena != submessage_arena) {
networkpredictionoptions = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
message_arena, networkpredictionoptions, submessage_arena);
}
_has_bits_[1] |= 0x01000000u;
} else {
_has_bits_[1] &= ~0x01000000u;
}
networkpredictionoptions_ = networkpredictionoptions;
// @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.NetworkPredictionOptions)
}

// optional .enterprise_management.BooleanPolicyProto JavascriptEnabled = 11;
inline bool CloudPolicySettings::has_javascriptenabled() const {
return (_has_bits_[0] & 0x00000008u) != 0;
}
inline const ::enterprise_management::BooleanPolicyProto& CloudPolicySettings::javascriptenabled() const {
const ::enterprise_management::BooleanPolicyProto* p = javascriptenabled_;
// @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.JavascriptEnabled)
return p != nullptr ? *p : *reinterpret_cast<const ::enterprise_management::BooleanPolicyProto*>(
&::enterprise_management::_BooleanPolicyProto_default_instance_);
}
inline ::enterprise_management::BooleanPolicyProto* CloudPolicySettings::release_javascriptenabled() {
// @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.JavascriptEnabled)
_has_bits_[0] &= ~0x00000008u;
::enterprise_management::BooleanPolicyProto* temp = javascriptenabled_;
javascriptenabled_ = nullptr;
return temp;
}
inline ::enterprise_management::BooleanPolicyProto* CloudPolicySettings::mutable_javascriptenabled() {
_has_bits_[0] |= 0x00000008u;
if (javascriptenabled_ == nullptr) {
auto* p = CreateMaybeMessage<::enterprise_management::BooleanPolicyProto>(GetArenaNoVirtual());
javascriptenabled_ = p;
}
// @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.JavascriptEnabled)
return javascriptenabled_;
}
inline void CloudPolicySettings::set_allocated_javascriptenabled(::enterprise_management::BooleanPolicyProto* javascriptenabled) {
::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
if (message_arena == nullptr) {
delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(javascriptenabled_);
}
if (javascriptenabled) {
::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
if (message_arena != submessage_arena) {
javascriptenabled = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
message_arena, javascriptenabled, submessage_arena);
}
_has_bits_[0] |= 0x00000008u;
} else {
_has_bits_[0] &= ~0x00000008u;
}
javascriptenabled_ = javascriptenabled;
// @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.JavascriptEnabled)
}

// optional .enterprise_management.BooleanPolicyProto IncognitoEnabled = 12;
inline bool CloudPolicySettings::has_incognitoenabled() const {
return (_has_bits_[0] & 0x00000010u) != 0;
}
inline const ::enterprise_management::BooleanPolicyProto& CloudPolicySettings::incognitoenabled() const {
const ::enterprise_management::BooleanPolicyProto* p = incognitoenabled_;
// @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.IncognitoEnabled)
return p != nullptr ? *p : *reinterpret_cast<const ::enterprise_management::BooleanPolicyProto*>(
&::enterprise_management::_BooleanPolicyProto_default_instance_);
}
inline ::enterprise_management::BooleanPolicyProto* CloudPolicySettings::release_incognitoenabled() {
// @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.IncognitoEnabled)
_has_bits_[0] &= ~0x00000010u;
::enterprise_management::BooleanPolicyProto* temp = incognitoenabled_;
incognitoenabled_ = nullptr;
return temp;
}
inline ::enterprise_management::BooleanPolicyProto* CloudPolicySettings::mutable_incognitoenabled() {
_has_bits_[0] |= 0x00000010u;
if (incognitoenabled_ == nullptr) {
auto* p = CreateMaybeMessage<::enterprise_management::BooleanPolicyProto>(GetArenaNoVirtual());
incognitoenabled_ = p;
}
// @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.IncognitoEnabled)
return incognitoenabled_;
}
inline void CloudPolicySettings::set_allocated_incognitoenabled(::enterprise_management::BooleanPolicyProto* incognitoenabled) {
::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
if (message_arena == nullptr) {
delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(incognitoenabled_);
}
if (incognitoenabled) {
::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
if (message_arena != submessage_arena) {
incognitoenabled = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
message_arena, incognitoenabled, submessage_arena);
}
_has_bits_[0] |= 0x00000010u;
} else {
_has_bits_[0] &= ~0x00000010u;
}
incognitoenabled_ = incognitoenabled;
// @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.IncognitoEnabled)
}

// optional .enterprise_management.IntegerPolicyProto IncognitoModeAvailability = 95;
inline bool CloudPolicySettings::has_incognitomodeavailability() const {
return (_has_bits_[1] & 0x00000080u) != 0;
}
inline const ::enterprise_management::IntegerPolicyProto& CloudPolicySettings::incognitomodeavailability() const {
const ::enterprise_management::IntegerPolicyProto* p = incognitomodeavailability_;
// @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.IncognitoModeAvailability)
return p != nullptr ? *p : *reinterpret_cast<const ::enterprise_management::IntegerPolicyProto*>(
&::enterprise_management::_IntegerPolicyProto_default_instance_);
}
inline ::enterprise_management::IntegerPolicyProto* CloudPolicySettings::release_incognitomodeavailability() {
// @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.IncognitoModeAvailability)
_has_bits_[1] &= ~0x00000080u;
::enterprise_management::IntegerPolicyProto* temp = incognitomodeavailability_;
incognitomodeavailability_ = nullptr;
return temp;
}
inline ::enterprise_management::IntegerPolicyProto* CloudPolicySettings::mutable_incognitomodeavailability() {
_has_bits_[1] |= 0x00000080u;
if (incognitomodeavailability_ == nullptr) {
auto* p = CreateMaybeMessage<::enterprise_management::IntegerPolicyProto>(GetArenaNoVirtual());
incognitomodeavailability_ = p;
}
// @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.IncognitoModeAvailability)
return incognitomodeavailability_;
}
inline void CloudPolicySettings::set_allocated_incognitomodeavailability(::enterprise_management::IntegerPolicyProto* incognitomodeavailability) {
::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
if (message_arena == nullptr) {
delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(incognitomodeavailability_);
}
if (incognitomodeavailability) {
::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
if (message_arena != submessage_arena) {
incognitomodeavailability = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
message_arena, incognitomodeavailability, submessage_arena);
}
_has_bits_[1] |= 0x00000080u;
} else {
_has_bits_[1] &= ~0x00000080u;
}
incognitomodeavailability_ = incognitomodeavailability;
// @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.IncognitoModeAvailability)
}

// optional .enterprise_management.BooleanPolicyProto SavingBrowserHistoryDisabled = 13;
inline bool CloudPolicySettings::has_savingbrowserhistorydisabled() const {
return (_has_bits_[0] & 0x00000020u) != 0;
}
inline const ::enterprise_management::BooleanPolicyProto& CloudPolicySettings::savingbrowserhistorydisabled() const {
const ::enterprise_management::BooleanPolicyProto* p = savingbrowserhistorydisabled_;
// @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.SavingBrowserHistoryDisabled)
return p != nullptr ? *p : *reinterpret_cast<const ::enterprise_management::BooleanPolicyProto*>(
&::enterprise_management::_BooleanPolicyProto_default_instance_);
}
inline ::enterprise_management::BooleanPolicyProto* CloudPolicySettings::release_savingbrowserhistorydisabled() {
// @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.SavingBrowserHistoryDisabled)
_has_bits_[0] &= ~0x00000020u;
::enterprise_management::BooleanPolicyProto* temp = savingbrowserhistorydisabled_;
savingbrowserhistorydisabled_ = nullptr;
return temp;
}
inline ::enterprise_management::BooleanPolicyProto* CloudPolicySettings::mutable_savingbrowserhistorydisabled() {
_has_bits_[0] |= 0x00000020u;
if (savingbrowserhistorydisabled_ == nullptr) {
auto* p = CreateMaybeMessage<::enterprise_management::BooleanPolicyProto>(GetArenaNoVirtual());
savingbrowserhistorydisabled_ = p;
}
// @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.SavingBrowserHistoryDisabled)
return savingbrowserhistorydisabled_;
}
inline void CloudPolicySettings::set_allocated_savingbrowserhistorydisabled(::enterprise_management::BooleanPolicyProto* savingbrowserhistorydisabled) {
::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
if (message_arena == nullptr) {
delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(savingbrowserhistorydisabled_);
}
if (savingbrowserhistorydisabled) {
::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
if (message_arena != submessage_arena) {
savingbrowserhistorydisabled = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
message_arena, savingbrowserhistorydisabled, submessage_arena);
}
_has_bits_[0] |= 0x00000020u;
} else {
_has_bits_[0] &= ~0x00000020u;
}
savingbrowserhistorydisabled_ = savingbrowserhistorydisabled;
// @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.SavingBrowserHistoryDisabled)
}

// optional .enterprise_management.BooleanPolicyProto PrintingEnabled = 14;
inline bool CloudPolicySettings::has_printingenabled() const {
return (_has_bits_[0] & 0x00000040u) != 0;
}
inline const ::enterprise_management::BooleanPolicyProto& CloudPolicySettings::printingenabled() const {
const ::enterprise_management::BooleanPolicyProto* p = printingenabled_;
// @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.PrintingEnabled)
return p != nullptr ? *p : *reinterpret_cast<const ::enterprise_management::BooleanPolicyProto*>(
&::enterprise_management::_BooleanPolicyProto_default_instance_);
}
inline ::enterprise_management::BooleanPolicyProto* CloudPolicySettings::release_printingenabled() {
// @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.PrintingEnabled)
_has_bits_[0] &= ~0x00000040u;
::enterprise_management::BooleanPolicyProto* temp = printingenabled_;
printingenabled_ = nullptr;
return temp;
}
inline ::enterprise_management::BooleanPolicyProto* CloudPolicySettings::mutable_printingenabled() {
_has_bits_[0] |= 0x00000040u;
if (printingenabled_ == nullptr) {
auto* p = CreateMaybeMessage<::enterprise_management::BooleanPolicyProto>(GetArenaNoVirtual());
printingenabled_ = p;
}
// @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.PrintingEnabled)
return printingenabled_;
}
inline void CloudPolicySettings::set_allocated_printingenabled(::enterprise_management::BooleanPolicyProto* printingenabled) {
::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
if (message_arena == nullptr) {
delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(printingenabled_);
}
if (printingenabled) {
::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
if (message_arena != submessage_arena) {
printingenabled = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
message_arena, printingenabled, submessage_arena);
}
_has_bits_[0] |= 0x00000040u;
} else {
_has_bits_[0] &= ~0x00000040u;
}
printingenabled_ = printingenabled;
// @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.PrintingEnabled)
}

// optional .enterprise_management.BooleanPolicyProto ForceSafeSearch = 164;
inline bool CloudPolicySettings::has_forcesafesearch() const {
return (_has_bits_[1] & 0x00002000u) != 0;
}
inline const ::enterprise_management::BooleanPolicyProto& CloudPolicySettings::forcesafesearch() const {
const ::enterprise_management::BooleanPolicyProto* p = forcesafesearch_;
// @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.ForceSafeSearch)
return p != nullptr ? *p : *reinterpret_cast<const ::enterprise_management::BooleanPolicyProto*>(
&::enterprise_management::_BooleanPolicyProto_default_instance_);
}
inline ::enterprise_management::BooleanPolicyProto* CloudPolicySettings::release_forcesafesearch() {
// @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.ForceSafeSearch)
_has_bits_[1] &= ~0x00002000u;
::enterprise_management::BooleanPolicyProto* temp = forcesafesearch_;
forcesafesearch_ = nullptr;
return temp;
}
inline ::enterprise_management::BooleanPolicyProto* CloudPolicySettings::mutable_forcesafesearch() {
_has_bits_[1] |= 0x00002000u;
if (forcesafesearch_ == nullptr) {
auto* p = CreateMaybeMessage<::enterprise_management::BooleanPolicyProto>(GetArenaNoVirtual());
forcesafesearch_ = p;
}
// @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.ForceSafeSearch)
return forcesafesearch_;
}
inline void CloudPolicySettings::set_allocated_forcesafesearch(::enterprise_management::BooleanPolicyProto* forcesafesearch) {
::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
if (message_arena == nullptr) {
delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(forcesafesearch_);
}
if (forcesafesearch) {
::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
if (message_arena != submessage_arena) {
forcesafesearch = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
message_arena, forcesafesearch, submessage_arena);
}
_has_bits_[1] |= 0x00002000u;
} else {
_has_bits_[1] &= ~0x00002000u;
}
forcesafesearch_ = forcesafesearch;
// @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.ForceSafeSearch)
}

// optional .enterprise_management.BooleanPolicyProto ForceGoogleSafeSearch = 284;
inline bool CloudPolicySettings::has_forcegooglesafesearch() const {
return (_has_bits_[1] & 0x08000000u) != 0;
}
inline const ::enterprise_management::BooleanPolicyProto& CloudPolicySettings::forcegooglesafesearch() const {
const ::enterprise_management::BooleanPolicyProto* p = forcegooglesafesearch_;
// @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.ForceGoogleSafeSearch)
return p != nullptr ? *p : *reinterpret_cast<const ::enterprise_management::BooleanPolicyProto*>(
&::enterprise_management::_BooleanPolicyProto_default_instance_);
}
inline ::enterprise_management::BooleanPolicyProto* CloudPolicySettings::release_forcegooglesafesearch() {
// @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.ForceGoogleSafeSearch)
_has_bits_[1] &= ~0x08000000u;
::enterprise_management::BooleanPolicyProto* temp = forcegooglesafesearch_;
forcegooglesafesearch_ = nullptr;
return temp;
}
inline ::enterprise_management::BooleanPolicyProto* CloudPolicySettings::mutable_forcegooglesafesearch() {
_has_bits_[1] |= 0x08000000u;
if (forcegooglesafesearch_ == nullptr) {
auto* p = CreateMaybeMessage<::enterprise_management::BooleanPolicyProto>(GetArenaNoVirtual());
forcegooglesafesearch_ = p;
}
// @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.ForceGoogleSafeSearch)
return forcegooglesafesearch_;
}
inline void CloudPolicySettings::set_allocated_forcegooglesafesearch(::enterprise_management::BooleanPolicyProto* forcegooglesafesearch) {
::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
if (message_arena == nullptr) {
delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(forcegooglesafesearch_);
}
if (forcegooglesafesearch) {
::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
if (message_arena != submessage_arena) {
forcegooglesafesearch = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
message_arena, forcegooglesafesearch, submessage_arena);
}
_has_bits_[1] |= 0x08000000u;
} else {
_has_bits_[1] &= ~0x08000000u;
}
forcegooglesafesearch_ = forcegooglesafesearch;
// @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.ForceGoogleSafeSearch)
}

// optional .enterprise_management.BooleanPolicyProto ForceYouTubeSafetyMode = 285;
inline bool CloudPolicySettings::has_forceyoutubesafetymode() const {
return (_has_bits_[1] & 0x10000000u) != 0;
}
inline const ::enterprise_management::BooleanPolicyProto& CloudPolicySettings::forceyoutubesafetymode() const {
const ::enterprise_management::BooleanPolicyProto* p = forceyoutubesafetymode_;
// @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.ForceYouTubeSafetyMode)
return p != nullptr ? *p : *reinterpret_cast<const ::enterprise_management::BooleanPolicyProto*>(
&::enterprise_management::_BooleanPolicyProto_default_instance_);
}
inline ::enterprise_management::BooleanPolicyProto* CloudPolicySettings::release_forceyoutubesafetymode() {
// @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.ForceYouTubeSafetyMode)
_has_bits_[1] &= ~0x10000000u;
::enterprise_management::BooleanPolicyProto* temp = forceyoutubesafetymode_;
forceyoutubesafetymode_ = nullptr;
return temp;
}
inline ::enterprise_management::BooleanPolicyProto* CloudPolicySettings::mutable_forceyoutubesafetymode() {
_has_bits_[1] |= 0x10000000u;
if (forceyoutubesafetymode_ == nullptr) {
auto* p = CreateMaybeMessage<::enterprise_management::BooleanPolicyProto>(GetArenaNoVirtual());
forceyoutubesafetymode_ = p;
}
// @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.ForceYouTubeSafetyMode)
return forceyoutubesafetymode_;
}
inline void CloudPolicySettings::set_allocated_forceyoutubesafetymode(::enterprise_management::BooleanPolicyProto* forceyoutubesafetymode) {
::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
if (message_arena == nullptr) {
delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(forceyoutubesafetymode_);
}
if (forceyoutubesafetymode) {
::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
if (message_arena != submessage_arena) {
forceyoutubesafetymode = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
message_arena, forceyoutubesafetymode, submessage_arena);
}
_has_bits_[1] |= 0x10000000u;
} else {
_has_bits_[1] &= ~0x10000000u;
}
forceyoutubesafetymode_ = forceyoutubesafetymode;
// @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.ForceYouTubeSafetyMode)
}

// optional .enterprise_management.IntegerPolicyProto ForceYouTubeRestrict = 350;
inline bool CloudPolicySettings::has_forceyoutuberestrict() const {
return (_has_bits_[2] & 0x00000040u) != 0;
}
inline const ::enterprise_management::IntegerPolicyProto& CloudPolicySettings::forceyoutuberestrict() const {
const ::enterprise_management::IntegerPolicyProto* p = forceyoutuberestrict_;
// @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.ForceYouTubeRestrict)
return p != nullptr ? *p : *reinterpret_cast<const ::enterprise_management::IntegerPolicyProto*>(
&::enterprise_management::_IntegerPolicyProto_default_instance_);
}
inline ::enterprise_management::IntegerPolicyProto* CloudPolicySettings::release_forceyoutuberestrict() {
// @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.ForceYouTubeRestrict)
_has_bits_[2] &= ~0x00000040u;
::enterprise_management::IntegerPolicyProto* temp = forceyoutuberestrict_;
forceyoutuberestrict_ = nullptr;
return temp;
}
inline ::enterprise_management::IntegerPolicyProto* CloudPolicySettings::mutable_forceyoutuberestrict() {
_has_bits_[2] |= 0x00000040u;
if (forceyoutuberestrict_ == nullptr) {
auto* p = CreateMaybeMessage<::enterprise_management::IntegerPolicyProto>(GetArenaNoVirtual());
forceyoutuberestrict_ = p;
}
// @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.ForceYouTubeRestrict)
return forceyoutuberestrict_;
}
inline void CloudPolicySettings::set_allocated_forceyoutuberestrict(::enterprise_management::IntegerPolicyProto* forceyoutuberestrict) {
::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
if (message_arena == nullptr) {
delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(forceyoutuberestrict_);
}
if (forceyoutuberestrict) {
::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
if (message_arena != submessage_arena) {
forceyoutuberestrict = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
message_arena, forceyoutuberestrict, submessage_arena);
}
_has_bits_[2] |= 0x00000040u;
} else {
_has_bits_[2] &= ~0x00000040u;
}
forceyoutuberestrict_ = forceyoutuberestrict;
// @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.ForceYouTubeRestrict)
}

// optional .enterprise_management.BooleanPolicyProto SafeBrowsingEnabled = 16;
inline bool CloudPolicySettings::has_safebrowsingenabled() const {
return (_has_bits_[0] & 0x00000080u) != 0;
}
inline const ::enterprise_management::BooleanPolicyProto& CloudPolicySettings::safebrowsingenabled() const {
const ::enterprise_management::BooleanPolicyProto* p = safebrowsingenabled_;
// @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.SafeBrowsingEnabled)
return p != nullptr ? *p : *reinterpret_cast<const ::enterprise_management::BooleanPolicyProto*>(
&::enterprise_management::_BooleanPolicyProto_default_instance_);
}
inline ::enterprise_management::BooleanPolicyProto* CloudPolicySettings::release_safebrowsingenabled() {
// @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.SafeBrowsingEnabled)
_has_bits_[0] &= ~0x00000080u;
::enterprise_management::BooleanPolicyProto* temp = safebrowsingenabled_;
safebrowsingenabled_ = nullptr;
return temp;
}
inline ::enterprise_management::BooleanPolicyProto* CloudPolicySettings::mutable_safebrowsingenabled() {
_has_bits_[0] |= 0x00000080u;
if (safebrowsingenabled_ == nullptr) {
auto* p = CreateMaybeMessage<::enterprise_management::BooleanPolicyProto>(GetArenaNoVirtual());
safebrowsingenabled_ = p;
}
// @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.SafeBrowsingEnabled)
return safebrowsingenabled_;
}
inline void CloudPolicySettings::set_allocated_safebrowsingenabled(::enterprise_management::BooleanPolicyProto* safebrowsingenabled) {
::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
if (message_arena == nullptr) {
delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(safebrowsingenabled_);
}
if (safebrowsingenabled) {
::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
if (message_arena != submessage_arena) {
safebrowsingenabled = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
message_arena, safebrowsingenabled, submessage_arena);
}
_has_bits_[0] |= 0x00000080u;
} else {
_has_bits_[0] &= ~0x00000080u;
}
safebrowsingenabled_ = safebrowsingenabled;
// @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.SafeBrowsingEnabled)
}

// optional .enterprise_management.BooleanPolicyProto PasswordManagerEnabled = 18;
inline bool CloudPolicySettings::has_passwordmanagerenabled() const {
return (_has_bits_[0] & 0x00000100u) != 0;
}
inline const ::enterprise_management::BooleanPolicyProto& CloudPolicySettings::passwordmanagerenabled() const {
const ::enterprise_management::BooleanPolicyProto* p = passwordmanagerenabled_;
// @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.PasswordManagerEnabled)
return p != nullptr ? *p : *reinterpret_cast<const ::enterprise_management::BooleanPolicyProto*>(
&::enterprise_management::_BooleanPolicyProto_default_instance_);
}
inline ::enterprise_management::BooleanPolicyProto* CloudPolicySettings::release_passwordmanagerenabled() {
// @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.PasswordManagerEnabled)
_has_bits_[0] &= ~0x00000100u;
::enterprise_management::BooleanPolicyProto* temp = passwordmanagerenabled_;
passwordmanagerenabled_ = nullptr;
return temp;
}
inline ::enterprise_management::BooleanPolicyProto* CloudPolicySettings::mutable_passwordmanagerenabled() {
_has_bits_[0] |= 0x00000100u;
if (passwordmanagerenabled_ == nullptr) {
auto* p = CreateMaybeMessage<::enterprise_management::BooleanPolicyProto>(GetArenaNoVirtual());
passwordmanagerenabled_ = p;
}
// @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.PasswordManagerEnabled)
return passwordmanagerenabled_;
}
inline void CloudPolicySettings::set_allocated_passwordmanagerenabled(::enterprise_management::BooleanPolicyProto* passwordmanagerenabled) {
::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
if (message_arena == nullptr) {
delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(passwordmanagerenabled_);
}
if (passwordmanagerenabled) {
::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
if (message_arena != submessage_arena) {
passwordmanagerenabled = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
message_arena, passwordmanagerenabled, submessage_arena);
}
_has_bits_[0] |= 0x00000100u;
} else {
_has_bits_[0] &= ~0x00000100u;
}
passwordmanagerenabled_ = passwordmanagerenabled;
// @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.PasswordManagerEnabled)
}

// optional .enterprise_management.BooleanPolicyProto PasswordLeakDetectionEnabled = 582;
inline bool CloudPolicySettings::has_passwordleakdetectionenabled() const {
return (_has_bits_[2] & 0x02000000u) != 0;
}
inline const ::enterprise_management::BooleanPolicyProto& CloudPolicySettings::passwordleakdetectionenabled() const {
const ::enterprise_management::BooleanPolicyProto* p = passwordleakdetectionenabled_;
// @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.PasswordLeakDetectionEnabled)
return p != nullptr ? *p : *reinterpret_cast<const ::enterprise_management::BooleanPolicyProto*>(
&::enterprise_management::_BooleanPolicyProto_default_instance_);
}
inline ::enterprise_management::BooleanPolicyProto* CloudPolicySettings::release_passwordleakdetectionenabled() {
// @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.PasswordLeakDetectionEnabled)
_has_bits_[2] &= ~0x02000000u;
::enterprise_management::BooleanPolicyProto* temp = passwordleakdetectionenabled_;
passwordleakdetectionenabled_ = nullptr;
return temp;
}
inline ::enterprise_management::BooleanPolicyProto* CloudPolicySettings::mutable_passwordleakdetectionenabled() {
_has_bits_[2] |= 0x02000000u;
if (passwordleakdetectionenabled_ == nullptr) {
auto* p = CreateMaybeMessage<::enterprise_management::BooleanPolicyProto>(GetArenaNoVirtual());
passwordleakdetectionenabled_ = p;
}
// @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.PasswordLeakDetectionEnabled)
return passwordleakdetectionenabled_;
}
inline void CloudPolicySettings::set_allocated_passwordleakdetectionenabled(::enterprise_management::BooleanPolicyProto* passwordleakdetectionenabled) {
::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
if (message_arena == nullptr) {
delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(passwordleakdetectionenabled_);
}
if (passwordleakdetectionenabled) {
::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
if (message_arena != submessage_arena) {
passwordleakdetectionenabled = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
message_arena, passwordleakdetectionenabled, submessage_arena);
}
_has_bits_[2] |= 0x02000000u;
} else {
_has_bits_[2] &= ~0x02000000u;
}
passwordleakdetectionenabled_ = passwordleakdetectionenabled;
// @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.PasswordLeakDetectionEnabled)
}

// optional .enterprise_management.BooleanPolicyProto AutoFillEnabled = 20;
inline bool CloudPolicySettings::has_autofillenabled() const {
return (_has_bits_[0] & 0x00000200u) != 0;
}
inline const ::enterprise_management::BooleanPolicyProto& CloudPolicySettings::autofillenabled() const {
const ::enterprise_management::BooleanPolicyProto* p = autofillenabled_;
// @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.AutoFillEnabled)
return p != nullptr ? *p : *reinterpret_cast<const ::enterprise_management::BooleanPolicyProto*>(
&::enterprise_management::_BooleanPolicyProto_default_instance_);
}
inline ::enterprise_management::BooleanPolicyProto* CloudPolicySettings::release_autofillenabled() {
// @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.AutoFillEnabled)
_has_bits_[0] &= ~0x00000200u;
::enterprise_management::BooleanPolicyProto* temp = autofillenabled_;
autofillenabled_ = nullptr;
return temp;
}
inline ::enterprise_management::BooleanPolicyProto* CloudPolicySettings::mutable_autofillenabled() {
_has_bits_[0] |= 0x00000200u;
if (autofillenabled_ == nullptr) {
auto* p = CreateMaybeMessage<::enterprise_management::BooleanPolicyProto>(GetArenaNoVirtual());
autofillenabled_ = p;
}
// @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.AutoFillEnabled)
return autofillenabled_;
}
inline void CloudPolicySettings::set_allocated_autofillenabled(::enterprise_management::BooleanPolicyProto* autofillenabled) {
::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
if (message_arena == nullptr) {
delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(autofillenabled_);
}
if (autofillenabled) {
::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
if (message_arena != submessage_arena) {
autofillenabled = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
message_arena, autofillenabled, submessage_arena);
}
_has_bits_[0] |= 0x00000200u;
} else {
_has_bits_[0] &= ~0x00000200u;
}
autofillenabled_ = autofillenabled;
// @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.AutoFillEnabled)
}

// optional .enterprise_management.BooleanPolicyProto AutofillAddressEnabled = 461;
inline bool CloudPolicySettings::has_autofilladdressenabled() const {
return (_has_bits_[2] & 0x00040000u) != 0;
}
inline const ::enterprise_management::BooleanPolicyProto& CloudPolicySettings::autofilladdressenabled() const {
const ::enterprise_management::BooleanPolicyProto* p = autofilladdressenabled_;
// @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.AutofillAddressEnabled)
return p != nullptr ? *p : *reinterpret_cast<const ::enterprise_management::BooleanPolicyProto*>(
&::enterprise_management::_BooleanPolicyProto_default_instance_);
}
inline ::enterprise_management::BooleanPolicyProto* CloudPolicySettings::release_autofilladdressenabled() {
// @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.AutofillAddressEnabled)
_has_bits_[2] &= ~0x00040000u;
::enterprise_management::BooleanPolicyProto* temp = autofilladdressenabled_;
autofilladdressenabled_ = nullptr;
return temp;
}
inline ::enterprise_management::BooleanPolicyProto* CloudPolicySettings::mutable_autofilladdressenabled() {
_has_bits_[2] |= 0x00040000u;
if (autofilladdressenabled_ == nullptr) {
auto* p = CreateMaybeMessage<::enterprise_management::BooleanPolicyProto>(GetArenaNoVirtual());
autofilladdressenabled_ = p;
}
// @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.AutofillAddressEnabled)
return autofilladdressenabled_;
}
inline void CloudPolicySettings::set_allocated_autofilladdressenabled(::enterprise_management::BooleanPolicyProto* autofilladdressenabled) {
::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
if (message_arena == nullptr) {
delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(autofilladdressenabled_);
}
if (autofilladdressenabled) {
::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
if (message_arena != submessage_arena) {
autofilladdressenabled = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
message_arena, autofilladdressenabled, submessage_arena);
}
_has_bits_[2] |= 0x00040000u;
} else {
_has_bits_[2] &= ~0x00040000u;
}
autofilladdressenabled_ = autofilladdressenabled;
// @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.AutofillAddressEnabled)
}

// optional .enterprise_management.BooleanPolicyProto AutofillCreditCardEnabled = 394;
inline bool CloudPolicySettings::has_autofillcreditcardenabled() const {
return (_has_bits_[2] & 0x00000080u) != 0;
}
inline const ::enterprise_management::BooleanPolicyProto& CloudPolicySettings::autofillcreditcardenabled() const {
const ::enterprise_management::BooleanPolicyProto* p = autofillcreditcardenabled_;
// @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.AutofillCreditCardEnabled)
return p != nullptr ? *p : *reinterpret_cast<const ::enterprise_management::BooleanPolicyProto*>(
&::enterprise_management::_BooleanPolicyProto_default_instance_);
}
inline ::enterprise_management::BooleanPolicyProto* CloudPolicySettings::release_autofillcreditcardenabled() {
// @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.AutofillCreditCardEnabled)
_has_bits_[2] &= ~0x00000080u;
::enterprise_management::BooleanPolicyProto* temp = autofillcreditcardenabled_;
autofillcreditcardenabled_ = nullptr;
return temp;
}
inline ::enterprise_management::BooleanPolicyProto* CloudPolicySettings::mutable_autofillcreditcardenabled() {
_has_bits_[2] |= 0x00000080u;
if (autofillcreditcardenabled_ == nullptr) {
auto* p = CreateMaybeMessage<::enterprise_management::BooleanPolicyProto>(GetArenaNoVirtual());
autofillcreditcardenabled_ = p;
}
// @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.AutofillCreditCardEnabled)
return autofillcreditcardenabled_;
}
inline void CloudPolicySettings::set_allocated_autofillcreditcardenabled(::enterprise_management::BooleanPolicyProto* autofillcreditcardenabled) {
::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
if (message_arena == nullptr) {
delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(autofillcreditcardenabled_);
}
if (autofillcreditcardenabled) {
::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
if (message_arena != submessage_arena) {
autofillcreditcardenabled = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
message_arena, autofillcreditcardenabled, submessage_arena);
}
_has_bits_[2] |= 0x00000080u;
} else {
_has_bits_[2] &= ~0x00000080u;
}
autofillcreditcardenabled_ = autofillcreditcardenabled;
// @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.AutofillCreditCardEnabled)
}

// optional .enterprise_management.StringListPolicyProto SyncTypesListDisabled = 651;
inline bool CloudPolicySettings::has_synctypeslistdisabled() const {
return (_has_bits_[3] & 0x00000002u) != 0;
}
inline const ::enterprise_management::StringListPolicyProto& CloudPolicySettings::synctypeslistdisabled() const {
const ::enterprise_management::StringListPolicyProto* p = synctypeslistdisabled_;
// @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.SyncTypesListDisabled)
return p != nullptr ? *p : *reinterpret_cast<const ::enterprise_management::StringListPolicyProto*>(
&::enterprise_management::_StringListPolicyProto_default_instance_);
}
inline ::enterprise_management::StringListPolicyProto* CloudPolicySettings::release_synctypeslistdisabled() {
// @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.SyncTypesListDisabled)
_has_bits_[3] &= ~0x00000002u;
::enterprise_management::StringListPolicyProto* temp = synctypeslistdisabled_;
synctypeslistdisabled_ = nullptr;
return temp;
}
inline ::enterprise_management::StringListPolicyProto* CloudPolicySettings::mutable_synctypeslistdisabled() {
_has_bits_[3] |= 0x00000002u;
if (synctypeslistdisabled_ == nullptr) {
auto* p = CreateMaybeMessage<::enterprise_management::StringListPolicyProto>(GetArenaNoVirtual());
synctypeslistdisabled_ = p;
}
// @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.SyncTypesListDisabled)
return synctypeslistdisabled_;
}
inline void CloudPolicySettings::set_allocated_synctypeslistdisabled(::enterprise_management::StringListPolicyProto* synctypeslistdisabled) {
::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
if (message_arena == nullptr) {
delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(synctypeslistdisabled_);
}
if (synctypeslistdisabled) {
::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
if (message_arena != submessage_arena) {
synctypeslistdisabled = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
message_arena, synctypeslistdisabled, submessage_arena);
}
_has_bits_[3] |= 0x00000002u;
} else {
_has_bits_[3] &= ~0x00000002u;
}
synctypeslistdisabled_ = synctypeslistdisabled;
// @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.SyncTypesListDisabled)
}

// optional .enterprise_management.BooleanPolicyProto SigninAllowed = 192;
inline bool CloudPolicySettings::has_signinallowed() const {
return (_has_bits_[1] & 0x00004000u) != 0;
}
inline const ::enterprise_management::BooleanPolicyProto& CloudPolicySettings::signinallowed() const {
const ::enterprise_management::BooleanPolicyProto* p = signinallowed_;
// @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.SigninAllowed)
return p != nullptr ? *p : *reinterpret_cast<const ::enterprise_management::BooleanPolicyProto*>(
&::enterprise_management::_BooleanPolicyProto_default_instance_);
}
inline ::enterprise_management::BooleanPolicyProto* CloudPolicySettings::release_signinallowed() {
// @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.SigninAllowed)
_has_bits_[1] &= ~0x00004000u;
::enterprise_management::BooleanPolicyProto* temp = signinallowed_;
signinallowed_ = nullptr;
return temp;
}
inline ::enterprise_management::BooleanPolicyProto* CloudPolicySettings::mutable_signinallowed() {
_has_bits_[1] |= 0x00004000u;
if (signinallowed_ == nullptr) {
auto* p = CreateMaybeMessage<::enterprise_management::BooleanPolicyProto>(GetArenaNoVirtual());
signinallowed_ = p;
}
// @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.SigninAllowed)
return signinallowed_;
}
inline void CloudPolicySettings::set_allocated_signinallowed(::enterprise_management::BooleanPolicyProto* signinallowed) {
::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
if (message_arena == nullptr) {
delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(signinallowed_);
}
if (signinallowed) {
::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
if (message_arena != submessage_arena) {
signinallowed = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
message_arena, signinallowed, submessage_arena);
}
_has_bits_[1] |= 0x00004000u;
} else {
_has_bits_[1] &= ~0x00004000u;
}
signinallowed_ = signinallowed;
// @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.SigninAllowed)
}

// optional .enterprise_management.StringPolicyProto ProxyMode = 23;
inline bool CloudPolicySettings::has_proxymode() const {
return (_has_bits_[0] & 0x00000400u) != 0;
}
inline const ::enterprise_management::StringPolicyProto& CloudPolicySettings::proxymode() const {
const ::enterprise_management::StringPolicyProto* p = proxymode_;
// @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.ProxyMode)
return p != nullptr ? *p : *reinterpret_cast<const ::enterprise_management::StringPolicyProto*>(
&::enterprise_management::_StringPolicyProto_default_instance_);
}
inline ::enterprise_management::StringPolicyProto* CloudPolicySettings::release_proxymode() {
// @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.ProxyMode)
_has_bits_[0] &= ~0x00000400u;
::enterprise_management::StringPolicyProto* temp = proxymode_;
proxymode_ = nullptr;
return temp;
}
inline ::enterprise_management::StringPolicyProto* CloudPolicySettings::mutable_proxymode() {
_has_bits_[0] |= 0x00000400u;
if (proxymode_ == nullptr) {
auto* p = CreateMaybeMessage<::enterprise_management::StringPolicyProto>(GetArenaNoVirtual());
proxymode_ = p;
}
// @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.ProxyMode)
return proxymode_;
}
inline void CloudPolicySettings::set_allocated_proxymode(::enterprise_management::StringPolicyProto* proxymode) {
::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
if (message_arena == nullptr) {
delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(proxymode_);
}
if (proxymode) {
::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
if (message_arena != submessage_arena) {
proxymode = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
message_arena, proxymode, submessage_arena);
}
_has_bits_[0] |= 0x00000400u;
} else {
_has_bits_[0] &= ~0x00000400u;
}
proxymode_ = proxymode;
// @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.ProxyMode)
}

// optional .enterprise_management.IntegerPolicyProto ProxyServerMode = 24;
inline bool CloudPolicySettings::has_proxyservermode() const {
return (_has_bits_[0] & 0x00000800u) != 0;
}
inline const ::enterprise_management::IntegerPolicyProto& CloudPolicySettings::proxyservermode() const {
const ::enterprise_management::IntegerPolicyProto* p = proxyservermode_;
// @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.ProxyServerMode)
return p != nullptr ? *p : *reinterpret_cast<const ::enterprise_management::IntegerPolicyProto*>(
&::enterprise_management::_IntegerPolicyProto_default_instance_);
}
inline ::enterprise_management::IntegerPolicyProto* CloudPolicySettings::release_proxyservermode() {
// @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.ProxyServerMode)
_has_bits_[0] &= ~0x00000800u;
::enterprise_management::IntegerPolicyProto* temp = proxyservermode_;
proxyservermode_ = nullptr;
return temp;
}
inline ::enterprise_management::IntegerPolicyProto* CloudPolicySettings::mutable_proxyservermode() {
_has_bits_[0] |= 0x00000800u;
if (proxyservermode_ == nullptr) {
auto* p = CreateMaybeMessage<::enterprise_management::IntegerPolicyProto>(GetArenaNoVirtual());
proxyservermode_ = p;
}
// @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.ProxyServerMode)
return proxyservermode_;
}
inline void CloudPolicySettings::set_allocated_proxyservermode(::enterprise_management::IntegerPolicyProto* proxyservermode) {
::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
if (message_arena == nullptr) {
delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(proxyservermode_);
}
if (proxyservermode) {
::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
if (message_arena != submessage_arena) {
proxyservermode = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
message_arena, proxyservermode, submessage_arena);
}
_has_bits_[0] |= 0x00000800u;
} else {
_has_bits_[0] &= ~0x00000800u;
}
proxyservermode_ = proxyservermode;
// @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.ProxyServerMode)
}

// optional .enterprise_management.StringPolicyProto ProxyServer = 25;
inline bool CloudPolicySettings::has_proxyserver() const {
return (_has_bits_[0] & 0x00001000u) != 0;
}
inline const ::enterprise_management::StringPolicyProto& CloudPolicySettings::proxyserver() const {
const ::enterprise_management::StringPolicyProto* p = proxyserver_;
// @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.ProxyServer)
return p != nullptr ? *p : *reinterpret_cast<const ::enterprise_management::StringPolicyProto*>(
&::enterprise_management::_StringPolicyProto_default_instance_);
}
inline ::enterprise_management::StringPolicyProto* CloudPolicySettings::release_proxyserver() {
// @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.ProxyServer)
_has_bits_[0] &= ~0x00001000u;
::enterprise_management::StringPolicyProto* temp = proxyserver_;
proxyserver_ = nullptr;
return temp;
}
inline ::enterprise_management::StringPolicyProto* CloudPolicySettings::mutable_proxyserver() {
_has_bits_[0] |= 0x00001000u;
if (proxyserver_ == nullptr) {
auto* p = CreateMaybeMessage<::enterprise_management::StringPolicyProto>(GetArenaNoVirtual());
proxyserver_ = p;
}
// @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.ProxyServer)
return proxyserver_;
}
inline void CloudPolicySettings::set_allocated_proxyserver(::enterprise_management::StringPolicyProto* proxyserver) {
::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
if (message_arena == nullptr) {
delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(proxyserver_);
}
if (proxyserver) {
::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
if (message_arena != submessage_arena) {
proxyserver = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
message_arena, proxyserver, submessage_arena);
}
_has_bits_[0] |= 0x00001000u;
} else {
_has_bits_[0] &= ~0x00001000u;
}
proxyserver_ = proxyserver;
// @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.ProxyServer)
}

// optional .enterprise_management.StringPolicyProto ProxyPacUrl = 26;
inline bool CloudPolicySettings::has_proxypacurl() const {
return (_has_bits_[0] & 0x00002000u) != 0;
}
inline const ::enterprise_management::StringPolicyProto& CloudPolicySettings::proxypacurl() const {
const ::enterprise_management::StringPolicyProto* p = proxypacurl_;
// @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.ProxyPacUrl)
return p != nullptr ? *p : *reinterpret_cast<const ::enterprise_management::StringPolicyProto*>(
&::enterprise_management::_StringPolicyProto_default_instance_);
}
inline ::enterprise_management::StringPolicyProto* CloudPolicySettings::release_proxypacurl() {
// @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.ProxyPacUrl)
_has_bits_[0] &= ~0x00002000u;
::enterprise_management::StringPolicyProto* temp = proxypacurl_;
proxypacurl_ = nullptr;
return temp;
}
inline ::enterprise_management::StringPolicyProto* CloudPolicySettings::mutable_proxypacurl() {
_has_bits_[0] |= 0x00002000u;
if (proxypacurl_ == nullptr) {
auto* p = CreateMaybeMessage<::enterprise_management::StringPolicyProto>(GetArenaNoVirtual());
proxypacurl_ = p;
}
// @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.ProxyPacUrl)
return proxypacurl_;
}
inline void CloudPolicySettings::set_allocated_proxypacurl(::enterprise_management::StringPolicyProto* proxypacurl) {
::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
if (message_arena == nullptr) {
delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(proxypacurl_);
}
if (proxypacurl) {
::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
if (message_arena != submessage_arena) {
proxypacurl = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
message_arena, proxypacurl, submessage_arena);
}
_has_bits_[0] |= 0x00002000u;
} else {
_has_bits_[0] &= ~0x00002000u;
}
proxypacurl_ = proxypacurl;
// @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.ProxyPacUrl)
}

// optional .enterprise_management.StringPolicyProto ProxyBypassList = 27;
inline bool CloudPolicySettings::has_proxybypasslist() const {
return (_has_bits_[0] & 0x00004000u) != 0;
}
inline const ::enterprise_management::StringPolicyProto& CloudPolicySettings::proxybypasslist() const {
const ::enterprise_management::StringPolicyProto* p = proxybypasslist_;
// @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.ProxyBypassList)
return p != nullptr ? *p : *reinterpret_cast<const ::enterprise_management::StringPolicyProto*>(
&::enterprise_management::_StringPolicyProto_default_instance_);
}
inline ::enterprise_management::StringPolicyProto* CloudPolicySettings::release_proxybypasslist() {
// @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.ProxyBypassList)
_has_bits_[0] &= ~0x00004000u;
::enterprise_management::StringPolicyProto* temp = proxybypasslist_;
proxybypasslist_ = nullptr;
return temp;
}
inline ::enterprise_management::StringPolicyProto* CloudPolicySettings::mutable_proxybypasslist() {
_has_bits_[0] |= 0x00004000u;
if (proxybypasslist_ == nullptr) {
auto* p = CreateMaybeMessage<::enterprise_management::StringPolicyProto>(GetArenaNoVirtual());
proxybypasslist_ = p;
}
// @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.ProxyBypassList)
return proxybypasslist_;
}
inline void CloudPolicySettings::set_allocated_proxybypasslist(::enterprise_management::StringPolicyProto* proxybypasslist) {
::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
if (message_arena == nullptr) {
delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(proxybypasslist_);
}
if (proxybypasslist) {
::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
if (message_arena != submessage_arena) {
proxybypasslist = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
message_arena, proxybypasslist, submessage_arena);
}
_has_bits_[0] |= 0x00004000u;
} else {
_has_bits_[0] &= ~0x00004000u;
}
proxybypasslist_ = proxybypasslist;
// @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.ProxyBypassList)
}

// optional .enterprise_management.StringPolicyProto ProxySettings = 118;
inline bool CloudPolicySettings::has_proxysettings() const {
return (_has_bits_[1] & 0x00000400u) != 0;
}
inline const ::enterprise_management::StringPolicyProto& CloudPolicySettings::proxysettings() const {
const ::enterprise_management::StringPolicyProto* p = proxysettings_;
// @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.ProxySettings)
return p != nullptr ? *p : *reinterpret_cast<const ::enterprise_management::StringPolicyProto*>(
&::enterprise_management::_StringPolicyProto_default_instance_);
}
inline ::enterprise_management::StringPolicyProto* CloudPolicySettings::release_proxysettings() {
// @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.ProxySettings)
_has_bits_[1] &= ~0x00000400u;
::enterprise_management::StringPolicyProto* temp = proxysettings_;
proxysettings_ = nullptr;
return temp;
}
inline ::enterprise_management::StringPolicyProto* CloudPolicySettings::mutable_proxysettings() {
_has_bits_[1] |= 0x00000400u;
if (proxysettings_ == nullptr) {
auto* p = CreateMaybeMessage<::enterprise_management::StringPolicyProto>(GetArenaNoVirtual());
proxysettings_ = p;
}
// @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.ProxySettings)
return proxysettings_;
}
inline void CloudPolicySettings::set_allocated_proxysettings(::enterprise_management::StringPolicyProto* proxysettings) {
::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
if (message_arena == nullptr) {
delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(proxysettings_);
}
if (proxysettings) {
::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
if (message_arena != submessage_arena) {
proxysettings = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
message_arena, proxysettings, submessage_arena);
}
_has_bits_[1] |= 0x00000400u;
} else {
_has_bits_[1] &= ~0x00000400u;
}
proxysettings_ = proxysettings;
// @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.ProxySettings)
}

// optional .enterprise_management.StringPolicyProto AuthSchemes = 28;
inline bool CloudPolicySettings::has_authschemes() const {
return (_has_bits_[0] & 0x00008000u) != 0;
}
inline const ::enterprise_management::StringPolicyProto& CloudPolicySettings::authschemes() const {
const ::enterprise_management::StringPolicyProto* p = authschemes_;
// @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.AuthSchemes)
return p != nullptr ? *p : *reinterpret_cast<const ::enterprise_management::StringPolicyProto*>(
&::enterprise_management::_StringPolicyProto_default_instance_);
}
inline ::enterprise_management::StringPolicyProto* CloudPolicySettings::release_authschemes() {
// @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.AuthSchemes)
_has_bits_[0] &= ~0x00008000u;
::enterprise_management::StringPolicyProto* temp = authschemes_;
authschemes_ = nullptr;
return temp;
}
inline ::enterprise_management::StringPolicyProto* CloudPolicySettings::mutable_authschemes() {
_has_bits_[0] |= 0x00008000u;
if (authschemes_ == nullptr) {
auto* p = CreateMaybeMessage<::enterprise_management::StringPolicyProto>(GetArenaNoVirtual());
authschemes_ = p;
}
// @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.AuthSchemes)
return authschemes_;
}
inline void CloudPolicySettings::set_allocated_authschemes(::enterprise_management::StringPolicyProto* authschemes) {
::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
if (message_arena == nullptr) {
delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(authschemes_);
}
if (authschemes) {
::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
if (message_arena != submessage_arena) {
authschemes = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
message_arena, authschemes, submessage_arena);
}
_has_bits_[0] |= 0x00008000u;
} else {
_has_bits_[0] &= ~0x00008000u;
}
authschemes_ = authschemes;
// @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.AuthSchemes)
}

// optional .enterprise_management.BooleanPolicyProto DisableAuthNegotiateCnameLookup = 29;
inline bool CloudPolicySettings::has_disableauthnegotiatecnamelookup() const {
return (_has_bits_[0] & 0x00010000u) != 0;
}
inline const ::enterprise_management::BooleanPolicyProto& CloudPolicySettings::disableauthnegotiatecnamelookup() const {
const ::enterprise_management::BooleanPolicyProto* p = disableauthnegotiatecnamelookup_;
// @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.DisableAuthNegotiateCnameLookup)
return p != nullptr ? *p : *reinterpret_cast<const ::enterprise_management::BooleanPolicyProto*>(
&::enterprise_management::_BooleanPolicyProto_default_instance_);
}
inline ::enterprise_management::BooleanPolicyProto* CloudPolicySettings::release_disableauthnegotiatecnamelookup() {
// @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.DisableAuthNegotiateCnameLookup)
_has_bits_[0] &= ~0x00010000u;
::enterprise_management::BooleanPolicyProto* temp = disableauthnegotiatecnamelookup_;
disableauthnegotiatecnamelookup_ = nullptr;
return temp;
}
inline ::enterprise_management::BooleanPolicyProto* CloudPolicySettings::mutable_disableauthnegotiatecnamelookup() {
_has_bits_[0] |= 0x00010000u;
if (disableauthnegotiatecnamelookup_ == nullptr) {
auto* p = CreateMaybeMessage<::enterprise_management::BooleanPolicyProto>(GetArenaNoVirtual());
disableauthnegotiatecnamelookup_ = p;
}
// @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.DisableAuthNegotiateCnameLookup)
return disableauthnegotiatecnamelookup_;
}
inline void CloudPolicySettings::set_allocated_disableauthnegotiatecnamelookup(::enterprise_management::BooleanPolicyProto* disableauthnegotiatecnamelookup) {
::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
if (message_arena == nullptr) {
delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(disableauthnegotiatecnamelookup_);
}
if (disableauthnegotiatecnamelookup) {
::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
if (message_arena != submessage_arena) {
disableauthnegotiatecnamelookup = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
message_arena, disableauthnegotiatecnamelookup, submessage_arena);
}
_has_bits_[0] |= 0x00010000u;
} else {
_has_bits_[0] &= ~0x00010000u;
}
disableauthnegotiatecnamelookup_ = disableauthnegotiatecnamelookup;
// @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.DisableAuthNegotiateCnameLookup)
}

// optional .enterprise_management.StringPolicyProto AuthServerWhitelist = 31;
inline bool CloudPolicySettings::has_authserverwhitelist() const {
return (_has_bits_[0] & 0x00020000u) != 0;
}
inline const ::enterprise_management::StringPolicyProto& CloudPolicySettings::authserverwhitelist() const {
const ::enterprise_management::StringPolicyProto* p = authserverwhitelist_;
// @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.AuthServerWhitelist)
return p != nullptr ? *p : *reinterpret_cast<const ::enterprise_management::StringPolicyProto*>(
&::enterprise_management::_StringPolicyProto_default_instance_);
}
inline ::enterprise_management::StringPolicyProto* CloudPolicySettings::release_authserverwhitelist() {
// @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.AuthServerWhitelist)
_has_bits_[0] &= ~0x00020000u;
::enterprise_management::StringPolicyProto* temp = authserverwhitelist_;
authserverwhitelist_ = nullptr;
return temp;
}
inline ::enterprise_management::StringPolicyProto* CloudPolicySettings::mutable_authserverwhitelist() {
_has_bits_[0] |= 0x00020000u;
if (authserverwhitelist_ == nullptr) {
auto* p = CreateMaybeMessage<::enterprise_management::StringPolicyProto>(GetArenaNoVirtual());
authserverwhitelist_ = p;
}
// @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.AuthServerWhitelist)
return authserverwhitelist_;
}
inline void CloudPolicySettings::set_allocated_authserverwhitelist(::enterprise_management::StringPolicyProto* authserverwhitelist) {
::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
if (message_arena == nullptr) {
delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(authserverwhitelist_);
}
if (authserverwhitelist) {
::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
if (message_arena != submessage_arena) {
authserverwhitelist = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
message_arena, authserverwhitelist, submessage_arena);
}
_has_bits_[0] |= 0x00020000u;
} else {
_has_bits_[0] &= ~0x00020000u;
}
authserverwhitelist_ = authserverwhitelist;
// @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.AuthServerWhitelist)
}

// optional .enterprise_management.StringPolicyProto AuthNegotiateDelegateWhitelist = 32;
inline bool CloudPolicySettings::has_authnegotiatedelegatewhitelist() const {
return (_has_bits_[0] & 0x00040000u) != 0;
}
inline const ::enterprise_management::StringPolicyProto& CloudPolicySettings::authnegotiatedelegatewhitelist() const {
const ::enterprise_management::StringPolicyProto* p = authnegotiatedelegatewhitelist_;
// @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.AuthNegotiateDelegateWhitelist)
return p != nullptr ? *p : *reinterpret_cast<const ::enterprise_management::StringPolicyProto*>(
&::enterprise_management::_StringPolicyProto_default_instance_);
}
inline ::enterprise_management::StringPolicyProto* CloudPolicySettings::release_authnegotiatedelegatewhitelist() {
// @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.AuthNegotiateDelegateWhitelist)
_has_bits_[0] &= ~0x00040000u;
::enterprise_management::StringPolicyProto* temp = authnegotiatedelegatewhitelist_;
authnegotiatedelegatewhitelist_ = nullptr;
return temp;
}
inline ::enterprise_management::StringPolicyProto* CloudPolicySettings::mutable_authnegotiatedelegatewhitelist() {
_has_bits_[0] |= 0x00040000u;
if (authnegotiatedelegatewhitelist_ == nullptr) {
auto* p = CreateMaybeMessage<::enterprise_management::StringPolicyProto>(GetArenaNoVirtual());
authnegotiatedelegatewhitelist_ = p;
}
// @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.AuthNegotiateDelegateWhitelist)
return authnegotiatedelegatewhitelist_;
}
inline void CloudPolicySettings::set_allocated_authnegotiatedelegatewhitelist(::enterprise_management::StringPolicyProto* authnegotiatedelegatewhitelist) {
::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
if (message_arena == nullptr) {
delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(authnegotiatedelegatewhitelist_);
}
if (authnegotiatedelegatewhitelist) {
::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
if (message_arena != submessage_arena) {
authnegotiatedelegatewhitelist = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
message_arena, authnegotiatedelegatewhitelist, submessage_arena);
}
_has_bits_[0] |= 0x00040000u;
} else {
_has_bits_[0] &= ~0x00040000u;
}
authnegotiatedelegatewhitelist_ = authnegotiatedelegatewhitelist;
// @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.AuthNegotiateDelegateWhitelist)
}

// optional .enterprise_management.StringPolicyProto AuthAndroidNegotiateAccountType = 307;
inline bool CloudPolicySettings::has_authandroidnegotiateaccounttype() const {
return (_has_bits_[1] & 0x40000000u) != 0;
}
inline const ::enterprise_management::StringPolicyProto& CloudPolicySettings::authandroidnegotiateaccounttype() const {
const ::enterprise_management::StringPolicyProto* p = authandroidnegotiateaccounttype_;
// @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.AuthAndroidNegotiateAccountType)
return p != nullptr ? *p : *reinterpret_cast<const ::enterprise_management::StringPolicyProto*>(
&::enterprise_management::_StringPolicyProto_default_instance_);
}
inline ::enterprise_management::StringPolicyProto* CloudPolicySettings::release_authandroidnegotiateaccounttype() {
// @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.AuthAndroidNegotiateAccountType)
_has_bits_[1] &= ~0x40000000u;
::enterprise_management::StringPolicyProto* temp = authandroidnegotiateaccounttype_;
authandroidnegotiateaccounttype_ = nullptr;
return temp;
}
inline ::enterprise_management::StringPolicyProto* CloudPolicySettings::mutable_authandroidnegotiateaccounttype() {
_has_bits_[1] |= 0x40000000u;
if (authandroidnegotiateaccounttype_ == nullptr) {
auto* p = CreateMaybeMessage<::enterprise_management::StringPolicyProto>(GetArenaNoVirtual());
authandroidnegotiateaccounttype_ = p;
}
// @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.AuthAndroidNegotiateAccountType)
return authandroidnegotiateaccounttype_;
}
inline void CloudPolicySettings::set_allocated_authandroidnegotiateaccounttype(::enterprise_management::StringPolicyProto* authandroidnegotiateaccounttype) {
::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
if (message_arena == nullptr) {
delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(authandroidnegotiateaccounttype_);
}
if (authandroidnegotiateaccounttype) {
::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
if (message_arena != submessage_arena) {
authandroidnegotiateaccounttype = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
message_arena, authandroidnegotiateaccounttype, submessage_arena);
}
_has_bits_[1] |= 0x40000000u;
} else {
_has_bits_[1] &= ~0x40000000u;
}
authandroidnegotiateaccounttype_ = authandroidnegotiateaccounttype;
// @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.AuthAndroidNegotiateAccountType)
}

// optional .enterprise_management.BooleanPolicyProto NtlmV2Enabled = 395;
inline bool CloudPolicySettings::has_ntlmv2enabled() const {
return (_has_bits_[2] & 0x00000100u) != 0;
}
inline const ::enterprise_management::BooleanPolicyProto& CloudPolicySettings::ntlmv2enabled() const {
const ::enterprise_management::BooleanPolicyProto* p = ntlmv2enabled_;
// @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.NtlmV2Enabled)
return p != nullptr ? *p : *reinterpret_cast<const ::enterprise_management::BooleanPolicyProto*>(
&::enterprise_management::_BooleanPolicyProto_default_instance_);
}
inline ::enterprise_management::BooleanPolicyProto* CloudPolicySettings::release_ntlmv2enabled() {
// @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.NtlmV2Enabled)
_has_bits_[2] &= ~0x00000100u;
::enterprise_management::BooleanPolicyProto* temp = ntlmv2enabled_;
ntlmv2enabled_ = nullptr;
return temp;
}
inline ::enterprise_management::BooleanPolicyProto* CloudPolicySettings::mutable_ntlmv2enabled() {
_has_bits_[2] |= 0x00000100u;
if (ntlmv2enabled_ == nullptr) {
auto* p = CreateMaybeMessage<::enterprise_management::BooleanPolicyProto>(GetArenaNoVirtual());
ntlmv2enabled_ = p;
}
// @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.NtlmV2Enabled)
return ntlmv2enabled_;
}
inline void CloudPolicySettings::set_allocated_ntlmv2enabled(::enterprise_management::BooleanPolicyProto* ntlmv2enabled) {
::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
if (message_arena == nullptr) {
delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(ntlmv2enabled_);
}
if (ntlmv2enabled) {
::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
if (message_arena != submessage_arena) {
ntlmv2enabled = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
message_arena, ntlmv2enabled, submessage_arena);
}
_has_bits_[2] |= 0x00000100u;
} else {
_has_bits_[2] &= ~0x00000100u;
}
ntlmv2enabled_ = ntlmv2enabled;
// @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.NtlmV2Enabled)
}

// optional .enterprise_management.BooleanPolicyProto DefaultSearchProviderEnabled = 42;
inline bool CloudPolicySettings::has_defaultsearchproviderenabled() const {
return (_has_bits_[0] & 0x00080000u) != 0;
}
inline const ::enterprise_management::BooleanPolicyProto& CloudPolicySettings::defaultsearchproviderenabled() const {
const ::enterprise_management::BooleanPolicyProto* p = defaultsearchproviderenabled_;
// @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.DefaultSearchProviderEnabled)
return p != nullptr ? *p : *reinterpret_cast<const ::enterprise_management::BooleanPolicyProto*>(
&::enterprise_management::_BooleanPolicyProto_default_instance_);
}
inline ::enterprise_management::BooleanPolicyProto* CloudPolicySettings::release_defaultsearchproviderenabled() {
// @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.DefaultSearchProviderEnabled)
_has_bits_[0] &= ~0x00080000u;
::enterprise_management::BooleanPolicyProto* temp = defaultsearchproviderenabled_;
defaultsearchproviderenabled_ = nullptr;
return temp;
}
inline ::enterprise_management::BooleanPolicyProto* CloudPolicySettings::mutable_defaultsearchproviderenabled() {
_has_bits_[0] |= 0x00080000u;
if (defaultsearchproviderenabled_ == nullptr) {
auto* p = CreateMaybeMessage<::enterprise_management::BooleanPolicyProto>(GetArenaNoVirtual());
defaultsearchproviderenabled_ = p;
}
// @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.DefaultSearchProviderEnabled)
return defaultsearchproviderenabled_;
}
inline void CloudPolicySettings::set_allocated_defaultsearchproviderenabled(::enterprise_management::BooleanPolicyProto* defaultsearchproviderenabled) {
::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
if (message_arena == nullptr) {
delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(defaultsearchproviderenabled_);
}
if (defaultsearchproviderenabled) {
::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
if (message_arena != submessage_arena) {
defaultsearchproviderenabled = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
message_arena, defaultsearchproviderenabled, submessage_arena);
}
_has_bits_[0] |= 0x00080000u;
} else {
_has_bits_[0] &= ~0x00080000u;
}
defaultsearchproviderenabled_ = defaultsearchproviderenabled;
// @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.DefaultSearchProviderEnabled)
}

// optional .enterprise_management.StringPolicyProto DefaultSearchProviderName = 43;
inline bool CloudPolicySettings::has_defaultsearchprovidername() const {
return (_has_bits_[0] & 0x00100000u) != 0;
}
inline const ::enterprise_management::StringPolicyProto& CloudPolicySettings::defaultsearchprovidername() const {
const ::enterprise_management::StringPolicyProto* p = defaultsearchprovidername_;
// @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.DefaultSearchProviderName)
return p != nullptr ? *p : *reinterpret_cast<const ::enterprise_management::StringPolicyProto*>(
&::enterprise_management::_StringPolicyProto_default_instance_);
}
inline ::enterprise_management::StringPolicyProto* CloudPolicySettings::release_defaultsearchprovidername() {
// @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.DefaultSearchProviderName)
_has_bits_[0] &= ~0x00100000u;
::enterprise_management::StringPolicyProto* temp = defaultsearchprovidername_;
defaultsearchprovidername_ = nullptr;
return temp;
}
inline ::enterprise_management::StringPolicyProto* CloudPolicySettings::mutable_defaultsearchprovidername() {
_has_bits_[0] |= 0x00100000u;
if (defaultsearchprovidername_ == nullptr) {
auto* p = CreateMaybeMessage<::enterprise_management::StringPolicyProto>(GetArenaNoVirtual());
defaultsearchprovidername_ = p;
}
// @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.DefaultSearchProviderName)
return defaultsearchprovidername_;
}
inline void CloudPolicySettings::set_allocated_defaultsearchprovidername(::enterprise_management::StringPolicyProto* defaultsearchprovidername) {
::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
if (message_arena == nullptr) {
delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(defaultsearchprovidername_);
}
if (defaultsearchprovidername) {
::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
if (message_arena != submessage_arena) {
defaultsearchprovidername = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
message_arena, defaultsearchprovidername, submessage_arena);
}
_has_bits_[0] |= 0x00100000u;
} else {
_has_bits_[0] &= ~0x00100000u;
}
defaultsearchprovidername_ = defaultsearchprovidername;
// @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.DefaultSearchProviderName)
}

// optional .enterprise_management.StringPolicyProto DefaultSearchProviderKeyword = 44;
inline bool CloudPolicySettings::has_defaultsearchproviderkeyword() const {
return (_has_bits_[0] & 0x00200000u) != 0;
}
inline const ::enterprise_management::StringPolicyProto& CloudPolicySettings::defaultsearchproviderkeyword() const {
const ::enterprise_management::StringPolicyProto* p = defaultsearchproviderkeyword_;
// @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.DefaultSearchProviderKeyword)
return p != nullptr ? *p : *reinterpret_cast<const ::enterprise_management::StringPolicyProto*>(
&::enterprise_management::_StringPolicyProto_default_instance_);
}
inline ::enterprise_management::StringPolicyProto* CloudPolicySettings::release_defaultsearchproviderkeyword() {
// @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.DefaultSearchProviderKeyword)
_has_bits_[0] &= ~0x00200000u;
::enterprise_management::StringPolicyProto* temp = defaultsearchproviderkeyword_;
defaultsearchproviderkeyword_ = nullptr;
return temp;
}
inline ::enterprise_management::StringPolicyProto* CloudPolicySettings::mutable_defaultsearchproviderkeyword() {
_has_bits_[0] |= 0x00200000u;
if (defaultsearchproviderkeyword_ == nullptr) {
auto* p = CreateMaybeMessage<::enterprise_management::StringPolicyProto>(GetArenaNoVirtual());
defaultsearchproviderkeyword_ = p;
}
// @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.DefaultSearchProviderKeyword)
return defaultsearchproviderkeyword_;
}
inline void CloudPolicySettings::set_allocated_defaultsearchproviderkeyword(::enterprise_management::StringPolicyProto* defaultsearchproviderkeyword) {
::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
if (message_arena == nullptr) {
delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(defaultsearchproviderkeyword_);
}
if (defaultsearchproviderkeyword) {
::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
if (message_arena != submessage_arena) {
defaultsearchproviderkeyword = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
message_arena, defaultsearchproviderkeyword, submessage_arena);
}
_has_bits_[0] |= 0x00200000u;
} else {
_has_bits_[0] &= ~0x00200000u;
}
defaultsearchproviderkeyword_ = defaultsearchproviderkeyword;
// @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.DefaultSearchProviderKeyword)
}

// optional .enterprise_management.StringPolicyProto DefaultSearchProviderSearchURL = 45;
inline bool CloudPolicySettings::has_defaultsearchprovidersearchurl() const {
return (_has_bits_[0] & 0x00400000u) != 0;
}
inline const ::enterprise_management::StringPolicyProto& CloudPolicySettings::defaultsearchprovidersearchurl() const {
const ::enterprise_management::StringPolicyProto* p = defaultsearchprovidersearchurl_;
// @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.DefaultSearchProviderSearchURL)
return p != nullptr ? *p : *reinterpret_cast<const ::enterprise_management::StringPolicyProto*>(
&::enterprise_management::_StringPolicyProto_default_instance_);
}
inline ::enterprise_management::StringPolicyProto* CloudPolicySettings::release_defaultsearchprovidersearchurl() {
// @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.DefaultSearchProviderSearchURL)
_has_bits_[0] &= ~0x00400000u;
::enterprise_management::StringPolicyProto* temp = defaultsearchprovidersearchurl_;
defaultsearchprovidersearchurl_ = nullptr;
return temp;
}
inline ::enterprise_management::StringPolicyProto* CloudPolicySettings::mutable_defaultsearchprovidersearchurl() {
_has_bits_[0] |= 0x00400000u;
if (defaultsearchprovidersearchurl_ == nullptr) {
auto* p = CreateMaybeMessage<::enterprise_management::StringPolicyProto>(GetArenaNoVirtual());
defaultsearchprovidersearchurl_ = p;
}
// @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.DefaultSearchProviderSearchURL)
return defaultsearchprovidersearchurl_;
}
inline void CloudPolicySettings::set_allocated_defaultsearchprovidersearchurl(::enterprise_management::StringPolicyProto* defaultsearchprovidersearchurl) {
::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
if (message_arena == nullptr) {
delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(defaultsearchprovidersearchurl_);
}
if (defaultsearchprovidersearchurl) {
::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
if (message_arena != submessage_arena) {
defaultsearchprovidersearchurl = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
message_arena, defaultsearchprovidersearchurl, submessage_arena);
}
_has_bits_[0] |= 0x00400000u;
} else {
_has_bits_[0] &= ~0x00400000u;
}
defaultsearchprovidersearchurl_ = defaultsearchprovidersearchurl;
// @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.DefaultSearchProviderSearchURL)
}

// optional .enterprise_management.StringPolicyProto DefaultSearchProviderSuggestURL = 46;
inline bool CloudPolicySettings::has_defaultsearchprovidersuggesturl() const {
return (_has_bits_[0] & 0x00800000u) != 0;
}
inline const ::enterprise_management::StringPolicyProto& CloudPolicySettings::defaultsearchprovidersuggesturl() const {
const ::enterprise_management::StringPolicyProto* p = defaultsearchprovidersuggesturl_;
// @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.DefaultSearchProviderSuggestURL)
return p != nullptr ? *p : *reinterpret_cast<const ::enterprise_management::StringPolicyProto*>(
&::enterprise_management::_StringPolicyProto_default_instance_);
}
inline ::enterprise_management::StringPolicyProto* CloudPolicySettings::release_defaultsearchprovidersuggesturl() {
// @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.DefaultSearchProviderSuggestURL)
_has_bits_[0] &= ~0x00800000u;
::enterprise_management::StringPolicyProto* temp = defaultsearchprovidersuggesturl_;
defaultsearchprovidersuggesturl_ = nullptr;
return temp;
}
inline ::enterprise_management::StringPolicyProto* CloudPolicySettings::mutable_defaultsearchprovidersuggesturl() {
_has_bits_[0] |= 0x00800000u;
if (defaultsearchprovidersuggesturl_ == nullptr) {
auto* p = CreateMaybeMessage<::enterprise_management::StringPolicyProto>(GetArenaNoVirtual());
defaultsearchprovidersuggesturl_ = p;
}
// @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.DefaultSearchProviderSuggestURL)
return defaultsearchprovidersuggesturl_;
}
inline void CloudPolicySettings::set_allocated_defaultsearchprovidersuggesturl(::enterprise_management::StringPolicyProto* defaultsearchprovidersuggesturl) {
::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
if (message_arena == nullptr) {
delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(defaultsearchprovidersuggesturl_);
}
if (defaultsearchprovidersuggesturl) {
::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
if (message_arena != submessage_arena) {
defaultsearchprovidersuggesturl = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
message_arena, defaultsearchprovidersuggesturl, submessage_arena);
}
_has_bits_[0] |= 0x00800000u;
} else {
_has_bits_[0] &= ~0x00800000u;
}
defaultsearchprovidersuggesturl_ = defaultsearchprovidersuggesturl;
// @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.DefaultSearchProviderSuggestURL)
}

// optional .enterprise_management.StringPolicyProto DefaultSearchProviderIconURL = 48;
inline bool CloudPolicySettings::has_defaultsearchprovidericonurl() const {
return (_has_bits_[0] & 0x01000000u) != 0;
}
inline const ::enterprise_management::StringPolicyProto& CloudPolicySettings::defaultsearchprovidericonurl() const {
const ::enterprise_management::StringPolicyProto* p = defaultsearchprovidericonurl_;
// @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.DefaultSearchProviderIconURL)
return p != nullptr ? *p : *reinterpret_cast<const ::enterprise_management::StringPolicyProto*>(
&::enterprise_management::_StringPolicyProto_default_instance_);
}
inline ::enterprise_management::StringPolicyProto* CloudPolicySettings::release_defaultsearchprovidericonurl() {
// @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.DefaultSearchProviderIconURL)
_has_bits_[0] &= ~0x01000000u;
::enterprise_management::StringPolicyProto* temp = defaultsearchprovidericonurl_;
defaultsearchprovidericonurl_ = nullptr;
return temp;
}
inline ::enterprise_management::StringPolicyProto* CloudPolicySettings::mutable_defaultsearchprovidericonurl() {
_has_bits_[0] |= 0x01000000u;
if (defaultsearchprovidericonurl_ == nullptr) {
auto* p = CreateMaybeMessage<::enterprise_management::StringPolicyProto>(GetArenaNoVirtual());
defaultsearchprovidericonurl_ = p;
}
// @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.DefaultSearchProviderIconURL)
return defaultsearchprovidericonurl_;
}
inline void CloudPolicySettings::set_allocated_defaultsearchprovidericonurl(::enterprise_management::StringPolicyProto* defaultsearchprovidericonurl) {
::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
if (message_arena == nullptr) {
delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(defaultsearchprovidericonurl_);
}
if (defaultsearchprovidericonurl) {
::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
if (message_arena != submessage_arena) {
defaultsearchprovidericonurl = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
message_arena, defaultsearchprovidericonurl, submessage_arena);
}
_has_bits_[0] |= 0x01000000u;
} else {
_has_bits_[0] &= ~0x01000000u;
}
defaultsearchprovidericonurl_ = defaultsearchprovidericonurl;
// @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.DefaultSearchProviderIconURL)
}

// optional .enterprise_management.StringListPolicyProto DefaultSearchProviderEncodings = 49;
inline bool CloudPolicySettings::has_defaultsearchproviderencodings() const {
return (_has_bits_[0] & 0x02000000u) != 0;
}
inline const ::enterprise_management::StringListPolicyProto& CloudPolicySettings::defaultsearchproviderencodings() const {
const ::enterprise_management::StringListPolicyProto* p = defaultsearchproviderencodings_;
// @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.DefaultSearchProviderEncodings)
return p != nullptr ? *p : *reinterpret_cast<const ::enterprise_management::StringListPolicyProto*>(
&::enterprise_management::_StringListPolicyProto_default_instance_);
}
inline ::enterprise_management::StringListPolicyProto* CloudPolicySettings::release_defaultsearchproviderencodings() {
// @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.DefaultSearchProviderEncodings)
_has_bits_[0] &= ~0x02000000u;
::enterprise_management::StringListPolicyProto* temp = defaultsearchproviderencodings_;
defaultsearchproviderencodings_ = nullptr;
return temp;
}
inline ::enterprise_management::StringListPolicyProto* CloudPolicySettings::mutable_defaultsearchproviderencodings() {
_has_bits_[0] |= 0x02000000u;
if (defaultsearchproviderencodings_ == nullptr) {
auto* p = CreateMaybeMessage<::enterprise_management::StringListPolicyProto>(GetArenaNoVirtual());
defaultsearchproviderencodings_ = p;
}
// @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.DefaultSearchProviderEncodings)
return defaultsearchproviderencodings_;
}
inline void CloudPolicySettings::set_allocated_defaultsearchproviderencodings(::enterprise_management::StringListPolicyProto* defaultsearchproviderencodings) {
::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
if (message_arena == nullptr) {
delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(defaultsearchproviderencodings_);
}
if (defaultsearchproviderencodings) {
::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
if (message_arena != submessage_arena) {
defaultsearchproviderencodings = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
message_arena, defaultsearchproviderencodings, submessage_arena);
}
_has_bits_[0] |= 0x02000000u;
} else {
_has_bits_[0] &= ~0x02000000u;
}
defaultsearchproviderencodings_ = defaultsearchproviderencodings;
// @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.DefaultSearchProviderEncodings)
}

// optional .enterprise_management.StringListPolicyProto DefaultSearchProviderAlternateURLs = 163;
inline bool CloudPolicySettings::has_defaultsearchprovideralternateurls() const {
return (_has_bits_[1] & 0x00001000u) != 0;
}
inline const ::enterprise_management::StringListPolicyProto& CloudPolicySettings::defaultsearchprovideralternateurls() const {
const ::enterprise_management::StringListPolicyProto* p = defaultsearchprovideralternateurls_;
// @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.DefaultSearchProviderAlternateURLs)
return p != nullptr ? *p : *reinterpret_cast<const ::enterprise_management::StringListPolicyProto*>(
&::enterprise_management::_StringListPolicyProto_default_instance_);
}
inline ::enterprise_management::StringListPolicyProto* CloudPolicySettings::release_defaultsearchprovideralternateurls() {
// @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.DefaultSearchProviderAlternateURLs)
_has_bits_[1] &= ~0x00001000u;
::enterprise_management::StringListPolicyProto* temp = defaultsearchprovideralternateurls_;
defaultsearchprovideralternateurls_ = nullptr;
return temp;
}
inline ::enterprise_management::StringListPolicyProto* CloudPolicySettings::mutable_defaultsearchprovideralternateurls() {
_has_bits_[1] |= 0x00001000u;
if (defaultsearchprovideralternateurls_ == nullptr) {
auto* p = CreateMaybeMessage<::enterprise_management::StringListPolicyProto>(GetArenaNoVirtual());
defaultsearchprovideralternateurls_ = p;
}
// @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.DefaultSearchProviderAlternateURLs)
return defaultsearchprovideralternateurls_;
}
inline void CloudPolicySettings::set_allocated_defaultsearchprovideralternateurls(::enterprise_management::StringListPolicyProto* defaultsearchprovideralternateurls) {
::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
if (message_arena == nullptr) {
delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(defaultsearchprovideralternateurls_);
}
if (defaultsearchprovideralternateurls) {
::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
if (message_arena != submessage_arena) {
defaultsearchprovideralternateurls = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
message_arena, defaultsearchprovideralternateurls, submessage_arena);
}
_has_bits_[1] |= 0x00001000u;
} else {
_has_bits_[1] &= ~0x00001000u;
}
defaultsearchprovideralternateurls_ = defaultsearchprovideralternateurls;
// @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.DefaultSearchProviderAlternateURLs)
}

// optional .enterprise_management.StringPolicyProto DefaultSearchProviderImageURL = 231;
inline bool CloudPolicySettings::has_defaultsearchproviderimageurl() const {
return (_has_bits_[1] & 0x00020000u) != 0;
}
inline const ::enterprise_management::StringPolicyProto& CloudPolicySettings::defaultsearchproviderimageurl() const {
const ::enterprise_management::StringPolicyProto* p = defaultsearchproviderimageurl_;
// @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.DefaultSearchProviderImageURL)
return p != nullptr ? *p : *reinterpret_cast<const ::enterprise_management::StringPolicyProto*>(
&::enterprise_management::_StringPolicyProto_default_instance_);
}
inline ::enterprise_management::StringPolicyProto* CloudPolicySettings::release_defaultsearchproviderimageurl() {
// @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.DefaultSearchProviderImageURL)
_has_bits_[1] &= ~0x00020000u;
::enterprise_management::StringPolicyProto* temp = defaultsearchproviderimageurl_;
defaultsearchproviderimageurl_ = nullptr;
return temp;
}
inline ::enterprise_management::StringPolicyProto* CloudPolicySettings::mutable_defaultsearchproviderimageurl() {
_has_bits_[1] |= 0x00020000u;
if (defaultsearchproviderimageurl_ == nullptr) {
auto* p = CreateMaybeMessage<::enterprise_management::StringPolicyProto>(GetArenaNoVirtual());
defaultsearchproviderimageurl_ = p;
}
// @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.DefaultSearchProviderImageURL)
return defaultsearchproviderimageurl_;
}
inline void CloudPolicySettings::set_allocated_defaultsearchproviderimageurl(::enterprise_management::StringPolicyProto* defaultsearchproviderimageurl) {
::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
if (message_arena == nullptr) {
delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(defaultsearchproviderimageurl_);
}
if (defaultsearchproviderimageurl) {
::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
if (message_arena != submessage_arena) {
defaultsearchproviderimageurl = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
message_arena, defaultsearchproviderimageurl, submessage_arena);
}
_has_bits_[1] |= 0x00020000u;
} else {
_has_bits_[1] &= ~0x00020000u;
}
defaultsearchproviderimageurl_ = defaultsearchproviderimageurl;
// @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.DefaultSearchProviderImageURL)
}

// optional .enterprise_management.StringPolicyProto DefaultSearchProviderNewTabURL = 239;
inline bool CloudPolicySettings::has_defaultsearchprovidernewtaburl() const {
return (_has_bits_[1] & 0x00200000u) != 0;
}
inline const ::enterprise_management::StringPolicyProto& CloudPolicySettings::defaultsearchprovidernewtaburl() const {
const ::enterprise_management::StringPolicyProto* p = defaultsearchprovidernewtaburl_;
// @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.DefaultSearchProviderNewTabURL)
return p != nullptr ? *p : *reinterpret_cast<const ::enterprise_management::StringPolicyProto*>(
&::enterprise_management::_StringPolicyProto_default_instance_);
}
inline ::enterprise_management::StringPolicyProto* CloudPolicySettings::release_defaultsearchprovidernewtaburl() {
// @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.DefaultSearchProviderNewTabURL)
_has_bits_[1] &= ~0x00200000u;
::enterprise_management::StringPolicyProto* temp = defaultsearchprovidernewtaburl_;
defaultsearchprovidernewtaburl_ = nullptr;
return temp;
}
inline ::enterprise_management::StringPolicyProto* CloudPolicySettings::mutable_defaultsearchprovidernewtaburl() {
_has_bits_[1] |= 0x00200000u;
if (defaultsearchprovidernewtaburl_ == nullptr) {
auto* p = CreateMaybeMessage<::enterprise_management::StringPolicyProto>(GetArenaNoVirtual());
defaultsearchprovidernewtaburl_ = p;
}
// @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.DefaultSearchProviderNewTabURL)
return defaultsearchprovidernewtaburl_;
}
inline void CloudPolicySettings::set_allocated_defaultsearchprovidernewtaburl(::enterprise_management::StringPolicyProto* defaultsearchprovidernewtaburl) {
::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
if (message_arena == nullptr) {
delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(defaultsearchprovidernewtaburl_);
}
if (defaultsearchprovidernewtaburl) {
::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
if (message_arena != submessage_arena) {
defaultsearchprovidernewtaburl = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
message_arena, defaultsearchprovidernewtaburl, submessage_arena);
}
_has_bits_[1] |= 0x00200000u;
} else {
_has_bits_[1] &= ~0x00200000u;
}
defaultsearchprovidernewtaburl_ = defaultsearchprovidernewtaburl;
// @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.DefaultSearchProviderNewTabURL)
}

// optional .enterprise_management.StringPolicyProto DefaultSearchProviderSearchURLPostParams = 232;
inline bool CloudPolicySettings::has_defaultsearchprovidersearchurlpostparams() const {
return (_has_bits_[1] & 0x00040000u) != 0;
}
inline const ::enterprise_management::StringPolicyProto& CloudPolicySettings::defaultsearchprovidersearchurlpostparams() const {
const ::enterprise_management::StringPolicyProto* p = defaultsearchprovidersearchurlpostparams_;
// @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.DefaultSearchProviderSearchURLPostParams)
return p != nullptr ? *p : *reinterpret_cast<const ::enterprise_management::StringPolicyProto*>(
&::enterprise_management::_StringPolicyProto_default_instance_);
}
inline ::enterprise_management::StringPolicyProto* CloudPolicySettings::release_defaultsearchprovidersearchurlpostparams() {
// @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.DefaultSearchProviderSearchURLPostParams)
_has_bits_[1] &= ~0x00040000u;
::enterprise_management::StringPolicyProto* temp = defaultsearchprovidersearchurlpostparams_;
defaultsearchprovidersearchurlpostparams_ = nullptr;
return temp;
}
inline ::enterprise_management::StringPolicyProto* CloudPolicySettings::mutable_defaultsearchprovidersearchurlpostparams() {
_has_bits_[1] |= 0x00040000u;
if (defaultsearchprovidersearchurlpostparams_ == nullptr) {
auto* p = CreateMaybeMessage<::enterprise_management::StringPolicyProto>(GetArenaNoVirtual());
defaultsearchprovidersearchurlpostparams_ = p;
}
// @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.DefaultSearchProviderSearchURLPostParams)
return defaultsearchprovidersearchurlpostparams_;
}
inline void CloudPolicySettings::set_allocated_defaultsearchprovidersearchurlpostparams(::enterprise_management::StringPolicyProto* defaultsearchprovidersearchurlpostparams) {
::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
if (message_arena == nullptr) {
delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(defaultsearchprovidersearchurlpostparams_);
}
if (defaultsearchprovidersearchurlpostparams) {
::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
if (message_arena != submessage_arena) {
defaultsearchprovidersearchurlpostparams = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
message_arena, defaultsearchprovidersearchurlpostparams, submessage_arena);
}
_has_bits_[1] |= 0x00040000u;
} else {
_has_bits_[1] &= ~0x00040000u;
}
defaultsearchprovidersearchurlpostparams_ = defaultsearchprovidersearchurlpostparams;
// @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.DefaultSearchProviderSearchURLPostParams)
}

// optional .enterprise_management.StringPolicyProto DefaultSearchProviderSuggestURLPostParams = 233;
inline bool CloudPolicySettings::has_defaultsearchprovidersuggesturlpostparams() const {
return (_has_bits_[1] & 0x00080000u) != 0;
}
inline const ::enterprise_management::StringPolicyProto& CloudPolicySettings::defaultsearchprovidersuggesturlpostparams() const {
const ::enterprise_management::StringPolicyProto* p = defaultsearchprovidersuggesturlpostparams_;
// @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.DefaultSearchProviderSuggestURLPostParams)
return p != nullptr ? *p : *reinterpret_cast<const ::enterprise_management::StringPolicyProto*>(
&::enterprise_management::_StringPolicyProto_default_instance_);
}
inline ::enterprise_management::StringPolicyProto* CloudPolicySettings::release_defaultsearchprovidersuggesturlpostparams() {
// @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.DefaultSearchProviderSuggestURLPostParams)
_has_bits_[1] &= ~0x00080000u;
::enterprise_management::StringPolicyProto* temp = defaultsearchprovidersuggesturlpostparams_;
defaultsearchprovidersuggesturlpostparams_ = nullptr;
return temp;
}
inline ::enterprise_management::StringPolicyProto* CloudPolicySettings::mutable_defaultsearchprovidersuggesturlpostparams() {
_has_bits_[1] |= 0x00080000u;
if (defaultsearchprovidersuggesturlpostparams_ == nullptr) {
auto* p = CreateMaybeMessage<::enterprise_management::StringPolicyProto>(GetArenaNoVirtual());
defaultsearchprovidersuggesturlpostparams_ = p;
}
// @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.DefaultSearchProviderSuggestURLPostParams)
return defaultsearchprovidersuggesturlpostparams_;
}
inline void CloudPolicySettings::set_allocated_defaultsearchprovidersuggesturlpostparams(::enterprise_management::StringPolicyProto* defaultsearchprovidersuggesturlpostparams) {
::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
if (message_arena == nullptr) {
delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(defaultsearchprovidersuggesturlpostparams_);
}
if (defaultsearchprovidersuggesturlpostparams) {
::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
if (message_arena != submessage_arena) {
defaultsearchprovidersuggesturlpostparams = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
message_arena, defaultsearchprovidersuggesturlpostparams, submessage_arena);
}
_has_bits_[1] |= 0x00080000u;
} else {
_has_bits_[1] &= ~0x00080000u;
}
defaultsearchprovidersuggesturlpostparams_ = defaultsearchprovidersuggesturlpostparams;
// @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.DefaultSearchProviderSuggestURLPostParams)
}

// optional .enterprise_management.StringPolicyProto DefaultSearchProviderImageURLPostParams = 235;
inline bool CloudPolicySettings::has_defaultsearchproviderimageurlpostparams() const {
return (_has_bits_[1] & 0x00100000u) != 0;
}
inline const ::enterprise_management::StringPolicyProto& CloudPolicySettings::defaultsearchproviderimageurlpostparams() const {
const ::enterprise_management::StringPolicyProto* p = defaultsearchproviderimageurlpostparams_;
// @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.DefaultSearchProviderImageURLPostParams)
return p != nullptr ? *p : *reinterpret_cast<const ::enterprise_management::StringPolicyProto*>(
&::enterprise_management::_StringPolicyProto_default_instance_);
}
inline ::enterprise_management::StringPolicyProto* CloudPolicySettings::release_defaultsearchproviderimageurlpostparams() {
// @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.DefaultSearchProviderImageURLPostParams)
_has_bits_[1] &= ~0x00100000u;
::enterprise_management::StringPolicyProto* temp = defaultsearchproviderimageurlpostparams_;
defaultsearchproviderimageurlpostparams_ = nullptr;
return temp;
}
inline ::enterprise_management::StringPolicyProto* CloudPolicySettings::mutable_defaultsearchproviderimageurlpostparams() {
_has_bits_[1] |= 0x00100000u;
if (defaultsearchproviderimageurlpostparams_ == nullptr) {
auto* p = CreateMaybeMessage<::enterprise_management::StringPolicyProto>(GetArenaNoVirtual());
defaultsearchproviderimageurlpostparams_ = p;
}
// @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.DefaultSearchProviderImageURLPostParams)
return defaultsearchproviderimageurlpostparams_;
}
inline void CloudPolicySettings::set_allocated_defaultsearchproviderimageurlpostparams(::enterprise_management::StringPolicyProto* defaultsearchproviderimageurlpostparams) {
::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
if (message_arena == nullptr) {
delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(defaultsearchproviderimageurlpostparams_);
}
if (defaultsearchproviderimageurlpostparams) {
::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
if (message_arena != submessage_arena) {
defaultsearchproviderimageurlpostparams = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
message_arena, defaultsearchproviderimageurlpostparams, submessage_arena);
}
_has_bits_[1] |= 0x00100000u;
} else {
_has_bits_[1] &= ~0x00100000u;
}
defaultsearchproviderimageurlpostparams_ = defaultsearchproviderimageurlpostparams;
// @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.DefaultSearchProviderImageURLPostParams)
}

// optional .enterprise_management.IntegerPolicyProto DefaultCookiesSetting = 50;
inline bool CloudPolicySettings::has_defaultcookiessetting() const {
return (_has_bits_[0] & 0x04000000u) != 0;
}
inline const ::enterprise_management::IntegerPolicyProto& CloudPolicySettings::defaultcookiessetting() const {
const ::enterprise_management::IntegerPolicyProto* p = defaultcookiessetting_;
// @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.DefaultCookiesSetting)
return p != nullptr ? *p : *reinterpret_cast<const ::enterprise_management::IntegerPolicyProto*>(
&::enterprise_management::_IntegerPolicyProto_default_instance_);
}
inline ::enterprise_management::IntegerPolicyProto* CloudPolicySettings::release_defaultcookiessetting() {
// @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.DefaultCookiesSetting)
_has_bits_[0] &= ~0x04000000u;
::enterprise_management::IntegerPolicyProto* temp = defaultcookiessetting_;
defaultcookiessetting_ = nullptr;
return temp;
}
inline ::enterprise_management::IntegerPolicyProto* CloudPolicySettings::mutable_defaultcookiessetting() {
_has_bits_[0] |= 0x04000000u;
if (defaultcookiessetting_ == nullptr) {
auto* p = CreateMaybeMessage<::enterprise_management::IntegerPolicyProto>(GetArenaNoVirtual());
defaultcookiessetting_ = p;
}
// @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.DefaultCookiesSetting)
return defaultcookiessetting_;
}
inline void CloudPolicySettings::set_allocated_defaultcookiessetting(::enterprise_management::IntegerPolicyProto* defaultcookiessetting) {
::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
if (message_arena == nullptr) {
delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(defaultcookiessetting_);
}
if (defaultcookiessetting) {
::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
if (message_arena != submessage_arena) {
defaultcookiessetting = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
message_arena, defaultcookiessetting, submessage_arena);
}
_has_bits_[0] |= 0x04000000u;
} else {
_has_bits_[0] &= ~0x04000000u;
}
defaultcookiessetting_ = defaultcookiessetting;
// @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.DefaultCookiesSetting)
}

// optional .enterprise_management.IntegerPolicyProto DefaultJavaScriptSetting = 52;
inline bool CloudPolicySettings::has_defaultjavascriptsetting() const {
return (_has_bits_[0] & 0x08000000u) != 0;
}
inline const ::enterprise_management::IntegerPolicyProto& CloudPolicySettings::defaultjavascriptsetting() const {
const ::enterprise_management::IntegerPolicyProto* p = defaultjavascriptsetting_;
// @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.DefaultJavaScriptSetting)
return p != nullptr ? *p : *reinterpret_cast<const ::enterprise_management::IntegerPolicyProto*>(
&::enterprise_management::_IntegerPolicyProto_default_instance_);
}
inline ::enterprise_management::IntegerPolicyProto* CloudPolicySettings::release_defaultjavascriptsetting() {
// @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.DefaultJavaScriptSetting)
_has_bits_[0] &= ~0x08000000u;
::enterprise_management::IntegerPolicyProto* temp = defaultjavascriptsetting_;
defaultjavascriptsetting_ = nullptr;
return temp;
}
inline ::enterprise_management::IntegerPolicyProto* CloudPolicySettings::mutable_defaultjavascriptsetting() {
_has_bits_[0] |= 0x08000000u;
if (defaultjavascriptsetting_ == nullptr) {
auto* p = CreateMaybeMessage<::enterprise_management::IntegerPolicyProto>(GetArenaNoVirtual());
defaultjavascriptsetting_ = p;
}
// @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.DefaultJavaScriptSetting)
return defaultjavascriptsetting_;
}
inline void CloudPolicySettings::set_allocated_defaultjavascriptsetting(::enterprise_management::IntegerPolicyProto* defaultjavascriptsetting) {
::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
if (message_arena == nullptr) {
delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(defaultjavascriptsetting_);
}
if (defaultjavascriptsetting) {
::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
if (message_arena != submessage_arena) {
defaultjavascriptsetting = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
message_arena, defaultjavascriptsetting, submessage_arena);
}
_has_bits_[0] |= 0x08000000u;
} else {
_has_bits_[0] &= ~0x08000000u;
}
defaultjavascriptsetting_ = defaultjavascriptsetting;
// @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.DefaultJavaScriptSetting)
}

// optional .enterprise_management.IntegerPolicyProto DefaultPopupsSetting = 54;
inline bool CloudPolicySettings::has_defaultpopupssetting() const {
return (_has_bits_[0] & 0x10000000u) != 0;
}
inline const ::enterprise_management::IntegerPolicyProto& CloudPolicySettings::defaultpopupssetting() const {
const ::enterprise_management::IntegerPolicyProto* p = defaultpopupssetting_;
// @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.DefaultPopupsSetting)
return p != nullptr ? *p : *reinterpret_cast<const ::enterprise_management::IntegerPolicyProto*>(
&::enterprise_management::_IntegerPolicyProto_default_instance_);
}
inline ::enterprise_management::IntegerPolicyProto* CloudPolicySettings::release_defaultpopupssetting() {
// @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.DefaultPopupsSetting)
_has_bits_[0] &= ~0x10000000u;
::enterprise_management::IntegerPolicyProto* temp = defaultpopupssetting_;
defaultpopupssetting_ = nullptr;
return temp;
}
inline ::enterprise_management::IntegerPolicyProto* CloudPolicySettings::mutable_defaultpopupssetting() {
_has_bits_[0] |= 0x10000000u;
if (defaultpopupssetting_ == nullptr) {
auto* p = CreateMaybeMessage<::enterprise_management::IntegerPolicyProto>(GetArenaNoVirtual());
defaultpopupssetting_ = p;
}
// @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.DefaultPopupsSetting)
return defaultpopupssetting_;
}
inline void CloudPolicySettings::set_allocated_defaultpopupssetting(::enterprise_management::IntegerPolicyProto* defaultpopupssetting) {
::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
if (message_arena == nullptr) {
delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(defaultpopupssetting_);
}
if (defaultpopupssetting) {
::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
if (message_arena != submessage_arena) {
defaultpopupssetting = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
message_arena, defaultpopupssetting, submessage_arena);
}
_has_bits_[0] |= 0x10000000u;
} else {
_has_bits_[0] &= ~0x10000000u;
}
defaultpopupssetting_ = defaultpopupssetting;
// @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.DefaultPopupsSetting)
}

// optional .enterprise_management.IntegerPolicyProto DefaultGeolocationSetting = 56;
inline bool CloudPolicySettings::has_defaultgeolocationsetting() const {
return (_has_bits_[0] & 0x20000000u) != 0;
}
inline const ::enterprise_management::IntegerPolicyProto& CloudPolicySettings::defaultgeolocationsetting() const {
const ::enterprise_management::IntegerPolicyProto* p = defaultgeolocationsetting_;
// @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.DefaultGeolocationSetting)
return p != nullptr ? *p : *reinterpret_cast<const ::enterprise_management::IntegerPolicyProto*>(
&::enterprise_management::_IntegerPolicyProto_default_instance_);
}
inline ::enterprise_management::IntegerPolicyProto* CloudPolicySettings::release_defaultgeolocationsetting() {
// @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.DefaultGeolocationSetting)
_has_bits_[0] &= ~0x20000000u;
::enterprise_management::IntegerPolicyProto* temp = defaultgeolocationsetting_;
defaultgeolocationsetting_ = nullptr;
return temp;
}
inline ::enterprise_management::IntegerPolicyProto* CloudPolicySettings::mutable_defaultgeolocationsetting() {
_has_bits_[0] |= 0x20000000u;
if (defaultgeolocationsetting_ == nullptr) {
auto* p = CreateMaybeMessage<::enterprise_management::IntegerPolicyProto>(GetArenaNoVirtual());
defaultgeolocationsetting_ = p;
}
// @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.DefaultGeolocationSetting)
return defaultgeolocationsetting_;
}
inline void CloudPolicySettings::set_allocated_defaultgeolocationsetting(::enterprise_management::IntegerPolicyProto* defaultgeolocationsetting) {
::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
if (message_arena == nullptr) {
delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(defaultgeolocationsetting_);
}
if (defaultgeolocationsetting) {
::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
if (message_arena != submessage_arena) {
defaultgeolocationsetting = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
message_arena, defaultgeolocationsetting, submessage_arena);
}
_has_bits_[0] |= 0x20000000u;
} else {
_has_bits_[0] &= ~0x20000000u;
}
defaultgeolocationsetting_ = defaultgeolocationsetting;
// @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.DefaultGeolocationSetting)
}

// optional .enterprise_management.IntegerPolicyProto DefaultWebBluetoothGuardSetting = 322;
inline bool CloudPolicySettings::has_defaultwebbluetoothguardsetting() const {
return (_has_bits_[1] & 0x80000000u) != 0;
}
inline const ::enterprise_management::IntegerPolicyProto& CloudPolicySettings::defaultwebbluetoothguardsetting() const {
const ::enterprise_management::IntegerPolicyProto* p = defaultwebbluetoothguardsetting_;
// @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.DefaultWebBluetoothGuardSetting)
return p != nullptr ? *p : *reinterpret_cast<const ::enterprise_management::IntegerPolicyProto*>(
&::enterprise_management::_IntegerPolicyProto_default_instance_);
}
inline ::enterprise_management::IntegerPolicyProto* CloudPolicySettings::release_defaultwebbluetoothguardsetting() {
// @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.DefaultWebBluetoothGuardSetting)
_has_bits_[1] &= ~0x80000000u;
::enterprise_management::IntegerPolicyProto* temp = defaultwebbluetoothguardsetting_;
defaultwebbluetoothguardsetting_ = nullptr;
return temp;
}
inline ::enterprise_management::IntegerPolicyProto* CloudPolicySettings::mutable_defaultwebbluetoothguardsetting() {
_has_bits_[1] |= 0x80000000u;
if (defaultwebbluetoothguardsetting_ == nullptr) {
auto* p = CreateMaybeMessage<::enterprise_management::IntegerPolicyProto>(GetArenaNoVirtual());
defaultwebbluetoothguardsetting_ = p;
}
// @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.DefaultWebBluetoothGuardSetting)
return defaultwebbluetoothguardsetting_;
}
inline void CloudPolicySettings::set_allocated_defaultwebbluetoothguardsetting(::enterprise_management::IntegerPolicyProto* defaultwebbluetoothguardsetting) {
::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
if (message_arena == nullptr) {
delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(defaultwebbluetoothguardsetting_);
}
if (defaultwebbluetoothguardsetting) {
::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
if (message_arena != submessage_arena) {
defaultwebbluetoothguardsetting = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
message_arena, defaultwebbluetoothguardsetting, submessage_arena);
}
_has_bits_[1] |= 0x80000000u;
} else {
_has_bits_[1] &= ~0x80000000u;
}
defaultwebbluetoothguardsetting_ = defaultwebbluetoothguardsetting;
// @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.DefaultWebBluetoothGuardSetting)
}

// optional .enterprise_management.IntegerPolicyProto DefaultWebUsbGuardSetting = 436;
inline bool CloudPolicySettings::has_defaultwebusbguardsetting() const {
return (_has_bits_[2] & 0x00000400u) != 0;
}
inline const ::enterprise_management::IntegerPolicyProto& CloudPolicySettings::defaultwebusbguardsetting() const {
const ::enterprise_management::IntegerPolicyProto* p = defaultwebusbguardsetting_;
// @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.DefaultWebUsbGuardSetting)
return p != nullptr ? *p : *reinterpret_cast<const ::enterprise_management::IntegerPolicyProto*>(
&::enterprise_management::_IntegerPolicyProto_default_instance_);
}
inline ::enterprise_management::IntegerPolicyProto* CloudPolicySettings::release_defaultwebusbguardsetting() {
// @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.DefaultWebUsbGuardSetting)
_has_bits_[2] &= ~0x00000400u;
::enterprise_management::IntegerPolicyProto* temp = defaultwebusbguardsetting_;
defaultwebusbguardsetting_ = nullptr;
return temp;
}
inline ::enterprise_management::IntegerPolicyProto* CloudPolicySettings::mutable_defaultwebusbguardsetting() {
_has_bits_[2] |= 0x00000400u;
if (defaultwebusbguardsetting_ == nullptr) {
auto* p = CreateMaybeMessage<::enterprise_management::IntegerPolicyProto>(GetArenaNoVirtual());
defaultwebusbguardsetting_ = p;
}
// @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.DefaultWebUsbGuardSetting)
return defaultwebusbguardsetting_;
}
inline void CloudPolicySettings::set_allocated_defaultwebusbguardsetting(::enterprise_management::IntegerPolicyProto* defaultwebusbguardsetting) {
::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
if (message_arena == nullptr) {
delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(defaultwebusbguardsetting_);
}
if (defaultwebusbguardsetting) {
::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
if (message_arena != submessage_arena) {
defaultwebusbguardsetting = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
message_arena, defaultwebusbguardsetting, submessage_arena);
}
_has_bits_[2] |= 0x00000400u;
} else {
_has_bits_[2] &= ~0x00000400u;
}
defaultwebusbguardsetting_ = defaultwebusbguardsetting;
// @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.DefaultWebUsbGuardSetting)
}

// optional .enterprise_management.StringPolicyProto WebUsbAllowDevicesForUrls = 488;
inline bool CloudPolicySettings::has_webusballowdevicesforurls() const {
return (_has_bits_[2] & 0x00400000u) != 0;
}
inline const ::enterprise_management::StringPolicyProto& CloudPolicySettings::webusballowdevicesforurls() const {
const ::enterprise_management::StringPolicyProto* p = webusballowdevicesforurls_;
// @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.WebUsbAllowDevicesForUrls)
return p != nullptr ? *p : *reinterpret_cast<const ::enterprise_management::StringPolicyProto*>(
&::enterprise_management::_StringPolicyProto_default_instance_);
}
inline ::enterprise_management::StringPolicyProto* CloudPolicySettings::release_webusballowdevicesforurls() {
// @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.WebUsbAllowDevicesForUrls)
_has_bits_[2] &= ~0x00400000u;
::enterprise_management::StringPolicyProto* temp = webusballowdevicesforurls_;
webusballowdevicesforurls_ = nullptr;
return temp;
}
inline ::enterprise_management::StringPolicyProto* CloudPolicySettings::mutable_webusballowdevicesforurls() {
_has_bits_[2] |= 0x00400000u;
if (webusballowdevicesforurls_ == nullptr) {
auto* p = CreateMaybeMessage<::enterprise_management::StringPolicyProto>(GetArenaNoVirtual());
webusballowdevicesforurls_ = p;
}
// @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.WebUsbAllowDevicesForUrls)
return webusballowdevicesforurls_;
}
inline void CloudPolicySettings::set_allocated_webusballowdevicesforurls(::enterprise_management::StringPolicyProto* webusballowdevicesforurls) {
::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
if (message_arena == nullptr) {
delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(webusballowdevicesforurls_);
}
if (webusballowdevicesforurls) {
::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
if (message_arena != submessage_arena) {
webusballowdevicesforurls = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
message_arena, webusballowdevicesforurls, submessage_arena);
}
_has_bits_[2] |= 0x00400000u;
} else {
_has_bits_[2] &= ~0x00400000u;
}
webusballowdevicesforurls_ = webusballowdevicesforurls;
// @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.WebUsbAllowDevicesForUrls)
}

// optional .enterprise_management.StringListPolicyProto WebUsbAskForUrls = 441;
inline bool CloudPolicySettings::has_webusbaskforurls() const {
return (_has_bits_[2] & 0x00002000u) != 0;
}
inline const ::enterprise_management::StringListPolicyProto& CloudPolicySettings::webusbaskforurls() const {
const ::enterprise_management::StringListPolicyProto* p = webusbaskforurls_;
// @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.WebUsbAskForUrls)
return p != nullptr ? *p : *reinterpret_cast<const ::enterprise_management::StringListPolicyProto*>(
&::enterprise_management::_StringListPolicyProto_default_instance_);
}
inline ::enterprise_management::StringListPolicyProto* CloudPolicySettings::release_webusbaskforurls() {
// @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.WebUsbAskForUrls)
_has_bits_[2] &= ~0x00002000u;
::enterprise_management::StringListPolicyProto* temp = webusbaskforurls_;
webusbaskforurls_ = nullptr;
return temp;
}
inline ::enterprise_management::StringListPolicyProto* CloudPolicySettings::mutable_webusbaskforurls() {
_has_bits_[2] |= 0x00002000u;
if (webusbaskforurls_ == nullptr) {
auto* p = CreateMaybeMessage<::enterprise_management::StringListPolicyProto>(GetArenaNoVirtual());
webusbaskforurls_ = p;
}
// @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.WebUsbAskForUrls)
return webusbaskforurls_;
}
inline void CloudPolicySettings::set_allocated_webusbaskforurls(::enterprise_management::StringListPolicyProto* webusbaskforurls) {
::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
if (message_arena == nullptr) {
delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(webusbaskforurls_);
}
if (webusbaskforurls) {
::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
if (message_arena != submessage_arena) {
webusbaskforurls = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
message_arena, webusbaskforurls, submessage_arena);
}
_has_bits_[2] |= 0x00002000u;
} else {
_has_bits_[2] &= ~0x00002000u;
}
webusbaskforurls_ = webusbaskforurls;
// @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.WebUsbAskForUrls)
}

// optional .enterprise_management.StringListPolicyProto WebUsbBlockedForUrls = 442;
inline bool CloudPolicySettings::has_webusbblockedforurls() const {
return (_has_bits_[2] & 0x00004000u) != 0;
}
inline const ::enterprise_management::StringListPolicyProto& CloudPolicySettings::webusbblockedforurls() const {
const ::enterprise_management::StringListPolicyProto* p = webusbblockedforurls_;
// @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.WebUsbBlockedForUrls)
return p != nullptr ? *p : *reinterpret_cast<const ::enterprise_management::StringListPolicyProto*>(
&::enterprise_management::_StringListPolicyProto_default_instance_);
}
inline ::enterprise_management::StringListPolicyProto* CloudPolicySettings::release_webusbblockedforurls() {
// @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.WebUsbBlockedForUrls)
_has_bits_[2] &= ~0x00004000u;
::enterprise_management::StringListPolicyProto* temp = webusbblockedforurls_;
webusbblockedforurls_ = nullptr;
return temp;
}
inline ::enterprise_management::StringListPolicyProto* CloudPolicySettings::mutable_webusbblockedforurls() {
_has_bits_[2] |= 0x00004000u;
if (webusbblockedforurls_ == nullptr) {
auto* p = CreateMaybeMessage<::enterprise_management::StringListPolicyProto>(GetArenaNoVirtual());
webusbblockedforurls_ = p;
}
// @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.WebUsbBlockedForUrls)
return webusbblockedforurls_;
}
inline void CloudPolicySettings::set_allocated_webusbblockedforurls(::enterprise_management::StringListPolicyProto* webusbblockedforurls) {
::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
if (message_arena == nullptr) {
delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(webusbblockedforurls_);
}
if (webusbblockedforurls) {
::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
if (message_arena != submessage_arena) {
webusbblockedforurls = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
message_arena, webusbblockedforurls, submessage_arena);
}
_has_bits_[2] |= 0x00004000u;
} else {
_has_bits_[2] &= ~0x00004000u;
}
webusbblockedforurls_ = webusbblockedforurls;
// @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.WebUsbBlockedForUrls)
}

// optional .enterprise_management.StringListPolicyProto CookiesAllowedForUrls = 79;
inline bool CloudPolicySettings::has_cookiesallowedforurls() const {
return (_has_bits_[1] & 0x00000010u) != 0;
}
inline const ::enterprise_management::StringListPolicyProto& CloudPolicySettings::cookiesallowedforurls() const {
const ::enterprise_management::StringListPolicyProto* p = cookiesallowedforurls_;
// @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.CookiesAllowedForUrls)
return p != nullptr ? *p : *reinterpret_cast<const ::enterprise_management::StringListPolicyProto*>(
&::enterprise_management::_StringListPolicyProto_default_instance_);
}
inline ::enterprise_management::StringListPolicyProto* CloudPolicySettings::release_cookiesallowedforurls() {
// @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.CookiesAllowedForUrls)
_has_bits_[1] &= ~0x00000010u;
::enterprise_management::StringListPolicyProto* temp = cookiesallowedforurls_;
cookiesallowedforurls_ = nullptr;
return temp;
}
inline ::enterprise_management::StringListPolicyProto* CloudPolicySettings::mutable_cookiesallowedforurls() {
_has_bits_[1] |= 0x00000010u;
if (cookiesallowedforurls_ == nullptr) {
auto* p = CreateMaybeMessage<::enterprise_management::StringListPolicyProto>(GetArenaNoVirtual());
cookiesallowedforurls_ = p;
}
// @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.CookiesAllowedForUrls)
return cookiesallowedforurls_;
}
inline void CloudPolicySettings::set_allocated_cookiesallowedforurls(::enterprise_management::StringListPolicyProto* cookiesallowedforurls) {
::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
if (message_arena == nullptr) {
delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(cookiesallowedforurls_);
}
if (cookiesallowedforurls) {
::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
if (message_arena != submessage_arena) {
cookiesallowedforurls = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
message_arena, cookiesallowedforurls, submessage_arena);
}
_has_bits_[1] |= 0x00000010u;
} else {
_has_bits_[1] &= ~0x00000010u;
}
cookiesallowedforurls_ = cookiesallowedforurls;
// @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.CookiesAllowedForUrls)
}

// optional .enterprise_management.StringListPolicyProto CookiesBlockedForUrls = 69;
inline bool CloudPolicySettings::has_cookiesblockedforurls() const {
return (_has_bits_[0] & 0x40000000u) != 0;
}
inline const ::enterprise_management::StringListPolicyProto& CloudPolicySettings::cookiesblockedforurls() const {
const ::enterprise_management::StringListPolicyProto* p = cookiesblockedforurls_;
// @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.CookiesBlockedForUrls)
return p != nullptr ? *p : *reinterpret_cast<const ::enterprise_management::StringListPolicyProto*>(
&::enterprise_management::_StringListPolicyProto_default_instance_);
}
inline ::enterprise_management::StringListPolicyProto* CloudPolicySettings::release_cookiesblockedforurls() {
// @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.CookiesBlockedForUrls)
_has_bits_[0] &= ~0x40000000u;
::enterprise_management::StringListPolicyProto* temp = cookiesblockedforurls_;
cookiesblockedforurls_ = nullptr;
return temp;
}
inline ::enterprise_management::StringListPolicyProto* CloudPolicySettings::mutable_cookiesblockedforurls() {
_has_bits_[0] |= 0x40000000u;
if (cookiesblockedforurls_ == nullptr) {
auto* p = CreateMaybeMessage<::enterprise_management::StringListPolicyProto>(GetArenaNoVirtual());
cookiesblockedforurls_ = p;
}
// @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.CookiesBlockedForUrls)
return cookiesblockedforurls_;
}
inline void CloudPolicySettings::set_allocated_cookiesblockedforurls(::enterprise_management::StringListPolicyProto* cookiesblockedforurls) {
::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
if (message_arena == nullptr) {
delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(cookiesblockedforurls_);
}
if (cookiesblockedforurls) {
::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
if (message_arena != submessage_arena) {
cookiesblockedforurls = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
message_arena, cookiesblockedforurls, submessage_arena);
}
_has_bits_[0] |= 0x40000000u;
} else {
_has_bits_[0] &= ~0x40000000u;
}
cookiesblockedforurls_ = cookiesblockedforurls;
// @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.CookiesBlockedForUrls)
}

// optional .enterprise_management.StringListPolicyProto CookiesSessionOnlyForUrls = 70;
inline bool CloudPolicySettings::has_cookiessessiononlyforurls() const {
return (_has_bits_[0] & 0x80000000u) != 0;
}
inline const ::enterprise_management::StringListPolicyProto& CloudPolicySettings::cookiessessiononlyforurls() const {
const ::enterprise_management::StringListPolicyProto* p = cookiessessiononlyforurls_;
// @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.CookiesSessionOnlyForUrls)
return p != nullptr ? *p : *reinterpret_cast<const ::enterprise_management::StringListPolicyProto*>(
&::enterprise_management::_StringListPolicyProto_default_instance_);
}
inline ::enterprise_management::StringListPolicyProto* CloudPolicySettings::release_cookiessessiononlyforurls() {
// @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.CookiesSessionOnlyForUrls)
_has_bits_[0] &= ~0x80000000u;
::enterprise_management::StringListPolicyProto* temp = cookiessessiononlyforurls_;
cookiessessiononlyforurls_ = nullptr;
return temp;
}
inline ::enterprise_management::StringListPolicyProto* CloudPolicySettings::mutable_cookiessessiononlyforurls() {
_has_bits_[0] |= 0x80000000u;
if (cookiessessiononlyforurls_ == nullptr) {
auto* p = CreateMaybeMessage<::enterprise_management::StringListPolicyProto>(GetArenaNoVirtual());
cookiessessiononlyforurls_ = p;
}
// @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.CookiesSessionOnlyForUrls)
return cookiessessiononlyforurls_;
}
inline void CloudPolicySettings::set_allocated_cookiessessiononlyforurls(::enterprise_management::StringListPolicyProto* cookiessessiononlyforurls) {
::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
if (message_arena == nullptr) {
delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(cookiessessiononlyforurls_);
}
if (cookiessessiononlyforurls) {
::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
if (message_arena != submessage_arena) {
cookiessessiononlyforurls = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
message_arena, cookiessessiononlyforurls, submessage_arena);
}
_has_bits_[0] |= 0x80000000u;
} else {
_has_bits_[0] &= ~0x80000000u;
}
cookiessessiononlyforurls_ = cookiessessiononlyforurls;
// @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.CookiesSessionOnlyForUrls)
}

// optional .enterprise_management.StringListPolicyProto JavaScriptAllowedForUrls = 73;
inline bool CloudPolicySettings::has_javascriptallowedforurls() const {
return (_has_bits_[1] & 0x00000001u) != 0;
}
inline const ::enterprise_management::StringListPolicyProto& CloudPolicySettings::javascriptallowedforurls() const {
const ::enterprise_management::StringListPolicyProto* p = javascriptallowedforurls_;
// @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.JavaScriptAllowedForUrls)
return p != nullptr ? *p : *reinterpret_cast<const ::enterprise_management::StringListPolicyProto*>(
&::enterprise_management::_StringListPolicyProto_default_instance_);
}
inline ::enterprise_management::StringListPolicyProto* CloudPolicySettings::release_javascriptallowedforurls() {
// @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.JavaScriptAllowedForUrls)
_has_bits_[1] &= ~0x00000001u;
::enterprise_management::StringListPolicyProto* temp = javascriptallowedforurls_;
javascriptallowedforurls_ = nullptr;
return temp;
}
inline ::enterprise_management::StringListPolicyProto* CloudPolicySettings::mutable_javascriptallowedforurls() {
_has_bits_[1] |= 0x00000001u;
if (javascriptallowedforurls_ == nullptr) {
auto* p = CreateMaybeMessage<::enterprise_management::StringListPolicyProto>(GetArenaNoVirtual());
javascriptallowedforurls_ = p;
}
// @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.JavaScriptAllowedForUrls)
return javascriptallowedforurls_;
}
inline void CloudPolicySettings::set_allocated_javascriptallowedforurls(::enterprise_management::StringListPolicyProto* javascriptallowedforurls) {
::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
if (message_arena == nullptr) {
delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(javascriptallowedforurls_);
}
if (javascriptallowedforurls) {
::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
if (message_arena != submessage_arena) {
javascriptallowedforurls = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
message_arena, javascriptallowedforurls, submessage_arena);
}
_has_bits_[1] |= 0x00000001u;
} else {
_has_bits_[1] &= ~0x00000001u;
}
javascriptallowedforurls_ = javascriptallowedforurls;
// @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.JavaScriptAllowedForUrls)
}

// optional .enterprise_management.StringListPolicyProto JavaScriptBlockedForUrls = 74;
inline bool CloudPolicySettings::has_javascriptblockedforurls() const {
return (_has_bits_[1] & 0x00000002u) != 0;
}
inline const ::enterprise_management::StringListPolicyProto& CloudPolicySettings::javascriptblockedforurls() const {
const ::enterprise_management::StringListPolicyProto* p = javascriptblockedforurls_;
// @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.JavaScriptBlockedForUrls)
return p != nullptr ? *p : *reinterpret_cast<const ::enterprise_management::StringListPolicyProto*>(
&::enterprise_management::_StringListPolicyProto_default_instance_);
}
inline ::enterprise_management::StringListPolicyProto* CloudPolicySettings::release_javascriptblockedforurls() {
// @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.JavaScriptBlockedForUrls)
_has_bits_[1] &= ~0x00000002u;
::enterprise_management::StringListPolicyProto* temp = javascriptblockedforurls_;
javascriptblockedforurls_ = nullptr;
return temp;
}
inline ::enterprise_management::StringListPolicyProto* CloudPolicySettings::mutable_javascriptblockedforurls() {
_has_bits_[1] |= 0x00000002u;
if (javascriptblockedforurls_ == nullptr) {
auto* p = CreateMaybeMessage<::enterprise_management::StringListPolicyProto>(GetArenaNoVirtual());
javascriptblockedforurls_ = p;
}
// @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.JavaScriptBlockedForUrls)
return javascriptblockedforurls_;
}
inline void CloudPolicySettings::set_allocated_javascriptblockedforurls(::enterprise_management::StringListPolicyProto* javascriptblockedforurls) {
::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
if (message_arena == nullptr) {
delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(javascriptblockedforurls_);
}
if (javascriptblockedforurls) {
::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
if (message_arena != submessage_arena) {
javascriptblockedforurls = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
message_arena, javascriptblockedforurls, submessage_arena);
}
_has_bits_[1] |= 0x00000002u;
} else {
_has_bits_[1] &= ~0x00000002u;
}
javascriptblockedforurls_ = javascriptblockedforurls;
// @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.JavaScriptBlockedForUrls)
}

// optional .enterprise_management.IntegerPolicyProto LegacySameSiteCookieBehaviorEnabled = 625;
inline bool CloudPolicySettings::has_legacysamesitecookiebehaviorenabled() const {
return (_has_bits_[2] & 0x20000000u) != 0;
}
inline const ::enterprise_management::IntegerPolicyProto& CloudPolicySettings::legacysamesitecookiebehaviorenabled() const {
const ::enterprise_management::IntegerPolicyProto* p = legacysamesitecookiebehaviorenabled_;
// @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.LegacySameSiteCookieBehaviorEnabled)
return p != nullptr ? *p : *reinterpret_cast<const ::enterprise_management::IntegerPolicyProto*>(
&::enterprise_management::_IntegerPolicyProto_default_instance_);
}
inline ::enterprise_management::IntegerPolicyProto* CloudPolicySettings::release_legacysamesitecookiebehaviorenabled() {
// @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.LegacySameSiteCookieBehaviorEnabled)
_has_bits_[2] &= ~0x20000000u;
::enterprise_management::IntegerPolicyProto* temp = legacysamesitecookiebehaviorenabled_;
legacysamesitecookiebehaviorenabled_ = nullptr;
return temp;
}
inline ::enterprise_management::IntegerPolicyProto* CloudPolicySettings::mutable_legacysamesitecookiebehaviorenabled() {
_has_bits_[2] |= 0x20000000u;
if (legacysamesitecookiebehaviorenabled_ == nullptr) {
auto* p = CreateMaybeMessage<::enterprise_management::IntegerPolicyProto>(GetArenaNoVirtual());
legacysamesitecookiebehaviorenabled_ = p;
}
// @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.LegacySameSiteCookieBehaviorEnabled)
return legacysamesitecookiebehaviorenabled_;
}
inline void CloudPolicySettings::set_allocated_legacysamesitecookiebehaviorenabled(::enterprise_management::IntegerPolicyProto* legacysamesitecookiebehaviorenabled) {
::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
if (message_arena == nullptr) {
delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(legacysamesitecookiebehaviorenabled_);
}
if (legacysamesitecookiebehaviorenabled) {
::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
if (message_arena != submessage_arena) {
legacysamesitecookiebehaviorenabled = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
message_arena, legacysamesitecookiebehaviorenabled, submessage_arena);
}
_has_bits_[2] |= 0x20000000u;
} else {
_has_bits_[2] &= ~0x20000000u;
}
legacysamesitecookiebehaviorenabled_ = legacysamesitecookiebehaviorenabled;
// @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.LegacySameSiteCookieBehaviorEnabled)
}

// optional .enterprise_management.StringListPolicyProto LegacySameSiteCookieBehaviorEnabledForDomainList = 626;
inline bool CloudPolicySettings::has_legacysamesitecookiebehaviorenabledfordomainlist() const {
return (_has_bits_[2] & 0x40000000u) != 0;
}
inline const ::enterprise_management::StringListPolicyProto& CloudPolicySettings::legacysamesitecookiebehaviorenabledfordomainlist() const {
const ::enterprise_management::StringListPolicyProto* p = legacysamesitecookiebehaviorenabledfordomainlist_;
// @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.LegacySameSiteCookieBehaviorEnabledForDomainList)
return p != nullptr ? *p : *reinterpret_cast<const ::enterprise_management::StringListPolicyProto*>(
&::enterprise_management::_StringListPolicyProto_default_instance_);
}
inline ::enterprise_management::StringListPolicyProto* CloudPolicySettings::release_legacysamesitecookiebehaviorenabledfordomainlist() {
// @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.LegacySameSiteCookieBehaviorEnabledForDomainList)
_has_bits_[2] &= ~0x40000000u;
::enterprise_management::StringListPolicyProto* temp = legacysamesitecookiebehaviorenabledfordomainlist_;
legacysamesitecookiebehaviorenabledfordomainlist_ = nullptr;
return temp;
}
inline ::enterprise_management::StringListPolicyProto* CloudPolicySettings::mutable_legacysamesitecookiebehaviorenabledfordomainlist() {
_has_bits_[2] |= 0x40000000u;
if (legacysamesitecookiebehaviorenabledfordomainlist_ == nullptr) {
auto* p = CreateMaybeMessage<::enterprise_management::StringListPolicyProto>(GetArenaNoVirtual());
legacysamesitecookiebehaviorenabledfordomainlist_ = p;
}
// @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.LegacySameSiteCookieBehaviorEnabledForDomainList)
return legacysamesitecookiebehaviorenabledfordomainlist_;
}
inline void CloudPolicySettings::set_allocated_legacysamesitecookiebehaviorenabledfordomainlist(::enterprise_management::StringListPolicyProto* legacysamesitecookiebehaviorenabledfordomainlist) {
::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
if (message_arena == nullptr) {
delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(legacysamesitecookiebehaviorenabledfordomainlist_);
}
if (legacysamesitecookiebehaviorenabledfordomainlist) {
::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
if (message_arena != submessage_arena) {
legacysamesitecookiebehaviorenabledfordomainlist = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
message_arena, legacysamesitecookiebehaviorenabledfordomainlist, submessage_arena);
}
_has_bits_[2] |= 0x40000000u;
} else {
_has_bits_[2] &= ~0x40000000u;
}
legacysamesitecookiebehaviorenabledfordomainlist_ = legacysamesitecookiebehaviorenabledfordomainlist;
// @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.LegacySameSiteCookieBehaviorEnabledForDomainList)
}

// optional .enterprise_management.StringListPolicyProto PopupsAllowedForUrls = 77;
inline bool CloudPolicySettings::has_popupsallowedforurls() const {
return (_has_bits_[1] & 0x00000004u) != 0;
}
inline const ::enterprise_management::StringListPolicyProto& CloudPolicySettings::popupsallowedforurls() const {
const ::enterprise_management::StringListPolicyProto* p = popupsallowedforurls_;
// @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.PopupsAllowedForUrls)
return p != nullptr ? *p : *reinterpret_cast<const ::enterprise_management::StringListPolicyProto*>(
&::enterprise_management::_StringListPolicyProto_default_instance_);
}
inline ::enterprise_management::StringListPolicyProto* CloudPolicySettings::release_popupsallowedforurls() {
// @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.PopupsAllowedForUrls)
_has_bits_[1] &= ~0x00000004u;
::enterprise_management::StringListPolicyProto* temp = popupsallowedforurls_;
popupsallowedforurls_ = nullptr;
return temp;
}
inline ::enterprise_management::StringListPolicyProto* CloudPolicySettings::mutable_popupsallowedforurls() {
_has_bits_[1] |= 0x00000004u;
if (popupsallowedforurls_ == nullptr) {
auto* p = CreateMaybeMessage<::enterprise_management::StringListPolicyProto>(GetArenaNoVirtual());
popupsallowedforurls_ = p;
}
// @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.PopupsAllowedForUrls)
return popupsallowedforurls_;
}
inline void CloudPolicySettings::set_allocated_popupsallowedforurls(::enterprise_management::StringListPolicyProto* popupsallowedforurls) {
::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
if (message_arena == nullptr) {
delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(popupsallowedforurls_);
}
if (popupsallowedforurls) {
::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
if (message_arena != submessage_arena) {
popupsallowedforurls = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
message_arena, popupsallowedforurls, submessage_arena);
}
_has_bits_[1] |= 0x00000004u;
} else {
_has_bits_[1] &= ~0x00000004u;
}
popupsallowedforurls_ = popupsallowedforurls;
// @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.PopupsAllowedForUrls)
}

// optional .enterprise_management.StringListPolicyProto PopupsBlockedForUrls = 78;
inline bool CloudPolicySettings::has_popupsblockedforurls() const {
return (_has_bits_[1] & 0x00000008u) != 0;
}
inline const ::enterprise_management::StringListPolicyProto& CloudPolicySettings::popupsblockedforurls() const {
const ::enterprise_management::StringListPolicyProto* p = popupsblockedforurls_;
// @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.PopupsBlockedForUrls)
return p != nullptr ? *p : *reinterpret_cast<const ::enterprise_management::StringListPolicyProto*>(
&::enterprise_management::_StringListPolicyProto_default_instance_);
}
inline ::enterprise_management::StringListPolicyProto* CloudPolicySettings::release_popupsblockedforurls() {
// @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.PopupsBlockedForUrls)
_has_bits_[1] &= ~0x00000008u;
::enterprise_management::StringListPolicyProto* temp = popupsblockedforurls_;
popupsblockedforurls_ = nullptr;
return temp;
}
inline ::enterprise_management::StringListPolicyProto* CloudPolicySettings::mutable_popupsblockedforurls() {
_has_bits_[1] |= 0x00000008u;
if (popupsblockedforurls_ == nullptr) {
auto* p = CreateMaybeMessage<::enterprise_management::StringListPolicyProto>(GetArenaNoVirtual());
popupsblockedforurls_ = p;
}
// @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.PopupsBlockedForUrls)
return popupsblockedforurls_;
}
inline void CloudPolicySettings::set_allocated_popupsblockedforurls(::enterprise_management::StringListPolicyProto* popupsblockedforurls) {
::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
if (message_arena == nullptr) {
delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(popupsblockedforurls_);
}
if (popupsblockedforurls) {
::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
if (message_arena != submessage_arena) {
popupsblockedforurls = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
message_arena, popupsblockedforurls, submessage_arena);
}
_has_bits_[1] |= 0x00000008u;
} else {
_has_bits_[1] &= ~0x00000008u;
}
popupsblockedforurls_ = popupsblockedforurls;
// @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.PopupsBlockedForUrls)
}

// optional .enterprise_management.BooleanPolicyProto TranslateEnabled = 82;
inline bool CloudPolicySettings::has_translateenabled() const {
return (_has_bits_[1] & 0x00000020u) != 0;
}
inline const ::enterprise_management::BooleanPolicyProto& CloudPolicySettings::translateenabled() const {
const ::enterprise_management::BooleanPolicyProto* p = translateenabled_;
// @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.TranslateEnabled)
return p != nullptr ? *p : *reinterpret_cast<const ::enterprise_management::BooleanPolicyProto*>(
&::enterprise_management::_BooleanPolicyProto_default_instance_);
}
inline ::enterprise_management::BooleanPolicyProto* CloudPolicySettings::release_translateenabled() {
// @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.TranslateEnabled)
_has_bits_[1] &= ~0x00000020u;
::enterprise_management::BooleanPolicyProto* temp = translateenabled_;
translateenabled_ = nullptr;
return temp;
}
inline ::enterprise_management::BooleanPolicyProto* CloudPolicySettings::mutable_translateenabled() {
_has_bits_[1] |= 0x00000020u;
if (translateenabled_ == nullptr) {
auto* p = CreateMaybeMessage<::enterprise_management::BooleanPolicyProto>(GetArenaNoVirtual());
translateenabled_ = p;
}
// @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.TranslateEnabled)
return translateenabled_;
}
inline void CloudPolicySettings::set_allocated_translateenabled(::enterprise_management::BooleanPolicyProto* translateenabled) {
::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
if (message_arena == nullptr) {
delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(translateenabled_);
}
if (translateenabled) {
::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
if (message_arena != submessage_arena) {
translateenabled = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
message_arena, translateenabled, submessage_arena);
}
_has_bits_[1] |= 0x00000020u;
} else {
_has_bits_[1] &= ~0x00000020u;
}
translateenabled_ = translateenabled;
// @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.TranslateEnabled)
}

// optional .enterprise_management.BooleanPolicyProto EditBookmarksEnabled = 85;
inline bool CloudPolicySettings::has_editbookmarksenabled() const {
return (_has_bits_[1] & 0x00000040u) != 0;
}
inline const ::enterprise_management::BooleanPolicyProto& CloudPolicySettings::editbookmarksenabled() const {
const ::enterprise_management::BooleanPolicyProto* p = editbookmarksenabled_;
// @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.EditBookmarksEnabled)
return p != nullptr ? *p : *reinterpret_cast<const ::enterprise_management::BooleanPolicyProto*>(
&::enterprise_management::_BooleanPolicyProto_default_instance_);
}
inline ::enterprise_management::BooleanPolicyProto* CloudPolicySettings::release_editbookmarksenabled() {
// @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.EditBookmarksEnabled)
_has_bits_[1] &= ~0x00000040u;
::enterprise_management::BooleanPolicyProto* temp = editbookmarksenabled_;
editbookmarksenabled_ = nullptr;
return temp;
}
inline ::enterprise_management::BooleanPolicyProto* CloudPolicySettings::mutable_editbookmarksenabled() {
_has_bits_[1] |= 0x00000040u;
if (editbookmarksenabled_ == nullptr) {
auto* p = CreateMaybeMessage<::enterprise_management::BooleanPolicyProto>(GetArenaNoVirtual());
editbookmarksenabled_ = p;
}
// @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.EditBookmarksEnabled)
return editbookmarksenabled_;
}
inline void CloudPolicySettings::set_allocated_editbookmarksenabled(::enterprise_management::BooleanPolicyProto* editbookmarksenabled) {
::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
if (message_arena == nullptr) {
delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(editbookmarksenabled_);
}
if (editbookmarksenabled) {
::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
if (message_arena != submessage_arena) {
editbookmarksenabled = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
message_arena, editbookmarksenabled, submessage_arena);
}
_has_bits_[1] |= 0x00000040u;
} else {
_has_bits_[1] &= ~0x00000040u;
}
editbookmarksenabled_ = editbookmarksenabled;
// @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.EditBookmarksEnabled)
}

// optional .enterprise_management.StringListPolicyProto URLBlacklist = 105;
inline bool CloudPolicySettings::has_urlblacklist() const {
return (_has_bits_[1] & 0x00000100u) != 0;
}
inline const ::enterprise_management::StringListPolicyProto& CloudPolicySettings::urlblacklist() const {
const ::enterprise_management::StringListPolicyProto* p = urlblacklist_;
// @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.URLBlacklist)
return p != nullptr ? *p : *reinterpret_cast<const ::enterprise_management::StringListPolicyProto*>(
&::enterprise_management::_StringListPolicyProto_default_instance_);
}
inline ::enterprise_management::StringListPolicyProto* CloudPolicySettings::release_urlblacklist() {
// @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.URLBlacklist)
_has_bits_[1] &= ~0x00000100u;
::enterprise_management::StringListPolicyProto* temp = urlblacklist_;
urlblacklist_ = nullptr;
return temp;
}
inline ::enterprise_management::StringListPolicyProto* CloudPolicySettings::mutable_urlblacklist() {
_has_bits_[1] |= 0x00000100u;
if (urlblacklist_ == nullptr) {
auto* p = CreateMaybeMessage<::enterprise_management::StringListPolicyProto>(GetArenaNoVirtual());
urlblacklist_ = p;
}
// @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.URLBlacklist)
return urlblacklist_;
}
inline void CloudPolicySettings::set_allocated_urlblacklist(::enterprise_management::StringListPolicyProto* urlblacklist) {
::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
if (message_arena == nullptr) {
delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(urlblacklist_);
}
if (urlblacklist) {
::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
if (message_arena != submessage_arena) {
urlblacklist = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
message_arena, urlblacklist, submessage_arena);
}
_has_bits_[1] |= 0x00000100u;
} else {
_has_bits_[1] &= ~0x00000100u;
}
urlblacklist_ = urlblacklist;
// @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.URLBlacklist)
}

// optional .enterprise_management.StringListPolicyProto URLWhitelist = 106;
inline bool CloudPolicySettings::has_urlwhitelist() const {
return (_has_bits_[1] & 0x00000200u) != 0;
}
inline const ::enterprise_management::StringListPolicyProto& CloudPolicySettings::urlwhitelist() const {
const ::enterprise_management::StringListPolicyProto* p = urlwhitelist_;
// @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.URLWhitelist)
return p != nullptr ? *p : *reinterpret_cast<const ::enterprise_management::StringListPolicyProto*>(
&::enterprise_management::_StringListPolicyProto_default_instance_);
}
inline ::enterprise_management::StringListPolicyProto* CloudPolicySettings::release_urlwhitelist() {
// @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.URLWhitelist)
_has_bits_[1] &= ~0x00000200u;
::enterprise_management::StringListPolicyProto* temp = urlwhitelist_;
urlwhitelist_ = nullptr;
return temp;
}
inline ::enterprise_management::StringListPolicyProto* CloudPolicySettings::mutable_urlwhitelist() {
_has_bits_[1] |= 0x00000200u;
if (urlwhitelist_ == nullptr) {
auto* p = CreateMaybeMessage<::enterprise_management::StringListPolicyProto>(GetArenaNoVirtual());
urlwhitelist_ = p;
}
// @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.URLWhitelist)
return urlwhitelist_;
}
inline void CloudPolicySettings::set_allocated_urlwhitelist(::enterprise_management::StringListPolicyProto* urlwhitelist) {
::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
if (message_arena == nullptr) {
delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(urlwhitelist_);
}
if (urlwhitelist) {
::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
if (message_arena != submessage_arena) {
urlwhitelist = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
message_arena, urlwhitelist, submessage_arena);
}
_has_bits_[1] |= 0x00000200u;
} else {
_has_bits_[1] &= ~0x00000200u;
}
urlwhitelist_ = urlwhitelist;
// @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.URLWhitelist)
}

// optional .enterprise_management.BooleanPolicyProto DisableSafeBrowsingProceedAnyway = 152;
inline bool CloudPolicySettings::has_disablesafebrowsingproceedanyway() const {
return (_has_bits_[1] & 0x00000800u) != 0;
}
inline const ::enterprise_management::BooleanPolicyProto& CloudPolicySettings::disablesafebrowsingproceedanyway() const {
const ::enterprise_management::BooleanPolicyProto* p = disablesafebrowsingproceedanyway_;
// @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.DisableSafeBrowsingProceedAnyway)
return p != nullptr ? *p : *reinterpret_cast<const ::enterprise_management::BooleanPolicyProto*>(
&::enterprise_management::_BooleanPolicyProto_default_instance_);
}
inline ::enterprise_management::BooleanPolicyProto* CloudPolicySettings::release_disablesafebrowsingproceedanyway() {
// @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.DisableSafeBrowsingProceedAnyway)
_has_bits_[1] &= ~0x00000800u;
::enterprise_management::BooleanPolicyProto* temp = disablesafebrowsingproceedanyway_;
disablesafebrowsingproceedanyway_ = nullptr;
return temp;
}
inline ::enterprise_management::BooleanPolicyProto* CloudPolicySettings::mutable_disablesafebrowsingproceedanyway() {
_has_bits_[1] |= 0x00000800u;
if (disablesafebrowsingproceedanyway_ == nullptr) {
auto* p = CreateMaybeMessage<::enterprise_management::BooleanPolicyProto>(GetArenaNoVirtual());
disablesafebrowsingproceedanyway_ = p;
}
// @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.DisableSafeBrowsingProceedAnyway)
return disablesafebrowsingproceedanyway_;
}
inline void CloudPolicySettings::set_allocated_disablesafebrowsingproceedanyway(::enterprise_management::BooleanPolicyProto* disablesafebrowsingproceedanyway) {
::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
if (message_arena == nullptr) {
delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(disablesafebrowsingproceedanyway_);
}
if (disablesafebrowsingproceedanyway) {
::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
if (message_arena != submessage_arena) {
disablesafebrowsingproceedanyway = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
message_arena, disablesafebrowsingproceedanyway, submessage_arena);
}
_has_bits_[1] |= 0x00000800u;
} else {
_has_bits_[1] &= ~0x00000800u;
}
disablesafebrowsingproceedanyway_ = disablesafebrowsingproceedanyway;
// @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.DisableSafeBrowsingProceedAnyway)
}

// optional .enterprise_management.BooleanPolicyProto SharedClipboardEnabled = 612;
inline bool CloudPolicySettings::has_sharedclipboardenabled() const {
return (_has_bits_[2] & 0x10000000u) != 0;
}
inline const ::enterprise_management::BooleanPolicyProto& CloudPolicySettings::sharedclipboardenabled() const {
const ::enterprise_management::BooleanPolicyProto* p = sharedclipboardenabled_;
// @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.SharedClipboardEnabled)
return p != nullptr ? *p : *reinterpret_cast<const ::enterprise_management::BooleanPolicyProto*>(
&::enterprise_management::_BooleanPolicyProto_default_instance_);
}
inline ::enterprise_management::BooleanPolicyProto* CloudPolicySettings::release_sharedclipboardenabled() {
// @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.SharedClipboardEnabled)
_has_bits_[2] &= ~0x10000000u;
::enterprise_management::BooleanPolicyProto* temp = sharedclipboardenabled_;
sharedclipboardenabled_ = nullptr;
return temp;
}
inline ::enterprise_management::BooleanPolicyProto* CloudPolicySettings::mutable_sharedclipboardenabled() {
_has_bits_[2] |= 0x10000000u;
if (sharedclipboardenabled_ == nullptr) {
auto* p = CreateMaybeMessage<::enterprise_management::BooleanPolicyProto>(GetArenaNoVirtual());
sharedclipboardenabled_ = p;
}
// @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.SharedClipboardEnabled)
return sharedclipboardenabled_;
}
inline void CloudPolicySettings::set_allocated_sharedclipboardenabled(::enterprise_management::BooleanPolicyProto* sharedclipboardenabled) {
::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
if (message_arena == nullptr) {
delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(sharedclipboardenabled_);
}
if (sharedclipboardenabled) {
::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
if (message_arena != submessage_arena) {
sharedclipboardenabled = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
message_arena, sharedclipboardenabled, submessage_arena);
}
_has_bits_[2] |= 0x10000000u;
} else {
_has_bits_[2] &= ~0x10000000u;
}
sharedclipboardenabled_ = sharedclipboardenabled;
// @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.SharedClipboardEnabled)
}

// optional .enterprise_management.StringPolicyProto VariationsRestrictParameter = 198;
inline bool CloudPolicySettings::has_variationsrestrictparameter() const {
return (_has_bits_[1] & 0x00008000u) != 0;
}
inline const ::enterprise_management::StringPolicyProto& CloudPolicySettings::variationsrestrictparameter() const {
const ::enterprise_management::StringPolicyProto* p = variationsrestrictparameter_;
// @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.VariationsRestrictParameter)
return p != nullptr ? *p : *reinterpret_cast<const ::enterprise_management::StringPolicyProto*>(
&::enterprise_management::_StringPolicyProto_default_instance_);
}
inline ::enterprise_management::StringPolicyProto* CloudPolicySettings::release_variationsrestrictparameter() {
// @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.VariationsRestrictParameter)
_has_bits_[1] &= ~0x00008000u;
::enterprise_management::StringPolicyProto* temp = variationsrestrictparameter_;
variationsrestrictparameter_ = nullptr;
return temp;
}
inline ::enterprise_management::StringPolicyProto* CloudPolicySettings::mutable_variationsrestrictparameter() {
_has_bits_[1] |= 0x00008000u;
if (variationsrestrictparameter_ == nullptr) {
auto* p = CreateMaybeMessage<::enterprise_management::StringPolicyProto>(GetArenaNoVirtual());
variationsrestrictparameter_ = p;
}
// @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.VariationsRestrictParameter)
return variationsrestrictparameter_;
}
inline void CloudPolicySettings::set_allocated_variationsrestrictparameter(::enterprise_management::StringPolicyProto* variationsrestrictparameter) {
::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
if (message_arena == nullptr) {
delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(variationsrestrictparameter_);
}
if (variationsrestrictparameter) {
::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
if (message_arena != submessage_arena) {
variationsrestrictparameter = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
message_arena, variationsrestrictparameter, submessage_arena);
}
_has_bits_[1] |= 0x00008000u;
} else {
_has_bits_[1] &= ~0x00008000u;
}
variationsrestrictparameter_ = variationsrestrictparameter;
// @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.VariationsRestrictParameter)
}

// optional .enterprise_management.StringPolicyProto ManagedBookmarks = 229;
inline bool CloudPolicySettings::has_managedbookmarks() const {
return (_has_bits_[1] & 0x00010000u) != 0;
}
inline const ::enterprise_management::StringPolicyProto& CloudPolicySettings::managedbookmarks() const {
const ::enterprise_management::StringPolicyProto* p = managedbookmarks_;
// @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.ManagedBookmarks)
return p != nullptr ? *p : *reinterpret_cast<const ::enterprise_management::StringPolicyProto*>(
&::enterprise_management::_StringPolicyProto_default_instance_);
}
inline ::enterprise_management::StringPolicyProto* CloudPolicySettings::release_managedbookmarks() {
// @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.ManagedBookmarks)
_has_bits_[1] &= ~0x00010000u;
::enterprise_management::StringPolicyProto* temp = managedbookmarks_;
managedbookmarks_ = nullptr;
return temp;
}
inline ::enterprise_management::StringPolicyProto* CloudPolicySettings::mutable_managedbookmarks() {
_has_bits_[1] |= 0x00010000u;
if (managedbookmarks_ == nullptr) {
auto* p = CreateMaybeMessage<::enterprise_management::StringPolicyProto>(GetArenaNoVirtual());
managedbookmarks_ = p;
}
// @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.ManagedBookmarks)
return managedbookmarks_;
}
inline void CloudPolicySettings::set_allocated_managedbookmarks(::enterprise_management::StringPolicyProto* managedbookmarks) {
::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
if (message_arena == nullptr) {
delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(managedbookmarks_);
}
if (managedbookmarks) {
::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
if (message_arena != submessage_arena) {
managedbookmarks = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
message_arena, managedbookmarks, submessage_arena);
}
_has_bits_[1] |= 0x00010000u;
} else {
_has_bits_[1] &= ~0x00010000u;
}
managedbookmarks_ = managedbookmarks;
// @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.ManagedBookmarks)
}

// optional .enterprise_management.BooleanPolicyProto DataCompressionProxyEnabled = 243;
inline bool CloudPolicySettings::has_datacompressionproxyenabled() const {
return (_has_bits_[1] & 0x00400000u) != 0;
}
inline const ::enterprise_management::BooleanPolicyProto& CloudPolicySettings::datacompressionproxyenabled() const {
const ::enterprise_management::BooleanPolicyProto* p = datacompressionproxyenabled_;
// @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.DataCompressionProxyEnabled)
return p != nullptr ? *p : *reinterpret_cast<const ::enterprise_management::BooleanPolicyProto*>(
&::enterprise_management::_BooleanPolicyProto_default_instance_);
}
inline ::enterprise_management::BooleanPolicyProto* CloudPolicySettings::release_datacompressionproxyenabled() {
// @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.DataCompressionProxyEnabled)
_has_bits_[1] &= ~0x00400000u;
::enterprise_management::BooleanPolicyProto* temp = datacompressionproxyenabled_;
datacompressionproxyenabled_ = nullptr;
return temp;
}
inline ::enterprise_management::BooleanPolicyProto* CloudPolicySettings::mutable_datacompressionproxyenabled() {
_has_bits_[1] |= 0x00400000u;
if (datacompressionproxyenabled_ == nullptr) {
auto* p = CreateMaybeMessage<::enterprise_management::BooleanPolicyProto>(GetArenaNoVirtual());
datacompressionproxyenabled_ = p;
}
// @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.DataCompressionProxyEnabled)
return datacompressionproxyenabled_;
}
inline void CloudPolicySettings::set_allocated_datacompressionproxyenabled(::enterprise_management::BooleanPolicyProto* datacompressionproxyenabled) {
::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
if (message_arena == nullptr) {
delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(datacompressionproxyenabled_);
}
if (datacompressionproxyenabled) {
::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
if (message_arena != submessage_arena) {
datacompressionproxyenabled = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
message_arena, datacompressionproxyenabled, submessage_arena);
}
_has_bits_[1] |= 0x00400000u;
} else {
_has_bits_[1] &= ~0x00400000u;
}
datacompressionproxyenabled_ = datacompressionproxyenabled;
// @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.DataCompressionProxyEnabled)
}

// optional .enterprise_management.StringListPolicyProto EnableDeprecatedWebPlatformFeatures = 272;
inline bool CloudPolicySettings::has_enabledeprecatedwebplatformfeatures() const {
return (_has_bits_[1] & 0x00800000u) != 0;
}
inline const ::enterprise_management::StringListPolicyProto& CloudPolicySettings::enabledeprecatedwebplatformfeatures() const {
const ::enterprise_management::StringListPolicyProto* p = enabledeprecatedwebplatformfeatures_;
// @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.EnableDeprecatedWebPlatformFeatures)
return p != nullptr ? *p : *reinterpret_cast<const ::enterprise_management::StringListPolicyProto*>(
&::enterprise_management::_StringListPolicyProto_default_instance_);
}
inline ::enterprise_management::StringListPolicyProto* CloudPolicySettings::release_enabledeprecatedwebplatformfeatures() {
// @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.EnableDeprecatedWebPlatformFeatures)
_has_bits_[1] &= ~0x00800000u;
::enterprise_management::StringListPolicyProto* temp = enabledeprecatedwebplatformfeatures_;
enabledeprecatedwebplatformfeatures_ = nullptr;
return temp;
}
inline ::enterprise_management::StringListPolicyProto* CloudPolicySettings::mutable_enabledeprecatedwebplatformfeatures() {
_has_bits_[1] |= 0x00800000u;
if (enabledeprecatedwebplatformfeatures_ == nullptr) {
auto* p = CreateMaybeMessage<::enterprise_management::StringListPolicyProto>(GetArenaNoVirtual());
enabledeprecatedwebplatformfeatures_ = p;
}
// @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.EnableDeprecatedWebPlatformFeatures)
return enabledeprecatedwebplatformfeatures_;
}
inline void CloudPolicySettings::set_allocated_enabledeprecatedwebplatformfeatures(::enterprise_management::StringListPolicyProto* enabledeprecatedwebplatformfeatures) {
::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
if (message_arena == nullptr) {
delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(enabledeprecatedwebplatformfeatures_);
}
if (enabledeprecatedwebplatformfeatures) {
::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
if (message_arena != submessage_arena) {
enabledeprecatedwebplatformfeatures = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
message_arena, enabledeprecatedwebplatformfeatures, submessage_arena);
}
_has_bits_[1] |= 0x00800000u;
} else {
_has_bits_[1] &= ~0x00800000u;
}
enabledeprecatedwebplatformfeatures_ = enabledeprecatedwebplatformfeatures;
// @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.EnableDeprecatedWebPlatformFeatures)
}

// optional .enterprise_management.BooleanPolicyProto ForceBrowserSignin = 348;
inline bool CloudPolicySettings::has_forcebrowsersignin() const {
return (_has_bits_[2] & 0x00000020u) != 0;
}
inline const ::enterprise_management::BooleanPolicyProto& CloudPolicySettings::forcebrowsersignin() const {
const ::enterprise_management::BooleanPolicyProto* p = forcebrowsersignin_;
// @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.ForceBrowserSignin)
return p != nullptr ? *p : *reinterpret_cast<const ::enterprise_management::BooleanPolicyProto*>(
&::enterprise_management::_BooleanPolicyProto_default_instance_);
}
inline ::enterprise_management::BooleanPolicyProto* CloudPolicySettings::release_forcebrowsersignin() {
// @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.ForceBrowserSignin)
_has_bits_[2] &= ~0x00000020u;
::enterprise_management::BooleanPolicyProto* temp = forcebrowsersignin_;
forcebrowsersignin_ = nullptr;
return temp;
}
inline ::enterprise_management::BooleanPolicyProto* CloudPolicySettings::mutable_forcebrowsersignin() {
_has_bits_[2] |= 0x00000020u;
if (forcebrowsersignin_ == nullptr) {
auto* p = CreateMaybeMessage<::enterprise_management::BooleanPolicyProto>(GetArenaNoVirtual());
forcebrowsersignin_ = p;
}
// @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.ForceBrowserSignin)
return forcebrowsersignin_;
}
inline void CloudPolicySettings::set_allocated_forcebrowsersignin(::enterprise_management::BooleanPolicyProto* forcebrowsersignin) {
::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
if (message_arena == nullptr) {
delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(forcebrowsersignin_);
}
if (forcebrowsersignin) {
::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
if (message_arena != submessage_arena) {
forcebrowsersignin = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
message_arena, forcebrowsersignin, submessage_arena);
}
_has_bits_[2] |= 0x00000020u;
} else {
_has_bits_[2] &= ~0x00000020u;
}
forcebrowsersignin_ = forcebrowsersignin;
// @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.ForceBrowserSignin)
}

// optional .enterprise_management.IntegerPolicyProto BrowserSignin = 489;
inline bool CloudPolicySettings::has_browsersignin() const {
return (_has_bits_[2] & 0x00800000u) != 0;
}
inline const ::enterprise_management::IntegerPolicyProto& CloudPolicySettings::browsersignin() const {
const ::enterprise_management::IntegerPolicyProto* p = browsersignin_;
// @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.BrowserSignin)
return p != nullptr ? *p : *reinterpret_cast<const ::enterprise_management::IntegerPolicyProto*>(
&::enterprise_management::_IntegerPolicyProto_default_instance_);
}
inline ::enterprise_management::IntegerPolicyProto* CloudPolicySettings::release_browsersignin() {
// @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.BrowserSignin)
_has_bits_[2] &= ~0x00800000u;
::enterprise_management::IntegerPolicyProto* temp = browsersignin_;
browsersignin_ = nullptr;
return temp;
}
inline ::enterprise_management::IntegerPolicyProto* CloudPolicySettings::mutable_browsersignin() {
_has_bits_[2] |= 0x00800000u;
if (browsersignin_ == nullptr) {
auto* p = CreateMaybeMessage<::enterprise_management::IntegerPolicyProto>(GetArenaNoVirtual());
browsersignin_ = p;
}
// @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.BrowserSignin)
return browsersignin_;
}
inline void CloudPolicySettings::set_allocated_browsersignin(::enterprise_management::IntegerPolicyProto* browsersignin) {
::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
if (message_arena == nullptr) {
delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(browsersignin_);
}
if (browsersignin) {
::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
if (message_arena != submessage_arena) {
browsersignin = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
message_arena, browsersignin, submessage_arena);
}
_has_bits_[2] |= 0x00800000u;
} else {
_has_bits_[2] &= ~0x00800000u;
}
browsersignin_ = browsersignin;
// @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.BrowserSignin)
}

// optional .enterprise_management.StringPolicyProto SSLVersionMin = 281;
inline bool CloudPolicySettings::has_sslversionmin() const {
return (_has_bits_[1] & 0x02000000u) != 0;
}
inline const ::enterprise_management::StringPolicyProto& CloudPolicySettings::sslversionmin() const {
const ::enterprise_management::StringPolicyProto* p = sslversionmin_;
// @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.SSLVersionMin)
return p != nullptr ? *p : *reinterpret_cast<const ::enterprise_management::StringPolicyProto*>(
&::enterprise_management::_StringPolicyProto_default_instance_);
}
inline ::enterprise_management::StringPolicyProto* CloudPolicySettings::release_sslversionmin() {
// @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.SSLVersionMin)
_has_bits_[1] &= ~0x02000000u;
::enterprise_management::StringPolicyProto* temp = sslversionmin_;
sslversionmin_ = nullptr;
return temp;
}
inline ::enterprise_management::StringPolicyProto* CloudPolicySettings::mutable_sslversionmin() {
_has_bits_[1] |= 0x02000000u;
if (sslversionmin_ == nullptr) {
auto* p = CreateMaybeMessage<::enterprise_management::StringPolicyProto>(GetArenaNoVirtual());
sslversionmin_ = p;
}
// @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.SSLVersionMin)
return sslversionmin_;
}
inline void CloudPolicySettings::set_allocated_sslversionmin(::enterprise_management::StringPolicyProto* sslversionmin) {
::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
if (message_arena == nullptr) {
delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(sslversionmin_);
}
if (sslversionmin) {
::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
if (message_arena != submessage_arena) {
sslversionmin = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
message_arena, sslversionmin, submessage_arena);
}
_has_bits_[1] |= 0x02000000u;
} else {
_has_bits_[1] &= ~0x02000000u;
}
sslversionmin_ = sslversionmin;
// @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.SSLVersionMin)
}

// optional .enterprise_management.StringListPolicyProto CertificateTransparencyEnforcementDisabledForUrls = 337;
inline bool CloudPolicySettings::has_certificatetransparencyenforcementdisabledforurls() const {
return (_has_bits_[2] & 0x00000004u) != 0;
}
inline const ::enterprise_management::StringListPolicyProto& CloudPolicySettings::certificatetransparencyenforcementdisabledforurls() const {
const ::enterprise_management::StringListPolicyProto* p = certificatetransparencyenforcementdisabledforurls_;
// @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.CertificateTransparencyEnforcementDisabledForUrls)
return p != nullptr ? *p : *reinterpret_cast<const ::enterprise_management::StringListPolicyProto*>(
&::enterprise_management::_StringListPolicyProto_default_instance_);
}
inline ::enterprise_management::StringListPolicyProto* CloudPolicySettings::release_certificatetransparencyenforcementdisabledforurls() {
// @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.CertificateTransparencyEnforcementDisabledForUrls)
_has_bits_[2] &= ~0x00000004u;
::enterprise_management::StringListPolicyProto* temp = certificatetransparencyenforcementdisabledforurls_;
certificatetransparencyenforcementdisabledforurls_ = nullptr;
return temp;
}
inline ::enterprise_management::StringListPolicyProto* CloudPolicySettings::mutable_certificatetransparencyenforcementdisabledforurls() {
_has_bits_[2] |= 0x00000004u;
if (certificatetransparencyenforcementdisabledforurls_ == nullptr) {
auto* p = CreateMaybeMessage<::enterprise_management::StringListPolicyProto>(GetArenaNoVirtual());
certificatetransparencyenforcementdisabledforurls_ = p;
}
// @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.CertificateTransparencyEnforcementDisabledForUrls)
return certificatetransparencyenforcementdisabledforurls_;
}
inline void CloudPolicySettings::set_allocated_certificatetransparencyenforcementdisabledforurls(::enterprise_management::StringListPolicyProto* certificatetransparencyenforcementdisabledforurls) {
::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
if (message_arena == nullptr) {
delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(certificatetransparencyenforcementdisabledforurls_);
}
if (certificatetransparencyenforcementdisabledforurls) {
::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
if (message_arena != submessage_arena) {
certificatetransparencyenforcementdisabledforurls = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
message_arena, certificatetransparencyenforcementdisabledforurls, submessage_arena);
}
_has_bits_[2] |= 0x00000004u;
} else {
_has_bits_[2] &= ~0x00000004u;
}
certificatetransparencyenforcementdisabledforurls_ = certificatetransparencyenforcementdisabledforurls;
// @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.CertificateTransparencyEnforcementDisabledForUrls)
}

// optional .enterprise_management.StringListPolicyProto CertificateTransparencyEnforcementDisabledForCas = 437;
inline bool CloudPolicySettings::has_certificatetransparencyenforcementdisabledforcas() const {
return (_has_bits_[2] & 0x00000800u) != 0;
}
inline const ::enterprise_management::StringListPolicyProto& CloudPolicySettings::certificatetransparencyenforcementdisabledforcas() const {
const ::enterprise_management::StringListPolicyProto* p = certificatetransparencyenforcementdisabledforcas_;
// @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.CertificateTransparencyEnforcementDisabledForCas)
return p != nullptr ? *p : *reinterpret_cast<const ::enterprise_management::StringListPolicyProto*>(
&::enterprise_management::_StringListPolicyProto_default_instance_);
}
inline ::enterprise_management::StringListPolicyProto* CloudPolicySettings::release_certificatetransparencyenforcementdisabledforcas() {
// @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.CertificateTransparencyEnforcementDisabledForCas)
_has_bits_[2] &= ~0x00000800u;
::enterprise_management::StringListPolicyProto* temp = certificatetransparencyenforcementdisabledforcas_;
certificatetransparencyenforcementdisabledforcas_ = nullptr;
return temp;
}
inline ::enterprise_management::StringListPolicyProto* CloudPolicySettings::mutable_certificatetransparencyenforcementdisabledforcas() {
_has_bits_[2] |= 0x00000800u;
if (certificatetransparencyenforcementdisabledforcas_ == nullptr) {
auto* p = CreateMaybeMessage<::enterprise_management::StringListPolicyProto>(GetArenaNoVirtual());
certificatetransparencyenforcementdisabledforcas_ = p;
}
// @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.CertificateTransparencyEnforcementDisabledForCas)
return certificatetransparencyenforcementdisabledforcas_;
}
inline void CloudPolicySettings::set_allocated_certificatetransparencyenforcementdisabledforcas(::enterprise_management::StringListPolicyProto* certificatetransparencyenforcementdisabledforcas) {
::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
if (message_arena == nullptr) {
delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(certificatetransparencyenforcementdisabledforcas_);
}
if (certificatetransparencyenforcementdisabledforcas) {
::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
if (message_arena != submessage_arena) {
certificatetransparencyenforcementdisabledforcas = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
message_arena, certificatetransparencyenforcementdisabledforcas, submessage_arena);
}
_has_bits_[2] |= 0x00000800u;
} else {
_has_bits_[2] &= ~0x00000800u;
}
certificatetransparencyenforcementdisabledforcas_ = certificatetransparencyenforcementdisabledforcas;
// @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.CertificateTransparencyEnforcementDisabledForCas)
}

// optional .enterprise_management.StringListPolicyProto CertificateTransparencyEnforcementDisabledForLegacyCas = 438;
inline bool CloudPolicySettings::has_certificatetransparencyenforcementdisabledforlegacycas() const {
return (_has_bits_[2] & 0x00001000u) != 0;
}
inline const ::enterprise_management::StringListPolicyProto& CloudPolicySettings::certificatetransparencyenforcementdisabledforlegacycas() const {
const ::enterprise_management::StringListPolicyProto* p = certificatetransparencyenforcementdisabledforlegacycas_;
// @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.CertificateTransparencyEnforcementDisabledForLegacyCas)
return p != nullptr ? *p : *reinterpret_cast<const ::enterprise_management::StringListPolicyProto*>(
&::enterprise_management::_StringListPolicyProto_default_instance_);
}
inline ::enterprise_management::StringListPolicyProto* CloudPolicySettings::release_certificatetransparencyenforcementdisabledforlegacycas() {
// @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.CertificateTransparencyEnforcementDisabledForLegacyCas)
_has_bits_[2] &= ~0x00001000u;
::enterprise_management::StringListPolicyProto* temp = certificatetransparencyenforcementdisabledforlegacycas_;
certificatetransparencyenforcementdisabledforlegacycas_ = nullptr;
return temp;
}
inline ::enterprise_management::StringListPolicyProto* CloudPolicySettings::mutable_certificatetransparencyenforcementdisabledforlegacycas() {
_has_bits_[2] |= 0x00001000u;
if (certificatetransparencyenforcementdisabledforlegacycas_ == nullptr) {
auto* p = CreateMaybeMessage<::enterprise_management::StringListPolicyProto>(GetArenaNoVirtual());
certificatetransparencyenforcementdisabledforlegacycas_ = p;
}
// @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.CertificateTransparencyEnforcementDisabledForLegacyCas)
return certificatetransparencyenforcementdisabledforlegacycas_;
}
inline void CloudPolicySettings::set_allocated_certificatetransparencyenforcementdisabledforlegacycas(::enterprise_management::StringListPolicyProto* certificatetransparencyenforcementdisabledforlegacycas) {
::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
if (message_arena == nullptr) {
delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(certificatetransparencyenforcementdisabledforlegacycas_);
}
if (certificatetransparencyenforcementdisabledforlegacycas) {
::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
if (message_arena != submessage_arena) {
certificatetransparencyenforcementdisabledforlegacycas = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
message_arena, certificatetransparencyenforcementdisabledforlegacycas, submessage_arena);
}
_has_bits_[2] |= 0x00001000u;
} else {
_has_bits_[2] &= ~0x00001000u;
}
certificatetransparencyenforcementdisabledforlegacycas_ = certificatetransparencyenforcementdisabledforlegacycas;
// @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.CertificateTransparencyEnforcementDisabledForLegacyCas)
}

// optional .enterprise_management.BooleanPolicyProto ContextualSearchEnabled = 283;
inline bool CloudPolicySettings::has_contextualsearchenabled() const {
return (_has_bits_[1] & 0x04000000u) != 0;
}
inline const ::enterprise_management::BooleanPolicyProto& CloudPolicySettings::contextualsearchenabled() const {
const ::enterprise_management::BooleanPolicyProto* p = contextualsearchenabled_;
// @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.ContextualSearchEnabled)
return p != nullptr ? *p : *reinterpret_cast<const ::enterprise_management::BooleanPolicyProto*>(
&::enterprise_management::_BooleanPolicyProto_default_instance_);
}
inline ::enterprise_management::BooleanPolicyProto* CloudPolicySettings::release_contextualsearchenabled() {
// @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.ContextualSearchEnabled)
_has_bits_[1] &= ~0x04000000u;
::enterprise_management::BooleanPolicyProto* temp = contextualsearchenabled_;
contextualsearchenabled_ = nullptr;
return temp;
}
inline ::enterprise_management::BooleanPolicyProto* CloudPolicySettings::mutable_contextualsearchenabled() {
_has_bits_[1] |= 0x04000000u;
if (contextualsearchenabled_ == nullptr) {
auto* p = CreateMaybeMessage<::enterprise_management::BooleanPolicyProto>(GetArenaNoVirtual());
contextualsearchenabled_ = p;
}
// @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.ContextualSearchEnabled)
return contextualsearchenabled_;
}
inline void CloudPolicySettings::set_allocated_contextualsearchenabled(::enterprise_management::BooleanPolicyProto* contextualsearchenabled) {
::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
if (message_arena == nullptr) {
delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(contextualsearchenabled_);
}
if (contextualsearchenabled) {
::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
if (message_arena != submessage_arena) {
contextualsearchenabled = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
message_arena, contextualsearchenabled, submessage_arena);
}
_has_bits_[1] |= 0x04000000u;
} else {
_has_bits_[1] &= ~0x04000000u;
}
contextualsearchenabled_ = contextualsearchenabled;
// @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.ContextualSearchEnabled)
}

// optional .enterprise_management.BooleanPolicyProto SSLErrorOverrideAllowed = 302;
inline bool CloudPolicySettings::has_sslerroroverrideallowed() const {
return (_has_bits_[1] & 0x20000000u) != 0;
}
inline const ::enterprise_management::BooleanPolicyProto& CloudPolicySettings::sslerroroverrideallowed() const {
const ::enterprise_management::BooleanPolicyProto* p = sslerroroverrideallowed_;
// @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.SSLErrorOverrideAllowed)
return p != nullptr ? *p : *reinterpret_cast<const ::enterprise_management::BooleanPolicyProto*>(
&::enterprise_management::_BooleanPolicyProto_default_instance_);
}
inline ::enterprise_management::BooleanPolicyProto* CloudPolicySettings::release_sslerroroverrideallowed() {
// @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.SSLErrorOverrideAllowed)
_has_bits_[1] &= ~0x20000000u;
::enterprise_management::BooleanPolicyProto* temp = sslerroroverrideallowed_;
sslerroroverrideallowed_ = nullptr;
return temp;
}
inline ::enterprise_management::BooleanPolicyProto* CloudPolicySettings::mutable_sslerroroverrideallowed() {
_has_bits_[1] |= 0x20000000u;
if (sslerroroverrideallowed_ == nullptr) {
auto* p = CreateMaybeMessage<::enterprise_management::BooleanPolicyProto>(GetArenaNoVirtual());
sslerroroverrideallowed_ = p;
}
// @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.SSLErrorOverrideAllowed)
return sslerroroverrideallowed_;
}
inline void CloudPolicySettings::set_allocated_sslerroroverrideallowed(::enterprise_management::BooleanPolicyProto* sslerroroverrideallowed) {
::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
if (message_arena == nullptr) {
delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(sslerroroverrideallowed_);
}
if (sslerroroverrideallowed) {
::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
if (message_arena != submessage_arena) {
sslerroroverrideallowed = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
message_arena, sslerroroverrideallowed, submessage_arena);
}
_has_bits_[1] |= 0x20000000u;
} else {
_has_bits_[1] &= ~0x20000000u;
}
sslerroroverrideallowed_ = sslerroroverrideallowed;
// @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.SSLErrorOverrideAllowed)
}

// optional .enterprise_management.StringPolicyProto AllowedDomainsForApps = 333;
inline bool CloudPolicySettings::has_alloweddomainsforapps() const {
return (_has_bits_[2] & 0x00000001u) != 0;
}
inline const ::enterprise_management::StringPolicyProto& CloudPolicySettings::alloweddomainsforapps() const {
const ::enterprise_management::StringPolicyProto* p = alloweddomainsforapps_;
// @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.AllowedDomainsForApps)
return p != nullptr ? *p : *reinterpret_cast<const ::enterprise_management::StringPolicyProto*>(
&::enterprise_management::_StringPolicyProto_default_instance_);
}
inline ::enterprise_management::StringPolicyProto* CloudPolicySettings::release_alloweddomainsforapps() {
// @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.AllowedDomainsForApps)
_has_bits_[2] &= ~0x00000001u;
::enterprise_management::StringPolicyProto* temp = alloweddomainsforapps_;
alloweddomainsforapps_ = nullptr;
return temp;
}
inline ::enterprise_management::StringPolicyProto* CloudPolicySettings::mutable_alloweddomainsforapps() {
_has_bits_[2] |= 0x00000001u;
if (alloweddomainsforapps_ == nullptr) {
auto* p = CreateMaybeMessage<::enterprise_management::StringPolicyProto>(GetArenaNoVirtual());
alloweddomainsforapps_ = p;
}
// @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.AllowedDomainsForApps)
return alloweddomainsforapps_;
}
inline void CloudPolicySettings::set_allocated_alloweddomainsforapps(::enterprise_management::StringPolicyProto* alloweddomainsforapps) {
::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
if (message_arena == nullptr) {
delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(alloweddomainsforapps_);
}
if (alloweddomainsforapps) {
::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
if (message_arena != submessage_arena) {
alloweddomainsforapps = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
message_arena, alloweddomainsforapps, submessage_arena);
}
_has_bits_[2] |= 0x00000001u;
} else {
_has_bits_[2] &= ~0x00000001u;
}
alloweddomainsforapps_ = alloweddomainsforapps;
// @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.AllowedDomainsForApps)
}

// optional .enterprise_management.BooleanPolicyProto EnableMediaRouter = 335;
inline bool CloudPolicySettings::has_enablemediarouter() const {
return (_has_bits_[2] & 0x00000002u) != 0;
}
inline const ::enterprise_management::BooleanPolicyProto& CloudPolicySettings::enablemediarouter() const {
const ::enterprise_management::BooleanPolicyProto* p = enablemediarouter_;
// @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.EnableMediaRouter)
return p != nullptr ? *p : *reinterpret_cast<const ::enterprise_management::BooleanPolicyProto*>(
&::enterprise_management::_BooleanPolicyProto_default_instance_);
}
inline ::enterprise_management::BooleanPolicyProto* CloudPolicySettings::release_enablemediarouter() {
// @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.EnableMediaRouter)
_has_bits_[2] &= ~0x00000002u;
::enterprise_management::BooleanPolicyProto* temp = enablemediarouter_;
enablemediarouter_ = nullptr;
return temp;
}
inline ::enterprise_management::BooleanPolicyProto* CloudPolicySettings::mutable_enablemediarouter() {
_has_bits_[2] |= 0x00000002u;
if (enablemediarouter_ == nullptr) {
auto* p = CreateMaybeMessage<::enterprise_management::BooleanPolicyProto>(GetArenaNoVirtual());
enablemediarouter_ = p;
}
// @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.EnableMediaRouter)
return enablemediarouter_;
}
inline void CloudPolicySettings::set_allocated_enablemediarouter(::enterprise_management::BooleanPolicyProto* enablemediarouter) {
::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
if (message_arena == nullptr) {
delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(enablemediarouter_);
}
if (enablemediarouter) {
::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
if (message_arena != submessage_arena) {
enablemediarouter = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
message_arena, enablemediarouter, submessage_arena);
}
_has_bits_[2] |= 0x00000002u;
} else {
_has_bits_[2] &= ~0x00000002u;
}
enablemediarouter_ = enablemediarouter;
// @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.EnableMediaRouter)
}

// optional .enterprise_management.BooleanPolicyProto NTPContentSuggestionsEnabled = 340;
inline bool CloudPolicySettings::has_ntpcontentsuggestionsenabled() const {
return (_has_bits_[2] & 0x00000008u) != 0;
}
inline const ::enterprise_management::BooleanPolicyProto& CloudPolicySettings::ntpcontentsuggestionsenabled() const {
const ::enterprise_management::BooleanPolicyProto* p = ntpcontentsuggestionsenabled_;
// @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.NTPContentSuggestionsEnabled)
return p != nullptr ? *p : *reinterpret_cast<const ::enterprise_management::BooleanPolicyProto*>(
&::enterprise_management::_BooleanPolicyProto_default_instance_);
}
inline ::enterprise_management::BooleanPolicyProto* CloudPolicySettings::release_ntpcontentsuggestionsenabled() {
// @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.NTPContentSuggestionsEnabled)
_has_bits_[2] &= ~0x00000008u;
::enterprise_management::BooleanPolicyProto* temp = ntpcontentsuggestionsenabled_;
ntpcontentsuggestionsenabled_ = nullptr;
return temp;
}
inline ::enterprise_management::BooleanPolicyProto* CloudPolicySettings::mutable_ntpcontentsuggestionsenabled() {
_has_bits_[2] |= 0x00000008u;
if (ntpcontentsuggestionsenabled_ == nullptr) {
auto* p = CreateMaybeMessage<::enterprise_management::BooleanPolicyProto>(GetArenaNoVirtual());
ntpcontentsuggestionsenabled_ = p;
}
// @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.NTPContentSuggestionsEnabled)
return ntpcontentsuggestionsenabled_;
}
inline void CloudPolicySettings::set_allocated_ntpcontentsuggestionsenabled(::enterprise_management::BooleanPolicyProto* ntpcontentsuggestionsenabled) {
::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
if (message_arena == nullptr) {
delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(ntpcontentsuggestionsenabled_);
}
if (ntpcontentsuggestionsenabled) {
::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
if (message_arena != submessage_arena) {
ntpcontentsuggestionsenabled = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
message_arena, ntpcontentsuggestionsenabled, submessage_arena);
}
_has_bits_[2] |= 0x00000008u;
} else {
_has_bits_[2] &= ~0x00000008u;
}
ntpcontentsuggestionsenabled_ = ntpcontentsuggestionsenabled;
// @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.NTPContentSuggestionsEnabled)
}

// optional .enterprise_management.StringPolicyProto WebRtcUdpPortRange = 341;
inline bool CloudPolicySettings::has_webrtcudpportrange() const {
return (_has_bits_[2] & 0x00000010u) != 0;
}
inline const ::enterprise_management::StringPolicyProto& CloudPolicySettings::webrtcudpportrange() const {
const ::enterprise_management::StringPolicyProto* p = webrtcudpportrange_;
// @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.WebRtcUdpPortRange)
return p != nullptr ? *p : *reinterpret_cast<const ::enterprise_management::StringPolicyProto*>(
&::enterprise_management::_StringPolicyProto_default_instance_);
}
inline ::enterprise_management::StringPolicyProto* CloudPolicySettings::release_webrtcudpportrange() {
// @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.WebRtcUdpPortRange)
_has_bits_[2] &= ~0x00000010u;
::enterprise_management::StringPolicyProto* temp = webrtcudpportrange_;
webrtcudpportrange_ = nullptr;
return temp;
}
inline ::enterprise_management::StringPolicyProto* CloudPolicySettings::mutable_webrtcudpportrange() {
_has_bits_[2] |= 0x00000010u;
if (webrtcudpportrange_ == nullptr) {
auto* p = CreateMaybeMessage<::enterprise_management::StringPolicyProto>(GetArenaNoVirtual());
webrtcudpportrange_ = p;
}
// @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.WebRtcUdpPortRange)
return webrtcudpportrange_;
}
inline void CloudPolicySettings::set_allocated_webrtcudpportrange(::enterprise_management::StringPolicyProto* webrtcudpportrange) {
::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
if (message_arena == nullptr) {
delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(webrtcudpportrange_);
}
if (webrtcudpportrange) {
::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
if (message_arena != submessage_arena) {
webrtcudpportrange = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
message_arena, webrtcudpportrange, submessage_arena);
}
_has_bits_[2] |= 0x00000010u;
} else {
_has_bits_[2] &= ~0x00000010u;
}
webrtcudpportrange_ = webrtcudpportrange;
// @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.WebRtcUdpPortRange)
}

// optional .enterprise_management.StringPolicyProto IsolateOriginsAndroid = 447;
inline bool CloudPolicySettings::has_isolateoriginsandroid() const {
return (_has_bits_[2] & 0x00008000u) != 0;
}
inline const ::enterprise_management::StringPolicyProto& CloudPolicySettings::isolateoriginsandroid() const {
const ::enterprise_management::StringPolicyProto* p = isolateoriginsandroid_;
// @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.IsolateOriginsAndroid)
return p != nullptr ? *p : *reinterpret_cast<const ::enterprise_management::StringPolicyProto*>(
&::enterprise_management::_StringPolicyProto_default_instance_);
}
inline ::enterprise_management::StringPolicyProto* CloudPolicySettings::release_isolateoriginsandroid() {
// @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.IsolateOriginsAndroid)
_has_bits_[2] &= ~0x00008000u;
::enterprise_management::StringPolicyProto* temp = isolateoriginsandroid_;
isolateoriginsandroid_ = nullptr;
return temp;
}
inline ::enterprise_management::StringPolicyProto* CloudPolicySettings::mutable_isolateoriginsandroid() {
_has_bits_[2] |= 0x00008000u;
if (isolateoriginsandroid_ == nullptr) {
auto* p = CreateMaybeMessage<::enterprise_management::StringPolicyProto>(GetArenaNoVirtual());
isolateoriginsandroid_ = p;
}
// @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.IsolateOriginsAndroid)
return isolateoriginsandroid_;
}
inline void CloudPolicySettings::set_allocated_isolateoriginsandroid(::enterprise_management::StringPolicyProto* isolateoriginsandroid) {
::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
if (message_arena == nullptr) {
delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(isolateoriginsandroid_);
}
if (isolateoriginsandroid) {
::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
if (message_arena != submessage_arena) {
isolateoriginsandroid = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
message_arena, isolateoriginsandroid, submessage_arena);
}
_has_bits_[2] |= 0x00008000u;
} else {
_has_bits_[2] &= ~0x00008000u;
}
isolateoriginsandroid_ = isolateoriginsandroid;
// @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.IsolateOriginsAndroid)
}

// optional .enterprise_management.BooleanPolicyProto SitePerProcessAndroid = 448;
inline bool CloudPolicySettings::has_siteperprocessandroid() const {
return (_has_bits_[2] & 0x00010000u) != 0;
}
inline const ::enterprise_management::BooleanPolicyProto& CloudPolicySettings::siteperprocessandroid() const {
const ::enterprise_management::BooleanPolicyProto* p = siteperprocessandroid_;
// @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.SitePerProcessAndroid)
return p != nullptr ? *p : *reinterpret_cast<const ::enterprise_management::BooleanPolicyProto*>(
&::enterprise_management::_BooleanPolicyProto_default_instance_);
}
inline ::enterprise_management::BooleanPolicyProto* CloudPolicySettings::release_siteperprocessandroid() {
// @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.SitePerProcessAndroid)
_has_bits_[2] &= ~0x00010000u;
::enterprise_management::BooleanPolicyProto* temp = siteperprocessandroid_;
siteperprocessandroid_ = nullptr;
return temp;
}
inline ::enterprise_management::BooleanPolicyProto* CloudPolicySettings::mutable_siteperprocessandroid() {
_has_bits_[2] |= 0x00010000u;
if (siteperprocessandroid_ == nullptr) {
auto* p = CreateMaybeMessage<::enterprise_management::BooleanPolicyProto>(GetArenaNoVirtual());
siteperprocessandroid_ = p;
}
// @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.SitePerProcessAndroid)
return siteperprocessandroid_;
}
inline void CloudPolicySettings::set_allocated_siteperprocessandroid(::enterprise_management::BooleanPolicyProto* siteperprocessandroid) {
::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
if (message_arena == nullptr) {
delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(siteperprocessandroid_);
}
if (siteperprocessandroid) {
::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
if (message_arena != submessage_arena) {
siteperprocessandroid = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
message_arena, siteperprocessandroid, submessage_arena);
}
_has_bits_[2] |= 0x00010000u;
} else {
_has_bits_[2] &= ~0x00010000u;
}
siteperprocessandroid_ = siteperprocessandroid;
// @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.SitePerProcessAndroid)
}

// optional .enterprise_management.StringListPolicyProto RestrictAccountsToPatterns = 412;
inline bool CloudPolicySettings::has_restrictaccountstopatterns() const {
return (_has_bits_[2] & 0x00000200u) != 0;
}
inline const ::enterprise_management::StringListPolicyProto& CloudPolicySettings::restrictaccountstopatterns() const {
const ::enterprise_management::StringListPolicyProto* p = restrictaccountstopatterns_;
// @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.RestrictAccountsToPatterns)
return p != nullptr ? *p : *reinterpret_cast<const ::enterprise_management::StringListPolicyProto*>(
&::enterprise_management::_StringListPolicyProto_default_instance_);
}
inline ::enterprise_management::StringListPolicyProto* CloudPolicySettings::release_restrictaccountstopatterns() {
// @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.RestrictAccountsToPatterns)
_has_bits_[2] &= ~0x00000200u;
::enterprise_management::StringListPolicyProto* temp = restrictaccountstopatterns_;
restrictaccountstopatterns_ = nullptr;
return temp;
}
inline ::enterprise_management::StringListPolicyProto* CloudPolicySettings::mutable_restrictaccountstopatterns() {
_has_bits_[2] |= 0x00000200u;
if (restrictaccountstopatterns_ == nullptr) {
auto* p = CreateMaybeMessage<::enterprise_management::StringListPolicyProto>(GetArenaNoVirtual());
restrictaccountstopatterns_ = p;
}
// @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.RestrictAccountsToPatterns)
return restrictaccountstopatterns_;
}
inline void CloudPolicySettings::set_allocated_restrictaccountstopatterns(::enterprise_management::StringListPolicyProto* restrictaccountstopatterns) {
::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
if (message_arena == nullptr) {
delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(restrictaccountstopatterns_);
}
if (restrictaccountstopatterns) {
::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
if (message_arena != submessage_arena) {
restrictaccountstopatterns = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
message_arena, restrictaccountstopatterns, submessage_arena);
}
_has_bits_[2] |= 0x00000200u;
} else {
_has_bits_[2] &= ~0x00000200u;
}
restrictaccountstopatterns_ = restrictaccountstopatterns;
// @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.RestrictAccountsToPatterns)
}

// optional .enterprise_management.StringListPolicyProto OverrideSecurityRestrictionsOnInsecureOrigin = 459;
inline bool CloudPolicySettings::has_overridesecurityrestrictionsoninsecureorigin() const {
return (_has_bits_[2] & 0x00020000u) != 0;
}
inline const ::enterprise_management::StringListPolicyProto& CloudPolicySettings::overridesecurityrestrictionsoninsecureorigin() const {
const ::enterprise_management::StringListPolicyProto* p = overridesecurityrestrictionsoninsecureorigin_;
// @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.OverrideSecurityRestrictionsOnInsecureOrigin)
return p != nullptr ? *p : *reinterpret_cast<const ::enterprise_management::StringListPolicyProto*>(
&::enterprise_management::_StringListPolicyProto_default_instance_);
}
inline ::enterprise_management::StringListPolicyProto* CloudPolicySettings::release_overridesecurityrestrictionsoninsecureorigin() {
// @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.OverrideSecurityRestrictionsOnInsecureOrigin)
_has_bits_[2] &= ~0x00020000u;
::enterprise_management::StringListPolicyProto* temp = overridesecurityrestrictionsoninsecureorigin_;
overridesecurityrestrictionsoninsecureorigin_ = nullptr;
return temp;
}
inline ::enterprise_management::StringListPolicyProto* CloudPolicySettings::mutable_overridesecurityrestrictionsoninsecureorigin() {
_has_bits_[2] |= 0x00020000u;
if (overridesecurityrestrictionsoninsecureorigin_ == nullptr) {
auto* p = CreateMaybeMessage<::enterprise_management::StringListPolicyProto>(GetArenaNoVirtual());
overridesecurityrestrictionsoninsecureorigin_ = p;
}
// @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.OverrideSecurityRestrictionsOnInsecureOrigin)
return overridesecurityrestrictionsoninsecureorigin_;
}
inline void CloudPolicySettings::set_allocated_overridesecurityrestrictionsoninsecureorigin(::enterprise_management::StringListPolicyProto* overridesecurityrestrictionsoninsecureorigin) {
::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
if (message_arena == nullptr) {
delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(overridesecurityrestrictionsoninsecureorigin_);
}
if (overridesecurityrestrictionsoninsecureorigin) {
::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
if (message_arena != submessage_arena) {
overridesecurityrestrictionsoninsecureorigin = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
message_arena, overridesecurityrestrictionsoninsecureorigin, submessage_arena);
}
_has_bits_[2] |= 0x00020000u;
} else {
_has_bits_[2] &= ~0x00020000u;
}
overridesecurityrestrictionsoninsecureorigin_ = overridesecurityrestrictionsoninsecureorigin;
// @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.OverrideSecurityRestrictionsOnInsecureOrigin)
}

// optional .enterprise_management.BooleanPolicyProto UrlKeyedAnonymizedDataCollectionEnabled = 463;
inline bool CloudPolicySettings::has_urlkeyedanonymizeddatacollectionenabled() const {
return (_has_bits_[2] & 0x00080000u) != 0;
}
inline const ::enterprise_management::BooleanPolicyProto& CloudPolicySettings::urlkeyedanonymizeddatacollectionenabled() const {
const ::enterprise_management::BooleanPolicyProto* p = urlkeyedanonymizeddatacollectionenabled_;
// @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.UrlKeyedAnonymizedDataCollectionEnabled)
return p != nullptr ? *p : *reinterpret_cast<const ::enterprise_management::BooleanPolicyProto*>(
&::enterprise_management::_BooleanPolicyProto_default_instance_);
}
inline ::enterprise_management::BooleanPolicyProto* CloudPolicySettings::release_urlkeyedanonymizeddatacollectionenabled() {
// @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.UrlKeyedAnonymizedDataCollectionEnabled)
_has_bits_[2] &= ~0x00080000u;
::enterprise_management::BooleanPolicyProto* temp = urlkeyedanonymizeddatacollectionenabled_;
urlkeyedanonymizeddatacollectionenabled_ = nullptr;
return temp;
}
inline ::enterprise_management::BooleanPolicyProto* CloudPolicySettings::mutable_urlkeyedanonymizeddatacollectionenabled() {
_has_bits_[2] |= 0x00080000u;
if (urlkeyedanonymizeddatacollectionenabled_ == nullptr) {
auto* p = CreateMaybeMessage<::enterprise_management::BooleanPolicyProto>(GetArenaNoVirtual());
urlkeyedanonymizeddatacollectionenabled_ = p;
}
// @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.UrlKeyedAnonymizedDataCollectionEnabled)
return urlkeyedanonymizeddatacollectionenabled_;
}
inline void CloudPolicySettings::set_allocated_urlkeyedanonymizeddatacollectionenabled(::enterprise_management::BooleanPolicyProto* urlkeyedanonymizeddatacollectionenabled) {
::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
if (message_arena == nullptr) {
delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(urlkeyedanonymizeddatacollectionenabled_);
}
if (urlkeyedanonymizeddatacollectionenabled) {
::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
if (message_arena != submessage_arena) {
urlkeyedanonymizeddatacollectionenabled = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
message_arena, urlkeyedanonymizeddatacollectionenabled, submessage_arena);
}
_has_bits_[2] |= 0x00080000u;
} else {
_has_bits_[2] &= ~0x00080000u;
}
urlkeyedanonymizeddatacollectionenabled_ = urlkeyedanonymizeddatacollectionenabled;
// @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.UrlKeyedAnonymizedDataCollectionEnabled)
}

// optional .enterprise_management.StringListPolicyProto CoalesceH2ConnectionsWithClientCertificatesForHosts = 468;
inline bool CloudPolicySettings::has_coalesceh2connectionswithclientcertificatesforhosts() const {
return (_has_bits_[2] & 0x00100000u) != 0;
}
inline const ::enterprise_management::StringListPolicyProto& CloudPolicySettings::coalesceh2connectionswithclientcertificatesforhosts() const {
const ::enterprise_management::StringListPolicyProto* p = coalesceh2connectionswithclientcertificatesforhosts_;
// @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.CoalesceH2ConnectionsWithClientCertificatesForHosts)
return p != nullptr ? *p : *reinterpret_cast<const ::enterprise_management::StringListPolicyProto*>(
&::enterprise_management::_StringListPolicyProto_default_instance_);
}
inline ::enterprise_management::StringListPolicyProto* CloudPolicySettings::release_coalesceh2connectionswithclientcertificatesforhosts() {
// @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.CoalesceH2ConnectionsWithClientCertificatesForHosts)
_has_bits_[2] &= ~0x00100000u;
::enterprise_management::StringListPolicyProto* temp = coalesceh2connectionswithclientcertificatesforhosts_;
coalesceh2connectionswithclientcertificatesforhosts_ = nullptr;
return temp;
}
inline ::enterprise_management::StringListPolicyProto* CloudPolicySettings::mutable_coalesceh2connectionswithclientcertificatesforhosts() {
_has_bits_[2] |= 0x00100000u;
if (coalesceh2connectionswithclientcertificatesforhosts_ == nullptr) {
auto* p = CreateMaybeMessage<::enterprise_management::StringListPolicyProto>(GetArenaNoVirtual());
coalesceh2connectionswithclientcertificatesforhosts_ = p;
}
// @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.CoalesceH2ConnectionsWithClientCertificatesForHosts)
return coalesceh2connectionswithclientcertificatesforhosts_;
}
inline void CloudPolicySettings::set_allocated_coalesceh2connectionswithclientcertificatesforhosts(::enterprise_management::StringListPolicyProto* coalesceh2connectionswithclientcertificatesforhosts) {
::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
if (message_arena == nullptr) {
delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(coalesceh2connectionswithclientcertificatesforhosts_);
}
if (coalesceh2connectionswithclientcertificatesforhosts) {
::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
if (message_arena != submessage_arena) {
coalesceh2connectionswithclientcertificatesforhosts = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
message_arena, coalesceh2connectionswithclientcertificatesforhosts, submessage_arena);
}
_has_bits_[2] |= 0x00100000u;
} else {
_has_bits_[2] &= ~0x00100000u;
}
coalesceh2connectionswithclientcertificatesforhosts_ = coalesceh2connectionswithclientcertificatesforhosts;
// @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.CoalesceH2ConnectionsWithClientCertificatesForHosts)
}

// optional .enterprise_management.BooleanPolicyProto EnterpriseHardwarePlatformAPIEnabled = 485;
inline bool CloudPolicySettings::has_enterprisehardwareplatformapienabled() const {
return (_has_bits_[2] & 0x00200000u) != 0;
}
inline const ::enterprise_management::BooleanPolicyProto& CloudPolicySettings::enterprisehardwareplatformapienabled() const {
const ::enterprise_management::BooleanPolicyProto* p = enterprisehardwareplatformapienabled_;
// @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.EnterpriseHardwarePlatformAPIEnabled)
return p != nullptr ? *p : *reinterpret_cast<const ::enterprise_management::BooleanPolicyProto*>(
&::enterprise_management::_BooleanPolicyProto_default_instance_);
}
inline ::enterprise_management::BooleanPolicyProto* CloudPolicySettings::release_enterprisehardwareplatformapienabled() {
// @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.EnterpriseHardwarePlatformAPIEnabled)
_has_bits_[2] &= ~0x00200000u;
::enterprise_management::BooleanPolicyProto* temp = enterprisehardwareplatformapienabled_;
enterprisehardwareplatformapienabled_ = nullptr;
return temp;
}
inline ::enterprise_management::BooleanPolicyProto* CloudPolicySettings::mutable_enterprisehardwareplatformapienabled() {
_has_bits_[2] |= 0x00200000u;
if (enterprisehardwareplatformapienabled_ == nullptr) {
auto* p = CreateMaybeMessage<::enterprise_management::BooleanPolicyProto>(GetArenaNoVirtual());
enterprisehardwareplatformapienabled_ = p;
}
// @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.EnterpriseHardwarePlatformAPIEnabled)
return enterprisehardwareplatformapienabled_;
}
inline void CloudPolicySettings::set_allocated_enterprisehardwareplatformapienabled(::enterprise_management::BooleanPolicyProto* enterprisehardwareplatformapienabled) {
::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
if (message_arena == nullptr) {
delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(enterprisehardwareplatformapienabled_);
}
if (enterprisehardwareplatformapienabled) {
::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
if (message_arena != submessage_arena) {
enterprisehardwareplatformapienabled = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
message_arena, enterprisehardwareplatformapienabled, submessage_arena);
}
_has_bits_[2] |= 0x00200000u;
} else {
_has_bits_[2] &= ~0x00200000u;
}
enterprisehardwareplatformapienabled_ = enterprisehardwareplatformapienabled;
// @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.EnterpriseHardwarePlatformAPIEnabled)
}

// optional .enterprise_management.BooleanPolicyProto AllowPopupsDuringPageUnload = 535;
inline bool CloudPolicySettings::has_allowpopupsduringpageunload() const {
return (_has_bits_[2] & 0x01000000u) != 0;
}
inline const ::enterprise_management::BooleanPolicyProto& CloudPolicySettings::allowpopupsduringpageunload() const {
const ::enterprise_management::BooleanPolicyProto* p = allowpopupsduringpageunload_;
// @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.AllowPopupsDuringPageUnload)
return p != nullptr ? *p : *reinterpret_cast<const ::enterprise_management::BooleanPolicyProto*>(
&::enterprise_management::_BooleanPolicyProto_default_instance_);
}
inline ::enterprise_management::BooleanPolicyProto* CloudPolicySettings::release_allowpopupsduringpageunload() {
// @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.AllowPopupsDuringPageUnload)
_has_bits_[2] &= ~0x01000000u;
::enterprise_management::BooleanPolicyProto* temp = allowpopupsduringpageunload_;
allowpopupsduringpageunload_ = nullptr;
return temp;
}
inline ::enterprise_management::BooleanPolicyProto* CloudPolicySettings::mutable_allowpopupsduringpageunload() {
_has_bits_[2] |= 0x01000000u;
if (allowpopupsduringpageunload_ == nullptr) {
auto* p = CreateMaybeMessage<::enterprise_management::BooleanPolicyProto>(GetArenaNoVirtual());
allowpopupsduringpageunload_ = p;
}
// @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.AllowPopupsDuringPageUnload)
return allowpopupsduringpageunload_;
}
inline void CloudPolicySettings::set_allocated_allowpopupsduringpageunload(::enterprise_management::BooleanPolicyProto* allowpopupsduringpageunload) {
::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
if (message_arena == nullptr) {
delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(allowpopupsduringpageunload_);
}
if (allowpopupsduringpageunload) {
::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
if (message_arena != submessage_arena) {
allowpopupsduringpageunload = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
message_arena, allowpopupsduringpageunload, submessage_arena);
}
_has_bits_[2] |= 0x01000000u;
} else {
_has_bits_[2] &= ~0x01000000u;
}
allowpopupsduringpageunload_ = allowpopupsduringpageunload;
// @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.AllowPopupsDuringPageUnload)
}

// optional .enterprise_management.StringListPolicyProto HSTSPolicyBypassList = 603;
inline bool CloudPolicySettings::has_hstspolicybypasslist() const {
return (_has_bits_[2] & 0x04000000u) != 0;
}
inline const ::enterprise_management::StringListPolicyProto& CloudPolicySettings::hstspolicybypasslist() const {
const ::enterprise_management::StringListPolicyProto* p = hstspolicybypasslist_;
// @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.HSTSPolicyBypassList)
return p != nullptr ? *p : *reinterpret_cast<const ::enterprise_management::StringListPolicyProto*>(
&::enterprise_management::_StringListPolicyProto_default_instance_);
}
inline ::enterprise_management::StringListPolicyProto* CloudPolicySettings::release_hstspolicybypasslist() {
// @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.HSTSPolicyBypassList)
_has_bits_[2] &= ~0x04000000u;
::enterprise_management::StringListPolicyProto* temp = hstspolicybypasslist_;
hstspolicybypasslist_ = nullptr;
return temp;
}
inline ::enterprise_management::StringListPolicyProto* CloudPolicySettings::mutable_hstspolicybypasslist() {
_has_bits_[2] |= 0x04000000u;
if (hstspolicybypasslist_ == nullptr) {
auto* p = CreateMaybeMessage<::enterprise_management::StringListPolicyProto>(GetArenaNoVirtual());
hstspolicybypasslist_ = p;
}
// @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.HSTSPolicyBypassList)
return hstspolicybypasslist_;
}
inline void CloudPolicySettings::set_allocated_hstspolicybypasslist(::enterprise_management::StringListPolicyProto* hstspolicybypasslist) {
::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
if (message_arena == nullptr) {
delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(hstspolicybypasslist_);
}
if (hstspolicybypasslist) {
::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
if (message_arena != submessage_arena) {
hstspolicybypasslist = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
message_arena, hstspolicybypasslist, submessage_arena);
}
_has_bits_[2] |= 0x04000000u;
} else {
_has_bits_[2] &= ~0x04000000u;
}
hstspolicybypasslist_ = hstspolicybypasslist;
// @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.HSTSPolicyBypassList)
}

// optional .enterprise_management.BooleanPolicyProto AllowSyncXHRInPageDismissal = 606;
inline bool CloudPolicySettings::has_allowsyncxhrinpagedismissal() const {
return (_has_bits_[2] & 0x08000000u) != 0;
}
inline const ::enterprise_management::BooleanPolicyProto& CloudPolicySettings::allowsyncxhrinpagedismissal() const {
const ::enterprise_management::BooleanPolicyProto* p = allowsyncxhrinpagedismissal_;
// @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.AllowSyncXHRInPageDismissal)
return p != nullptr ? *p : *reinterpret_cast<const ::enterprise_management::BooleanPolicyProto*>(
&::enterprise_management::_BooleanPolicyProto_default_instance_);
}
inline ::enterprise_management::BooleanPolicyProto* CloudPolicySettings::release_allowsyncxhrinpagedismissal() {
// @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.AllowSyncXHRInPageDismissal)
_has_bits_[2] &= ~0x08000000u;
::enterprise_management::BooleanPolicyProto* temp = allowsyncxhrinpagedismissal_;
allowsyncxhrinpagedismissal_ = nullptr;
return temp;
}
inline ::enterprise_management::BooleanPolicyProto* CloudPolicySettings::mutable_allowsyncxhrinpagedismissal() {
_has_bits_[2] |= 0x08000000u;
if (allowsyncxhrinpagedismissal_ == nullptr) {
auto* p = CreateMaybeMessage<::enterprise_management::BooleanPolicyProto>(GetArenaNoVirtual());
allowsyncxhrinpagedismissal_ = p;
}
// @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.AllowSyncXHRInPageDismissal)
return allowsyncxhrinpagedismissal_;
}
inline void CloudPolicySettings::set_allocated_allowsyncxhrinpagedismissal(::enterprise_management::BooleanPolicyProto* allowsyncxhrinpagedismissal) {
::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
if (message_arena == nullptr) {
delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(allowsyncxhrinpagedismissal_);
}
if (allowsyncxhrinpagedismissal) {
::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
if (message_arena != submessage_arena) {
allowsyncxhrinpagedismissal = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
message_arena, allowsyncxhrinpagedismissal, submessage_arena);
}
_has_bits_[2] |= 0x08000000u;
} else {
_has_bits_[2] &= ~0x08000000u;
}
allowsyncxhrinpagedismissal_ = allowsyncxhrinpagedismissal;
// @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.AllowSyncXHRInPageDismissal)
}

// optional .enterprise_management.BooleanPolicyProto TLS13HardeningForLocalAnchorsEnabled = 628;
inline bool CloudPolicySettings::has_tls13hardeningforlocalanchorsenabled() const {
return (_has_bits_[2] & 0x80000000u) != 0;
}
inline const ::enterprise_management::BooleanPolicyProto& CloudPolicySettings::tls13hardeningforlocalanchorsenabled() const {
const ::enterprise_management::BooleanPolicyProto* p = tls13hardeningforlocalanchorsenabled_;
// @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.TLS13HardeningForLocalAnchorsEnabled)
return p != nullptr ? *p : *reinterpret_cast<const ::enterprise_management::BooleanPolicyProto*>(
&::enterprise_management::_BooleanPolicyProto_default_instance_);
}
inline ::enterprise_management::BooleanPolicyProto* CloudPolicySettings::release_tls13hardeningforlocalanchorsenabled() {
// @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.TLS13HardeningForLocalAnchorsEnabled)
_has_bits_[2] &= ~0x80000000u;
::enterprise_management::BooleanPolicyProto* temp = tls13hardeningforlocalanchorsenabled_;
tls13hardeningforlocalanchorsenabled_ = nullptr;
return temp;
}
inline ::enterprise_management::BooleanPolicyProto* CloudPolicySettings::mutable_tls13hardeningforlocalanchorsenabled() {
_has_bits_[2] |= 0x80000000u;
if (tls13hardeningforlocalanchorsenabled_ == nullptr) {
auto* p = CreateMaybeMessage<::enterprise_management::BooleanPolicyProto>(GetArenaNoVirtual());
tls13hardeningforlocalanchorsenabled_ = p;
}
// @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.TLS13HardeningForLocalAnchorsEnabled)
return tls13hardeningforlocalanchorsenabled_;
}
inline void CloudPolicySettings::set_allocated_tls13hardeningforlocalanchorsenabled(::enterprise_management::BooleanPolicyProto* tls13hardeningforlocalanchorsenabled) {
::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
if (message_arena == nullptr) {
delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(tls13hardeningforlocalanchorsenabled_);
}
if (tls13hardeningforlocalanchorsenabled) {
::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
if (message_arena != submessage_arena) {
tls13hardeningforlocalanchorsenabled = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
message_arena, tls13hardeningforlocalanchorsenabled, submessage_arena);
}
_has_bits_[2] |= 0x80000000u;
} else {
_has_bits_[2] &= ~0x80000000u;
}
tls13hardeningforlocalanchorsenabled_ = tls13hardeningforlocalanchorsenabled;
// @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.TLS13HardeningForLocalAnchorsEnabled)
}

// optional .enterprise_management.BooleanPolicyProto WebComponentsV0Enabled = 646;
inline bool CloudPolicySettings::has_webcomponentsv0enabled() const {
return (_has_bits_[3] & 0x00000001u) != 0;
}
inline const ::enterprise_management::BooleanPolicyProto& CloudPolicySettings::webcomponentsv0enabled() const {
const ::enterprise_management::BooleanPolicyProto* p = webcomponentsv0enabled_;
// @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.WebComponentsV0Enabled)
return p != nullptr ? *p : *reinterpret_cast<const ::enterprise_management::BooleanPolicyProto*>(
&::enterprise_management::_BooleanPolicyProto_default_instance_);
}
inline ::enterprise_management::BooleanPolicyProto* CloudPolicySettings::release_webcomponentsv0enabled() {
// @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.WebComponentsV0Enabled)
_has_bits_[3] &= ~0x00000001u;
::enterprise_management::BooleanPolicyProto* temp = webcomponentsv0enabled_;
webcomponentsv0enabled_ = nullptr;
return temp;
}
inline ::enterprise_management::BooleanPolicyProto* CloudPolicySettings::mutable_webcomponentsv0enabled() {
_has_bits_[3] |= 0x00000001u;
if (webcomponentsv0enabled_ == nullptr) {
auto* p = CreateMaybeMessage<::enterprise_management::BooleanPolicyProto>(GetArenaNoVirtual());
webcomponentsv0enabled_ = p;
}
// @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.WebComponentsV0Enabled)
return webcomponentsv0enabled_;
}
inline void CloudPolicySettings::set_allocated_webcomponentsv0enabled(::enterprise_management::BooleanPolicyProto* webcomponentsv0enabled) {
::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
if (message_arena == nullptr) {
delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(webcomponentsv0enabled_);
}
if (webcomponentsv0enabled) {
::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
if (message_arena != submessage_arena) {
webcomponentsv0enabled = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
message_arena, webcomponentsv0enabled, submessage_arena);
}
_has_bits_[3] |= 0x00000001u;
} else {
_has_bits_[3] &= ~0x00000001u;
}
webcomponentsv0enabled_ = webcomponentsv0enabled;
// @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.WebComponentsV0Enabled)
}

// optional .enterprise_management.BooleanPolicyProto PaymentMethodQueryEnabled = 653;
inline bool CloudPolicySettings::has_paymentmethodqueryenabled() const {
return (_has_bits_[3] & 0x00000004u) != 0;
}
inline const ::enterprise_management::BooleanPolicyProto& CloudPolicySettings::paymentmethodqueryenabled() const {
const ::enterprise_management::BooleanPolicyProto* p = paymentmethodqueryenabled_;
// @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.PaymentMethodQueryEnabled)
return p != nullptr ? *p : *reinterpret_cast<const ::enterprise_management::BooleanPolicyProto*>(
&::enterprise_management::_BooleanPolicyProto_default_instance_);
}
inline ::enterprise_management::BooleanPolicyProto* CloudPolicySettings::release_paymentmethodqueryenabled() {
// @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.PaymentMethodQueryEnabled)
_has_bits_[3] &= ~0x00000004u;
::enterprise_management::BooleanPolicyProto* temp = paymentmethodqueryenabled_;
paymentmethodqueryenabled_ = nullptr;
return temp;
}
inline ::enterprise_management::BooleanPolicyProto* CloudPolicySettings::mutable_paymentmethodqueryenabled() {
_has_bits_[3] |= 0x00000004u;
if (paymentmethodqueryenabled_ == nullptr) {
auto* p = CreateMaybeMessage<::enterprise_management::BooleanPolicyProto>(GetArenaNoVirtual());
paymentmethodqueryenabled_ = p;
}
// @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.PaymentMethodQueryEnabled)
return paymentmethodqueryenabled_;
}
inline void CloudPolicySettings::set_allocated_paymentmethodqueryenabled(::enterprise_management::BooleanPolicyProto* paymentmethodqueryenabled) {
::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
if (message_arena == nullptr) {
delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(paymentmethodqueryenabled_);
}
if (paymentmethodqueryenabled) {
::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
if (message_arena != submessage_arena) {
paymentmethodqueryenabled = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
message_arena, paymentmethodqueryenabled, submessage_arena);
}
_has_bits_[3] |= 0x00000004u;
} else {
_has_bits_[3] &= ~0x00000004u;
}
paymentmethodqueryenabled_ = paymentmethodqueryenabled;
// @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.PaymentMethodQueryEnabled)
}

#ifdef __GNUC__
#pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)

}  // namespace enterprise_management

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // GOOGLE_PROTOBUF_INCLUDED_GOOGLE_PROTOBUF_INCLUDED_cloud_5fpolicy_2eproto
