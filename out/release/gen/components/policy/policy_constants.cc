//
// DO NOT MODIFY THIS FILE DIRECTLY!
// IT IS GENERATED BY generate_policy_source.py
// FROM ../../components/policy/resources/policy_templates.json
//

#include "components/policy/policy_constants.h"

#include <algorithm>
#include <climits>
#include <memory>

#include "base/logging.h"
#include "base/stl_util.h"  // base::size()
#include "build/branding_buildflags.h"
#include "components/policy/core/common/policy_types.h"
#include "components/policy/core/common/schema_internal.h"
#include "components/policy/proto/cloud_policy.pb.h"
#include "components/policy/risk_tag.h"

namespace em = enterprise_management;


namespace policy {

const PolicyDetails kChromePolicyDetails[] = {
//  is_deprecated  is_device_policy  id    max_external_data_size
  // AllowPopupsDuringPageUnload
  { false,         false,           533,                        0,
    { RISK_TAG_NONE } },
  // AllowSyncXHRInPageDismissal
  { false,         false,           604,                        0,
    { RISK_TAG_NONE } },
  // AllowedDomainsForApps
  { false,         false,           331,                        0,
    { RISK_TAG_FILTERING } },
  // AlternateErrorPagesEnabled
  { false,         false,             5,                        0,
    { RISK_TAG_NONE } },
  // AuthAndroidNegotiateAccountType
  { false,         false,           305,                        0,
    { RISK_TAG_NONE } },
  // AuthNegotiateDelegateWhitelist
  { false,         false,            30,                        0,
    { RISK_TAG_NONE } },
  // AuthSchemes
  { false,         false,            26,                        0,
    { RISK_TAG_NONE } },
  // AuthServerWhitelist
  { false,         false,            29,                        0,
    { RISK_TAG_NONE } },
  // AutoFillEnabled
  { true,          false,            18,                        0,
    { RISK_TAG_NONE } },
  // AutofillAddressEnabled
  { false,         false,           459,                        0,
    { RISK_TAG_NONE } },
  // AutofillCreditCardEnabled
  { false,         false,           392,                        0,
    { RISK_TAG_NONE } },
  // BrowserSignin
  { false,         false,           487,                        0,
    { RISK_TAG_NONE } },
  // CertificateTransparencyEnforcementDisabledForCas
  { false,         false,           435,                        0,
    { RISK_TAG_SYSTEM_SECURITY } },
  // CertificateTransparencyEnforcementDisabledForLegacyCas
  { false,         false,           436,                        0,
    { RISK_TAG_SYSTEM_SECURITY } },
  // CertificateTransparencyEnforcementDisabledForUrls
  { false,         false,           335,                        0,
    { RISK_TAG_SYSTEM_SECURITY } },
  // CoalesceH2ConnectionsWithClientCertificatesForHosts
  { false,         false,           466,                        0,
    { RISK_TAG_NONE } },
  // ContextualSearchEnabled
  { false,         false,           281,                        0,
    { RISK_TAG_NONE } },
  // CookiesAllowedForUrls
  { false,         false,            77,                        0,
    { RISK_TAG_NONE } },
  // CookiesBlockedForUrls
  { false,         false,            67,                        0,
    { RISK_TAG_NONE } },
  // CookiesSessionOnlyForUrls
  { false,         false,            68,                        0,
    { RISK_TAG_NONE } },
  // DataCompressionProxyEnabled
  { false,         false,           241,                        0,
    { RISK_TAG_NONE } },
  // DefaultCookiesSetting
  { false,         false,            48,                        0,
    { RISK_TAG_NONE } },
  // DefaultGeolocationSetting
  { false,         false,            54,                        0,
    { RISK_TAG_WEBSITE_SHARING } },
  // DefaultJavaScriptSetting
  { false,         false,            50,                        0,
    { RISK_TAG_NONE } },
  // DefaultPopupsSetting
  { false,         false,            52,                        0,
    { RISK_TAG_NONE } },
  // DefaultSearchProviderAlternateURLs
  { false,         false,           161,                        0,
    { RISK_TAG_NONE } },
  // DefaultSearchProviderEnabled
  { false,         false,            40,                        0,
    { RISK_TAG_NONE } },
  // DefaultSearchProviderEncodings
  { false,         false,            47,                        0,
    { RISK_TAG_NONE } },
  // DefaultSearchProviderIconURL
  { false,         false,            46,                        0,
    { RISK_TAG_NONE } },
  // DefaultSearchProviderImageURL
  { false,         false,           229,                        0,
    { RISK_TAG_NONE } },
  // DefaultSearchProviderImageURLPostParams
  { false,         false,           233,                        0,
    { RISK_TAG_NONE } },
  // DefaultSearchProviderKeyword
  { false,         false,            42,                        0,
    { RISK_TAG_NONE } },
  // DefaultSearchProviderName
  { false,         false,            41,                        0,
    { RISK_TAG_WEBSITE_SHARING } },
  // DefaultSearchProviderNewTabURL
  { false,         false,           237,                        0,
    { RISK_TAG_NONE } },
  // DefaultSearchProviderSearchURL
  { false,         false,            43,                        0,
    { RISK_TAG_WEBSITE_SHARING } },
  // DefaultSearchProviderSearchURLPostParams
  { false,         false,           230,                        0,
    { RISK_TAG_NONE } },
  // DefaultSearchProviderSuggestURL
  { false,         false,            44,                        0,
    { RISK_TAG_NONE } },
  // DefaultSearchProviderSuggestURLPostParams
  { false,         false,           231,                        0,
    { RISK_TAG_NONE } },
  // DefaultWebBluetoothGuardSetting
  { false,         false,           320,                        0,
    { RISK_TAG_WEBSITE_SHARING } },
  // DefaultWebUsbGuardSetting
  { false,         false,           434,                        0,
    { RISK_TAG_WEBSITE_SHARING } },
  // DisableAuthNegotiateCnameLookup
  { false,         false,            27,                        0,
    { RISK_TAG_NONE } },
  // DisableSafeBrowsingProceedAnyway
  { false,         false,           150,                        0,
    { RISK_TAG_NONE } },
  // EditBookmarksEnabled
  { false,         false,            83,                        0,
    { RISK_TAG_NONE } },
  // EnableDeprecatedWebPlatformFeatures
  { false,         false,           270,                        0,
    { RISK_TAG_SYSTEM_SECURITY } },
  // EnableMediaRouter
  { false,         false,           333,                        0,
    { RISK_TAG_NONE } },
  // EnterpriseHardwarePlatformAPIEnabled
  { false,         false,           483,                        0,
    { RISK_TAG_NONE } },
  // ForceBrowserSignin
  { true,          false,           346,                        0,
    { RISK_TAG_NONE } },
  // ForceGoogleSafeSearch
  { false,         false,           282,                        0,
    { RISK_TAG_FILTERING } },
  // ForceSafeSearch
  { true,          false,           162,                        0,
    { RISK_TAG_FILTERING } },
  // ForceYouTubeRestrict
  { false,         false,           348,                        0,
    { RISK_TAG_FILTERING } },
  // ForceYouTubeSafetyMode
  { true,          false,           283,                        0,
    { RISK_TAG_FILTERING } },
  // HSTSPolicyBypassList
  { false,         false,           601,                        0,
    { RISK_TAG_SYSTEM_SECURITY } },
  // HomepageLocation
  { false,         false,             1,                        0,
    { RISK_TAG_NONE } },
  // IncognitoEnabled
  { true,          false,            10,                        0,
    { RISK_TAG_NONE } },
  // IncognitoModeAvailability
  { false,         false,            93,                        0,
    { RISK_TAG_FILTERING } },
  // IsolateOriginsAndroid
  { false,         false,           445,                        0,
    { RISK_TAG_SYSTEM_SECURITY } },
  // JavaScriptAllowedForUrls
  { false,         false,            71,                        0,
    { RISK_TAG_NONE } },
  // JavaScriptBlockedForUrls
  { false,         false,            72,                        0,
    { RISK_TAG_NONE } },
  // JavascriptEnabled
  { true,          false,             9,                        0,
    { RISK_TAG_NONE } },
  // LegacySameSiteCookieBehaviorEnabled
  { false,         false,           623,                        0,
    { RISK_TAG_NONE } },
  // LegacySameSiteCookieBehaviorEnabledForDomainList
  { false,         false,           624,                        0,
    { RISK_TAG_NONE } },
  // ManagedBookmarks
  { false,         false,           227,                        0,
    { RISK_TAG_NONE } },
  // NTPContentSuggestionsEnabled
  { false,         false,           338,                        0,
    { RISK_TAG_NONE } },
  // NetworkPredictionOptions
  { false,         false,           273,                        0,
    { RISK_TAG_NONE } },
  // NtlmV2Enabled
  { false,         false,           393,                        0,
    { RISK_TAG_WEBSITE_SHARING } },
  // OverrideSecurityRestrictionsOnInsecureOrigin
  { false,         false,           457,                        0,
    { RISK_TAG_SYSTEM_SECURITY } },
  // PasswordLeakDetectionEnabled
  { false,         false,           580,                        0,
    { RISK_TAG_GOOGLE_SHARING } },
  // PasswordManagerEnabled
  { false,         false,            16,                        0,
    { RISK_TAG_NONE } },
  // PaymentMethodQueryEnabled
  { false,         false,           651,                        0,
    { RISK_TAG_NONE } },
  // PopupsAllowedForUrls
  { false,         false,            75,                        0,
    { RISK_TAG_NONE } },
  // PopupsBlockedForUrls
  { false,         false,            76,                        0,
    { RISK_TAG_NONE } },
  // PrintingEnabled
  { false,         false,            12,                        0,
    { RISK_TAG_NONE } },
  // ProxyBypassList
  { false,         false,            25,                        0,
    { RISK_TAG_NONE } },
  // ProxyMode
  { false,         false,            21,                        0,
    { RISK_TAG_NONE } },
  // ProxyPacUrl
  { false,         false,            24,                        0,
    { RISK_TAG_NONE } },
  // ProxyServer
  { false,         false,            23,                        0,
    { RISK_TAG_NONE } },
  // ProxyServerMode
  { true,          false,            22,                        0,
    { RISK_TAG_NONE } },
  // ProxySettings
  { false,         false,           116,                        0,
    { RISK_TAG_SYSTEM_SECURITY } },
  // RestrictAccountsToPatterns
  { false,         false,           410,                        0,
    { RISK_TAG_NONE } },
  // SSLErrorOverrideAllowed
  { false,         false,           300,                        0,
    { RISK_TAG_NONE } },
  // SSLVersionMin
  { false,         false,           279,                        0,
    { RISK_TAG_NONE } },
  // SafeBrowsingEnabled
  { false,         false,            14,                        0,
    { RISK_TAG_SYSTEM_SECURITY } },
  // SavingBrowserHistoryDisabled
  { false,         false,            11,                        0,
    { RISK_TAG_NONE } },
  // SearchSuggestEnabled
  { false,         false,             6,                        0,
    { RISK_TAG_NONE } },
  // SharedClipboardEnabled
  { false,         false,           610,                        0,
    { RISK_TAG_NONE } },
  // SigninAllowed
  { true,          false,           190,                        0,
    { RISK_TAG_NONE } },
  // SitePerProcessAndroid
  { false,         false,           446,                        0,
    { RISK_TAG_SYSTEM_SECURITY } },
  // SyncTypesListDisabled
  { false,         false,           649,                        0,
    { RISK_TAG_SYSTEM_SECURITY } },
  // TLS13HardeningForLocalAnchorsEnabled
  { false,         false,           626,                        0,
    { RISK_TAG_SYSTEM_SECURITY } },
  // TranslateEnabled
  { false,         false,            80,                        0,
    { RISK_TAG_NONE } },
  // URLBlacklist
  { false,         false,           103,                        0,
    { RISK_TAG_FILTERING } },
  // URLWhitelist
  { false,         false,           104,                        0,
    { RISK_TAG_NONE } },
  // UrlKeyedAnonymizedDataCollectionEnabled
  { false,         false,           461,                        0,
    { RISK_TAG_GOOGLE_SHARING } },
  // VariationsRestrictParameter
  { false,         false,           196,                        0,
    { RISK_TAG_NONE } },
  // WebComponentsV0Enabled
  { false,         false,           644,                        0,
    { RISK_TAG_NONE } },
  // WebRtcUdpPortRange
  { false,         false,           339,                        0,
    { RISK_TAG_NONE } },
  // WebUsbAllowDevicesForUrls
  { false,         false,           486,                        0,
    { RISK_TAG_WEBSITE_SHARING } },
  // WebUsbAskForUrls
  { false,         false,           439,                        0,
    { RISK_TAG_WEBSITE_SHARING } },
  // WebUsbBlockedForUrls
  { false,         false,           440,                        0,
    { RISK_TAG_NONE } },
};

const internal::SchemaNode kSchemas[] = {
//  Type                           Extra  IsSensitiveValue HasSensitiveChildren
  { base::Value::Type::DICTIONARY,     4, false,           false },  // root node
  { base::Value::Type::BOOLEAN,       -1, false,           false },  // simple type: boolean
  { base::Value::Type::STRING,        -1, false,           false },  // simple type: string
  { base::Value::Type::INTEGER,        0, false,           false },  // integer with enumeration restriction (use range instead): ForceYouTubeRestrict
                                                                     // integer with enumeration restriction (use range instead): IncognitoModeAvailability
                                                                     // integer with enumeration restriction (use range instead): NetworkPredictionOptions
                                                                     // integer with enumeration restriction (use range instead): BrowserSignin
  { base::Value::Type::LIST,           2, false,           false },  // 
  { base::Value::Type::INTEGER,        1, false,           false },  // integer with enumeration restriction: DefaultCookiesSetting
  { base::Value::Type::INTEGER,        2, false,           false },  // integer with enumeration restriction (use range instead): DefaultGeolocationSetting
  { base::Value::Type::INTEGER,        3, false,           false },  // integer with enumeration restriction (use range instead): LegacySameSiteCookieBehaviorEnabled
                                                                     // integer with enumeration restriction (use range instead): DefaultPopupsSetting
                                                                     // integer with enumeration restriction (use range instead): DefaultJavaScriptSetting
  { base::Value::Type::INTEGER,        4, false,           false },  // integer with enumeration restriction (use range instead): DefaultWebBluetoothGuardSetting
                                                                     // integer with enumeration restriction (use range instead): DefaultWebUsbGuardSetting
  { base::Value::Type::STRING,         5, false,           false },  // string with enumeration restriction: items of EnableDeprecatedWebPlatformFeatures
  { base::Value::Type::LIST,           9, false,           false },  // 
  { base::Value::Type::STRING,         6, false,           false },  // string with pattern restriction: items of HSTSPolicyBypassList
  { base::Value::Type::LIST,          11, false,           false },  // 
  { base::Value::Type::DICTIONARY,     0, false,           false },  // items of ManagedBookmarks
  { base::Value::Type::LIST,          13, false,           false },  // 
  { base::Value::Type::LIST,          13, false,           false },  // 
  { base::Value::Type::STRING,         7, false,           false },  // string with enumeration restriction: ProxyMode
  { base::Value::Type::INTEGER,        8, false,           false },  // integer with enumeration restriction (use range instead): ProxyServerMode
  { base::Value::Type::DICTIONARY,     1, false,           false },  // ProxySettings
  { base::Value::Type::STRING,         9, false,           false },  // string with enumeration restriction: ProxyMode
  { base::Value::Type::STRING,        10, false,           false },  // string with enumeration restriction: SSLVersionMin
  { base::Value::Type::DICTIONARY,     3, false,           false },  // items of WebUsbAllowDevicesForUrls
  { base::Value::Type::DICTIONARY,     2, false,           false },  // items of devices
  { base::Value::Type::INTEGER,       -1, false,           false },  // simple type: integer
  { base::Value::Type::LIST,          22, false,           false },  // 
  { base::Value::Type::LIST,          21, false,           false },  // 
};

const internal::PropertyNode kPropertyNodes[] = {
//  Property                                                             Schema
  { "children",                                                          14 },
  { "name",                                                               2 },
  { "toplevel_name",                                                      2 },
  { "url",                                                                2 },
  { key::kProxyBypassList,                                                2 },
  { key::kProxyMode,                                                     19 },
  { key::kProxyPacUrl,                                                    2 },
  { key::kProxyServer,                                                    2 },
  { key::kProxyServerMode,                                               17 },
  { "product_id",                                                        23 },
  { "vendor_id",                                                         23 },
  { "devices",                                                           24 },
  { "urls",                                                               4 },
  { key::kAllowPopupsDuringPageUnload,                                    1 },
  { key::kAllowSyncXHRInPageDismissal,                                    1 },
  { key::kAllowedDomainsForApps,                                          2 },
  { key::kAlternateErrorPagesEnabled,                                     1 },
  { key::kAuthAndroidNegotiateAccountType,                                2 },
  { key::kAuthNegotiateDelegateWhitelist,                                 2 },
  { key::kAuthSchemes,                                                    2 },
  { key::kAuthServerWhitelist,                                            2 },
  { key::kAutoFillEnabled,                                                1 },
  { key::kAutofillAddressEnabled,                                         1 },
  { key::kAutofillCreditCardEnabled,                                      1 },
  { key::kBrowserSignin,                                                  3 },
  { key::kCertificateTransparencyEnforcementDisabledForCas,               4 },
  { key::kCertificateTransparencyEnforcementDisabledForLegacyCas,         4 },
  { key::kCertificateTransparencyEnforcementDisabledForUrls,              4 },
  { key::kCoalesceH2ConnectionsWithClientCertificatesForHosts,            4 },
  { key::kContextualSearchEnabled,                                        1 },
  { key::kCookiesAllowedForUrls,                                          4 },
  { key::kCookiesBlockedForUrls,                                          4 },
  { key::kCookiesSessionOnlyForUrls,                                      4 },
  { key::kDataCompressionProxyEnabled,                                    1 },
  { key::kDefaultCookiesSetting,                                          5 },
  { key::kDefaultGeolocationSetting,                                      6 },
  { key::kDefaultJavaScriptSetting,                                       7 },
  { key::kDefaultPopupsSetting,                                           7 },
  { key::kDefaultSearchProviderAlternateURLs,                             4 },
  { key::kDefaultSearchProviderEnabled,                                   1 },
  { key::kDefaultSearchProviderEncodings,                                 4 },
  { key::kDefaultSearchProviderIconURL,                                   2 },
  { key::kDefaultSearchProviderImageURL,                                  2 },
  { key::kDefaultSearchProviderImageURLPostParams,                        2 },
  { key::kDefaultSearchProviderKeyword,                                   2 },
  { key::kDefaultSearchProviderName,                                      2 },
  { key::kDefaultSearchProviderNewTabURL,                                 2 },
  { key::kDefaultSearchProviderSearchURL,                                 2 },
  { key::kDefaultSearchProviderSearchURLPostParams,                       2 },
  { key::kDefaultSearchProviderSuggestURL,                                2 },
  { key::kDefaultSearchProviderSuggestURLPostParams,                      2 },
  { key::kDefaultWebBluetoothGuardSetting,                                8 },
  { key::kDefaultWebUsbGuardSetting,                                      8 },
  { key::kDisableAuthNegotiateCnameLookup,                                1 },
  { key::kDisableSafeBrowsingProceedAnyway,                               1 },
  { key::kEditBookmarksEnabled,                                           1 },
  { key::kEnableDeprecatedWebPlatformFeatures,                           10 },
  { key::kEnableMediaRouter,                                              1 },
  { key::kEnterpriseHardwarePlatformAPIEnabled,                           1 },
  { key::kForceBrowserSignin,                                             1 },
  { key::kForceGoogleSafeSearch,                                          1 },
  { key::kForceSafeSearch,                                                1 },
  { key::kForceYouTubeRestrict,                                           3 },
  { key::kForceYouTubeSafetyMode,                                         1 },
  { key::kHSTSPolicyBypassList,                                          12 },
  { key::kHomepageLocation,                                               2 },
  { key::kIncognitoEnabled,                                               1 },
  { key::kIncognitoModeAvailability,                                      3 },
  { key::kIsolateOriginsAndroid,                                          2 },
  { key::kJavaScriptAllowedForUrls,                                       4 },
  { key::kJavaScriptBlockedForUrls,                                       4 },
  { key::kJavascriptEnabled,                                              1 },
  { key::kLegacySameSiteCookieBehaviorEnabled,                            7 },
  { key::kLegacySameSiteCookieBehaviorEnabledForDomainList,               4 },
  { key::kManagedBookmarks,                                              15 },
  { key::kNTPContentSuggestionsEnabled,                                   1 },
  { key::kNetworkPredictionOptions,                                       3 },
  { key::kNtlmV2Enabled,                                                  1 },
  { key::kOverrideSecurityRestrictionsOnInsecureOrigin,                   4 },
  { key::kPasswordLeakDetectionEnabled,                                   1 },
  { key::kPasswordManagerEnabled,                                         1 },
  { key::kPaymentMethodQueryEnabled,                                      1 },
  { key::kPopupsAllowedForUrls,                                           4 },
  { key::kPopupsBlockedForUrls,                                           4 },
  { key::kPrintingEnabled,                                                1 },
  { key::kProxyBypassList,                                                2 },
  { key::kProxyMode,                                                     16 },
  { key::kProxyPacUrl,                                                    2 },
  { key::kProxyServer,                                                    2 },
  { key::kProxyServerMode,                                               17 },
  { key::kProxySettings,                                                 18 },
  { key::kRestrictAccountsToPatterns,                                     4 },
  { key::kSSLErrorOverrideAllowed,                                        1 },
  { key::kSSLVersionMin,                                                 20 },
  { key::kSafeBrowsingEnabled,                                            1 },
  { key::kSavingBrowserHistoryDisabled,                                   1 },
  { key::kSearchSuggestEnabled,                                           1 },
  { key::kSharedClipboardEnabled,                                         1 },
  { key::kSigninAllowed,                                                  1 },
  { key::kSitePerProcessAndroid,                                          1 },
  { key::kSyncTypesListDisabled,                                          4 },
  { key::kTLS13HardeningForLocalAnchorsEnabled,                           1 },
  { key::kTranslateEnabled,                                               1 },
  { key::kURLBlacklist,                                                   4 },
  { key::kURLWhitelist,                                                   4 },
  { key::kUrlKeyedAnonymizedDataCollectionEnabled,                        1 },
  { key::kVariationsRestrictParameter,                                    2 },
  { key::kWebComponentsV0Enabled,                                         1 },
  { key::kWebRtcUdpPortRange,                                             2 },
  { key::kWebUsbAllowDevicesForUrls,                                     25 },
  { key::kWebUsbAskForUrls,                                               4 },
  { key::kWebUsbBlockedForUrls,                                           4 },
};

const internal::PropertiesNode kProperties[] = {
//  Begin    End  PatternEnd  RequiredBegin  RequiredEnd  Additional Properties
  {     0,     4,     4,     0,          0,    -1 },  // items of ManagedBookmarks
  {     4,     9,     9,     0,          0,    -1 },  // ProxySettings
  {     9,    11,    11,     0,          0,    -1 },  // items of devices
  {    11,    13,    13,     0,          2,    -1 },  // urls
  {    13,   112,   112,     2,          2,    -1 },  // root node
};

const internal::RestrictionNode kRestrictionNodes[] = {
//   FIRST, SECOND
  {{ 2,          0}},
  {{ 0,          3}},
  {{ 3,          1}},
  {{ 2,          1}},
  {{ 3,          2}},
  {{ 0,          1}},
  {{ 1,          1}},
  {{ 2,          7}},
  {{ 3,          0}},
  {{ 7,         12}},
  {{ 12,        15}},
};

const char* const kRequiredProperties[] = {
  "devices",
  "urls",
};

const int kIntegerEnumerations[] = {
  1,
  2,
  4,
};

const char* const kStringEnumerations[] = {
  "ExampleDeprecatedFeature_EffectiveUntil20080902",
  "^[a-z0-9-]*$",
  "direct",
  "auto_detect",
  "pac_script",
  "fixed_servers",
  "system",
  "direct",
  "auto_detect",
  "pac_script",
  "fixed_servers",
  "system",
  "tls1",
  "tls1.1",
  "tls1.2",
};

const internal::SchemaData kChromeSchemaData = {
  kSchemas,
  kPropertyNodes,
  kProperties,
  kRestrictionNodes,
  kRequiredProperties,
  kIntegerEnumerations,
  kStringEnumerations,
  -1,  // validation_schema root index
};


namespace {
bool CompareKeys(const internal::PropertyNode& node,
                 const std::string& key) {
  return node.key < key;
}

}  // namespace

const internal::SchemaData* GetChromeSchemaData() {
  return &kChromeSchemaData;
}

#if defined (OS_CHROMEOS)
void SetEnterpriseUsersDefaults(PolicyMap* policy_map) {
  if (!policy_map->Get(key::kAllowPopupsDuringPageUnload)) {
    policy_map->Set(key::kAllowPopupsDuringPageUnload,
                    POLICY_LEVEL_MANDATORY,
                    POLICY_SCOPE_USER,
                    POLICY_SOURCE_ENTERPRISE_DEFAULT,
                    std::make_unique<base::Value>(true),
                    nullptr);
  }
  if (!policy_map->Get(key::kAllowSyncXHRInPageDismissal)) {
    policy_map->Set(key::kAllowSyncXHRInPageDismissal,
                    POLICY_LEVEL_MANDATORY,
                    POLICY_SCOPE_USER,
                    POLICY_SOURCE_ENTERPRISE_DEFAULT,
                    std::make_unique<base::Value>(true),
                    nullptr);
  }
  if (!policy_map->Get(key::kNTPContentSuggestionsEnabled)) {
    policy_map->Set(key::kNTPContentSuggestionsEnabled,
                    POLICY_LEVEL_MANDATORY,
                    POLICY_SCOPE_USER,
                    POLICY_SOURCE_ENTERPRISE_DEFAULT,
                    std::make_unique<base::Value>(false),
                    nullptr);
  }
}
#endif

const PolicyDetails* GetChromePolicyDetails(const std::string& policy) {
  // First index in kPropertyNodes of the Chrome policies.
  static const int begin_index = 13;
  // One-past-the-end of the Chrome policies in kPropertyNodes.
  static const int end_index = 112;
  const internal::PropertyNode* begin =
      kPropertyNodes + begin_index;
  const internal::PropertyNode* end = kPropertyNodes + end_index;
  const internal::PropertyNode* it =
      std::lower_bound(begin, end, policy, CompareKeys);
  if (it == end || it->key != policy)
    return NULL;
  // This relies on kPropertyNodes from begin_index to end_index
  // having exactly the same policies (and in the same order) as
  // kChromePolicyDetails, so that binary searching on the first
  // gets the same results as a binary search on the second would.
  // However, kPropertyNodes has the policy names and
  // kChromePolicyDetails doesn't, so we obtain the index into
  // the second array by searching the first to avoid duplicating
  // the policy name pointers.
  // Offsetting |it| from |begin| here obtains the index we're
  // looking for.
  size_t index = it - begin;
  CHECK_LT(index, base::size(kChromePolicyDetails));
  return kChromePolicyDetails + index;
}

namespace key {

const char kAbusiveExperienceInterventionEnforce[] = "AbusiveExperienceInterventionEnforce";
const char kAccessibilityShortcutsEnabled[] = "AccessibilityShortcutsEnabled";
const char kAdditionalLaunchParameters[] = "AdditionalLaunchParameters";
const char kAdsSettingForIntrusiveAdsSites[] = "AdsSettingForIntrusiveAdsSites";
const char kAdvancedProtectionDeepScanningEnabled[] = "AdvancedProtectionDeepScanningEnabled";
const char kAllowCrossOriginAuthPrompt[] = "AllowCrossOriginAuthPrompt";
const char kAllowDeletingBrowserHistory[] = "AllowDeletingBrowserHistory";
const char kAllowDinosaurEasterEgg[] = "AllowDinosaurEasterEgg";
const char kAllowFileSelectionDialogs[] = "AllowFileSelectionDialogs";
const char kAllowKioskAppControlChromeVersion[] = "AllowKioskAppControlChromeVersion";
const char kAllowOutdatedPlugins[] = "AllowOutdatedPlugins";
const char kAllowPasswordProtectedFiles[] = "AllowPasswordProtectedFiles";
const char kAllowPopupsDuringPageUnload[] = "AllowPopupsDuringPageUnload";
const char kAllowScreenLock[] = "AllowScreenLock";
const char kAllowScreenWakeLocks[] = "AllowScreenWakeLocks";
const char kAllowSyncXHRInPageDismissal[] = "AllowSyncXHRInPageDismissal";
const char kAllowWakeLocks[] = "AllowWakeLocks";
const char kAllowedDomainsForApps[] = "AllowedDomainsForApps";
const char kAllowedInputMethods[] = "AllowedInputMethods";
const char kAllowedLanguages[] = "AllowedLanguages";
const char kAlternateErrorPagesEnabled[] = "AlternateErrorPagesEnabled";
const char kAlternativeBrowserParameters[] = "AlternativeBrowserParameters";
const char kAlternativeBrowserPath[] = "AlternativeBrowserPath";
const char kAlwaysAuthorizePlugins[] = "AlwaysAuthorizePlugins";
const char kAlwaysOpenPdfExternally[] = "AlwaysOpenPdfExternally";
const char kAmbientAuthenticationInPrivateModesEnabled[] = "AmbientAuthenticationInPrivateModesEnabled";
const char kAppRecommendationZeroStateEnabled[] = "AppRecommendationZeroStateEnabled";
const char kApplicationLocaleValue[] = "ApplicationLocaleValue";
const char kArcAppInstallEventLoggingEnabled[] = "ArcAppInstallEventLoggingEnabled";
const char kArcBackupRestoreEnabled[] = "ArcBackupRestoreEnabled";
const char kArcBackupRestoreServiceEnabled[] = "ArcBackupRestoreServiceEnabled";
const char kArcCertificatesSyncMode[] = "ArcCertificatesSyncMode";
const char kArcEnabled[] = "ArcEnabled";
const char kArcGoogleLocationServicesEnabled[] = "ArcGoogleLocationServicesEnabled";
const char kArcLocationServiceEnabled[] = "ArcLocationServiceEnabled";
const char kArcPolicy[] = "ArcPolicy";
const char kAttestationEnabledForDevice[] = "AttestationEnabledForDevice";
const char kAttestationEnabledForUser[] = "AttestationEnabledForUser";
const char kAttestationExtensionWhitelist[] = "AttestationExtensionWhitelist";
const char kAttestationForContentProtectionEnabled[] = "AttestationForContentProtectionEnabled";
const char kAudioCaptureAllowed[] = "AudioCaptureAllowed";
const char kAudioCaptureAllowedUrls[] = "AudioCaptureAllowedUrls";
const char kAudioOutputAllowed[] = "AudioOutputAllowed";
const char kAudioSandboxEnabled[] = "AudioSandboxEnabled";
const char kAuthAndroidNegotiateAccountType[] = "AuthAndroidNegotiateAccountType";
const char kAuthNegotiateDelegateByKdcPolicy[] = "AuthNegotiateDelegateByKdcPolicy";
const char kAuthNegotiateDelegateWhitelist[] = "AuthNegotiateDelegateWhitelist";
const char kAuthSchemes[] = "AuthSchemes";
const char kAuthServerWhitelist[] = "AuthServerWhitelist";
const char kAutoCleanUpStrategy[] = "AutoCleanUpStrategy";
const char kAutoFillEnabled[] = "AutoFillEnabled";
const char kAutoSelectCertificateForUrls[] = "AutoSelectCertificateForUrls";
const char kAutoclickEnabled[] = "AutoclickEnabled";
const char kAutofillAddressEnabled[] = "AutofillAddressEnabled";
const char kAutofillCreditCardEnabled[] = "AutofillCreditCardEnabled";
const char kAutoplayAllowed[] = "AutoplayAllowed";
const char kAutoplayWhitelist[] = "AutoplayWhitelist";
const char kBackgroundModeEnabled[] = "BackgroundModeEnabled";
const char kBlockExternalExtensions[] = "BlockExternalExtensions";
const char kBlockLargeFileTransfer[] = "BlockLargeFileTransfer";
const char kBlockThirdPartyCookies[] = "BlockThirdPartyCookies";
const char kBlockUnsupportedFiletypes[] = "BlockUnsupportedFiletypes";
const char kBookmarkBarEnabled[] = "BookmarkBarEnabled";
const char kBrowserAddPersonEnabled[] = "BrowserAddPersonEnabled";
const char kBrowserGuestModeEnabled[] = "BrowserGuestModeEnabled";
const char kBrowserGuestModeEnforced[] = "BrowserGuestModeEnforced";
const char kBrowserNetworkTimeQueriesEnabled[] = "BrowserNetworkTimeQueriesEnabled";
const char kBrowserSignin[] = "BrowserSignin";
const char kBrowserSwitcherChromeParameters[] = "BrowserSwitcherChromeParameters";
const char kBrowserSwitcherChromePath[] = "BrowserSwitcherChromePath";
const char kBrowserSwitcherDelay[] = "BrowserSwitcherDelay";
const char kBrowserSwitcherEnabled[] = "BrowserSwitcherEnabled";
const char kBrowserSwitcherExternalGreylistUrl[] = "BrowserSwitcherExternalGreylistUrl";
const char kBrowserSwitcherExternalSitelistUrl[] = "BrowserSwitcherExternalSitelistUrl";
const char kBrowserSwitcherKeepLastChromeTab[] = "BrowserSwitcherKeepLastChromeTab";
const char kBrowserSwitcherUrlGreylist[] = "BrowserSwitcherUrlGreylist";
const char kBrowserSwitcherUrlList[] = "BrowserSwitcherUrlList";
const char kBrowserSwitcherUseIeSitelist[] = "BrowserSwitcherUseIeSitelist";
const char kBuiltInDnsClientEnabled[] = "BuiltInDnsClientEnabled";
const char kBuiltinCertificateVerifierEnabled[] = "BuiltinCertificateVerifierEnabled";
const char kCACertificateManagementAllowed[] = "CACertificateManagementAllowed";
const char kCaptivePortalAuthenticationIgnoresProxy[] = "CaptivePortalAuthenticationIgnoresProxy";
const char kCaretHighlightEnabled[] = "CaretHighlightEnabled";
const char kCastReceiverEnabled[] = "CastReceiverEnabled";
const char kCastReceiverName[] = "CastReceiverName";
const char kCertificateTransparencyEnforcementDisabledForCas[] = "CertificateTransparencyEnforcementDisabledForCas";
const char kCertificateTransparencyEnforcementDisabledForLegacyCas[] = "CertificateTransparencyEnforcementDisabledForLegacyCas";
const char kCertificateTransparencyEnforcementDisabledForUrls[] = "CertificateTransparencyEnforcementDisabledForUrls";
const char kCheckContentCompliance[] = "CheckContentCompliance";
const char kChromeCleanupEnabled[] = "ChromeCleanupEnabled";
const char kChromeCleanupReportingEnabled[] = "ChromeCleanupReportingEnabled";
const char kChromeFrameContentTypes[] = "ChromeFrameContentTypes";
const char kChromeFrameRendererSettings[] = "ChromeFrameRendererSettings";
const char kChromeOsLockOnIdleSuspend[] = "ChromeOsLockOnIdleSuspend";
const char kChromeOsMultiProfileUserBehavior[] = "ChromeOsMultiProfileUserBehavior";
const char kChromeOsReleaseChannel[] = "ChromeOsReleaseChannel";
const char kChromeOsReleaseChannelDelegated[] = "ChromeOsReleaseChannelDelegated";
const char kChromeVariations[] = "ChromeVariations";
const char kClearSiteDataOnExit[] = "ClearSiteDataOnExit";
const char kClickToCallEnabled[] = "ClickToCallEnabled";
const char kClientCertificateManagementAllowed[] = "ClientCertificateManagementAllowed";
const char kCloudExtensionRequestEnabled[] = "CloudExtensionRequestEnabled";
const char kCloudManagementEnrollmentMandatory[] = "CloudManagementEnrollmentMandatory";
const char kCloudManagementEnrollmentToken[] = "CloudManagementEnrollmentToken";
const char kCloudPolicyOverridesPlatformPolicy[] = "CloudPolicyOverridesPlatformPolicy";
const char kCloudPrintProxyEnabled[] = "CloudPrintProxyEnabled";
const char kCloudPrintSubmitEnabled[] = "CloudPrintSubmitEnabled";
const char kCloudReportingEnabled[] = "CloudReportingEnabled";
const char kCoalesceH2ConnectionsWithClientCertificatesForHosts[] = "CoalesceH2ConnectionsWithClientCertificatesForHosts";
const char kCommandLineFlagSecurityWarningsEnabled[] = "CommandLineFlagSecurityWarningsEnabled";
const char kComponentUpdatesEnabled[] = "ComponentUpdatesEnabled";
const char kContentPackDefaultFilteringBehavior[] = "ContentPackDefaultFilteringBehavior";
const char kContentPackManualBehaviorHosts[] = "ContentPackManualBehaviorHosts";
const char kContentPackManualBehaviorURLs[] = "ContentPackManualBehaviorURLs";
const char kContextualSearchEnabled[] = "ContextualSearchEnabled";
const char kContextualSuggestionsEnabled[] = "ContextualSuggestionsEnabled";
const char kCookiesAllowedForUrls[] = "CookiesAllowedForUrls";
const char kCookiesBlockedForUrls[] = "CookiesBlockedForUrls";
const char kCookiesSessionOnlyForUrls[] = "CookiesSessionOnlyForUrls";
const char kCorsLegacyModeEnabled[] = "CorsLegacyModeEnabled";
const char kCorsMitigationList[] = "CorsMitigationList";
const char kCrostiniAllowed[] = "CrostiniAllowed";
const char kCrostiniAnsiblePlaybook[] = "CrostiniAnsiblePlaybook";
const char kCrostiniExportImportUIAllowed[] = "CrostiniExportImportUIAllowed";
const char kCrostiniRootAccessAllowed[] = "CrostiniRootAccessAllowed";
const char kCursorHighlightEnabled[] = "CursorHighlightEnabled";
const char kDHEEnabled[] = "DHEEnabled";
const char kDNSInterceptionChecksEnabled[] = "DNSInterceptionChecksEnabled";
const char kDataCompressionProxyEnabled[] = "DataCompressionProxyEnabled";
const char kDefaultBrowserSettingEnabled[] = "DefaultBrowserSettingEnabled";
const char kDefaultCookiesSetting[] = "DefaultCookiesSetting";
const char kDefaultDownloadDirectory[] = "DefaultDownloadDirectory";
const char kDefaultGeolocationSetting[] = "DefaultGeolocationSetting";
const char kDefaultImagesSetting[] = "DefaultImagesSetting";
const char kDefaultInsecureContentSetting[] = "DefaultInsecureContentSetting";
const char kDefaultJavaScriptSetting[] = "DefaultJavaScriptSetting";
const char kDefaultKeygenSetting[] = "DefaultKeygenSetting";
const char kDefaultMediaStreamSetting[] = "DefaultMediaStreamSetting";
const char kDefaultNotificationsSetting[] = "DefaultNotificationsSetting";
const char kDefaultPluginsSetting[] = "DefaultPluginsSetting";
const char kDefaultPopupsSetting[] = "DefaultPopupsSetting";
const char kDefaultPrinterSelection[] = "DefaultPrinterSelection";
const char kDefaultSearchProviderAlternateURLs[] = "DefaultSearchProviderAlternateURLs";
const char kDefaultSearchProviderEnabled[] = "DefaultSearchProviderEnabled";
const char kDefaultSearchProviderEncodings[] = "DefaultSearchProviderEncodings";
const char kDefaultSearchProviderIconURL[] = "DefaultSearchProviderIconURL";
const char kDefaultSearchProviderImageURL[] = "DefaultSearchProviderImageURL";
const char kDefaultSearchProviderImageURLPostParams[] = "DefaultSearchProviderImageURLPostParams";
const char kDefaultSearchProviderInstantURL[] = "DefaultSearchProviderInstantURL";
const char kDefaultSearchProviderInstantURLPostParams[] = "DefaultSearchProviderInstantURLPostParams";
const char kDefaultSearchProviderKeyword[] = "DefaultSearchProviderKeyword";
const char kDefaultSearchProviderName[] = "DefaultSearchProviderName";
const char kDefaultSearchProviderNewTabURL[] = "DefaultSearchProviderNewTabURL";
const char kDefaultSearchProviderSearchTermsReplacementKey[] = "DefaultSearchProviderSearchTermsReplacementKey";
const char kDefaultSearchProviderSearchURL[] = "DefaultSearchProviderSearchURL";
const char kDefaultSearchProviderSearchURLPostParams[] = "DefaultSearchProviderSearchURLPostParams";
const char kDefaultSearchProviderSuggestURL[] = "DefaultSearchProviderSuggestURL";
const char kDefaultSearchProviderSuggestURLPostParams[] = "DefaultSearchProviderSuggestURLPostParams";
const char kDefaultWebBluetoothGuardSetting[] = "DefaultWebBluetoothGuardSetting";
const char kDefaultWebUsbGuardSetting[] = "DefaultWebUsbGuardSetting";
const char kDelayDeliveryUntilVerdict[] = "DelayDeliveryUntilVerdict";
const char kDeveloperToolsAvailability[] = "DeveloperToolsAvailability";
const char kDeveloperToolsDisabled[] = "DeveloperToolsDisabled";
const char kDeviceAdvancedBatteryChargeModeDayConfig[] = "DeviceAdvancedBatteryChargeModeDayConfig";
const char kDeviceAdvancedBatteryChargeModeEnabled[] = "DeviceAdvancedBatteryChargeModeEnabled";
const char kDeviceAllowBluetooth[] = "DeviceAllowBluetooth";
const char kDeviceAllowNewUsers[] = "DeviceAllowNewUsers";
const char kDeviceAllowRedeemChromeOsRegistrationOffers[] = "DeviceAllowRedeemChromeOsRegistrationOffers";
const char kDeviceAppPack[] = "DeviceAppPack";
const char kDeviceAuthDataCacheLifetime[] = "DeviceAuthDataCacheLifetime";
const char kDeviceAutoUpdateDisabled[] = "DeviceAutoUpdateDisabled";
const char kDeviceAutoUpdateP2PEnabled[] = "DeviceAutoUpdateP2PEnabled";
const char kDeviceAutoUpdateTimeRestrictions[] = "DeviceAutoUpdateTimeRestrictions";
const char kDeviceBatteryChargeCustomStartCharging[] = "DeviceBatteryChargeCustomStartCharging";
const char kDeviceBatteryChargeCustomStopCharging[] = "DeviceBatteryChargeCustomStopCharging";
const char kDeviceBatteryChargeMode[] = "DeviceBatteryChargeMode";
const char kDeviceBlockDevmode[] = "DeviceBlockDevmode";
const char kDeviceBootOnAcEnabled[] = "DeviceBootOnAcEnabled";
const char kDeviceDataRoamingEnabled[] = "DeviceDataRoamingEnabled";
const char kDeviceDisplayResolution[] = "DeviceDisplayResolution";
const char kDeviceDockMacAddressSource[] = "DeviceDockMacAddressSource";
const char kDeviceEcryptfsMigrationStrategy[] = "DeviceEcryptfsMigrationStrategy";
const char kDeviceEphemeralUsersEnabled[] = "DeviceEphemeralUsersEnabled";
const char kDeviceGpoCacheLifetime[] = "DeviceGpoCacheLifetime";
const char kDeviceGuestModeEnabled[] = "DeviceGuestModeEnabled";
const char kDeviceHostnameTemplate[] = "DeviceHostnameTemplate";
const char kDeviceIdleLogoutTimeout[] = "DeviceIdleLogoutTimeout";
const char kDeviceIdleLogoutWarningDuration[] = "DeviceIdleLogoutWarningDuration";
const char kDeviceKerberosEncryptionTypes[] = "DeviceKerberosEncryptionTypes";
const char kDeviceLocalAccountAutoLoginBailoutEnabled[] = "DeviceLocalAccountAutoLoginBailoutEnabled";
const char kDeviceLocalAccountAutoLoginDelay[] = "DeviceLocalAccountAutoLoginDelay";
const char kDeviceLocalAccountAutoLoginId[] = "DeviceLocalAccountAutoLoginId";
const char kDeviceLocalAccountManagedSessionEnabled[] = "DeviceLocalAccountManagedSessionEnabled";
const char kDeviceLocalAccountPromptForNetworkWhenOffline[] = "DeviceLocalAccountPromptForNetworkWhenOffline";
const char kDeviceLocalAccounts[] = "DeviceLocalAccounts";
const char kDeviceLoginScreenAccessibilityShortcutsEnabled[] = "DeviceLoginScreenAccessibilityShortcutsEnabled";
const char kDeviceLoginScreenAutoSelectCertificateForUrls[] = "DeviceLoginScreenAutoSelectCertificateForUrls";
const char kDeviceLoginScreenAutoclickEnabled[] = "DeviceLoginScreenAutoclickEnabled";
const char kDeviceLoginScreenCaretHighlightEnabled[] = "DeviceLoginScreenCaretHighlightEnabled";
const char kDeviceLoginScreenCursorHighlightEnabled[] = "DeviceLoginScreenCursorHighlightEnabled";
const char kDeviceLoginScreenDefaultHighContrastEnabled[] = "DeviceLoginScreenDefaultHighContrastEnabled";
const char kDeviceLoginScreenDefaultLargeCursorEnabled[] = "DeviceLoginScreenDefaultLargeCursorEnabled";
const char kDeviceLoginScreenDefaultScreenMagnifierType[] = "DeviceLoginScreenDefaultScreenMagnifierType";
const char kDeviceLoginScreenDefaultSpokenFeedbackEnabled[] = "DeviceLoginScreenDefaultSpokenFeedbackEnabled";
const char kDeviceLoginScreenDefaultVirtualKeyboardEnabled[] = "DeviceLoginScreenDefaultVirtualKeyboardEnabled";
const char kDeviceLoginScreenDictationEnabled[] = "DeviceLoginScreenDictationEnabled";
const char kDeviceLoginScreenDomainAutoComplete[] = "DeviceLoginScreenDomainAutoComplete";
const char kDeviceLoginScreenExtensions[] = "DeviceLoginScreenExtensions";
const char kDeviceLoginScreenHighContrastEnabled[] = "DeviceLoginScreenHighContrastEnabled";
const char kDeviceLoginScreenInputMethods[] = "DeviceLoginScreenInputMethods";
const char kDeviceLoginScreenIsolateOrigins[] = "DeviceLoginScreenIsolateOrigins";
const char kDeviceLoginScreenKeyboardFocusHighlightEnabled[] = "DeviceLoginScreenKeyboardFocusHighlightEnabled";
const char kDeviceLoginScreenLargeCursorEnabled[] = "DeviceLoginScreenLargeCursorEnabled";
const char kDeviceLoginScreenLocales[] = "DeviceLoginScreenLocales";
const char kDeviceLoginScreenMonoAudioEnabled[] = "DeviceLoginScreenMonoAudioEnabled";
const char kDeviceLoginScreenPowerManagement[] = "DeviceLoginScreenPowerManagement";
const char kDeviceLoginScreenPrimaryMouseButtonSwitch[] = "DeviceLoginScreenPrimaryMouseButtonSwitch";
const char kDeviceLoginScreenSaverId[] = "DeviceLoginScreenSaverId";
const char kDeviceLoginScreenSaverTimeout[] = "DeviceLoginScreenSaverTimeout";
const char kDeviceLoginScreenScreenMagnifierType[] = "DeviceLoginScreenScreenMagnifierType";
const char kDeviceLoginScreenSelectToSpeakEnabled[] = "DeviceLoginScreenSelectToSpeakEnabled";
const char kDeviceLoginScreenShowOptionsInSystemTrayMenu[] = "DeviceLoginScreenShowOptionsInSystemTrayMenu";
const char kDeviceLoginScreenSitePerProcess[] = "DeviceLoginScreenSitePerProcess";
const char kDeviceLoginScreenSpokenFeedbackEnabled[] = "DeviceLoginScreenSpokenFeedbackEnabled";
const char kDeviceLoginScreenStickyKeysEnabled[] = "DeviceLoginScreenStickyKeysEnabled";
const char kDeviceLoginScreenSystemInfoEnforced[] = "DeviceLoginScreenSystemInfoEnforced";
const char kDeviceLoginScreenVirtualKeyboardEnabled[] = "DeviceLoginScreenVirtualKeyboardEnabled";
const char kDeviceLoginScreenWebUsbAllowDevicesForUrls[] = "DeviceLoginScreenWebUsbAllowDevicesForUrls";
const char kDeviceMachinePasswordChangeRate[] = "DeviceMachinePasswordChangeRate";
const char kDeviceMetricsReportingEnabled[] = "DeviceMetricsReportingEnabled";
const char kDeviceNativePrinters[] = "DeviceNativePrinters";
const char kDeviceNativePrintersAccessMode[] = "DeviceNativePrintersAccessMode";
const char kDeviceNativePrintersBlacklist[] = "DeviceNativePrintersBlacklist";
const char kDeviceNativePrintersWhitelist[] = "DeviceNativePrintersWhitelist";
const char kDeviceOffHours[] = "DeviceOffHours";
const char kDeviceOpenNetworkConfiguration[] = "DeviceOpenNetworkConfiguration";
const char kDevicePolicyRefreshRate[] = "DevicePolicyRefreshRate";
const char kDevicePowerPeakShiftBatteryThreshold[] = "DevicePowerPeakShiftBatteryThreshold";
const char kDevicePowerPeakShiftDayConfig[] = "DevicePowerPeakShiftDayConfig";
const char kDevicePowerPeakShiftEnabled[] = "DevicePowerPeakShiftEnabled";
const char kDevicePowerwashAllowed[] = "DevicePowerwashAllowed";
const char kDeviceQuickFixBuildToken[] = "DeviceQuickFixBuildToken";
const char kDeviceQuirksDownloadEnabled[] = "DeviceQuirksDownloadEnabled";
const char kDeviceRebootOnShutdown[] = "DeviceRebootOnShutdown";
const char kDeviceRebootOnUserSignout[] = "DeviceRebootOnUserSignout";
const char kDeviceRollbackAllowedMilestones[] = "DeviceRollbackAllowedMilestones";
const char kDeviceRollbackToTargetVersion[] = "DeviceRollbackToTargetVersion";
const char kDeviceSamlLoginAuthenticationType[] = "DeviceSamlLoginAuthenticationType";
const char kDeviceScheduledUpdateCheck[] = "DeviceScheduledUpdateCheck";
const char kDeviceSecondFactorAuthentication[] = "DeviceSecondFactorAuthentication";
const char kDeviceShowNumericKeyboardForPassword[] = "DeviceShowNumericKeyboardForPassword";
const char kDeviceShowUserNamesOnSignin[] = "DeviceShowUserNamesOnSignin";
const char kDeviceStartUpFlags[] = "DeviceStartUpFlags";
const char kDeviceStartUpUrls[] = "DeviceStartUpUrls";
const char kDeviceTargetVersionPrefix[] = "DeviceTargetVersionPrefix";
const char kDeviceTransferSAMLCookies[] = "DeviceTransferSAMLCookies";
const char kDeviceUnaffiliatedCrostiniAllowed[] = "DeviceUnaffiliatedCrostiniAllowed";
const char kDeviceUpdateAllowedConnectionTypes[] = "DeviceUpdateAllowedConnectionTypes";
const char kDeviceUpdateHttpDownloadsEnabled[] = "DeviceUpdateHttpDownloadsEnabled";
const char kDeviceUpdateScatterFactor[] = "DeviceUpdateScatterFactor";
const char kDeviceUpdateStagingSchedule[] = "DeviceUpdateStagingSchedule";
const char kDeviceUsbPowerShareEnabled[] = "DeviceUsbPowerShareEnabled";
const char kDeviceUserPolicyLoopbackProcessingMode[] = "DeviceUserPolicyLoopbackProcessingMode";
const char kDeviceUserWhitelist[] = "DeviceUserWhitelist";
const char kDeviceVariationsRestrictParameter[] = "DeviceVariationsRestrictParameter";
const char kDeviceWallpaperImage[] = "DeviceWallpaperImage";
const char kDeviceWebBasedAttestationAllowedUrls[] = "DeviceWebBasedAttestationAllowedUrls";
const char kDeviceWiFiAllowed[] = "DeviceWiFiAllowed";
const char kDeviceWiFiFastTransitionEnabled[] = "DeviceWiFiFastTransitionEnabled";
const char kDeviceWilcoDtcAllowed[] = "DeviceWilcoDtcAllowed";
const char kDeviceWilcoDtcConfiguration[] = "DeviceWilcoDtcConfiguration";
const char kDictationEnabled[] = "DictationEnabled";
const char kDisable3DAPIs[] = "Disable3DAPIs";
const char kDisableAuthNegotiateCnameLookup[] = "DisableAuthNegotiateCnameLookup";
const char kDisablePluginFinder[] = "DisablePluginFinder";
const char kDisablePrintPreview[] = "DisablePrintPreview";
const char kDisableSSLRecordSplitting[] = "DisableSSLRecordSplitting";
const char kDisableSafeBrowsingProceedAnyway[] = "DisableSafeBrowsingProceedAnyway";
const char kDisableScreenshots[] = "DisableScreenshots";
const char kDisableSpdy[] = "DisableSpdy";
const char kDisabledPlugins[] = "DisabledPlugins";
const char kDisabledPluginsExceptions[] = "DisabledPluginsExceptions";
const char kDisabledSchemes[] = "DisabledSchemes";
const char kDiskCacheDir[] = "DiskCacheDir";
const char kDiskCacheSize[] = "DiskCacheSize";
const char kDisplayRotationDefault[] = "DisplayRotationDefault";
const char kDnsOverHttpsMode[] = "DnsOverHttpsMode";
const char kDnsOverHttpsTemplates[] = "DnsOverHttpsTemplates";
const char kDnsPrefetchingEnabled[] = "DnsPrefetchingEnabled";
const char kDownloadDirectory[] = "DownloadDirectory";
const char kDownloadRestrictions[] = "DownloadRestrictions";
const char kDriveDisabled[] = "DriveDisabled";
const char kDriveDisabledOverCellular[] = "DriveDisabledOverCellular";
const char kEasyUnlockAllowed[] = "EasyUnlockAllowed";
const char kEcryptfsMigrationStrategy[] = "EcryptfsMigrationStrategy";
const char kEditBookmarksEnabled[] = "EditBookmarksEnabled";
const char kEnableAuthNegotiatePort[] = "EnableAuthNegotiatePort";
const char kEnableCommonNameFallbackForLocalAnchors[] = "EnableCommonNameFallbackForLocalAnchors";
const char kEnableDeprecatedWebBasedSignin[] = "EnableDeprecatedWebBasedSignin";
const char kEnableDeprecatedWebPlatformFeatures[] = "EnableDeprecatedWebPlatformFeatures";
const char kEnableMediaRouter[] = "EnableMediaRouter";
const char kEnableMemoryInfo[] = "EnableMemoryInfo";
const char kEnableOnlineRevocationChecks[] = "EnableOnlineRevocationChecks";
const char kEnableOriginBoundCerts[] = "EnableOriginBoundCerts";
const char kEnableSha1ForLocalAnchors[] = "EnableSha1ForLocalAnchors";
const char kEnableSymantecLegacyInfrastructure[] = "EnableSymantecLegacyInfrastructure";
const char kEnableSyncConsent[] = "EnableSyncConsent";
const char kEnabledPlugins[] = "EnabledPlugins";
const char kEnterpriseHardwarePlatformAPIEnabled[] = "EnterpriseHardwarePlatformAPIEnabled";
const char kEnterpriseWebStoreName[] = "EnterpriseWebStoreName";
const char kEnterpriseWebStoreURL[] = "EnterpriseWebStoreURL";
const char kExtensionAllowInsecureUpdates[] = "ExtensionAllowInsecureUpdates";
const char kExtensionAllowedTypes[] = "ExtensionAllowedTypes";
const char kExtensionCacheSize[] = "ExtensionCacheSize";
const char kExtensionInstallBlacklist[] = "ExtensionInstallBlacklist";
const char kExtensionInstallForcelist[] = "ExtensionInstallForcelist";
const char kExtensionInstallListsMergeEnabled[] = "ExtensionInstallListsMergeEnabled";
const char kExtensionInstallSources[] = "ExtensionInstallSources";
const char kExtensionInstallWhitelist[] = "ExtensionInstallWhitelist";
const char kExtensionSettings[] = "ExtensionSettings";
const char kExternalPrintServers[] = "ExternalPrintServers";
const char kExternalPrintServersWhitelist[] = "ExternalPrintServersWhitelist";
const char kExternalProtocolDialogShowAlwaysOpenCheckbox[] = "ExternalProtocolDialogShowAlwaysOpenCheckbox";
const char kExternalStorageDisabled[] = "ExternalStorageDisabled";
const char kExternalStorageReadOnly[] = "ExternalStorageReadOnly";
const char kForceBrowserSignin[] = "ForceBrowserSignin";
const char kForceEphemeralProfiles[] = "ForceEphemeralProfiles";
const char kForceGoogleSafeSearch[] = "ForceGoogleSafeSearch";
const char kForceLegacyDefaultReferrerPolicy[] = "ForceLegacyDefaultReferrerPolicy";
const char kForceMaximizeOnFirstRun[] = "ForceMaximizeOnFirstRun";
const char kForceNetworkInProcess[] = "ForceNetworkInProcess";
const char kForceSafeSearch[] = "ForceSafeSearch";
const char kForceYouTubeRestrict[] = "ForceYouTubeRestrict";
const char kForceYouTubeSafetyMode[] = "ForceYouTubeSafetyMode";
const char kFullscreenAllowed[] = "FullscreenAllowed";
const char kGCFUserDataDir[] = "GCFUserDataDir";
const char kGSSAPILibraryName[] = "GSSAPILibraryName";
const char kGloballyScopeHTTPAuthCacheEnabled[] = "GloballyScopeHTTPAuthCacheEnabled";
const char kHSTSPolicyBypassList[] = "HSTSPolicyBypassList";
const char kHardwareAccelerationModeEnabled[] = "HardwareAccelerationModeEnabled";
const char kHeartbeatEnabled[] = "HeartbeatEnabled";
const char kHeartbeatFrequency[] = "HeartbeatFrequency";
const char kHideWebStoreIcon[] = "HideWebStoreIcon";
const char kHideWebStorePromo[] = "HideWebStorePromo";
const char kHighContrastEnabled[] = "HighContrastEnabled";
const char kHomepageIsNewTabPage[] = "HomepageIsNewTabPage";
const char kHomepageLocation[] = "HomepageLocation";
const char kHttp09OnNonDefaultPortsEnabled[] = "Http09OnNonDefaultPortsEnabled";
const char kIdleAction[] = "IdleAction";
const char kIdleActionAC[] = "IdleActionAC";
const char kIdleActionBattery[] = "IdleActionBattery";
const char kIdleDelayAC[] = "IdleDelayAC";
const char kIdleDelayBattery[] = "IdleDelayBattery";
const char kIdleWarningDelayAC[] = "IdleWarningDelayAC";
const char kIdleWarningDelayBattery[] = "IdleWarningDelayBattery";
const char kImagesAllowedForUrls[] = "ImagesAllowedForUrls";
const char kImagesBlockedForUrls[] = "ImagesBlockedForUrls";
const char kImportAutofillFormData[] = "ImportAutofillFormData";
const char kImportBookmarks[] = "ImportBookmarks";
const char kImportHistory[] = "ImportHistory";
const char kImportHomepage[] = "ImportHomepage";
const char kImportSavedPasswords[] = "ImportSavedPasswords";
const char kImportSearchEngine[] = "ImportSearchEngine";
const char kIncognitoEnabled[] = "IncognitoEnabled";
const char kIncognitoModeAvailability[] = "IncognitoModeAvailability";
const char kInsecureContentAllowedForUrls[] = "InsecureContentAllowedForUrls";
const char kInsecureContentBlockedForUrls[] = "InsecureContentBlockedForUrls";
const char kInstantEnabled[] = "InstantEnabled";
const char kInstantTetheringAllowed[] = "InstantTetheringAllowed";
const char kIsolateOrigins[] = "IsolateOrigins";
const char kIsolateOriginsAndroid[] = "IsolateOriginsAndroid";
const char kJavaScriptAllowedForUrls[] = "JavaScriptAllowedForUrls";
const char kJavaScriptBlockedForUrls[] = "JavaScriptBlockedForUrls";
const char kJavascriptEnabled[] = "JavascriptEnabled";
const char kKerberosAccounts[] = "KerberosAccounts";
const char kKerberosAddAccountsAllowed[] = "KerberosAddAccountsAllowed";
const char kKerberosEnabled[] = "KerberosEnabled";
const char kKerberosRememberPasswordEnabled[] = "KerberosRememberPasswordEnabled";
const char kKeyPermissions[] = "KeyPermissions";
const char kKeyboardDefaultToFunctionKeys[] = "KeyboardDefaultToFunctionKeys";
const char kKeyboardFocusHighlightEnabled[] = "KeyboardFocusHighlightEnabled";
const char kKeygenAllowedForUrls[] = "KeygenAllowedForUrls";
const char kKeygenBlockedForUrls[] = "KeygenBlockedForUrls";
const char kLargeCursorEnabled[] = "LargeCursorEnabled";
const char kLegacySameSiteCookieBehaviorEnabled[] = "LegacySameSiteCookieBehaviorEnabled";
const char kLegacySameSiteCookieBehaviorEnabledForDomainList[] = "LegacySameSiteCookieBehaviorEnabledForDomainList";
const char kLidCloseAction[] = "LidCloseAction";
const char kLocalDiscoveryEnabled[] = "LocalDiscoveryEnabled";
const char kLockScreenMediaPlaybackEnabled[] = "LockScreenMediaPlaybackEnabled";
const char kLogUploadEnabled[] = "LogUploadEnabled";
const char kLoginAuthenticationBehavior[] = "LoginAuthenticationBehavior";
const char kLoginVideoCaptureAllowedUrls[] = "LoginVideoCaptureAllowedUrls";
const char kMachineLevelUserCloudPolicyEnrollmentToken[] = "MachineLevelUserCloudPolicyEnrollmentToken";
const char kManagedBookmarks[] = "ManagedBookmarks";
const char kMaxConnectionsPerProxy[] = "MaxConnectionsPerProxy";
const char kMaxInvalidationFetchDelay[] = "MaxInvalidationFetchDelay";
const char kMediaCacheSize[] = "MediaCacheSize";
const char kMediaRouterCastAllowAllIPs[] = "MediaRouterCastAllowAllIPs";
const char kMetricsReportingEnabled[] = "MetricsReportingEnabled";
const char kMinimumRequiredChromeVersion[] = "MinimumRequiredChromeVersion";
const char kMonoAudioEnabled[] = "MonoAudioEnabled";
const char kNTLMShareAuthenticationEnabled[] = "NTLMShareAuthenticationEnabled";
const char kNTPContentSuggestionsEnabled[] = "NTPContentSuggestionsEnabled";
const char kNTPCustomBackgroundEnabled[] = "NTPCustomBackgroundEnabled";
const char kNativeMessagingBlacklist[] = "NativeMessagingBlacklist";
const char kNativeMessagingUserLevelHosts[] = "NativeMessagingUserLevelHosts";
const char kNativeMessagingWhitelist[] = "NativeMessagingWhitelist";
const char kNativePrinters[] = "NativePrinters";
const char kNativePrintersBulkAccessMode[] = "NativePrintersBulkAccessMode";
const char kNativePrintersBulkBlacklist[] = "NativePrintersBulkBlacklist";
const char kNativePrintersBulkConfiguration[] = "NativePrintersBulkConfiguration";
const char kNativePrintersBulkWhitelist[] = "NativePrintersBulkWhitelist";
const char kNetBiosShareDiscoveryEnabled[] = "NetBiosShareDiscoveryEnabled";
const char kNetworkFileSharesAllowed[] = "NetworkFileSharesAllowed";
const char kNetworkFileSharesPreconfiguredShares[] = "NetworkFileSharesPreconfiguredShares";
const char kNetworkPredictionOptions[] = "NetworkPredictionOptions";
const char kNetworkThrottlingEnabled[] = "NetworkThrottlingEnabled";
const char kNewTabPageLocation[] = "NewTabPageLocation";
const char kNoteTakingAppsLockScreenWhitelist[] = "NoteTakingAppsLockScreenWhitelist";
const char kNotificationsAllowedForUrls[] = "NotificationsAllowedForUrls";
const char kNotificationsBlockedForUrls[] = "NotificationsBlockedForUrls";
const char kNtlmV2Enabled[] = "NtlmV2Enabled";
const char kOpenNetworkConfiguration[] = "OpenNetworkConfiguration";
const char kOverrideSecurityRestrictionsOnInsecureOrigin[] = "OverrideSecurityRestrictionsOnInsecureOrigin";
const char kPacHttpsUrlStrippingEnabled[] = "PacHttpsUrlStrippingEnabled";
const char kParentAccessCodeConfig[] = "ParentAccessCodeConfig";
const char kPasswordLeakDetectionEnabled[] = "PasswordLeakDetectionEnabled";
const char kPasswordManagerAllowShowPasswords[] = "PasswordManagerAllowShowPasswords";
const char kPasswordManagerEnabled[] = "PasswordManagerEnabled";
const char kPasswordProtectionChangePasswordURL[] = "PasswordProtectionChangePasswordURL";
const char kPasswordProtectionLoginURLs[] = "PasswordProtectionLoginURLs";
const char kPasswordProtectionWarningTrigger[] = "PasswordProtectionWarningTrigger";
const char kPaymentMethodQueryEnabled[] = "PaymentMethodQueryEnabled";
const char kPerAppTimeLimits[] = "PerAppTimeLimits";
const char kPerAppTimeLimitsWhitelist[] = "PerAppTimeLimitsWhitelist";
const char kPinUnlockMaximumLength[] = "PinUnlockMaximumLength";
const char kPinUnlockMinimumLength[] = "PinUnlockMinimumLength";
const char kPinUnlockWeakPinsAllowed[] = "PinUnlockWeakPinsAllowed";
const char kPinnedLauncherApps[] = "PinnedLauncherApps";
const char kPluginVmAllowed[] = "PluginVmAllowed";
const char kPluginVmImage[] = "PluginVmImage";
const char kPluginVmLicenseKey[] = "PluginVmLicenseKey";
const char kPluginsAllowedForUrls[] = "PluginsAllowedForUrls";
const char kPluginsBlockedForUrls[] = "PluginsBlockedForUrls";
const char kPolicyAtomicGroupsEnabled[] = "PolicyAtomicGroupsEnabled";
const char kPolicyDictionaryMultipleSourceMergeList[] = "PolicyDictionaryMultipleSourceMergeList";
const char kPolicyListMultipleSourceMergeList[] = "PolicyListMultipleSourceMergeList";
const char kPolicyRefreshRate[] = "PolicyRefreshRate";
const char kPopupsAllowedForUrls[] = "PopupsAllowedForUrls";
const char kPopupsBlockedForUrls[] = "PopupsBlockedForUrls";
const char kPowerManagementIdleSettings[] = "PowerManagementIdleSettings";
const char kPowerManagementUsesAudioActivity[] = "PowerManagementUsesAudioActivity";
const char kPowerManagementUsesVideoActivity[] = "PowerManagementUsesVideoActivity";
const char kPowerSmartDimEnabled[] = "PowerSmartDimEnabled";
const char kPresentationIdleDelayScale[] = "PresentationIdleDelayScale";
const char kPresentationScreenDimDelayScale[] = "PresentationScreenDimDelayScale";
const char kPrimaryMouseButtonSwitch[] = "PrimaryMouseButtonSwitch";
const char kPrintHeaderFooter[] = "PrintHeaderFooter";
const char kPrintJobHistoryExpirationPeriod[] = "PrintJobHistoryExpirationPeriod";
const char kPrintPreviewUseSystemDefaultPrinter[] = "PrintPreviewUseSystemDefaultPrinter";
const char kPrinterTypeDenyList[] = "PrinterTypeDenyList";
const char kPrintingAPIExtensionsWhitelist[] = "PrintingAPIExtensionsWhitelist";
const char kPrintingAllowedBackgroundGraphicsModes[] = "PrintingAllowedBackgroundGraphicsModes";
const char kPrintingAllowedColorModes[] = "PrintingAllowedColorModes";
const char kPrintingAllowedDuplexModes[] = "PrintingAllowedDuplexModes";
const char kPrintingAllowedPageSizes[] = "PrintingAllowedPageSizes";
const char kPrintingAllowedPinModes[] = "PrintingAllowedPinModes";
const char kPrintingBackgroundGraphicsDefault[] = "PrintingBackgroundGraphicsDefault";
const char kPrintingColorDefault[] = "PrintingColorDefault";
const char kPrintingDuplexDefault[] = "PrintingDuplexDefault";
const char kPrintingEnabled[] = "PrintingEnabled";
const char kPrintingPinDefault[] = "PrintingPinDefault";
const char kPrintingSendUsernameAndFilenameEnabled[] = "PrintingSendUsernameAndFilenameEnabled";
const char kPrintingSizeDefault[] = "PrintingSizeDefault";
const char kPromotionalTabsEnabled[] = "PromotionalTabsEnabled";
const char kPromptForDownloadLocation[] = "PromptForDownloadLocation";
const char kProxyBypassList[] = "ProxyBypassList";
const char kProxyMode[] = "ProxyMode";
const char kProxyPacUrl[] = "ProxyPacUrl";
const char kProxyServer[] = "ProxyServer";
const char kProxyServerMode[] = "ProxyServerMode";
const char kProxySettings[] = "ProxySettings";
const char kQuicAllowed[] = "QuicAllowed";
const char kQuickUnlockModeWhitelist[] = "QuickUnlockModeWhitelist";
const char kQuickUnlockTimeout[] = "QuickUnlockTimeout";
const char kRC4Enabled[] = "RC4Enabled";
const char kRebootAfterUpdate[] = "RebootAfterUpdate";
const char kRegisteredProtocolHandlers[] = "RegisteredProtocolHandlers";
const char kRelaunchHeadsUpPeriod[] = "RelaunchHeadsUpPeriod";
const char kRelaunchNotification[] = "RelaunchNotification";
const char kRelaunchNotificationPeriod[] = "RelaunchNotificationPeriod";
const char kRemoteAccessClientFirewallTraversal[] = "RemoteAccessClientFirewallTraversal";
const char kRemoteAccessHostAllowClientPairing[] = "RemoteAccessHostAllowClientPairing";
const char kRemoteAccessHostAllowFileTransfer[] = "RemoteAccessHostAllowFileTransfer";
const char kRemoteAccessHostAllowGnubbyAuth[] = "RemoteAccessHostAllowGnubbyAuth";
const char kRemoteAccessHostAllowRelayedConnection[] = "RemoteAccessHostAllowRelayedConnection";
const char kRemoteAccessHostAllowUiAccessForRemoteAssistance[] = "RemoteAccessHostAllowUiAccessForRemoteAssistance";
const char kRemoteAccessHostClientDomain[] = "RemoteAccessHostClientDomain";
const char kRemoteAccessHostClientDomainList[] = "RemoteAccessHostClientDomainList";
const char kRemoteAccessHostDebugOverridePolicies[] = "RemoteAccessHostDebugOverridePolicies";
const char kRemoteAccessHostDomain[] = "RemoteAccessHostDomain";
const char kRemoteAccessHostDomainList[] = "RemoteAccessHostDomainList";
const char kRemoteAccessHostFirewallTraversal[] = "RemoteAccessHostFirewallTraversal";
const char kRemoteAccessHostMatchUsername[] = "RemoteAccessHostMatchUsername";
const char kRemoteAccessHostRequireCurtain[] = "RemoteAccessHostRequireCurtain";
const char kRemoteAccessHostRequireTwoFactor[] = "RemoteAccessHostRequireTwoFactor";
const char kRemoteAccessHostTalkGadgetPrefix[] = "RemoteAccessHostTalkGadgetPrefix";
const char kRemoteAccessHostTokenUrl[] = "RemoteAccessHostTokenUrl";
const char kRemoteAccessHostTokenValidationCertificateIssuer[] = "RemoteAccessHostTokenValidationCertificateIssuer";
const char kRemoteAccessHostTokenValidationUrl[] = "RemoteAccessHostTokenValidationUrl";
const char kRemoteAccessHostUdpPortRange[] = "RemoteAccessHostUdpPortRange";
const char kRenderInChromeFrameList[] = "RenderInChromeFrameList";
const char kRenderInHostList[] = "RenderInHostList";
const char kRendererCodeIntegrityEnabled[] = "RendererCodeIntegrityEnabled";
const char kReportArcStatusEnabled[] = "ReportArcStatusEnabled";
const char kReportCrostiniUsageEnabled[] = "ReportCrostiniUsageEnabled";
const char kReportDeviceActivityTimes[] = "ReportDeviceActivityTimes";
const char kReportDeviceBoardStatus[] = "ReportDeviceBoardStatus";
const char kReportDeviceBootMode[] = "ReportDeviceBootMode";
const char kReportDeviceCpuInfo[] = "ReportDeviceCpuInfo";
const char kReportDeviceCrashReportInfo[] = "ReportDeviceCrashReportInfo";
const char kReportDeviceGraphicsStatus[] = "ReportDeviceGraphicsStatus";
const char kReportDeviceHardwareStatus[] = "ReportDeviceHardwareStatus";
const char kReportDeviceLocation[] = "ReportDeviceLocation";
const char kReportDeviceNetworkInterfaces[] = "ReportDeviceNetworkInterfaces";
const char kReportDeviceOsUpdateStatus[] = "ReportDeviceOsUpdateStatus";
const char kReportDevicePowerStatus[] = "ReportDevicePowerStatus";
const char kReportDeviceSessionStatus[] = "ReportDeviceSessionStatus";
const char kReportDeviceStorageStatus[] = "ReportDeviceStorageStatus";
const char kReportDeviceUsers[] = "ReportDeviceUsers";
const char kReportDeviceVersionInfo[] = "ReportDeviceVersionInfo";
const char kReportExtensionsAndPluginsData[] = "ReportExtensionsAndPluginsData";
const char kReportMachineIDData[] = "ReportMachineIDData";
const char kReportPolicyData[] = "ReportPolicyData";
const char kReportSafeBrowsingData[] = "ReportSafeBrowsingData";
const char kReportUploadFrequency[] = "ReportUploadFrequency";
const char kReportUserIDData[] = "ReportUserIDData";
const char kReportVersionData[] = "ReportVersionData";
const char kRequireOnlineRevocationChecksForLocalAnchors[] = "RequireOnlineRevocationChecksForLocalAnchors";
const char kRestoreOnStartup[] = "RestoreOnStartup";
const char kRestoreOnStartupURLs[] = "RestoreOnStartupURLs";
const char kRestrictAccountsToPatterns[] = "RestrictAccountsToPatterns";
const char kRestrictSigninToPattern[] = "RestrictSigninToPattern";
const char kRoamingProfileLocation[] = "RoamingProfileLocation";
const char kRoamingProfileSupportEnabled[] = "RoamingProfileSupportEnabled";
const char kRunAllFlashInAllowMode[] = "RunAllFlashInAllowMode";
const char kSAMLOfflineSigninTimeLimit[] = "SAMLOfflineSigninTimeLimit";
const char kSSLErrorOverrideAllowed[] = "SSLErrorOverrideAllowed";
const char kSSLVersionFallbackMin[] = "SSLVersionFallbackMin";
const char kSSLVersionMax[] = "SSLVersionMax";
const char kSSLVersionMin[] = "SSLVersionMin";
const char kSafeBrowsingEnabled[] = "SafeBrowsingEnabled";
const char kSafeBrowsingExtendedReportingEnabled[] = "SafeBrowsingExtendedReportingEnabled";
const char kSafeBrowsingExtendedReportingOptInAllowed[] = "SafeBrowsingExtendedReportingOptInAllowed";
const char kSafeBrowsingForTrustedSourcesEnabled[] = "SafeBrowsingForTrustedSourcesEnabled";
const char kSafeBrowsingWhitelistDomains[] = "SafeBrowsingWhitelistDomains";
const char kSafeSitesFilterBehavior[] = "SafeSitesFilterBehavior";
const char kSamlInSessionPasswordChangeEnabled[] = "SamlInSessionPasswordChangeEnabled";
const char kSamlPasswordExpirationAdvanceWarningDays[] = "SamlPasswordExpirationAdvanceWarningDays";
const char kSavingBrowserHistoryDisabled[] = "SavingBrowserHistoryDisabled";
const char kSchedulerConfiguration[] = "SchedulerConfiguration";
const char kScreenBrightnessPercent[] = "ScreenBrightnessPercent";
const char kScreenCaptureAllowed[] = "ScreenCaptureAllowed";
const char kScreenDimDelayAC[] = "ScreenDimDelayAC";
const char kScreenDimDelayBattery[] = "ScreenDimDelayBattery";
const char kScreenLockDelayAC[] = "ScreenLockDelayAC";
const char kScreenLockDelayBattery[] = "ScreenLockDelayBattery";
const char kScreenLockDelays[] = "ScreenLockDelays";
const char kScreenMagnifierType[] = "ScreenMagnifierType";
const char kScreenOffDelayAC[] = "ScreenOffDelayAC";
const char kScreenOffDelayBattery[] = "ScreenOffDelayBattery";
const char kSearchSuggestEnabled[] = "SearchSuggestEnabled";
const char kSecondaryGoogleAccountSigninAllowed[] = "SecondaryGoogleAccountSigninAllowed";
const char kSecurityKeyPermitAttestation[] = "SecurityKeyPermitAttestation";
const char kSelectToSpeakEnabled[] = "SelectToSpeakEnabled";
const char kSendFilesForMalwareCheck[] = "SendFilesForMalwareCheck";
const char kSessionLengthLimit[] = "SessionLengthLimit";
const char kSessionLocales[] = "SessionLocales";
const char kSharedClipboardEnabled[] = "SharedClipboardEnabled";
const char kShelfAlignment[] = "ShelfAlignment";
const char kShelfAutoHideBehavior[] = "ShelfAutoHideBehavior";
const char kShowAccessibilityOptionsInSystemTrayMenu[] = "ShowAccessibilityOptionsInSystemTrayMenu";
const char kShowAppsShortcutInBookmarkBar[] = "ShowAppsShortcutInBookmarkBar";
const char kShowCastIconInToolbar[] = "ShowCastIconInToolbar";
const char kShowHomeButton[] = "ShowHomeButton";
const char kShowLogoutButtonInTray[] = "ShowLogoutButtonInTray";
const char kSignedHTTPExchangeEnabled[] = "SignedHTTPExchangeEnabled";
const char kSigninAllowed[] = "SigninAllowed";
const char kSitePerProcess[] = "SitePerProcess";
const char kSitePerProcessAndroid[] = "SitePerProcessAndroid";
const char kSkipMetadataCheck[] = "SkipMetadataCheck";
const char kSmartLockSigninAllowed[] = "SmartLockSigninAllowed";
const char kSmsMessagesAllowed[] = "SmsMessagesAllowed";
const char kSpellCheckServiceEnabled[] = "SpellCheckServiceEnabled";
const char kSpellcheckEnabled[] = "SpellcheckEnabled";
const char kSpellcheckLanguage[] = "SpellcheckLanguage";
const char kSpellcheckLanguageBlacklist[] = "SpellcheckLanguageBlacklist";
const char kSpokenFeedbackEnabled[] = "SpokenFeedbackEnabled";
const char kStartupBrowserWindowLaunchSuppressed[] = "StartupBrowserWindowLaunchSuppressed";
const char kStickyKeysEnabled[] = "StickyKeysEnabled";
const char kStricterMixedContentTreatmentEnabled[] = "StricterMixedContentTreatmentEnabled";
const char kSupervisedUserContentProviderEnabled[] = "SupervisedUserContentProviderEnabled";
const char kSupervisedUserCreationEnabled[] = "SupervisedUserCreationEnabled";
const char kSupervisedUsersEnabled[] = "SupervisedUsersEnabled";
const char kSuppressChromeFrameTurndownPrompt[] = "SuppressChromeFrameTurndownPrompt";
const char kSuppressUnsupportedOSWarning[] = "SuppressUnsupportedOSWarning";
const char kSyncDisabled[] = "SyncDisabled";
const char kSyncTypesListDisabled[] = "SyncTypesListDisabled";
const char kSystemTimezone[] = "SystemTimezone";
const char kSystemTimezoneAutomaticDetection[] = "SystemTimezoneAutomaticDetection";
const char kSystemUse24HourClock[] = "SystemUse24HourClock";
const char kTLS13HardeningForLocalAnchorsEnabled[] = "TLS13HardeningForLocalAnchorsEnabled";
const char kTPMFirmwareUpdateSettings[] = "TPMFirmwareUpdateSettings";
const char kTabFreezingEnabled[] = "TabFreezingEnabled";
const char kTabUnderAllowed[] = "TabUnderAllowed";
const char kTaskManagerEndProcessEnabled[] = "TaskManagerEndProcessEnabled";
const char kTermsOfServiceURL[] = "TermsOfServiceURL";
const char kThirdPartyBlockingEnabled[] = "ThirdPartyBlockingEnabled";
const char kTotalMemoryLimitMb[] = "TotalMemoryLimitMb";
const char kTouchVirtualKeyboardEnabled[] = "TouchVirtualKeyboardEnabled";
const char kTranslateEnabled[] = "TranslateEnabled";
const char kURLBlacklist[] = "URLBlacklist";
const char kURLWhitelist[] = "URLWhitelist";
const char kURLsToCheckComplianceOfDownloadedContent[] = "URLsToCheckComplianceOfDownloadedContent";
const char kURLsToCheckForMalwareOfUploadedContent[] = "URLsToCheckForMalwareOfUploadedContent";
const char kURLsToNotCheckComplianceOfUploadedContent[] = "URLsToNotCheckComplianceOfUploadedContent";
const char kURLsToNotCheckForMalwareOfDownloadedContent[] = "URLsToNotCheckForMalwareOfDownloadedContent";
const char kUnaffiliatedArcAllowed[] = "UnaffiliatedArcAllowed";
const char kUnifiedDesktopEnabledByDefault[] = "UnifiedDesktopEnabledByDefault";
const char kUnsafeEventsReportingEnabled[] = "UnsafeEventsReportingEnabled";
const char kUnsafelyTreatInsecureOriginAsSecure[] = "UnsafelyTreatInsecureOriginAsSecure";
const char kUptimeLimit[] = "UptimeLimit";
const char kUrlKeyedAnonymizedDataCollectionEnabled[] = "UrlKeyedAnonymizedDataCollectionEnabled";
const char kUsageTimeLimit[] = "UsageTimeLimit";
const char kUsbDetachableWhitelist[] = "UsbDetachableWhitelist";
const char kUserActivityScreenDimDelayScale[] = "UserActivityScreenDimDelayScale";
const char kUserAvatarImage[] = "UserAvatarImage";
const char kUserDataDir[] = "UserDataDir";
const char kUserDisplayName[] = "UserDisplayName";
const char kUserFeedbackAllowed[] = "UserFeedbackAllowed";
const char kUserNativePrintersAllowed[] = "UserNativePrintersAllowed";
const char kVariationsRestrictParameter[] = "VariationsRestrictParameter";
const char kVideoCaptureAllowed[] = "VideoCaptureAllowed";
const char kVideoCaptureAllowedUrls[] = "VideoCaptureAllowedUrls";
const char kVirtualKeyboardEnabled[] = "VirtualKeyboardEnabled";
const char kVirtualMachinesAllowed[] = "VirtualMachinesAllowed";
const char kVmManagementCliAllowed[] = "VmManagementCliAllowed";
const char kVoiceInteractionContextEnabled[] = "VoiceInteractionContextEnabled";
const char kVoiceInteractionHotwordEnabled[] = "VoiceInteractionHotwordEnabled";
const char kVpnConfigAllowed[] = "VpnConfigAllowed";
const char kWPADQuickCheckEnabled[] = "WPADQuickCheckEnabled";
const char kWaitForInitialUserActivity[] = "WaitForInitialUserActivity";
const char kWallpaperImage[] = "WallpaperImage";
const char kWebAppInstallForceList[] = "WebAppInstallForceList";
const char kWebComponentsV0Enabled[] = "WebComponentsV0Enabled";
const char kWebDriverOverridesIncompatiblePolicies[] = "WebDriverOverridesIncompatiblePolicies";
const char kWebRestrictionsAuthority[] = "WebRestrictionsAuthority";
const char kWebRtcEventLogCollectionAllowed[] = "WebRtcEventLogCollectionAllowed";
const char kWebRtcLocalIpsAllowedUrls[] = "WebRtcLocalIpsAllowedUrls";
const char kWebRtcUdpPortRange[] = "WebRtcUdpPortRange";
const char kWebUsbAllowDevicesForUrls[] = "WebUsbAllowDevicesForUrls";
const char kWebUsbAskForUrls[] = "WebUsbAskForUrls";
const char kWebUsbBlockedForUrls[] = "WebUsbBlockedForUrls";
const char kWelcomePageOnOSUpgradeEnabled[] = "WelcomePageOnOSUpgradeEnabled";

}  // namespace key

namespace group {

const char kActiveDirectoryManagement[] = "ActiveDirectoryManagement";
const char kAttestation[] = "Attestation";
const char kBrowserSwitcher[] = "BrowserSwitcher";
const char kChromeReportingExtension[] = "ChromeReportingExtension";
const char kContentPack[] = "ContentPack";
const char kCookiesSettings[] = "CookiesSettings";
const char kDateAndTime[] = "DateAndTime";
const char kDefaultSearchProvider[] = "DefaultSearchProvider";
const char kDisplay[] = "Display";
const char kDrive[] = "Drive";
const char kExtensions[] = "Extensions";
const char kGoogleCast[] = "GoogleCast";
const char kHomepage[] = "Homepage";
const char kImageSettings[] = "ImageSettings";
const char kJavascriptSettings[] = "JavascriptSettings";
const char kKeygenSettings[] = "KeygenSettings";
const char kKiosk[] = "Kiosk";
const char kLegacySameSiteCookieBehaviorSettings[] = "LegacySameSiteCookieBehaviorSettings";
const char kLoginScreenOrigins[] = "LoginScreenOrigins";
const char kNativeMessaging[] = "NativeMessaging";
const char kNetworkFileShares[] = "NetworkFileShares";
const char kNotificationsSettings[] = "NotificationsSettings";
const char kPasswordManager[] = "PasswordManager";
const char kPasswordProtection[] = "PasswordProtection";
const char kPinUnlock[] = "PinUnlock";
const char kPluginVm[] = "PluginVm";
const char kPluginsSettings[] = "PluginsSettings";
const char kPopupsSettings[] = "PopupsSettings";
const char kProxy[] = "Proxy";
const char kQuickUnlock[] = "QuickUnlock";
const char kRemoteAccess[] = "RemoteAccess";
const char kRestoreOnStartup[] = "RestoreOnStartup";
const char kSAML[] = "SAML";
const char kSafeBrowsing[] = "SafeBrowsing";
const char kSupervisedUsers[] = "SupervisedUsers";
const char kUserAndDeviceReporting[] = "UserAndDeviceReporting";
const char kWebUsbSettings[] = "WebUsbSettings";
const char kWiFi[] = "WiFi";

namespace {

const char* const ActiveDirectoryManagement[] = {key::kDeviceMachinePasswordChangeRate, key::kDeviceUserPolicyLoopbackProcessingMode, key::kDeviceKerberosEncryptionTypes, key::kDeviceGpoCacheLifetime, key::kDeviceAuthDataCacheLifetime, nullptr};
const char* const Attestation[] = {key::kAttestationEnabledForDevice, key::kAttestationEnabledForUser, key::kAttestationExtensionWhitelist, key::kAttestationForContentProtectionEnabled, nullptr};
const char* const BrowserSwitcher[] = {key::kAlternativeBrowserPath, key::kAlternativeBrowserParameters, key::kBrowserSwitcherChromePath, key::kBrowserSwitcherChromeParameters, key::kBrowserSwitcherDelay, key::kBrowserSwitcherEnabled, key::kBrowserSwitcherExternalSitelistUrl, key::kBrowserSwitcherExternalGreylistUrl, key::kBrowserSwitcherKeepLastChromeTab, key::kBrowserSwitcherUrlList, key::kBrowserSwitcherUrlGreylist, key::kBrowserSwitcherUseIeSitelist, nullptr};
const char* const ChromeReportingExtension[] = {key::kReportVersionData, key::kReportPolicyData, key::kReportMachineIDData, key::kReportUserIDData, key::kReportExtensionsAndPluginsData, key::kCloudReportingEnabled, nullptr};
const char* const ContentPack[] = {key::kContentPackDefaultFilteringBehavior, key::kContentPackManualBehaviorHosts, key::kContentPackManualBehaviorURLs, nullptr};
const char* const CookiesSettings[] = {key::kDefaultCookiesSetting, key::kCookiesAllowedForUrls, key::kCookiesBlockedForUrls, key::kCookiesSessionOnlyForUrls, nullptr};
const char* const DateAndTime[] = {key::kSystemTimezone, key::kSystemTimezoneAutomaticDetection, nullptr};
const char* const DefaultSearchProvider[] = {key::kDefaultSearchProviderEnabled, key::kDefaultSearchProviderName, key::kDefaultSearchProviderKeyword, key::kDefaultSearchProviderSearchURL, key::kDefaultSearchProviderSuggestURL, key::kDefaultSearchProviderInstantURL, key::kDefaultSearchProviderIconURL, key::kDefaultSearchProviderEncodings, key::kDefaultSearchProviderAlternateURLs, key::kDefaultSearchProviderSearchTermsReplacementKey, key::kDefaultSearchProviderImageURL, key::kDefaultSearchProviderNewTabURL, key::kDefaultSearchProviderSearchURLPostParams, key::kDefaultSearchProviderSuggestURLPostParams, key::kDefaultSearchProviderInstantURLPostParams, key::kDefaultSearchProviderImageURLPostParams, nullptr};
const char* const Display[] = {key::kDeviceDisplayResolution, key::kDisplayRotationDefault, nullptr};
const char* const Drive[] = {key::kDriveDisabled, key::kDriveDisabledOverCellular, nullptr};
const char* const Extensions[] = {key::kExtensionInstallBlacklist, key::kExtensionInstallWhitelist, key::kExtensionInstallForcelist, key::kExtensionInstallSources, key::kExtensionAllowedTypes, key::kExtensionAllowInsecureUpdates, key::kExtensionSettings, nullptr};
const char* const GoogleCast[] = {key::kCastReceiverEnabled, key::kCastReceiverName, nullptr};
const char* const Homepage[] = {key::kHomepageLocation, key::kHomepageIsNewTabPage, key::kNewTabPageLocation, key::kShowHomeButton, nullptr};
const char* const ImageSettings[] = {key::kDefaultImagesSetting, key::kImagesAllowedForUrls, key::kImagesBlockedForUrls, nullptr};
const char* const JavascriptSettings[] = {key::kDefaultJavaScriptSetting, key::kJavaScriptAllowedForUrls, key::kJavaScriptBlockedForUrls, nullptr};
const char* const KeygenSettings[] = {key::kDefaultKeygenSetting, key::kKeygenAllowedForUrls, key::kKeygenBlockedForUrls, nullptr};
const char* const Kiosk[] = {key::kDeviceLocalAccounts, key::kDeviceLocalAccountAutoLoginId, key::kDeviceLocalAccountAutoLoginDelay, key::kDeviceLocalAccountAutoLoginBailoutEnabled, key::kDeviceLocalAccountPromptForNetworkWhenOffline, nullptr};
const char* const LegacySameSiteCookieBehaviorSettings[] = {key::kLegacySameSiteCookieBehaviorEnabled, key::kLegacySameSiteCookieBehaviorEnabledForDomainList, nullptr};
const char* const LoginScreenOrigins[] = {key::kDeviceLoginScreenIsolateOrigins, key::kDeviceLoginScreenSitePerProcess, nullptr};
const char* const NativeMessaging[] = {key::kNativeMessagingBlacklist, key::kNativeMessagingWhitelist, key::kNativeMessagingUserLevelHosts, nullptr};
const char* const NetworkFileShares[] = {key::kNetworkFileSharesAllowed, key::kNetBiosShareDiscoveryEnabled, key::kNTLMShareAuthenticationEnabled, key::kNetworkFileSharesPreconfiguredShares, nullptr};
const char* const NotificationsSettings[] = {key::kDefaultNotificationsSetting, key::kNotificationsAllowedForUrls, key::kNotificationsBlockedForUrls, nullptr};
const char* const PasswordManager[] = {key::kPasswordManagerEnabled, key::kPasswordManagerAllowShowPasswords, nullptr};
const char* const PasswordProtection[] = {key::kPasswordProtectionWarningTrigger, key::kPasswordProtectionLoginURLs, key::kPasswordProtectionChangePasswordURL, nullptr};
const char* const PinUnlock[] = {key::kPinUnlockMinimumLength, key::kPinUnlockMaximumLength, key::kPinUnlockWeakPinsAllowed, nullptr};
const char* const PluginVm[] = {key::kPluginVmAllowed, key::kPluginVmLicenseKey, key::kPluginVmImage, nullptr};
const char* const PluginsSettings[] = {key::kDefaultPluginsSetting, key::kPluginsAllowedForUrls, key::kPluginsBlockedForUrls, nullptr};
const char* const PopupsSettings[] = {key::kDefaultPopupsSetting, key::kPopupsAllowedForUrls, key::kPopupsBlockedForUrls, nullptr};
const char* const Proxy[] = {key::kProxyMode, key::kProxyServerMode, key::kProxyServer, key::kProxyPacUrl, key::kProxyBypassList, key::kProxySettings, nullptr};
const char* const QuickUnlock[] = {key::kQuickUnlockModeWhitelist, key::kQuickUnlockTimeout, nullptr};
const char* const RemoteAccess[] = {key::kRemoteAccessClientFirewallTraversal, key::kRemoteAccessHostClientDomain, key::kRemoteAccessHostClientDomainList, key::kRemoteAccessHostFirewallTraversal, key::kRemoteAccessHostDomain, key::kRemoteAccessHostDomainList, key::kRemoteAccessHostRequireTwoFactor, key::kRemoteAccessHostTalkGadgetPrefix, key::kRemoteAccessHostRequireCurtain, key::kRemoteAccessHostAllowClientPairing, key::kRemoteAccessHostAllowGnubbyAuth, key::kRemoteAccessHostAllowRelayedConnection, key::kRemoteAccessHostUdpPortRange, key::kRemoteAccessHostMatchUsername, key::kRemoteAccessHostTokenUrl, key::kRemoteAccessHostTokenValidationUrl, key::kRemoteAccessHostTokenValidationCertificateIssuer, key::kRemoteAccessHostDebugOverridePolicies, key::kRemoteAccessHostAllowUiAccessForRemoteAssistance, key::kRemoteAccessHostAllowFileTransfer, nullptr};
const char* const RestoreOnStartup[] = {key::kRestoreOnStartup, key::kRestoreOnStartupURLs, nullptr};
const char* const SAML[] = {key::kDeviceSamlLoginAuthenticationType, key::kDeviceTransferSAMLCookies, nullptr};
const char* const SafeBrowsing[] = {key::kSafeBrowsingEnabled, key::kSafeBrowsingExtendedReportingEnabled, key::kSafeBrowsingExtendedReportingOptInAllowed, key::kSafeBrowsingWhitelistDomains, nullptr};
const char* const SupervisedUsers[] = {key::kSupervisedUsersEnabled, key::kSupervisedUserCreationEnabled, key::kSupervisedUserContentProviderEnabled, nullptr};
const char* const UserAndDeviceReporting[] = {key::kReportDeviceVersionInfo, key::kReportDeviceBootMode, key::kReportDeviceUsers, key::kReportDeviceActivityTimes, key::kReportDeviceLocation, key::kReportDeviceNetworkInterfaces, key::kReportDeviceHardwareStatus, key::kReportDeviceSessionStatus, key::kReportDeviceGraphicsStatus, key::kReportDeviceCrashReportInfo, key::kReportDeviceOsUpdateStatus, key::kReportDeviceBoardStatus, key::kReportDeviceCpuInfo, key::kReportDevicePowerStatus, key::kReportDeviceStorageStatus, key::kReportUploadFrequency, key::kReportArcStatusEnabled, key::kHeartbeatEnabled, key::kHeartbeatFrequency, key::kLogUploadEnabled, key::kDeviceMetricsReportingEnabled, nullptr};
const char* const WebUsbSettings[] = {key::kDefaultWebUsbGuardSetting, key::kDeviceLoginScreenWebUsbAllowDevicesForUrls, key::kWebUsbAllowDevicesForUrls, key::kWebUsbAskForUrls, key::kWebUsbBlockedForUrls, nullptr};
const char* const WiFi[] = {key::kDeviceWiFiFastTransitionEnabled, key::kDeviceWiFiAllowed, nullptr};

}  // namespace

}  // namespace group

const AtomicGroup kPolicyAtomicGroupMappings[] = {
  {  37, group::kActiveDirectoryManagement, group::ActiveDirectoryManagement  },
  {  18, group::kAttestation, group::Attestation  },
  {  28, group::kBrowserSwitcher, group::BrowserSwitcher  },
  {  27, group::kChromeReportingExtension, group::ChromeReportingExtension  },
  {  19, group::kContentPack, group::ContentPack  },
  {  9, group::kCookiesSettings, group::CookiesSettings  },
  {  35, group::kDateAndTime, group::DateAndTime  },
  {  7, group::kDefaultSearchProvider, group::DefaultSearchProvider  },
  {  36, group::kDisplay, group::Display  },
  {  17, group::kDrive, group::Drive  },
  {  5, group::kExtensions, group::Extensions  },
  {  21, group::kGoogleCast, group::GoogleCast  },
  {  1, group::kHomepage, group::Homepage  },
  {  8, group::kImageSettings, group::ImageSettings  },
  {  10, group::kJavascriptSettings, group::JavascriptSettings  },
  {  13, group::kKeygenSettings, group::KeygenSettings  },
  {  34, group::kKiosk, group::Kiosk  },
  {  38, group::kLegacySameSiteCookieBehaviorSettings, group::LegacySameSiteCookieBehaviorSettings  },
  {  31, group::kLoginScreenOrigins, group::LoginScreenOrigins  },
  {  16, group::kNativeMessaging, group::NativeMessaging  },
  {  26, group::kNetworkFileShares, group::NetworkFileShares  },
  {  14, group::kNotificationsSettings, group::NotificationsSettings  },
  {  3, group::kPasswordManager, group::PasswordManager  },
  {  25, group::kPasswordProtection, group::PasswordProtection  },
  {  23, group::kPinUnlock, group::PinUnlock  },
  {  29, group::kPluginVm, group::PluginVm  },
  {  11, group::kPluginsSettings, group::PluginsSettings  },
  {  12, group::kPopupsSettings, group::PopupsSettings  },
  {  4, group::kProxy, group::Proxy  },
  {  22, group::kQuickUnlock, group::QuickUnlock  },
  {  2, group::kRemoteAccess, group::RemoteAccess  },
  {  6, group::kRestoreOnStartup, group::RestoreOnStartup  },
  {  30, group::kSAML, group::SAML  },
  {  24, group::kSafeBrowsing, group::SafeBrowsing  },
  {  20, group::kSupervisedUsers, group::SupervisedUsers  },
  {  32, group::kUserAndDeviceReporting, group::UserAndDeviceReporting  },
  {  15, group::kWebUsbSettings, group::WebUsbSettings  },
  {  33, group::kWiFi, group::WiFi  },
};

const size_t kPolicyAtomicGroupMappingsLength = 38;

const IntegerPolicyAccess kIntegerPolicyAccess[] = {
  {key::kBrowserSignin,
   &em::CloudPolicySettings::has_browsersignin,
   &em::CloudPolicySettings::browsersignin},
  {key::kDefaultCookiesSetting,
   &em::CloudPolicySettings::has_defaultcookiessetting,
   &em::CloudPolicySettings::defaultcookiessetting},
  {key::kDefaultGeolocationSetting,
   &em::CloudPolicySettings::has_defaultgeolocationsetting,
   &em::CloudPolicySettings::defaultgeolocationsetting},
  {key::kDefaultJavaScriptSetting,
   &em::CloudPolicySettings::has_defaultjavascriptsetting,
   &em::CloudPolicySettings::defaultjavascriptsetting},
  {key::kDefaultPopupsSetting,
   &em::CloudPolicySettings::has_defaultpopupssetting,
   &em::CloudPolicySettings::defaultpopupssetting},
  {key::kDefaultWebBluetoothGuardSetting,
   &em::CloudPolicySettings::has_defaultwebbluetoothguardsetting,
   &em::CloudPolicySettings::defaultwebbluetoothguardsetting},
  {key::kDefaultWebUsbGuardSetting,
   &em::CloudPolicySettings::has_defaultwebusbguardsetting,
   &em::CloudPolicySettings::defaultwebusbguardsetting},
  {key::kForceYouTubeRestrict,
   &em::CloudPolicySettings::has_forceyoutuberestrict,
   &em::CloudPolicySettings::forceyoutuberestrict},
  {key::kIncognitoModeAvailability,
   &em::CloudPolicySettings::has_incognitomodeavailability,
   &em::CloudPolicySettings::incognitomodeavailability},
  {key::kLegacySameSiteCookieBehaviorEnabled,
   &em::CloudPolicySettings::has_legacysamesitecookiebehaviorenabled,
   &em::CloudPolicySettings::legacysamesitecookiebehaviorenabled},
  {key::kNetworkPredictionOptions,
   &em::CloudPolicySettings::has_networkpredictionoptions,
   &em::CloudPolicySettings::networkpredictionoptions},
  {key::kProxyServerMode,
   &em::CloudPolicySettings::has_proxyservermode,
   &em::CloudPolicySettings::proxyservermode},
  {nullptr, nullptr, nullptr},
};

const BooleanPolicyAccess kBooleanPolicyAccess[] = {
  {key::kAllowPopupsDuringPageUnload,
   &em::CloudPolicySettings::has_allowpopupsduringpageunload,
   &em::CloudPolicySettings::allowpopupsduringpageunload},
  {key::kAllowSyncXHRInPageDismissal,
   &em::CloudPolicySettings::has_allowsyncxhrinpagedismissal,
   &em::CloudPolicySettings::allowsyncxhrinpagedismissal},
  {key::kAlternateErrorPagesEnabled,
   &em::CloudPolicySettings::has_alternateerrorpagesenabled,
   &em::CloudPolicySettings::alternateerrorpagesenabled},
  {key::kAutoFillEnabled,
   &em::CloudPolicySettings::has_autofillenabled,
   &em::CloudPolicySettings::autofillenabled},
  {key::kAutofillAddressEnabled,
   &em::CloudPolicySettings::has_autofilladdressenabled,
   &em::CloudPolicySettings::autofilladdressenabled},
  {key::kAutofillCreditCardEnabled,
   &em::CloudPolicySettings::has_autofillcreditcardenabled,
   &em::CloudPolicySettings::autofillcreditcardenabled},
  {key::kContextualSearchEnabled,
   &em::CloudPolicySettings::has_contextualsearchenabled,
   &em::CloudPolicySettings::contextualsearchenabled},
  {key::kDataCompressionProxyEnabled,
   &em::CloudPolicySettings::has_datacompressionproxyenabled,
   &em::CloudPolicySettings::datacompressionproxyenabled},
  {key::kDefaultSearchProviderEnabled,
   &em::CloudPolicySettings::has_defaultsearchproviderenabled,
   &em::CloudPolicySettings::defaultsearchproviderenabled},
  {key::kDisableAuthNegotiateCnameLookup,
   &em::CloudPolicySettings::has_disableauthnegotiatecnamelookup,
   &em::CloudPolicySettings::disableauthnegotiatecnamelookup},
  {key::kDisableSafeBrowsingProceedAnyway,
   &em::CloudPolicySettings::has_disablesafebrowsingproceedanyway,
   &em::CloudPolicySettings::disablesafebrowsingproceedanyway},
  {key::kEditBookmarksEnabled,
   &em::CloudPolicySettings::has_editbookmarksenabled,
   &em::CloudPolicySettings::editbookmarksenabled},
  {key::kEnableMediaRouter,
   &em::CloudPolicySettings::has_enablemediarouter,
   &em::CloudPolicySettings::enablemediarouter},
  {key::kEnterpriseHardwarePlatformAPIEnabled,
   &em::CloudPolicySettings::has_enterprisehardwareplatformapienabled,
   &em::CloudPolicySettings::enterprisehardwareplatformapienabled},
  {key::kForceBrowserSignin,
   &em::CloudPolicySettings::has_forcebrowsersignin,
   &em::CloudPolicySettings::forcebrowsersignin},
  {key::kForceGoogleSafeSearch,
   &em::CloudPolicySettings::has_forcegooglesafesearch,
   &em::CloudPolicySettings::forcegooglesafesearch},
  {key::kForceSafeSearch,
   &em::CloudPolicySettings::has_forcesafesearch,
   &em::CloudPolicySettings::forcesafesearch},
  {key::kForceYouTubeSafetyMode,
   &em::CloudPolicySettings::has_forceyoutubesafetymode,
   &em::CloudPolicySettings::forceyoutubesafetymode},
  {key::kIncognitoEnabled,
   &em::CloudPolicySettings::has_incognitoenabled,
   &em::CloudPolicySettings::incognitoenabled},
  {key::kJavascriptEnabled,
   &em::CloudPolicySettings::has_javascriptenabled,
   &em::CloudPolicySettings::javascriptenabled},
  {key::kNTPContentSuggestionsEnabled,
   &em::CloudPolicySettings::has_ntpcontentsuggestionsenabled,
   &em::CloudPolicySettings::ntpcontentsuggestionsenabled},
  {key::kNtlmV2Enabled,
   &em::CloudPolicySettings::has_ntlmv2enabled,
   &em::CloudPolicySettings::ntlmv2enabled},
  {key::kPasswordLeakDetectionEnabled,
   &em::CloudPolicySettings::has_passwordleakdetectionenabled,
   &em::CloudPolicySettings::passwordleakdetectionenabled},
  {key::kPasswordManagerEnabled,
   &em::CloudPolicySettings::has_passwordmanagerenabled,
   &em::CloudPolicySettings::passwordmanagerenabled},
  {key::kPaymentMethodQueryEnabled,
   &em::CloudPolicySettings::has_paymentmethodqueryenabled,
   &em::CloudPolicySettings::paymentmethodqueryenabled},
  {key::kPrintingEnabled,
   &em::CloudPolicySettings::has_printingenabled,
   &em::CloudPolicySettings::printingenabled},
  {key::kSSLErrorOverrideAllowed,
   &em::CloudPolicySettings::has_sslerroroverrideallowed,
   &em::CloudPolicySettings::sslerroroverrideallowed},
  {key::kSafeBrowsingEnabled,
   &em::CloudPolicySettings::has_safebrowsingenabled,
   &em::CloudPolicySettings::safebrowsingenabled},
  {key::kSavingBrowserHistoryDisabled,
   &em::CloudPolicySettings::has_savingbrowserhistorydisabled,
   &em::CloudPolicySettings::savingbrowserhistorydisabled},
  {key::kSearchSuggestEnabled,
   &em::CloudPolicySettings::has_searchsuggestenabled,
   &em::CloudPolicySettings::searchsuggestenabled},
  {key::kSharedClipboardEnabled,
   &em::CloudPolicySettings::has_sharedclipboardenabled,
   &em::CloudPolicySettings::sharedclipboardenabled},
  {key::kSigninAllowed,
   &em::CloudPolicySettings::has_signinallowed,
   &em::CloudPolicySettings::signinallowed},
  {key::kSitePerProcessAndroid,
   &em::CloudPolicySettings::has_siteperprocessandroid,
   &em::CloudPolicySettings::siteperprocessandroid},
  {key::kTLS13HardeningForLocalAnchorsEnabled,
   &em::CloudPolicySettings::has_tls13hardeningforlocalanchorsenabled,
   &em::CloudPolicySettings::tls13hardeningforlocalanchorsenabled},
  {key::kTranslateEnabled,
   &em::CloudPolicySettings::has_translateenabled,
   &em::CloudPolicySettings::translateenabled},
  {key::kUrlKeyedAnonymizedDataCollectionEnabled,
   &em::CloudPolicySettings::has_urlkeyedanonymizeddatacollectionenabled,
   &em::CloudPolicySettings::urlkeyedanonymizeddatacollectionenabled},
  {key::kWebComponentsV0Enabled,
   &em::CloudPolicySettings::has_webcomponentsv0enabled,
   &em::CloudPolicySettings::webcomponentsv0enabled},
  {nullptr, nullptr, nullptr},
};

const StringPolicyAccess kStringPolicyAccess[] = {
  {key::kAllowedDomainsForApps,
   &em::CloudPolicySettings::has_alloweddomainsforapps,
   &em::CloudPolicySettings::alloweddomainsforapps,
   StringPolicyType::STRING},
  {key::kAuthAndroidNegotiateAccountType,
   &em::CloudPolicySettings::has_authandroidnegotiateaccounttype,
   &em::CloudPolicySettings::authandroidnegotiateaccounttype,
   StringPolicyType::STRING},
  {key::kAuthNegotiateDelegateWhitelist,
   &em::CloudPolicySettings::has_authnegotiatedelegatewhitelist,
   &em::CloudPolicySettings::authnegotiatedelegatewhitelist,
   StringPolicyType::STRING},
  {key::kAuthSchemes,
   &em::CloudPolicySettings::has_authschemes,
   &em::CloudPolicySettings::authschemes,
   StringPolicyType::STRING},
  {key::kAuthServerWhitelist,
   &em::CloudPolicySettings::has_authserverwhitelist,
   &em::CloudPolicySettings::authserverwhitelist,
   StringPolicyType::STRING},
  {key::kDefaultSearchProviderIconURL,
   &em::CloudPolicySettings::has_defaultsearchprovidericonurl,
   &em::CloudPolicySettings::defaultsearchprovidericonurl,
   StringPolicyType::STRING},
  {key::kDefaultSearchProviderImageURL,
   &em::CloudPolicySettings::has_defaultsearchproviderimageurl,
   &em::CloudPolicySettings::defaultsearchproviderimageurl,
   StringPolicyType::STRING},
  {key::kDefaultSearchProviderImageURLPostParams,
   &em::CloudPolicySettings::has_defaultsearchproviderimageurlpostparams,
   &em::CloudPolicySettings::defaultsearchproviderimageurlpostparams,
   StringPolicyType::STRING},
  {key::kDefaultSearchProviderKeyword,
   &em::CloudPolicySettings::has_defaultsearchproviderkeyword,
   &em::CloudPolicySettings::defaultsearchproviderkeyword,
   StringPolicyType::STRING},
  {key::kDefaultSearchProviderName,
   &em::CloudPolicySettings::has_defaultsearchprovidername,
   &em::CloudPolicySettings::defaultsearchprovidername,
   StringPolicyType::STRING},
  {key::kDefaultSearchProviderNewTabURL,
   &em::CloudPolicySettings::has_defaultsearchprovidernewtaburl,
   &em::CloudPolicySettings::defaultsearchprovidernewtaburl,
   StringPolicyType::STRING},
  {key::kDefaultSearchProviderSearchURL,
   &em::CloudPolicySettings::has_defaultsearchprovidersearchurl,
   &em::CloudPolicySettings::defaultsearchprovidersearchurl,
   StringPolicyType::STRING},
  {key::kDefaultSearchProviderSearchURLPostParams,
   &em::CloudPolicySettings::has_defaultsearchprovidersearchurlpostparams,
   &em::CloudPolicySettings::defaultsearchprovidersearchurlpostparams,
   StringPolicyType::STRING},
  {key::kDefaultSearchProviderSuggestURL,
   &em::CloudPolicySettings::has_defaultsearchprovidersuggesturl,
   &em::CloudPolicySettings::defaultsearchprovidersuggesturl,
   StringPolicyType::STRING},
  {key::kDefaultSearchProviderSuggestURLPostParams,
   &em::CloudPolicySettings::has_defaultsearchprovidersuggesturlpostparams,
   &em::CloudPolicySettings::defaultsearchprovidersuggesturlpostparams,
   StringPolicyType::STRING},
  {key::kHomepageLocation,
   &em::CloudPolicySettings::has_homepagelocation,
   &em::CloudPolicySettings::homepagelocation,
   StringPolicyType::STRING},
  {key::kIsolateOriginsAndroid,
   &em::CloudPolicySettings::has_isolateoriginsandroid,
   &em::CloudPolicySettings::isolateoriginsandroid,
   StringPolicyType::STRING},
  {key::kManagedBookmarks,
   &em::CloudPolicySettings::has_managedbookmarks,
   &em::CloudPolicySettings::managedbookmarks,
   StringPolicyType::JSON},
  {key::kProxyBypassList,
   &em::CloudPolicySettings::has_proxybypasslist,
   &em::CloudPolicySettings::proxybypasslist,
   StringPolicyType::STRING},
  {key::kProxyMode,
   &em::CloudPolicySettings::has_proxymode,
   &em::CloudPolicySettings::proxymode,
   StringPolicyType::STRING},
  {key::kProxyPacUrl,
   &em::CloudPolicySettings::has_proxypacurl,
   &em::CloudPolicySettings::proxypacurl,
   StringPolicyType::STRING},
  {key::kProxyServer,
   &em::CloudPolicySettings::has_proxyserver,
   &em::CloudPolicySettings::proxyserver,
   StringPolicyType::STRING},
  {key::kProxySettings,
   &em::CloudPolicySettings::has_proxysettings,
   &em::CloudPolicySettings::proxysettings,
   StringPolicyType::JSON},
  {key::kSSLVersionMin,
   &em::CloudPolicySettings::has_sslversionmin,
   &em::CloudPolicySettings::sslversionmin,
   StringPolicyType::STRING},
  {key::kVariationsRestrictParameter,
   &em::CloudPolicySettings::has_variationsrestrictparameter,
   &em::CloudPolicySettings::variationsrestrictparameter,
   StringPolicyType::STRING},
  {key::kWebRtcUdpPortRange,
   &em::CloudPolicySettings::has_webrtcudpportrange,
   &em::CloudPolicySettings::webrtcudpportrange,
   StringPolicyType::STRING},
  {key::kWebUsbAllowDevicesForUrls,
   &em::CloudPolicySettings::has_webusballowdevicesforurls,
   &em::CloudPolicySettings::webusballowdevicesforurls,
   StringPolicyType::JSON},
  {nullptr, nullptr, nullptr},
};

const StringListPolicyAccess kStringListPolicyAccess[] = {
  {key::kCertificateTransparencyEnforcementDisabledForCas,
   &em::CloudPolicySettings::has_certificatetransparencyenforcementdisabledforcas,
   &em::CloudPolicySettings::certificatetransparencyenforcementdisabledforcas},
  {key::kCertificateTransparencyEnforcementDisabledForLegacyCas,
   &em::CloudPolicySettings::has_certificatetransparencyenforcementdisabledforlegacycas,
   &em::CloudPolicySettings::certificatetransparencyenforcementdisabledforlegacycas},
  {key::kCertificateTransparencyEnforcementDisabledForUrls,
   &em::CloudPolicySettings::has_certificatetransparencyenforcementdisabledforurls,
   &em::CloudPolicySettings::certificatetransparencyenforcementdisabledforurls},
  {key::kCoalesceH2ConnectionsWithClientCertificatesForHosts,
   &em::CloudPolicySettings::has_coalesceh2connectionswithclientcertificatesforhosts,
   &em::CloudPolicySettings::coalesceh2connectionswithclientcertificatesforhosts},
  {key::kCookiesAllowedForUrls,
   &em::CloudPolicySettings::has_cookiesallowedforurls,
   &em::CloudPolicySettings::cookiesallowedforurls},
  {key::kCookiesBlockedForUrls,
   &em::CloudPolicySettings::has_cookiesblockedforurls,
   &em::CloudPolicySettings::cookiesblockedforurls},
  {key::kCookiesSessionOnlyForUrls,
   &em::CloudPolicySettings::has_cookiessessiononlyforurls,
   &em::CloudPolicySettings::cookiessessiononlyforurls},
  {key::kDefaultSearchProviderAlternateURLs,
   &em::CloudPolicySettings::has_defaultsearchprovideralternateurls,
   &em::CloudPolicySettings::defaultsearchprovideralternateurls},
  {key::kDefaultSearchProviderEncodings,
   &em::CloudPolicySettings::has_defaultsearchproviderencodings,
   &em::CloudPolicySettings::defaultsearchproviderencodings},
  {key::kEnableDeprecatedWebPlatformFeatures,
   &em::CloudPolicySettings::has_enabledeprecatedwebplatformfeatures,
   &em::CloudPolicySettings::enabledeprecatedwebplatformfeatures},
  {key::kHSTSPolicyBypassList,
   &em::CloudPolicySettings::has_hstspolicybypasslist,
   &em::CloudPolicySettings::hstspolicybypasslist},
  {key::kJavaScriptAllowedForUrls,
   &em::CloudPolicySettings::has_javascriptallowedforurls,
   &em::CloudPolicySettings::javascriptallowedforurls},
  {key::kJavaScriptBlockedForUrls,
   &em::CloudPolicySettings::has_javascriptblockedforurls,
   &em::CloudPolicySettings::javascriptblockedforurls},
  {key::kLegacySameSiteCookieBehaviorEnabledForDomainList,
   &em::CloudPolicySettings::has_legacysamesitecookiebehaviorenabledfordomainlist,
   &em::CloudPolicySettings::legacysamesitecookiebehaviorenabledfordomainlist},
  {key::kOverrideSecurityRestrictionsOnInsecureOrigin,
   &em::CloudPolicySettings::has_overridesecurityrestrictionsoninsecureorigin,
   &em::CloudPolicySettings::overridesecurityrestrictionsoninsecureorigin},
  {key::kPopupsAllowedForUrls,
   &em::CloudPolicySettings::has_popupsallowedforurls,
   &em::CloudPolicySettings::popupsallowedforurls},
  {key::kPopupsBlockedForUrls,
   &em::CloudPolicySettings::has_popupsblockedforurls,
   &em::CloudPolicySettings::popupsblockedforurls},
  {key::kRestrictAccountsToPatterns,
   &em::CloudPolicySettings::has_restrictaccountstopatterns,
   &em::CloudPolicySettings::restrictaccountstopatterns},
  {key::kSyncTypesListDisabled,
   &em::CloudPolicySettings::has_synctypeslistdisabled,
   &em::CloudPolicySettings::synctypeslistdisabled},
  {key::kURLBlacklist,
   &em::CloudPolicySettings::has_urlblacklist,
   &em::CloudPolicySettings::urlblacklist},
  {key::kURLWhitelist,
   &em::CloudPolicySettings::has_urlwhitelist,
   &em::CloudPolicySettings::urlwhitelist},
  {key::kWebUsbAskForUrls,
   &em::CloudPolicySettings::has_webusbaskforurls,
   &em::CloudPolicySettings::webusbaskforurls},
  {key::kWebUsbBlockedForUrls,
   &em::CloudPolicySettings::has_webusbblockedforurls,
   &em::CloudPolicySettings::webusbblockedforurls},
  {nullptr, nullptr, nullptr},
};


}  // namespace policy
