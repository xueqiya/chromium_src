// Copyright 2014 The Chromium Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.


// This file is autogenerated by
//     base/android/jni_generator/jni_generator.py
// For
//     org/chromium/components/spellcheck/SpellCheckerSessionBridge

#ifndef org_chromium_components_spellcheck_SpellCheckerSessionBridge_JNI
#define org_chromium_components_spellcheck_SpellCheckerSessionBridge_JNI

#include <jni.h>

#include "../../../../../../../../base/android/jni_generator/jni_generator_helper.h"


// Step 1: Forward declarations.

JNI_REGISTRATION_EXPORT extern const char
    kClassPath_org_chromium_components_spellcheck_SpellCheckerSessionBridge[];
const char kClassPath_org_chromium_components_spellcheck_SpellCheckerSessionBridge[] =
    "org/chromium/components/spellcheck/SpellCheckerSessionBridge";
// Leaking this jclass as we cannot use LazyInstance from some threads.
JNI_REGISTRATION_EXPORT std::atomic<jclass>
    g_org_chromium_components_spellcheck_SpellCheckerSessionBridge_clazz(nullptr);
#ifndef org_chromium_components_spellcheck_SpellCheckerSessionBridge_clazz_defined
#define org_chromium_components_spellcheck_SpellCheckerSessionBridge_clazz_defined
inline jclass org_chromium_components_spellcheck_SpellCheckerSessionBridge_clazz(JNIEnv* env) {
  return base::android::LazyGetClass(env,
      kClassPath_org_chromium_components_spellcheck_SpellCheckerSessionBridge,
      &g_org_chromium_components_spellcheck_SpellCheckerSessionBridge_clazz);
}
#endif


// Step 2: Constants (optional).


// Step 3: Method stubs.
JNI_GENERATOR_EXPORT void Java_J_N_M3JV9hBl(
    JNIEnv* env,
    jclass jcaller,
    jlong nativeSpellCheckerSessionBridge,
    jobject caller,
    jintArray offsets,
    jintArray lengths,
    jobjectArray suggestions) {
  SpellCheckerSessionBridge* native =
      reinterpret_cast<SpellCheckerSessionBridge*>(nativeSpellCheckerSessionBridge);
  CHECK_NATIVE_PTR(env, jcaller, native, "ProcessSpellCheckResults");
  return native->ProcessSpellCheckResults(env, base::android::JavaParamRef<jobject>(env, caller),
      base::android::JavaParamRef<jintArray>(env, offsets),
      base::android::JavaParamRef<jintArray>(env, lengths),
      base::android::JavaParamRef<jobjectArray>(env, suggestions));
}


static std::atomic<jmethodID>
    g_org_chromium_components_spellcheck_SpellCheckerSessionBridge_create(nullptr);
static base::android::ScopedJavaLocalRef<jobject> Java_SpellCheckerSessionBridge_create(JNIEnv* env,
    jlong nativeSpellCheckerSessionBridge) {
  jclass clazz = org_chromium_components_spellcheck_SpellCheckerSessionBridge_clazz(env);
  CHECK_CLAZZ(env, clazz,
      org_chromium_components_spellcheck_SpellCheckerSessionBridge_clazz(env), NULL);

  jni_generator::JniJavaCallContextChecked call_context;
  call_context.Init<
      base::android::MethodID::TYPE_STATIC>(
          env,
          clazz,
          "create",
          "(J)Lorg/chromium/components/spellcheck/SpellCheckerSessionBridge;",
          &g_org_chromium_components_spellcheck_SpellCheckerSessionBridge_create);

  jobject ret =
      env->CallStaticObjectMethod(clazz,
          call_context.base.method_id, nativeSpellCheckerSessionBridge);
  return base::android::ScopedJavaLocalRef<jobject>(env, ret);
}

static std::atomic<jmethodID>
    g_org_chromium_components_spellcheck_SpellCheckerSessionBridge_disconnect(nullptr);
static void Java_SpellCheckerSessionBridge_disconnect(JNIEnv* env, const
    base::android::JavaRef<jobject>& obj) {
  jclass clazz = org_chromium_components_spellcheck_SpellCheckerSessionBridge_clazz(env);
  CHECK_CLAZZ(env, obj.obj(),
      org_chromium_components_spellcheck_SpellCheckerSessionBridge_clazz(env));

  jni_generator::JniJavaCallContextChecked call_context;
  call_context.Init<
      base::android::MethodID::TYPE_INSTANCE>(
          env,
          clazz,
          "disconnect",
          "()V",
          &g_org_chromium_components_spellcheck_SpellCheckerSessionBridge_disconnect);

     env->CallVoidMethod(obj.obj(),
          call_context.base.method_id);
}

static std::atomic<jmethodID>
    g_org_chromium_components_spellcheck_SpellCheckerSessionBridge_requestTextCheck(nullptr);
static void Java_SpellCheckerSessionBridge_requestTextCheck(JNIEnv* env, const
    base::android::JavaRef<jobject>& obj, const base::android::JavaRef<jstring>& text) {
  jclass clazz = org_chromium_components_spellcheck_SpellCheckerSessionBridge_clazz(env);
  CHECK_CLAZZ(env, obj.obj(),
      org_chromium_components_spellcheck_SpellCheckerSessionBridge_clazz(env));

  jni_generator::JniJavaCallContextChecked call_context;
  call_context.Init<
      base::android::MethodID::TYPE_INSTANCE>(
          env,
          clazz,
          "requestTextCheck",
          "(Ljava/lang/String;)V",
          &g_org_chromium_components_spellcheck_SpellCheckerSessionBridge_requestTextCheck);

     env->CallVoidMethod(obj.obj(),
          call_context.base.method_id, text.obj());
}

// Step 4: Generated test functions (optional).


#endif  // org_chromium_components_spellcheck_SpellCheckerSessionBridge_JNI
