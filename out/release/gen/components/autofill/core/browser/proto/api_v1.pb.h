// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: api_v1.proto

#ifndef GOOGLE_PROTOBUF_INCLUDED_api_5fv1_2eproto
#define GOOGLE_PROTOBUF_INCLUDED_api_5fv1_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3009000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3009000 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata_lite.h>
#include <google/protobuf/message_lite.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include "password_requirements.pb.h"
#include "server.pb.h"
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_api_5fv1_2eproto
PROTOBUF_NAMESPACE_OPEN
namespace internal {
class AnyMetadata;
}  // namespace internal
PROTOBUF_NAMESPACE_CLOSE

// Internal implementation detail -- do not use these members.
struct TableStruct_api_5fv1_2eproto {
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTableField entries[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::AuxillaryParseTableField aux[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTable schema[9]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::FieldMetadata field_metadata[];
  static const ::PROTOBUF_NAMESPACE_ID::internal::SerializationTable serialization_table[];
  static const ::PROTOBUF_NAMESPACE_ID::uint32 offsets[];
};
namespace autofill {
class AutofillPageQueryRequest;
class AutofillPageQueryRequestDefaultTypeInternal;
extern AutofillPageQueryRequestDefaultTypeInternal _AutofillPageQueryRequest_default_instance_;
class AutofillPageQueryRequest_Form;
class AutofillPageQueryRequest_FormDefaultTypeInternal;
extern AutofillPageQueryRequest_FormDefaultTypeInternal _AutofillPageQueryRequest_Form_default_instance_;
class AutofillPageQueryRequest_Form_Field;
class AutofillPageQueryRequest_Form_FieldDefaultTypeInternal;
extern AutofillPageQueryRequest_Form_FieldDefaultTypeInternal _AutofillPageQueryRequest_Form_Field_default_instance_;
class AutofillPageResourceQueryRequest;
class AutofillPageResourceQueryRequestDefaultTypeInternal;
extern AutofillPageResourceQueryRequestDefaultTypeInternal _AutofillPageResourceQueryRequest_default_instance_;
class AutofillQueryResponse;
class AutofillQueryResponseDefaultTypeInternal;
extern AutofillQueryResponseDefaultTypeInternal _AutofillQueryResponse_default_instance_;
class AutofillQueryResponse_FormSuggestion;
class AutofillQueryResponse_FormSuggestionDefaultTypeInternal;
extern AutofillQueryResponse_FormSuggestionDefaultTypeInternal _AutofillQueryResponse_FormSuggestion_default_instance_;
class AutofillQueryResponse_FormSuggestion_FieldSuggestion;
class AutofillQueryResponse_FormSuggestion_FieldSuggestionDefaultTypeInternal;
extern AutofillQueryResponse_FormSuggestion_FieldSuggestionDefaultTypeInternal _AutofillQueryResponse_FormSuggestion_FieldSuggestion_default_instance_;
class AutofillQueryResponse_FormSuggestion_FieldSuggestion_FieldPrediction;
class AutofillQueryResponse_FormSuggestion_FieldSuggestion_FieldPredictionDefaultTypeInternal;
extern AutofillQueryResponse_FormSuggestion_FieldSuggestion_FieldPredictionDefaultTypeInternal _AutofillQueryResponse_FormSuggestion_FieldSuggestion_FieldPrediction_default_instance_;
class AutofillUploadRequest;
class AutofillUploadRequestDefaultTypeInternal;
extern AutofillUploadRequestDefaultTypeInternal _AutofillUploadRequest_default_instance_;
}  // namespace autofill
PROTOBUF_NAMESPACE_OPEN
template<> ::autofill::AutofillPageQueryRequest* Arena::CreateMaybeMessage<::autofill::AutofillPageQueryRequest>(Arena*);
template<> ::autofill::AutofillPageQueryRequest_Form* Arena::CreateMaybeMessage<::autofill::AutofillPageQueryRequest_Form>(Arena*);
template<> ::autofill::AutofillPageQueryRequest_Form_Field* Arena::CreateMaybeMessage<::autofill::AutofillPageQueryRequest_Form_Field>(Arena*);
template<> ::autofill::AutofillPageResourceQueryRequest* Arena::CreateMaybeMessage<::autofill::AutofillPageResourceQueryRequest>(Arena*);
template<> ::autofill::AutofillQueryResponse* Arena::CreateMaybeMessage<::autofill::AutofillQueryResponse>(Arena*);
template<> ::autofill::AutofillQueryResponse_FormSuggestion* Arena::CreateMaybeMessage<::autofill::AutofillQueryResponse_FormSuggestion>(Arena*);
template<> ::autofill::AutofillQueryResponse_FormSuggestion_FieldSuggestion* Arena::CreateMaybeMessage<::autofill::AutofillQueryResponse_FormSuggestion_FieldSuggestion>(Arena*);
template<> ::autofill::AutofillQueryResponse_FormSuggestion_FieldSuggestion_FieldPrediction* Arena::CreateMaybeMessage<::autofill::AutofillQueryResponse_FormSuggestion_FieldSuggestion_FieldPrediction>(Arena*);
template<> ::autofill::AutofillUploadRequest* Arena::CreateMaybeMessage<::autofill::AutofillUploadRequest>(Arena*);
PROTOBUF_NAMESPACE_CLOSE
namespace autofill {

// ===================================================================

class AutofillPageResourceQueryRequest :
    public ::PROTOBUF_NAMESPACE_ID::MessageLite /* @@protoc_insertion_point(class_definition:autofill.AutofillPageResourceQueryRequest) */ {
 public:
  AutofillPageResourceQueryRequest();
  virtual ~AutofillPageResourceQueryRequest();

  AutofillPageResourceQueryRequest(const AutofillPageResourceQueryRequest& from);
  AutofillPageResourceQueryRequest(AutofillPageResourceQueryRequest&& from) noexcept
    : AutofillPageResourceQueryRequest() {
    *this = ::std::move(from);
  }

  inline AutofillPageResourceQueryRequest& operator=(const AutofillPageResourceQueryRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline AutofillPageResourceQueryRequest& operator=(AutofillPageResourceQueryRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const std::string& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline std::string* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const AutofillPageResourceQueryRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const AutofillPageResourceQueryRequest* internal_default_instance() {
    return reinterpret_cast<const AutofillPageResourceQueryRequest*>(
               &_AutofillPageResourceQueryRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(AutofillPageResourceQueryRequest& a, AutofillPageResourceQueryRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(AutofillPageResourceQueryRequest* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline AutofillPageResourceQueryRequest* New() const final {
    return CreateMaybeMessage<AutofillPageResourceQueryRequest>(nullptr);
  }

  AutofillPageResourceQueryRequest* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<AutofillPageResourceQueryRequest>(arena);
  }
  void CheckTypeAndMergeFrom(const ::PROTOBUF_NAMESPACE_ID::MessageLite& from)
    final;
  void CopyFrom(const AutofillPageResourceQueryRequest& from);
  void MergeFrom(const AutofillPageResourceQueryRequest& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  #else
  bool MergePartialFromCodedStream(
      ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const final;
  void DiscardUnknownFields();
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(AutofillPageResourceQueryRequest* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "autofill.AutofillPageResourceQueryRequest";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  std::string GetTypeName() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kSerializedRequestFieldNumber = 1,
  };
  // optional string serialized_request = 1;
  bool has_serialized_request() const;
  void clear_serialized_request();
  const std::string& serialized_request() const;
  void set_serialized_request(const std::string& value);
  void set_serialized_request(std::string&& value);
  void set_serialized_request(const char* value);
  void set_serialized_request(const char* value, size_t size);
  std::string* mutable_serialized_request();
  std::string* release_serialized_request();
  void set_allocated_serialized_request(std::string* serialized_request);

  // @@protoc_insertion_point(class_scope:autofill.AutofillPageResourceQueryRequest)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArenaLite _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr serialized_request_;
  friend struct ::TableStruct_api_5fv1_2eproto;
};
// -------------------------------------------------------------------

class AutofillPageQueryRequest_Form_Field :
    public ::PROTOBUF_NAMESPACE_ID::MessageLite /* @@protoc_insertion_point(class_definition:autofill.AutofillPageQueryRequest.Form.Field) */ {
 public:
  AutofillPageQueryRequest_Form_Field();
  virtual ~AutofillPageQueryRequest_Form_Field();

  AutofillPageQueryRequest_Form_Field(const AutofillPageQueryRequest_Form_Field& from);
  AutofillPageQueryRequest_Form_Field(AutofillPageQueryRequest_Form_Field&& from) noexcept
    : AutofillPageQueryRequest_Form_Field() {
    *this = ::std::move(from);
  }

  inline AutofillPageQueryRequest_Form_Field& operator=(const AutofillPageQueryRequest_Form_Field& from) {
    CopyFrom(from);
    return *this;
  }
  inline AutofillPageQueryRequest_Form_Field& operator=(AutofillPageQueryRequest_Form_Field&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const std::string& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline std::string* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const AutofillPageQueryRequest_Form_Field& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const AutofillPageQueryRequest_Form_Field* internal_default_instance() {
    return reinterpret_cast<const AutofillPageQueryRequest_Form_Field*>(
               &_AutofillPageQueryRequest_Form_Field_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  friend void swap(AutofillPageQueryRequest_Form_Field& a, AutofillPageQueryRequest_Form_Field& b) {
    a.Swap(&b);
  }
  inline void Swap(AutofillPageQueryRequest_Form_Field* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline AutofillPageQueryRequest_Form_Field* New() const final {
    return CreateMaybeMessage<AutofillPageQueryRequest_Form_Field>(nullptr);
  }

  AutofillPageQueryRequest_Form_Field* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<AutofillPageQueryRequest_Form_Field>(arena);
  }
  void CheckTypeAndMergeFrom(const ::PROTOBUF_NAMESPACE_ID::MessageLite& from)
    final;
  void CopyFrom(const AutofillPageQueryRequest_Form_Field& from);
  void MergeFrom(const AutofillPageQueryRequest_Form_Field& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  #else
  bool MergePartialFromCodedStream(
      ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const final;
  void DiscardUnknownFields();
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(AutofillPageQueryRequest_Form_Field* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "autofill.AutofillPageQueryRequest.Form.Field";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  std::string GetTypeName() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kNameFieldNumber = 2,
    kControlTypeFieldNumber = 3,
    kMetadataFieldNumber = 4,
    kSignatureFieldNumber = 1,
  };
  // optional string name = 2;
  bool has_name() const;
  void clear_name();
  const std::string& name() const;
  void set_name(const std::string& value);
  void set_name(std::string&& value);
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  std::string* mutable_name();
  std::string* release_name();
  void set_allocated_name(std::string* name);

  // optional string control_type = 3;
  bool has_control_type() const;
  void clear_control_type();
  const std::string& control_type() const;
  void set_control_type(const std::string& value);
  void set_control_type(std::string&& value);
  void set_control_type(const char* value);
  void set_control_type(const char* value, size_t size);
  std::string* mutable_control_type();
  std::string* release_control_type();
  void set_allocated_control_type(std::string* control_type);

  // optional .autofill.AutofillRandomizedFieldMetadata metadata = 4;
  bool has_metadata() const;
  void clear_metadata();
  const ::autofill::AutofillRandomizedFieldMetadata& metadata() const;
  ::autofill::AutofillRandomizedFieldMetadata* release_metadata();
  ::autofill::AutofillRandomizedFieldMetadata* mutable_metadata();
  void set_allocated_metadata(::autofill::AutofillRandomizedFieldMetadata* metadata);

  // optional fixed32 signature = 1;
  bool has_signature() const;
  void clear_signature();
  ::PROTOBUF_NAMESPACE_ID::uint32 signature() const;
  void set_signature(::PROTOBUF_NAMESPACE_ID::uint32 value);

  // @@protoc_insertion_point(class_scope:autofill.AutofillPageQueryRequest.Form.Field)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArenaLite _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr name_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr control_type_;
  ::autofill::AutofillRandomizedFieldMetadata* metadata_;
  ::PROTOBUF_NAMESPACE_ID::uint32 signature_;
  friend struct ::TableStruct_api_5fv1_2eproto;
};
// -------------------------------------------------------------------

class AutofillPageQueryRequest_Form :
    public ::PROTOBUF_NAMESPACE_ID::MessageLite /* @@protoc_insertion_point(class_definition:autofill.AutofillPageQueryRequest.Form) */ {
 public:
  AutofillPageQueryRequest_Form();
  virtual ~AutofillPageQueryRequest_Form();

  AutofillPageQueryRequest_Form(const AutofillPageQueryRequest_Form& from);
  AutofillPageQueryRequest_Form(AutofillPageQueryRequest_Form&& from) noexcept
    : AutofillPageQueryRequest_Form() {
    *this = ::std::move(from);
  }

  inline AutofillPageQueryRequest_Form& operator=(const AutofillPageQueryRequest_Form& from) {
    CopyFrom(from);
    return *this;
  }
  inline AutofillPageQueryRequest_Form& operator=(AutofillPageQueryRequest_Form&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const std::string& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline std::string* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const AutofillPageQueryRequest_Form& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const AutofillPageQueryRequest_Form* internal_default_instance() {
    return reinterpret_cast<const AutofillPageQueryRequest_Form*>(
               &_AutofillPageQueryRequest_Form_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  friend void swap(AutofillPageQueryRequest_Form& a, AutofillPageQueryRequest_Form& b) {
    a.Swap(&b);
  }
  inline void Swap(AutofillPageQueryRequest_Form* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline AutofillPageQueryRequest_Form* New() const final {
    return CreateMaybeMessage<AutofillPageQueryRequest_Form>(nullptr);
  }

  AutofillPageQueryRequest_Form* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<AutofillPageQueryRequest_Form>(arena);
  }
  void CheckTypeAndMergeFrom(const ::PROTOBUF_NAMESPACE_ID::MessageLite& from)
    final;
  void CopyFrom(const AutofillPageQueryRequest_Form& from);
  void MergeFrom(const AutofillPageQueryRequest_Form& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  #else
  bool MergePartialFromCodedStream(
      ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const final;
  void DiscardUnknownFields();
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(AutofillPageQueryRequest_Form* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "autofill.AutofillPageQueryRequest.Form";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  std::string GetTypeName() const final;

  // nested types ----------------------------------------------------

  typedef AutofillPageQueryRequest_Form_Field Field;

  // accessors -------------------------------------------------------

  enum : int {
    kFieldsFieldNumber = 2,
    kMetadataFieldNumber = 3,
    kSignatureFieldNumber = 1,
  };
  // repeated .autofill.AutofillPageQueryRequest.Form.Field fields = 2;
  int fields_size() const;
  void clear_fields();
  ::autofill::AutofillPageQueryRequest_Form_Field* mutable_fields(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::autofill::AutofillPageQueryRequest_Form_Field >*
      mutable_fields();
  const ::autofill::AutofillPageQueryRequest_Form_Field& fields(int index) const;
  ::autofill::AutofillPageQueryRequest_Form_Field* add_fields();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::autofill::AutofillPageQueryRequest_Form_Field >&
      fields() const;

  // optional .autofill.AutofillRandomizedFormMetadata metadata = 3;
  bool has_metadata() const;
  void clear_metadata();
  const ::autofill::AutofillRandomizedFormMetadata& metadata() const;
  ::autofill::AutofillRandomizedFormMetadata* release_metadata();
  ::autofill::AutofillRandomizedFormMetadata* mutable_metadata();
  void set_allocated_metadata(::autofill::AutofillRandomizedFormMetadata* metadata);

  // optional fixed64 signature = 1;
  bool has_signature() const;
  void clear_signature();
  ::PROTOBUF_NAMESPACE_ID::uint64 signature() const;
  void set_signature(::PROTOBUF_NAMESPACE_ID::uint64 value);

  // @@protoc_insertion_point(class_scope:autofill.AutofillPageQueryRequest.Form)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArenaLite _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::autofill::AutofillPageQueryRequest_Form_Field > fields_;
  ::autofill::AutofillRandomizedFormMetadata* metadata_;
  ::PROTOBUF_NAMESPACE_ID::uint64 signature_;
  friend struct ::TableStruct_api_5fv1_2eproto;
};
// -------------------------------------------------------------------

class AutofillPageQueryRequest :
    public ::PROTOBUF_NAMESPACE_ID::MessageLite /* @@protoc_insertion_point(class_definition:autofill.AutofillPageQueryRequest) */ {
 public:
  AutofillPageQueryRequest();
  virtual ~AutofillPageQueryRequest();

  AutofillPageQueryRequest(const AutofillPageQueryRequest& from);
  AutofillPageQueryRequest(AutofillPageQueryRequest&& from) noexcept
    : AutofillPageQueryRequest() {
    *this = ::std::move(from);
  }

  inline AutofillPageQueryRequest& operator=(const AutofillPageQueryRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline AutofillPageQueryRequest& operator=(AutofillPageQueryRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const std::string& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline std::string* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const AutofillPageQueryRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const AutofillPageQueryRequest* internal_default_instance() {
    return reinterpret_cast<const AutofillPageQueryRequest*>(
               &_AutofillPageQueryRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    3;

  friend void swap(AutofillPageQueryRequest& a, AutofillPageQueryRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(AutofillPageQueryRequest* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline AutofillPageQueryRequest* New() const final {
    return CreateMaybeMessage<AutofillPageQueryRequest>(nullptr);
  }

  AutofillPageQueryRequest* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<AutofillPageQueryRequest>(arena);
  }
  void CheckTypeAndMergeFrom(const ::PROTOBUF_NAMESPACE_ID::MessageLite& from)
    final;
  void CopyFrom(const AutofillPageQueryRequest& from);
  void MergeFrom(const AutofillPageQueryRequest& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  #else
  bool MergePartialFromCodedStream(
      ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const final;
  void DiscardUnknownFields();
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(AutofillPageQueryRequest* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "autofill.AutofillPageQueryRequest";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  std::string GetTypeName() const final;

  // nested types ----------------------------------------------------

  typedef AutofillPageQueryRequest_Form Form;

  // accessors -------------------------------------------------------

  enum : int {
    kFormsFieldNumber = 2,
    kExperimentsFieldNumber = 3,
    kClientVersionFieldNumber = 1,
  };
  // repeated .autofill.AutofillPageQueryRequest.Form forms = 2;
  int forms_size() const;
  void clear_forms();
  ::autofill::AutofillPageQueryRequest_Form* mutable_forms(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::autofill::AutofillPageQueryRequest_Form >*
      mutable_forms();
  const ::autofill::AutofillPageQueryRequest_Form& forms(int index) const;
  ::autofill::AutofillPageQueryRequest_Form* add_forms();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::autofill::AutofillPageQueryRequest_Form >&
      forms() const;

  // repeated int64 experiments = 3;
  int experiments_size() const;
  void clear_experiments();
  ::PROTOBUF_NAMESPACE_ID::int64 experiments(int index) const;
  void set_experiments(int index, ::PROTOBUF_NAMESPACE_ID::int64 value);
  void add_experiments(::PROTOBUF_NAMESPACE_ID::int64 value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int64 >&
      experiments() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int64 >*
      mutable_experiments();

  // optional string client_version = 1 [deprecated = true];
  PROTOBUF_DEPRECATED bool has_client_version() const;
  PROTOBUF_DEPRECATED void clear_client_version();
  PROTOBUF_DEPRECATED const std::string& client_version() const;
  PROTOBUF_DEPRECATED void set_client_version(const std::string& value);
  PROTOBUF_DEPRECATED void set_client_version(std::string&& value);
  PROTOBUF_DEPRECATED void set_client_version(const char* value);
  PROTOBUF_DEPRECATED void set_client_version(const char* value, size_t size);
  PROTOBUF_DEPRECATED std::string* mutable_client_version();
  PROTOBUF_DEPRECATED std::string* release_client_version();
  PROTOBUF_DEPRECATED void set_allocated_client_version(std::string* client_version);

  // @@protoc_insertion_point(class_scope:autofill.AutofillPageQueryRequest)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArenaLite _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::autofill::AutofillPageQueryRequest_Form > forms_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int64 > experiments_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr client_version_;
  friend struct ::TableStruct_api_5fv1_2eproto;
};
// -------------------------------------------------------------------

class AutofillQueryResponse_FormSuggestion_FieldSuggestion_FieldPrediction :
    public ::PROTOBUF_NAMESPACE_ID::MessageLite /* @@protoc_insertion_point(class_definition:autofill.AutofillQueryResponse.FormSuggestion.FieldSuggestion.FieldPrediction) */ {
 public:
  AutofillQueryResponse_FormSuggestion_FieldSuggestion_FieldPrediction();
  virtual ~AutofillQueryResponse_FormSuggestion_FieldSuggestion_FieldPrediction();

  AutofillQueryResponse_FormSuggestion_FieldSuggestion_FieldPrediction(const AutofillQueryResponse_FormSuggestion_FieldSuggestion_FieldPrediction& from);
  AutofillQueryResponse_FormSuggestion_FieldSuggestion_FieldPrediction(AutofillQueryResponse_FormSuggestion_FieldSuggestion_FieldPrediction&& from) noexcept
    : AutofillQueryResponse_FormSuggestion_FieldSuggestion_FieldPrediction() {
    *this = ::std::move(from);
  }

  inline AutofillQueryResponse_FormSuggestion_FieldSuggestion_FieldPrediction& operator=(const AutofillQueryResponse_FormSuggestion_FieldSuggestion_FieldPrediction& from) {
    CopyFrom(from);
    return *this;
  }
  inline AutofillQueryResponse_FormSuggestion_FieldSuggestion_FieldPrediction& operator=(AutofillQueryResponse_FormSuggestion_FieldSuggestion_FieldPrediction&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const std::string& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline std::string* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const AutofillQueryResponse_FormSuggestion_FieldSuggestion_FieldPrediction& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const AutofillQueryResponse_FormSuggestion_FieldSuggestion_FieldPrediction* internal_default_instance() {
    return reinterpret_cast<const AutofillQueryResponse_FormSuggestion_FieldSuggestion_FieldPrediction*>(
               &_AutofillQueryResponse_FormSuggestion_FieldSuggestion_FieldPrediction_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    4;

  friend void swap(AutofillQueryResponse_FormSuggestion_FieldSuggestion_FieldPrediction& a, AutofillQueryResponse_FormSuggestion_FieldSuggestion_FieldPrediction& b) {
    a.Swap(&b);
  }
  inline void Swap(AutofillQueryResponse_FormSuggestion_FieldSuggestion_FieldPrediction* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline AutofillQueryResponse_FormSuggestion_FieldSuggestion_FieldPrediction* New() const final {
    return CreateMaybeMessage<AutofillQueryResponse_FormSuggestion_FieldSuggestion_FieldPrediction>(nullptr);
  }

  AutofillQueryResponse_FormSuggestion_FieldSuggestion_FieldPrediction* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<AutofillQueryResponse_FormSuggestion_FieldSuggestion_FieldPrediction>(arena);
  }
  void CheckTypeAndMergeFrom(const ::PROTOBUF_NAMESPACE_ID::MessageLite& from)
    final;
  void CopyFrom(const AutofillQueryResponse_FormSuggestion_FieldSuggestion_FieldPrediction& from);
  void MergeFrom(const AutofillQueryResponse_FormSuggestion_FieldSuggestion_FieldPrediction& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  #else
  bool MergePartialFromCodedStream(
      ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const final;
  void DiscardUnknownFields();
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(AutofillQueryResponse_FormSuggestion_FieldSuggestion_FieldPrediction* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "autofill.AutofillQueryResponse.FormSuggestion.FieldSuggestion.FieldPrediction";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  std::string GetTypeName() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kTypeFieldNumber = 1,
  };
  // optional int32 type = 1;
  bool has_type() const;
  void clear_type();
  ::PROTOBUF_NAMESPACE_ID::int32 type() const;
  void set_type(::PROTOBUF_NAMESPACE_ID::int32 value);

  // @@protoc_insertion_point(class_scope:autofill.AutofillQueryResponse.FormSuggestion.FieldSuggestion.FieldPrediction)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArenaLite _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::int32 type_;
  friend struct ::TableStruct_api_5fv1_2eproto;
};
// -------------------------------------------------------------------

class AutofillQueryResponse_FormSuggestion_FieldSuggestion :
    public ::PROTOBUF_NAMESPACE_ID::MessageLite /* @@protoc_insertion_point(class_definition:autofill.AutofillQueryResponse.FormSuggestion.FieldSuggestion) */ {
 public:
  AutofillQueryResponse_FormSuggestion_FieldSuggestion();
  virtual ~AutofillQueryResponse_FormSuggestion_FieldSuggestion();

  AutofillQueryResponse_FormSuggestion_FieldSuggestion(const AutofillQueryResponse_FormSuggestion_FieldSuggestion& from);
  AutofillQueryResponse_FormSuggestion_FieldSuggestion(AutofillQueryResponse_FormSuggestion_FieldSuggestion&& from) noexcept
    : AutofillQueryResponse_FormSuggestion_FieldSuggestion() {
    *this = ::std::move(from);
  }

  inline AutofillQueryResponse_FormSuggestion_FieldSuggestion& operator=(const AutofillQueryResponse_FormSuggestion_FieldSuggestion& from) {
    CopyFrom(from);
    return *this;
  }
  inline AutofillQueryResponse_FormSuggestion_FieldSuggestion& operator=(AutofillQueryResponse_FormSuggestion_FieldSuggestion&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const std::string& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline std::string* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const AutofillQueryResponse_FormSuggestion_FieldSuggestion& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const AutofillQueryResponse_FormSuggestion_FieldSuggestion* internal_default_instance() {
    return reinterpret_cast<const AutofillQueryResponse_FormSuggestion_FieldSuggestion*>(
               &_AutofillQueryResponse_FormSuggestion_FieldSuggestion_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    5;

  friend void swap(AutofillQueryResponse_FormSuggestion_FieldSuggestion& a, AutofillQueryResponse_FormSuggestion_FieldSuggestion& b) {
    a.Swap(&b);
  }
  inline void Swap(AutofillQueryResponse_FormSuggestion_FieldSuggestion* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline AutofillQueryResponse_FormSuggestion_FieldSuggestion* New() const final {
    return CreateMaybeMessage<AutofillQueryResponse_FormSuggestion_FieldSuggestion>(nullptr);
  }

  AutofillQueryResponse_FormSuggestion_FieldSuggestion* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<AutofillQueryResponse_FormSuggestion_FieldSuggestion>(arena);
  }
  void CheckTypeAndMergeFrom(const ::PROTOBUF_NAMESPACE_ID::MessageLite& from)
    final;
  void CopyFrom(const AutofillQueryResponse_FormSuggestion_FieldSuggestion& from);
  void MergeFrom(const AutofillQueryResponse_FormSuggestion_FieldSuggestion& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  #else
  bool MergePartialFromCodedStream(
      ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const final;
  void DiscardUnknownFields();
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(AutofillQueryResponse_FormSuggestion_FieldSuggestion* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "autofill.AutofillQueryResponse.FormSuggestion.FieldSuggestion";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  std::string GetTypeName() const final;

  // nested types ----------------------------------------------------

  typedef AutofillQueryResponse_FormSuggestion_FieldSuggestion_FieldPrediction FieldPrediction;

  // accessors -------------------------------------------------------

  enum : int {
    kPredictionsFieldNumber = 3,
    kPasswordRequirementsFieldNumber = 5,
    kFieldSignatureFieldNumber = 1,
    kPrimaryTypePredictionFieldNumber = 2,
    kMayUsePrefilledPlaceholderFieldNumber = 4,
  };
  // repeated .autofill.AutofillQueryResponse.FormSuggestion.FieldSuggestion.FieldPrediction predictions = 3;
  int predictions_size() const;
  void clear_predictions();
  ::autofill::AutofillQueryResponse_FormSuggestion_FieldSuggestion_FieldPrediction* mutable_predictions(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::autofill::AutofillQueryResponse_FormSuggestion_FieldSuggestion_FieldPrediction >*
      mutable_predictions();
  const ::autofill::AutofillQueryResponse_FormSuggestion_FieldSuggestion_FieldPrediction& predictions(int index) const;
  ::autofill::AutofillQueryResponse_FormSuggestion_FieldSuggestion_FieldPrediction* add_predictions();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::autofill::AutofillQueryResponse_FormSuggestion_FieldSuggestion_FieldPrediction >&
      predictions() const;

  // optional .autofill.PasswordRequirementsSpec password_requirements = 5;
  bool has_password_requirements() const;
  void clear_password_requirements();
  const ::autofill::PasswordRequirementsSpec& password_requirements() const;
  ::autofill::PasswordRequirementsSpec* release_password_requirements();
  ::autofill::PasswordRequirementsSpec* mutable_password_requirements();
  void set_allocated_password_requirements(::autofill::PasswordRequirementsSpec* password_requirements);

  // optional fixed32 field_signature = 1;
  bool has_field_signature() const;
  void clear_field_signature();
  ::PROTOBUF_NAMESPACE_ID::uint32 field_signature() const;
  void set_field_signature(::PROTOBUF_NAMESPACE_ID::uint32 value);

  // optional int32 primary_type_prediction = 2;
  bool has_primary_type_prediction() const;
  void clear_primary_type_prediction();
  ::PROTOBUF_NAMESPACE_ID::int32 primary_type_prediction() const;
  void set_primary_type_prediction(::PROTOBUF_NAMESPACE_ID::int32 value);

  // optional bool may_use_prefilled_placeholder = 4;
  bool has_may_use_prefilled_placeholder() const;
  void clear_may_use_prefilled_placeholder();
  bool may_use_prefilled_placeholder() const;
  void set_may_use_prefilled_placeholder(bool value);

  // @@protoc_insertion_point(class_scope:autofill.AutofillQueryResponse.FormSuggestion.FieldSuggestion)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArenaLite _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::autofill::AutofillQueryResponse_FormSuggestion_FieldSuggestion_FieldPrediction > predictions_;
  ::autofill::PasswordRequirementsSpec* password_requirements_;
  ::PROTOBUF_NAMESPACE_ID::uint32 field_signature_;
  ::PROTOBUF_NAMESPACE_ID::int32 primary_type_prediction_;
  bool may_use_prefilled_placeholder_;
  friend struct ::TableStruct_api_5fv1_2eproto;
};
// -------------------------------------------------------------------

class AutofillQueryResponse_FormSuggestion :
    public ::PROTOBUF_NAMESPACE_ID::MessageLite /* @@protoc_insertion_point(class_definition:autofill.AutofillQueryResponse.FormSuggestion) */ {
 public:
  AutofillQueryResponse_FormSuggestion();
  virtual ~AutofillQueryResponse_FormSuggestion();

  AutofillQueryResponse_FormSuggestion(const AutofillQueryResponse_FormSuggestion& from);
  AutofillQueryResponse_FormSuggestion(AutofillQueryResponse_FormSuggestion&& from) noexcept
    : AutofillQueryResponse_FormSuggestion() {
    *this = ::std::move(from);
  }

  inline AutofillQueryResponse_FormSuggestion& operator=(const AutofillQueryResponse_FormSuggestion& from) {
    CopyFrom(from);
    return *this;
  }
  inline AutofillQueryResponse_FormSuggestion& operator=(AutofillQueryResponse_FormSuggestion&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const std::string& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline std::string* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const AutofillQueryResponse_FormSuggestion& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const AutofillQueryResponse_FormSuggestion* internal_default_instance() {
    return reinterpret_cast<const AutofillQueryResponse_FormSuggestion*>(
               &_AutofillQueryResponse_FormSuggestion_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    6;

  friend void swap(AutofillQueryResponse_FormSuggestion& a, AutofillQueryResponse_FormSuggestion& b) {
    a.Swap(&b);
  }
  inline void Swap(AutofillQueryResponse_FormSuggestion* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline AutofillQueryResponse_FormSuggestion* New() const final {
    return CreateMaybeMessage<AutofillQueryResponse_FormSuggestion>(nullptr);
  }

  AutofillQueryResponse_FormSuggestion* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<AutofillQueryResponse_FormSuggestion>(arena);
  }
  void CheckTypeAndMergeFrom(const ::PROTOBUF_NAMESPACE_ID::MessageLite& from)
    final;
  void CopyFrom(const AutofillQueryResponse_FormSuggestion& from);
  void MergeFrom(const AutofillQueryResponse_FormSuggestion& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  #else
  bool MergePartialFromCodedStream(
      ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const final;
  void DiscardUnknownFields();
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(AutofillQueryResponse_FormSuggestion* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "autofill.AutofillQueryResponse.FormSuggestion";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  std::string GetTypeName() const final;

  // nested types ----------------------------------------------------

  typedef AutofillQueryResponse_FormSuggestion_FieldSuggestion FieldSuggestion;

  // accessors -------------------------------------------------------

  enum : int {
    kFieldSuggestionsFieldNumber = 1,
  };
  // repeated .autofill.AutofillQueryResponse.FormSuggestion.FieldSuggestion field_suggestions = 1;
  int field_suggestions_size() const;
  void clear_field_suggestions();
  ::autofill::AutofillQueryResponse_FormSuggestion_FieldSuggestion* mutable_field_suggestions(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::autofill::AutofillQueryResponse_FormSuggestion_FieldSuggestion >*
      mutable_field_suggestions();
  const ::autofill::AutofillQueryResponse_FormSuggestion_FieldSuggestion& field_suggestions(int index) const;
  ::autofill::AutofillQueryResponse_FormSuggestion_FieldSuggestion* add_field_suggestions();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::autofill::AutofillQueryResponse_FormSuggestion_FieldSuggestion >&
      field_suggestions() const;

  // @@protoc_insertion_point(class_scope:autofill.AutofillQueryResponse.FormSuggestion)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArenaLite _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::autofill::AutofillQueryResponse_FormSuggestion_FieldSuggestion > field_suggestions_;
  friend struct ::TableStruct_api_5fv1_2eproto;
};
// -------------------------------------------------------------------

class AutofillQueryResponse :
    public ::PROTOBUF_NAMESPACE_ID::MessageLite /* @@protoc_insertion_point(class_definition:autofill.AutofillQueryResponse) */ {
 public:
  AutofillQueryResponse();
  virtual ~AutofillQueryResponse();

  AutofillQueryResponse(const AutofillQueryResponse& from);
  AutofillQueryResponse(AutofillQueryResponse&& from) noexcept
    : AutofillQueryResponse() {
    *this = ::std::move(from);
  }

  inline AutofillQueryResponse& operator=(const AutofillQueryResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline AutofillQueryResponse& operator=(AutofillQueryResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const std::string& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline std::string* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const AutofillQueryResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const AutofillQueryResponse* internal_default_instance() {
    return reinterpret_cast<const AutofillQueryResponse*>(
               &_AutofillQueryResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    7;

  friend void swap(AutofillQueryResponse& a, AutofillQueryResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(AutofillQueryResponse* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline AutofillQueryResponse* New() const final {
    return CreateMaybeMessage<AutofillQueryResponse>(nullptr);
  }

  AutofillQueryResponse* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<AutofillQueryResponse>(arena);
  }
  void CheckTypeAndMergeFrom(const ::PROTOBUF_NAMESPACE_ID::MessageLite& from)
    final;
  void CopyFrom(const AutofillQueryResponse& from);
  void MergeFrom(const AutofillQueryResponse& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  #else
  bool MergePartialFromCodedStream(
      ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const final;
  void DiscardUnknownFields();
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(AutofillQueryResponse* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "autofill.AutofillQueryResponse";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  std::string GetTypeName() const final;

  // nested types ----------------------------------------------------

  typedef AutofillQueryResponse_FormSuggestion FormSuggestion;

  // accessors -------------------------------------------------------

  enum : int {
    kFormSuggestionsFieldNumber = 1,
  };
  // repeated .autofill.AutofillQueryResponse.FormSuggestion form_suggestions = 1;
  int form_suggestions_size() const;
  void clear_form_suggestions();
  ::autofill::AutofillQueryResponse_FormSuggestion* mutable_form_suggestions(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::autofill::AutofillQueryResponse_FormSuggestion >*
      mutable_form_suggestions();
  const ::autofill::AutofillQueryResponse_FormSuggestion& form_suggestions(int index) const;
  ::autofill::AutofillQueryResponse_FormSuggestion* add_form_suggestions();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::autofill::AutofillQueryResponse_FormSuggestion >&
      form_suggestions() const;

  // @@protoc_insertion_point(class_scope:autofill.AutofillQueryResponse)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArenaLite _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::autofill::AutofillQueryResponse_FormSuggestion > form_suggestions_;
  friend struct ::TableStruct_api_5fv1_2eproto;
};
// -------------------------------------------------------------------

class AutofillUploadRequest :
    public ::PROTOBUF_NAMESPACE_ID::MessageLite /* @@protoc_insertion_point(class_definition:autofill.AutofillUploadRequest) */ {
 public:
  AutofillUploadRequest();
  virtual ~AutofillUploadRequest();

  AutofillUploadRequest(const AutofillUploadRequest& from);
  AutofillUploadRequest(AutofillUploadRequest&& from) noexcept
    : AutofillUploadRequest() {
    *this = ::std::move(from);
  }

  inline AutofillUploadRequest& operator=(const AutofillUploadRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline AutofillUploadRequest& operator=(AutofillUploadRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const std::string& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline std::string* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const AutofillUploadRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const AutofillUploadRequest* internal_default_instance() {
    return reinterpret_cast<const AutofillUploadRequest*>(
               &_AutofillUploadRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    8;

  friend void swap(AutofillUploadRequest& a, AutofillUploadRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(AutofillUploadRequest* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline AutofillUploadRequest* New() const final {
    return CreateMaybeMessage<AutofillUploadRequest>(nullptr);
  }

  AutofillUploadRequest* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<AutofillUploadRequest>(arena);
  }
  void CheckTypeAndMergeFrom(const ::PROTOBUF_NAMESPACE_ID::MessageLite& from)
    final;
  void CopyFrom(const AutofillUploadRequest& from);
  void MergeFrom(const AutofillUploadRequest& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  #else
  bool MergePartialFromCodedStream(
      ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const final;
  void DiscardUnknownFields();
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(AutofillUploadRequest* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "autofill.AutofillUploadRequest";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  std::string GetTypeName() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kUploadFieldNumber = 1,
  };
  // optional .autofill.AutofillUploadContents upload = 1;
  bool has_upload() const;
  void clear_upload();
  const ::autofill::AutofillUploadContents& upload() const;
  ::autofill::AutofillUploadContents* release_upload();
  ::autofill::AutofillUploadContents* mutable_upload();
  void set_allocated_upload(::autofill::AutofillUploadContents* upload);

  // @@protoc_insertion_point(class_scope:autofill.AutofillUploadRequest)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArenaLite _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::autofill::AutofillUploadContents* upload_;
  friend struct ::TableStruct_api_5fv1_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// AutofillPageResourceQueryRequest

// optional string serialized_request = 1;
inline bool AutofillPageResourceQueryRequest::has_serialized_request() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void AutofillPageResourceQueryRequest::clear_serialized_request() {
  serialized_request_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000001u;
}
inline const std::string& AutofillPageResourceQueryRequest::serialized_request() const {
  // @@protoc_insertion_point(field_get:autofill.AutofillPageResourceQueryRequest.serialized_request)
  return serialized_request_.GetNoArena();
}
inline void AutofillPageResourceQueryRequest::set_serialized_request(const std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  serialized_request_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:autofill.AutofillPageResourceQueryRequest.serialized_request)
}
inline void AutofillPageResourceQueryRequest::set_serialized_request(std::string&& value) {
  _has_bits_[0] |= 0x00000001u;
  serialized_request_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:autofill.AutofillPageResourceQueryRequest.serialized_request)
}
inline void AutofillPageResourceQueryRequest::set_serialized_request(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000001u;
  serialized_request_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:autofill.AutofillPageResourceQueryRequest.serialized_request)
}
inline void AutofillPageResourceQueryRequest::set_serialized_request(const char* value, size_t size) {
  _has_bits_[0] |= 0x00000001u;
  serialized_request_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:autofill.AutofillPageResourceQueryRequest.serialized_request)
}
inline std::string* AutofillPageResourceQueryRequest::mutable_serialized_request() {
  _has_bits_[0] |= 0x00000001u;
  // @@protoc_insertion_point(field_mutable:autofill.AutofillPageResourceQueryRequest.serialized_request)
  return serialized_request_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* AutofillPageResourceQueryRequest::release_serialized_request() {
  // @@protoc_insertion_point(field_release:autofill.AutofillPageResourceQueryRequest.serialized_request)
  if (!has_serialized_request()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  return serialized_request_.ReleaseNonDefaultNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void AutofillPageResourceQueryRequest::set_allocated_serialized_request(std::string* serialized_request) {
  if (serialized_request != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  serialized_request_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), serialized_request);
  // @@protoc_insertion_point(field_set_allocated:autofill.AutofillPageResourceQueryRequest.serialized_request)
}

// -------------------------------------------------------------------

// AutofillPageQueryRequest_Form_Field

// optional fixed32 signature = 1;
inline bool AutofillPageQueryRequest_Form_Field::has_signature() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void AutofillPageQueryRequest_Form_Field::clear_signature() {
  signature_ = 0u;
  _has_bits_[0] &= ~0x00000008u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 AutofillPageQueryRequest_Form_Field::signature() const {
  // @@protoc_insertion_point(field_get:autofill.AutofillPageQueryRequest.Form.Field.signature)
  return signature_;
}
inline void AutofillPageQueryRequest_Form_Field::set_signature(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000008u;
  signature_ = value;
  // @@protoc_insertion_point(field_set:autofill.AutofillPageQueryRequest.Form.Field.signature)
}

// optional string name = 2;
inline bool AutofillPageQueryRequest_Form_Field::has_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void AutofillPageQueryRequest_Form_Field::clear_name() {
  name_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000001u;
}
inline const std::string& AutofillPageQueryRequest_Form_Field::name() const {
  // @@protoc_insertion_point(field_get:autofill.AutofillPageQueryRequest.Form.Field.name)
  return name_.GetNoArena();
}
inline void AutofillPageQueryRequest_Form_Field::set_name(const std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  name_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:autofill.AutofillPageQueryRequest.Form.Field.name)
}
inline void AutofillPageQueryRequest_Form_Field::set_name(std::string&& value) {
  _has_bits_[0] |= 0x00000001u;
  name_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:autofill.AutofillPageQueryRequest.Form.Field.name)
}
inline void AutofillPageQueryRequest_Form_Field::set_name(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000001u;
  name_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:autofill.AutofillPageQueryRequest.Form.Field.name)
}
inline void AutofillPageQueryRequest_Form_Field::set_name(const char* value, size_t size) {
  _has_bits_[0] |= 0x00000001u;
  name_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:autofill.AutofillPageQueryRequest.Form.Field.name)
}
inline std::string* AutofillPageQueryRequest_Form_Field::mutable_name() {
  _has_bits_[0] |= 0x00000001u;
  // @@protoc_insertion_point(field_mutable:autofill.AutofillPageQueryRequest.Form.Field.name)
  return name_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* AutofillPageQueryRequest_Form_Field::release_name() {
  // @@protoc_insertion_point(field_release:autofill.AutofillPageQueryRequest.Form.Field.name)
  if (!has_name()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  return name_.ReleaseNonDefaultNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void AutofillPageQueryRequest_Form_Field::set_allocated_name(std::string* name) {
  if (name != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  name_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:autofill.AutofillPageQueryRequest.Form.Field.name)
}

// optional string control_type = 3;
inline bool AutofillPageQueryRequest_Form_Field::has_control_type() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void AutofillPageQueryRequest_Form_Field::clear_control_type() {
  control_type_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000002u;
}
inline const std::string& AutofillPageQueryRequest_Form_Field::control_type() const {
  // @@protoc_insertion_point(field_get:autofill.AutofillPageQueryRequest.Form.Field.control_type)
  return control_type_.GetNoArena();
}
inline void AutofillPageQueryRequest_Form_Field::set_control_type(const std::string& value) {
  _has_bits_[0] |= 0x00000002u;
  control_type_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:autofill.AutofillPageQueryRequest.Form.Field.control_type)
}
inline void AutofillPageQueryRequest_Form_Field::set_control_type(std::string&& value) {
  _has_bits_[0] |= 0x00000002u;
  control_type_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:autofill.AutofillPageQueryRequest.Form.Field.control_type)
}
inline void AutofillPageQueryRequest_Form_Field::set_control_type(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000002u;
  control_type_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:autofill.AutofillPageQueryRequest.Form.Field.control_type)
}
inline void AutofillPageQueryRequest_Form_Field::set_control_type(const char* value, size_t size) {
  _has_bits_[0] |= 0x00000002u;
  control_type_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:autofill.AutofillPageQueryRequest.Form.Field.control_type)
}
inline std::string* AutofillPageQueryRequest_Form_Field::mutable_control_type() {
  _has_bits_[0] |= 0x00000002u;
  // @@protoc_insertion_point(field_mutable:autofill.AutofillPageQueryRequest.Form.Field.control_type)
  return control_type_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* AutofillPageQueryRequest_Form_Field::release_control_type() {
  // @@protoc_insertion_point(field_release:autofill.AutofillPageQueryRequest.Form.Field.control_type)
  if (!has_control_type()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000002u;
  return control_type_.ReleaseNonDefaultNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void AutofillPageQueryRequest_Form_Field::set_allocated_control_type(std::string* control_type) {
  if (control_type != nullptr) {
    _has_bits_[0] |= 0x00000002u;
  } else {
    _has_bits_[0] &= ~0x00000002u;
  }
  control_type_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), control_type);
  // @@protoc_insertion_point(field_set_allocated:autofill.AutofillPageQueryRequest.Form.Field.control_type)
}

// optional .autofill.AutofillRandomizedFieldMetadata metadata = 4;
inline bool AutofillPageQueryRequest_Form_Field::has_metadata() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline const ::autofill::AutofillRandomizedFieldMetadata& AutofillPageQueryRequest_Form_Field::metadata() const {
  const ::autofill::AutofillRandomizedFieldMetadata* p = metadata_;
  // @@protoc_insertion_point(field_get:autofill.AutofillPageQueryRequest.Form.Field.metadata)
  return p != nullptr ? *p : *reinterpret_cast<const ::autofill::AutofillRandomizedFieldMetadata*>(
      &::autofill::_AutofillRandomizedFieldMetadata_default_instance_);
}
inline ::autofill::AutofillRandomizedFieldMetadata* AutofillPageQueryRequest_Form_Field::release_metadata() {
  // @@protoc_insertion_point(field_release:autofill.AutofillPageQueryRequest.Form.Field.metadata)
  _has_bits_[0] &= ~0x00000004u;
  ::autofill::AutofillRandomizedFieldMetadata* temp = metadata_;
  metadata_ = nullptr;
  return temp;
}
inline ::autofill::AutofillRandomizedFieldMetadata* AutofillPageQueryRequest_Form_Field::mutable_metadata() {
  _has_bits_[0] |= 0x00000004u;
  if (metadata_ == nullptr) {
    auto* p = CreateMaybeMessage<::autofill::AutofillRandomizedFieldMetadata>(GetArenaNoVirtual());
    metadata_ = p;
  }
  // @@protoc_insertion_point(field_mutable:autofill.AutofillPageQueryRequest.Form.Field.metadata)
  return metadata_;
}
inline void AutofillPageQueryRequest_Form_Field::set_allocated_metadata(::autofill::AutofillRandomizedFieldMetadata* metadata) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(metadata_);
  }
  if (metadata) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      metadata = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, metadata, submessage_arena);
    }
    _has_bits_[0] |= 0x00000004u;
  } else {
    _has_bits_[0] &= ~0x00000004u;
  }
  metadata_ = metadata;
  // @@protoc_insertion_point(field_set_allocated:autofill.AutofillPageQueryRequest.Form.Field.metadata)
}

// -------------------------------------------------------------------

// AutofillPageQueryRequest_Form

// optional fixed64 signature = 1;
inline bool AutofillPageQueryRequest_Form::has_signature() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void AutofillPageQueryRequest_Form::clear_signature() {
  signature_ = PROTOBUF_ULONGLONG(0);
  _has_bits_[0] &= ~0x00000002u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 AutofillPageQueryRequest_Form::signature() const {
  // @@protoc_insertion_point(field_get:autofill.AutofillPageQueryRequest.Form.signature)
  return signature_;
}
inline void AutofillPageQueryRequest_Form::set_signature(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _has_bits_[0] |= 0x00000002u;
  signature_ = value;
  // @@protoc_insertion_point(field_set:autofill.AutofillPageQueryRequest.Form.signature)
}

// repeated .autofill.AutofillPageQueryRequest.Form.Field fields = 2;
inline int AutofillPageQueryRequest_Form::fields_size() const {
  return fields_.size();
}
inline void AutofillPageQueryRequest_Form::clear_fields() {
  fields_.Clear();
}
inline ::autofill::AutofillPageQueryRequest_Form_Field* AutofillPageQueryRequest_Form::mutable_fields(int index) {
  // @@protoc_insertion_point(field_mutable:autofill.AutofillPageQueryRequest.Form.fields)
  return fields_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::autofill::AutofillPageQueryRequest_Form_Field >*
AutofillPageQueryRequest_Form::mutable_fields() {
  // @@protoc_insertion_point(field_mutable_list:autofill.AutofillPageQueryRequest.Form.fields)
  return &fields_;
}
inline const ::autofill::AutofillPageQueryRequest_Form_Field& AutofillPageQueryRequest_Form::fields(int index) const {
  // @@protoc_insertion_point(field_get:autofill.AutofillPageQueryRequest.Form.fields)
  return fields_.Get(index);
}
inline ::autofill::AutofillPageQueryRequest_Form_Field* AutofillPageQueryRequest_Form::add_fields() {
  // @@protoc_insertion_point(field_add:autofill.AutofillPageQueryRequest.Form.fields)
  return fields_.Add();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::autofill::AutofillPageQueryRequest_Form_Field >&
AutofillPageQueryRequest_Form::fields() const {
  // @@protoc_insertion_point(field_list:autofill.AutofillPageQueryRequest.Form.fields)
  return fields_;
}

// optional .autofill.AutofillRandomizedFormMetadata metadata = 3;
inline bool AutofillPageQueryRequest_Form::has_metadata() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline const ::autofill::AutofillRandomizedFormMetadata& AutofillPageQueryRequest_Form::metadata() const {
  const ::autofill::AutofillRandomizedFormMetadata* p = metadata_;
  // @@protoc_insertion_point(field_get:autofill.AutofillPageQueryRequest.Form.metadata)
  return p != nullptr ? *p : *reinterpret_cast<const ::autofill::AutofillRandomizedFormMetadata*>(
      &::autofill::_AutofillRandomizedFormMetadata_default_instance_);
}
inline ::autofill::AutofillRandomizedFormMetadata* AutofillPageQueryRequest_Form::release_metadata() {
  // @@protoc_insertion_point(field_release:autofill.AutofillPageQueryRequest.Form.metadata)
  _has_bits_[0] &= ~0x00000001u;
  ::autofill::AutofillRandomizedFormMetadata* temp = metadata_;
  metadata_ = nullptr;
  return temp;
}
inline ::autofill::AutofillRandomizedFormMetadata* AutofillPageQueryRequest_Form::mutable_metadata() {
  _has_bits_[0] |= 0x00000001u;
  if (metadata_ == nullptr) {
    auto* p = CreateMaybeMessage<::autofill::AutofillRandomizedFormMetadata>(GetArenaNoVirtual());
    metadata_ = p;
  }
  // @@protoc_insertion_point(field_mutable:autofill.AutofillPageQueryRequest.Form.metadata)
  return metadata_;
}
inline void AutofillPageQueryRequest_Form::set_allocated_metadata(::autofill::AutofillRandomizedFormMetadata* metadata) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(metadata_);
  }
  if (metadata) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      metadata = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, metadata, submessage_arena);
    }
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  metadata_ = metadata;
  // @@protoc_insertion_point(field_set_allocated:autofill.AutofillPageQueryRequest.Form.metadata)
}

// -------------------------------------------------------------------

// AutofillPageQueryRequest

// optional string client_version = 1 [deprecated = true];
inline bool AutofillPageQueryRequest::has_client_version() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void AutofillPageQueryRequest::clear_client_version() {
  client_version_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000001u;
}
inline const std::string& AutofillPageQueryRequest::client_version() const {
  // @@protoc_insertion_point(field_get:autofill.AutofillPageQueryRequest.client_version)
  return client_version_.GetNoArena();
}
inline void AutofillPageQueryRequest::set_client_version(const std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  client_version_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:autofill.AutofillPageQueryRequest.client_version)
}
inline void AutofillPageQueryRequest::set_client_version(std::string&& value) {
  _has_bits_[0] |= 0x00000001u;
  client_version_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:autofill.AutofillPageQueryRequest.client_version)
}
inline void AutofillPageQueryRequest::set_client_version(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000001u;
  client_version_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:autofill.AutofillPageQueryRequest.client_version)
}
inline void AutofillPageQueryRequest::set_client_version(const char* value, size_t size) {
  _has_bits_[0] |= 0x00000001u;
  client_version_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:autofill.AutofillPageQueryRequest.client_version)
}
inline std::string* AutofillPageQueryRequest::mutable_client_version() {
  _has_bits_[0] |= 0x00000001u;
  // @@protoc_insertion_point(field_mutable:autofill.AutofillPageQueryRequest.client_version)
  return client_version_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* AutofillPageQueryRequest::release_client_version() {
  // @@protoc_insertion_point(field_release:autofill.AutofillPageQueryRequest.client_version)
  if (!has_client_version()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  return client_version_.ReleaseNonDefaultNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void AutofillPageQueryRequest::set_allocated_client_version(std::string* client_version) {
  if (client_version != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  client_version_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), client_version);
  // @@protoc_insertion_point(field_set_allocated:autofill.AutofillPageQueryRequest.client_version)
}

// repeated .autofill.AutofillPageQueryRequest.Form forms = 2;
inline int AutofillPageQueryRequest::forms_size() const {
  return forms_.size();
}
inline void AutofillPageQueryRequest::clear_forms() {
  forms_.Clear();
}
inline ::autofill::AutofillPageQueryRequest_Form* AutofillPageQueryRequest::mutable_forms(int index) {
  // @@protoc_insertion_point(field_mutable:autofill.AutofillPageQueryRequest.forms)
  return forms_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::autofill::AutofillPageQueryRequest_Form >*
AutofillPageQueryRequest::mutable_forms() {
  // @@protoc_insertion_point(field_mutable_list:autofill.AutofillPageQueryRequest.forms)
  return &forms_;
}
inline const ::autofill::AutofillPageQueryRequest_Form& AutofillPageQueryRequest::forms(int index) const {
  // @@protoc_insertion_point(field_get:autofill.AutofillPageQueryRequest.forms)
  return forms_.Get(index);
}
inline ::autofill::AutofillPageQueryRequest_Form* AutofillPageQueryRequest::add_forms() {
  // @@protoc_insertion_point(field_add:autofill.AutofillPageQueryRequest.forms)
  return forms_.Add();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::autofill::AutofillPageQueryRequest_Form >&
AutofillPageQueryRequest::forms() const {
  // @@protoc_insertion_point(field_list:autofill.AutofillPageQueryRequest.forms)
  return forms_;
}

// repeated int64 experiments = 3;
inline int AutofillPageQueryRequest::experiments_size() const {
  return experiments_.size();
}
inline void AutofillPageQueryRequest::clear_experiments() {
  experiments_.Clear();
}
inline ::PROTOBUF_NAMESPACE_ID::int64 AutofillPageQueryRequest::experiments(int index) const {
  // @@protoc_insertion_point(field_get:autofill.AutofillPageQueryRequest.experiments)
  return experiments_.Get(index);
}
inline void AutofillPageQueryRequest::set_experiments(int index, ::PROTOBUF_NAMESPACE_ID::int64 value) {
  experiments_.Set(index, value);
  // @@protoc_insertion_point(field_set:autofill.AutofillPageQueryRequest.experiments)
}
inline void AutofillPageQueryRequest::add_experiments(::PROTOBUF_NAMESPACE_ID::int64 value) {
  experiments_.Add(value);
  // @@protoc_insertion_point(field_add:autofill.AutofillPageQueryRequest.experiments)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int64 >&
AutofillPageQueryRequest::experiments() const {
  // @@protoc_insertion_point(field_list:autofill.AutofillPageQueryRequest.experiments)
  return experiments_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int64 >*
AutofillPageQueryRequest::mutable_experiments() {
  // @@protoc_insertion_point(field_mutable_list:autofill.AutofillPageQueryRequest.experiments)
  return &experiments_;
}

// -------------------------------------------------------------------

// AutofillQueryResponse_FormSuggestion_FieldSuggestion_FieldPrediction

// optional int32 type = 1;
inline bool AutofillQueryResponse_FormSuggestion_FieldSuggestion_FieldPrediction::has_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void AutofillQueryResponse_FormSuggestion_FieldSuggestion_FieldPrediction::clear_type() {
  type_ = 0;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 AutofillQueryResponse_FormSuggestion_FieldSuggestion_FieldPrediction::type() const {
  // @@protoc_insertion_point(field_get:autofill.AutofillQueryResponse.FormSuggestion.FieldSuggestion.FieldPrediction.type)
  return type_;
}
inline void AutofillQueryResponse_FormSuggestion_FieldSuggestion_FieldPrediction::set_type(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000001u;
  type_ = value;
  // @@protoc_insertion_point(field_set:autofill.AutofillQueryResponse.FormSuggestion.FieldSuggestion.FieldPrediction.type)
}

// -------------------------------------------------------------------

// AutofillQueryResponse_FormSuggestion_FieldSuggestion

// optional fixed32 field_signature = 1;
inline bool AutofillQueryResponse_FormSuggestion_FieldSuggestion::has_field_signature() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void AutofillQueryResponse_FormSuggestion_FieldSuggestion::clear_field_signature() {
  field_signature_ = 0u;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 AutofillQueryResponse_FormSuggestion_FieldSuggestion::field_signature() const {
  // @@protoc_insertion_point(field_get:autofill.AutofillQueryResponse.FormSuggestion.FieldSuggestion.field_signature)
  return field_signature_;
}
inline void AutofillQueryResponse_FormSuggestion_FieldSuggestion::set_field_signature(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000002u;
  field_signature_ = value;
  // @@protoc_insertion_point(field_set:autofill.AutofillQueryResponse.FormSuggestion.FieldSuggestion.field_signature)
}

// optional int32 primary_type_prediction = 2;
inline bool AutofillQueryResponse_FormSuggestion_FieldSuggestion::has_primary_type_prediction() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void AutofillQueryResponse_FormSuggestion_FieldSuggestion::clear_primary_type_prediction() {
  primary_type_prediction_ = 0;
  _has_bits_[0] &= ~0x00000004u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 AutofillQueryResponse_FormSuggestion_FieldSuggestion::primary_type_prediction() const {
  // @@protoc_insertion_point(field_get:autofill.AutofillQueryResponse.FormSuggestion.FieldSuggestion.primary_type_prediction)
  return primary_type_prediction_;
}
inline void AutofillQueryResponse_FormSuggestion_FieldSuggestion::set_primary_type_prediction(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000004u;
  primary_type_prediction_ = value;
  // @@protoc_insertion_point(field_set:autofill.AutofillQueryResponse.FormSuggestion.FieldSuggestion.primary_type_prediction)
}

// repeated .autofill.AutofillQueryResponse.FormSuggestion.FieldSuggestion.FieldPrediction predictions = 3;
inline int AutofillQueryResponse_FormSuggestion_FieldSuggestion::predictions_size() const {
  return predictions_.size();
}
inline void AutofillQueryResponse_FormSuggestion_FieldSuggestion::clear_predictions() {
  predictions_.Clear();
}
inline ::autofill::AutofillQueryResponse_FormSuggestion_FieldSuggestion_FieldPrediction* AutofillQueryResponse_FormSuggestion_FieldSuggestion::mutable_predictions(int index) {
  // @@protoc_insertion_point(field_mutable:autofill.AutofillQueryResponse.FormSuggestion.FieldSuggestion.predictions)
  return predictions_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::autofill::AutofillQueryResponse_FormSuggestion_FieldSuggestion_FieldPrediction >*
AutofillQueryResponse_FormSuggestion_FieldSuggestion::mutable_predictions() {
  // @@protoc_insertion_point(field_mutable_list:autofill.AutofillQueryResponse.FormSuggestion.FieldSuggestion.predictions)
  return &predictions_;
}
inline const ::autofill::AutofillQueryResponse_FormSuggestion_FieldSuggestion_FieldPrediction& AutofillQueryResponse_FormSuggestion_FieldSuggestion::predictions(int index) const {
  // @@protoc_insertion_point(field_get:autofill.AutofillQueryResponse.FormSuggestion.FieldSuggestion.predictions)
  return predictions_.Get(index);
}
inline ::autofill::AutofillQueryResponse_FormSuggestion_FieldSuggestion_FieldPrediction* AutofillQueryResponse_FormSuggestion_FieldSuggestion::add_predictions() {
  // @@protoc_insertion_point(field_add:autofill.AutofillQueryResponse.FormSuggestion.FieldSuggestion.predictions)
  return predictions_.Add();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::autofill::AutofillQueryResponse_FormSuggestion_FieldSuggestion_FieldPrediction >&
AutofillQueryResponse_FormSuggestion_FieldSuggestion::predictions() const {
  // @@protoc_insertion_point(field_list:autofill.AutofillQueryResponse.FormSuggestion.FieldSuggestion.predictions)
  return predictions_;
}

// optional bool may_use_prefilled_placeholder = 4;
inline bool AutofillQueryResponse_FormSuggestion_FieldSuggestion::has_may_use_prefilled_placeholder() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void AutofillQueryResponse_FormSuggestion_FieldSuggestion::clear_may_use_prefilled_placeholder() {
  may_use_prefilled_placeholder_ = false;
  _has_bits_[0] &= ~0x00000008u;
}
inline bool AutofillQueryResponse_FormSuggestion_FieldSuggestion::may_use_prefilled_placeholder() const {
  // @@protoc_insertion_point(field_get:autofill.AutofillQueryResponse.FormSuggestion.FieldSuggestion.may_use_prefilled_placeholder)
  return may_use_prefilled_placeholder_;
}
inline void AutofillQueryResponse_FormSuggestion_FieldSuggestion::set_may_use_prefilled_placeholder(bool value) {
  _has_bits_[0] |= 0x00000008u;
  may_use_prefilled_placeholder_ = value;
  // @@protoc_insertion_point(field_set:autofill.AutofillQueryResponse.FormSuggestion.FieldSuggestion.may_use_prefilled_placeholder)
}

// optional .autofill.PasswordRequirementsSpec password_requirements = 5;
inline bool AutofillQueryResponse_FormSuggestion_FieldSuggestion::has_password_requirements() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline const ::autofill::PasswordRequirementsSpec& AutofillQueryResponse_FormSuggestion_FieldSuggestion::password_requirements() const {
  const ::autofill::PasswordRequirementsSpec* p = password_requirements_;
  // @@protoc_insertion_point(field_get:autofill.AutofillQueryResponse.FormSuggestion.FieldSuggestion.password_requirements)
  return p != nullptr ? *p : *reinterpret_cast<const ::autofill::PasswordRequirementsSpec*>(
      &::autofill::_PasswordRequirementsSpec_default_instance_);
}
inline ::autofill::PasswordRequirementsSpec* AutofillQueryResponse_FormSuggestion_FieldSuggestion::release_password_requirements() {
  // @@protoc_insertion_point(field_release:autofill.AutofillQueryResponse.FormSuggestion.FieldSuggestion.password_requirements)
  _has_bits_[0] &= ~0x00000001u;
  ::autofill::PasswordRequirementsSpec* temp = password_requirements_;
  password_requirements_ = nullptr;
  return temp;
}
inline ::autofill::PasswordRequirementsSpec* AutofillQueryResponse_FormSuggestion_FieldSuggestion::mutable_password_requirements() {
  _has_bits_[0] |= 0x00000001u;
  if (password_requirements_ == nullptr) {
    auto* p = CreateMaybeMessage<::autofill::PasswordRequirementsSpec>(GetArenaNoVirtual());
    password_requirements_ = p;
  }
  // @@protoc_insertion_point(field_mutable:autofill.AutofillQueryResponse.FormSuggestion.FieldSuggestion.password_requirements)
  return password_requirements_;
}
inline void AutofillQueryResponse_FormSuggestion_FieldSuggestion::set_allocated_password_requirements(::autofill::PasswordRequirementsSpec* password_requirements) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(password_requirements_);
  }
  if (password_requirements) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      password_requirements = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, password_requirements, submessage_arena);
    }
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  password_requirements_ = password_requirements;
  // @@protoc_insertion_point(field_set_allocated:autofill.AutofillQueryResponse.FormSuggestion.FieldSuggestion.password_requirements)
}

// -------------------------------------------------------------------

// AutofillQueryResponse_FormSuggestion

// repeated .autofill.AutofillQueryResponse.FormSuggestion.FieldSuggestion field_suggestions = 1;
inline int AutofillQueryResponse_FormSuggestion::field_suggestions_size() const {
  return field_suggestions_.size();
}
inline void AutofillQueryResponse_FormSuggestion::clear_field_suggestions() {
  field_suggestions_.Clear();
}
inline ::autofill::AutofillQueryResponse_FormSuggestion_FieldSuggestion* AutofillQueryResponse_FormSuggestion::mutable_field_suggestions(int index) {
  // @@protoc_insertion_point(field_mutable:autofill.AutofillQueryResponse.FormSuggestion.field_suggestions)
  return field_suggestions_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::autofill::AutofillQueryResponse_FormSuggestion_FieldSuggestion >*
AutofillQueryResponse_FormSuggestion::mutable_field_suggestions() {
  // @@protoc_insertion_point(field_mutable_list:autofill.AutofillQueryResponse.FormSuggestion.field_suggestions)
  return &field_suggestions_;
}
inline const ::autofill::AutofillQueryResponse_FormSuggestion_FieldSuggestion& AutofillQueryResponse_FormSuggestion::field_suggestions(int index) const {
  // @@protoc_insertion_point(field_get:autofill.AutofillQueryResponse.FormSuggestion.field_suggestions)
  return field_suggestions_.Get(index);
}
inline ::autofill::AutofillQueryResponse_FormSuggestion_FieldSuggestion* AutofillQueryResponse_FormSuggestion::add_field_suggestions() {
  // @@protoc_insertion_point(field_add:autofill.AutofillQueryResponse.FormSuggestion.field_suggestions)
  return field_suggestions_.Add();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::autofill::AutofillQueryResponse_FormSuggestion_FieldSuggestion >&
AutofillQueryResponse_FormSuggestion::field_suggestions() const {
  // @@protoc_insertion_point(field_list:autofill.AutofillQueryResponse.FormSuggestion.field_suggestions)
  return field_suggestions_;
}

// -------------------------------------------------------------------

// AutofillQueryResponse

// repeated .autofill.AutofillQueryResponse.FormSuggestion form_suggestions = 1;
inline int AutofillQueryResponse::form_suggestions_size() const {
  return form_suggestions_.size();
}
inline void AutofillQueryResponse::clear_form_suggestions() {
  form_suggestions_.Clear();
}
inline ::autofill::AutofillQueryResponse_FormSuggestion* AutofillQueryResponse::mutable_form_suggestions(int index) {
  // @@protoc_insertion_point(field_mutable:autofill.AutofillQueryResponse.form_suggestions)
  return form_suggestions_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::autofill::AutofillQueryResponse_FormSuggestion >*
AutofillQueryResponse::mutable_form_suggestions() {
  // @@protoc_insertion_point(field_mutable_list:autofill.AutofillQueryResponse.form_suggestions)
  return &form_suggestions_;
}
inline const ::autofill::AutofillQueryResponse_FormSuggestion& AutofillQueryResponse::form_suggestions(int index) const {
  // @@protoc_insertion_point(field_get:autofill.AutofillQueryResponse.form_suggestions)
  return form_suggestions_.Get(index);
}
inline ::autofill::AutofillQueryResponse_FormSuggestion* AutofillQueryResponse::add_form_suggestions() {
  // @@protoc_insertion_point(field_add:autofill.AutofillQueryResponse.form_suggestions)
  return form_suggestions_.Add();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::autofill::AutofillQueryResponse_FormSuggestion >&
AutofillQueryResponse::form_suggestions() const {
  // @@protoc_insertion_point(field_list:autofill.AutofillQueryResponse.form_suggestions)
  return form_suggestions_;
}

// -------------------------------------------------------------------

// AutofillUploadRequest

// optional .autofill.AutofillUploadContents upload = 1;
inline bool AutofillUploadRequest::has_upload() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline const ::autofill::AutofillUploadContents& AutofillUploadRequest::upload() const {
  const ::autofill::AutofillUploadContents* p = upload_;
  // @@protoc_insertion_point(field_get:autofill.AutofillUploadRequest.upload)
  return p != nullptr ? *p : *reinterpret_cast<const ::autofill::AutofillUploadContents*>(
      &::autofill::_AutofillUploadContents_default_instance_);
}
inline ::autofill::AutofillUploadContents* AutofillUploadRequest::release_upload() {
  // @@protoc_insertion_point(field_release:autofill.AutofillUploadRequest.upload)
  _has_bits_[0] &= ~0x00000001u;
  ::autofill::AutofillUploadContents* temp = upload_;
  upload_ = nullptr;
  return temp;
}
inline ::autofill::AutofillUploadContents* AutofillUploadRequest::mutable_upload() {
  _has_bits_[0] |= 0x00000001u;
  if (upload_ == nullptr) {
    auto* p = CreateMaybeMessage<::autofill::AutofillUploadContents>(GetArenaNoVirtual());
    upload_ = p;
  }
  // @@protoc_insertion_point(field_mutable:autofill.AutofillUploadRequest.upload)
  return upload_;
}
inline void AutofillUploadRequest::set_allocated_upload(::autofill::AutofillUploadContents* upload) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(upload_);
  }
  if (upload) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      upload = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, upload, submessage_arena);
    }
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  upload_ = upload;
  // @@protoc_insertion_point(field_set_allocated:autofill.AutofillUploadRequest.upload)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace autofill

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // GOOGLE_PROTOBUF_INCLUDED_GOOGLE_PROTOBUF_INCLUDED_api_5fv1_2eproto
