// components/autofill/core/common/mojom/autofill_types.mojom-shared.h is auto generated by mojom_bindings_generator.py, do not edit

// Copyright 2016 The Chromium Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.

#ifndef COMPONENTS_AUTOFILL_CORE_COMMON_MOJOM_AUTOFILL_TYPES_MOJOM_SHARED_H_
#define COMPONENTS_AUTOFILL_CORE_COMMON_MOJOM_AUTOFILL_TYPES_MOJOM_SHARED_H_

#include <stdint.h>

#include <functional>
#include <ostream>
#include <type_traits>
#include <utility>

#include "base/compiler_specific.h"
#include "base/containers/flat_map.h"
#include "mojo/public/cpp/bindings/array_data_view.h"
#include "mojo/public/cpp/bindings/enum_traits.h"
#include "mojo/public/cpp/bindings/interface_data_view.h"
#include "mojo/public/cpp/bindings/lib/bindings_internal.h"
#include "mojo/public/cpp/bindings/lib/serialization.h"
#include "mojo/public/cpp/bindings/map_data_view.h"
#include "mojo/public/cpp/bindings/string_data_view.h"
#include "components/autofill/core/common/mojom/autofill_types.mojom-shared-internal.h"
#include "mojo/public/mojom/base/text_direction.mojom-shared.h"
#include "mojo/public/mojom/base/time.mojom-shared.h"
#include "mojo/public/mojom/base/string16.mojom-shared.h"
#include "ui/gfx/geometry/mojom/geometry.mojom-shared.h"
#include "url/mojom/origin.mojom-shared.h"
#include "url/mojom/url.mojom-shared.h"







namespace autofill {
namespace mojom {
class FormFieldDataDataView;

class ButtonTitleInfoDataView;

class FormDataDataView;

class FormFieldDataPredictionsDataView;

class FormDataPredictionsDataView;

class PasswordAndMetadataDataView;

class PasswordFormFillDataDataView;

class PasswordFormGenerationDataDataView;

class PasswordGenerationUIDataDataView;

class ValueElementPairDataView;

class PasswordFormDataView;

class ParsingResultDataView;



}  // namespace mojom
}  // namespace autofill

namespace mojo {
namespace internal {

template <>
struct MojomTypeTraits<::autofill::mojom::FormFieldDataDataView> {
  using Data = ::autofill::mojom::internal::FormFieldData_Data;
  using DataAsArrayElement = Pointer<Data>;
  static constexpr MojomTypeCategory category = MojomTypeCategory::kStruct;
};

template <>
struct MojomTypeTraits<::autofill::mojom::ButtonTitleInfoDataView> {
  using Data = ::autofill::mojom::internal::ButtonTitleInfo_Data;
  using DataAsArrayElement = Pointer<Data>;
  static constexpr MojomTypeCategory category = MojomTypeCategory::kStruct;
};

template <>
struct MojomTypeTraits<::autofill::mojom::FormDataDataView> {
  using Data = ::autofill::mojom::internal::FormData_Data;
  using DataAsArrayElement = Pointer<Data>;
  static constexpr MojomTypeCategory category = MojomTypeCategory::kStruct;
};

template <>
struct MojomTypeTraits<::autofill::mojom::FormFieldDataPredictionsDataView> {
  using Data = ::autofill::mojom::internal::FormFieldDataPredictions_Data;
  using DataAsArrayElement = Pointer<Data>;
  static constexpr MojomTypeCategory category = MojomTypeCategory::kStruct;
};

template <>
struct MojomTypeTraits<::autofill::mojom::FormDataPredictionsDataView> {
  using Data = ::autofill::mojom::internal::FormDataPredictions_Data;
  using DataAsArrayElement = Pointer<Data>;
  static constexpr MojomTypeCategory category = MojomTypeCategory::kStruct;
};

template <>
struct MojomTypeTraits<::autofill::mojom::PasswordAndMetadataDataView> {
  using Data = ::autofill::mojom::internal::PasswordAndMetadata_Data;
  using DataAsArrayElement = Pointer<Data>;
  static constexpr MojomTypeCategory category = MojomTypeCategory::kStruct;
};

template <>
struct MojomTypeTraits<::autofill::mojom::PasswordFormFillDataDataView> {
  using Data = ::autofill::mojom::internal::PasswordFormFillData_Data;
  using DataAsArrayElement = Pointer<Data>;
  static constexpr MojomTypeCategory category = MojomTypeCategory::kStruct;
};

template <>
struct MojomTypeTraits<::autofill::mojom::PasswordFormGenerationDataDataView> {
  using Data = ::autofill::mojom::internal::PasswordFormGenerationData_Data;
  using DataAsArrayElement = Pointer<Data>;
  static constexpr MojomTypeCategory category = MojomTypeCategory::kStruct;
};

template <>
struct MojomTypeTraits<::autofill::mojom::PasswordGenerationUIDataDataView> {
  using Data = ::autofill::mojom::internal::PasswordGenerationUIData_Data;
  using DataAsArrayElement = Pointer<Data>;
  static constexpr MojomTypeCategory category = MojomTypeCategory::kStruct;
};

template <>
struct MojomTypeTraits<::autofill::mojom::ValueElementPairDataView> {
  using Data = ::autofill::mojom::internal::ValueElementPair_Data;
  using DataAsArrayElement = Pointer<Data>;
  static constexpr MojomTypeCategory category = MojomTypeCategory::kStruct;
};

template <>
struct MojomTypeTraits<::autofill::mojom::PasswordFormDataView> {
  using Data = ::autofill::mojom::internal::PasswordForm_Data;
  using DataAsArrayElement = Pointer<Data>;
  static constexpr MojomTypeCategory category = MojomTypeCategory::kStruct;
};

template <>
struct MojomTypeTraits<::autofill::mojom::ParsingResultDataView> {
  using Data = ::autofill::mojom::internal::ParsingResult_Data;
  using DataAsArrayElement = Pointer<Data>;
  static constexpr MojomTypeCategory category = MojomTypeCategory::kStruct;
};

}  // namespace internal
}  // namespace mojo


namespace autofill {
namespace mojom {


enum class SubmissionIndicatorEvent : int32_t {
  
  NONE = 0,
  
  HTML_FORM_SUBMISSION = 1,
  
  SAME_DOCUMENT_NAVIGATION = 2,
  
  XHR_SUCCEEDED = 3,
  
  FRAME_DETACHED = 4,
  
  DOM_MUTATION_AFTER_XHR = 6,
  
  PROVISIONALLY_SAVED_FORM_ON_START_PROVISIONAL_LOAD = 7,
  
  PROBABLE_FORM_SUBMISSION = 10,
  kMinValue = 0,
  kMaxValue = 10,
};

 std::ostream& operator<<(std::ostream& os, SubmissionIndicatorEvent value);
inline bool IsKnownEnumValue(SubmissionIndicatorEvent value) {
  return internal::SubmissionIndicatorEvent_Data::IsKnownValue(
      static_cast<int32_t>(value));
}


enum class PasswordFormFieldPredictionType : int32_t {
  
  kUsername,
  
  kCurrentPassword,
  
  kNewPassword,
  
  kNotPassword,
  kMinValue = 0,
  kMaxValue = 3,
};

 std::ostream& operator<<(std::ostream& os, PasswordFormFieldPredictionType value);
inline bool IsKnownEnumValue(PasswordFormFieldPredictionType value) {
  return internal::PasswordFormFieldPredictionType_Data::IsKnownValue(
      static_cast<int32_t>(value));
}


enum class SubmissionSource : int32_t {
  
  NONE,
  
  SAME_DOCUMENT_NAVIGATION,
  
  XHR_SUCCEEDED,
  
  FRAME_DETACHED,
  
  DOM_MUTATION_AFTER_XHR,
  
  PROBABLY_FORM_SUBMITTED,
  
  FORM_SUBMISSION,
  kMinValue = 0,
  kMaxValue = 6,
};

 std::ostream& operator<<(std::ostream& os, SubmissionSource value);
inline bool IsKnownEnumValue(SubmissionSource value) {
  return internal::SubmissionSource_Data::IsKnownValue(
      static_cast<int32_t>(value));
}


enum class FocusedFieldType : int32_t {
  
  kUnknown,
  
  kUnfillableElement,
  
  kFillableTextArea,
  
  kFillableSearchField,
  
  kFillableNonSearchField,
  
  kFillableUsernameField,
  
  kFillablePasswordField,
  kMinValue = 0,
  kMaxValue = 6,
};

 std::ostream& operator<<(std::ostream& os, FocusedFieldType value);
inline bool IsKnownEnumValue(FocusedFieldType value) {
  return internal::FocusedFieldType_Data::IsKnownValue(
      static_cast<int32_t>(value));
}


enum class ButtonTitleType : int32_t {
  
  NONE = 0,
  
  BUTTON_ELEMENT_SUBMIT_TYPE = 1,
  
  BUTTON_ELEMENT_BUTTON_TYPE = 2,
  
  INPUT_ELEMENT_SUBMIT_TYPE = 3,
  
  INPUT_ELEMENT_BUTTON_TYPE = 4,
  
  HYPERLINK = 5,
  
  DIV = 6,
  
  SPAN = 7,
  kMinValue = 0,
  kMaxValue = 7,
};

 std::ostream& operator<<(std::ostream& os, ButtonTitleType value);
inline bool IsKnownEnumValue(ButtonTitleType value) {
  return internal::ButtonTitleType_Data::IsKnownValue(
      static_cast<int32_t>(value));
}


enum class AutofillState : int32_t {
  
  kNoSuggestions,
  
  kAutofillAvailable,
  
  kAutocompleteAvailable,
  kMinValue = 0,
  kMaxValue = 2,
};

 std::ostream& operator<<(std::ostream& os, AutofillState value);
inline bool IsKnownEnumValue(AutofillState value) {
  return internal::AutofillState_Data::IsKnownValue(
      static_cast<int32_t>(value));
}


enum class FormFieldData_CheckStatus : int32_t {
  
  kNotCheckable,
  
  kCheckableButUnchecked,
  
  kChecked,
  kMinValue = 0,
  kMaxValue = 2,
};

 std::ostream& operator<<(std::ostream& os, FormFieldData_CheckStatus value);
inline bool IsKnownEnumValue(FormFieldData_CheckStatus value) {
  return internal::FormFieldData_CheckStatus_Data::IsKnownValue(
      static_cast<int32_t>(value));
}


enum class FormFieldData_RoleAttribute : int32_t {
  
  kPresentation,
  
  kOther,
  kMinValue = 0,
  kMaxValue = 1,
};

 std::ostream& operator<<(std::ostream& os, FormFieldData_RoleAttribute value);
inline bool IsKnownEnumValue(FormFieldData_RoleAttribute value) {
  return internal::FormFieldData_RoleAttribute_Data::IsKnownValue(
      static_cast<int32_t>(value));
}


enum class FormFieldData_LabelSource : int32_t {
  
  kUnknown,
  
  kLabelTag,
  
  kPTag,
  
  kDivTable,
  
  kTdTag,
  
  kDdTag,
  
  kLiTag,
  
  kPlaceHolder,
  
  kAriaLabel,
  
  kCombined,
  
  kValue,
  kMinValue = 0,
  kMaxValue = 10,
};

 std::ostream& operator<<(std::ostream& os, FormFieldData_LabelSource value);
inline bool IsKnownEnumValue(FormFieldData_LabelSource value) {
  return internal::FormFieldData_LabelSource_Data::IsKnownValue(
      static_cast<int32_t>(value));
}


enum class PasswordForm_Scheme : int32_t {
  
  kHtml,
  
  kBasic,
  
  kDigest,
  
  kOther,
  
  kUsernameOnly,
  kMinValue = 0,
  kMaxValue = 4,
};

 std::ostream& operator<<(std::ostream& os, PasswordForm_Scheme value);
inline bool IsKnownEnumValue(PasswordForm_Scheme value) {
  return internal::PasswordForm_Scheme_Data::IsKnownValue(
      static_cast<int32_t>(value));
}


enum class PasswordForm_Type : int32_t {
  
  kManual,
  
  kGenerated,
  
  kApi,
  kMinValue = 0,
  kMaxValue = 2,
};

 std::ostream& operator<<(std::ostream& os, PasswordForm_Type value);
inline bool IsKnownEnumValue(PasswordForm_Type value) {
  return internal::PasswordForm_Type_Data::IsKnownValue(
      static_cast<int32_t>(value));
}


enum class PasswordForm_GenerationUploadStatus : int32_t {
  
  kNoSignalSent,
  
  kPositiveSignalSent,
  
  kNegativeSignalSent,
  
  kUnknownStatus = 10,
  kMinValue = 0,
  kMaxValue = 10,
};

 std::ostream& operator<<(std::ostream& os, PasswordForm_GenerationUploadStatus value);
inline bool IsKnownEnumValue(PasswordForm_GenerationUploadStatus value) {
  return internal::PasswordForm_GenerationUploadStatus_Data::IsKnownValue(
      static_cast<int32_t>(value));
}
class FormFieldDataDataView {
 public:
  FormFieldDataDataView() {}

  FormFieldDataDataView(
      internal::FormFieldData_Data* data,
      mojo::internal::SerializationContext* context)
      : data_(data), context_(context) {}

  bool is_null() const { return !data_; }
  inline void GetLabelDataView(
      ::mojo_base::mojom::String16DataView* output);

  template <typename UserType>
  WARN_UNUSED_RESULT bool ReadLabel(UserType* output) {
    auto* pointer = data_->label.Get();
    return mojo::internal::Deserialize<::mojo_base::mojom::String16DataView>(
        pointer, output, context_);
  }
  inline void GetNameDataView(
      ::mojo_base::mojom::String16DataView* output);

  template <typename UserType>
  WARN_UNUSED_RESULT bool ReadName(UserType* output) {
    auto* pointer = data_->name.Get();
    return mojo::internal::Deserialize<::mojo_base::mojom::String16DataView>(
        pointer, output, context_);
  }
  inline void GetIdAttributeDataView(
      ::mojo_base::mojom::String16DataView* output);

  template <typename UserType>
  WARN_UNUSED_RESULT bool ReadIdAttribute(UserType* output) {
    auto* pointer = data_->id_attribute.Get();
    return mojo::internal::Deserialize<::mojo_base::mojom::String16DataView>(
        pointer, output, context_);
  }
  inline void GetNameAttributeDataView(
      ::mojo_base::mojom::String16DataView* output);

  template <typename UserType>
  WARN_UNUSED_RESULT bool ReadNameAttribute(UserType* output) {
    auto* pointer = data_->name_attribute.Get();
    return mojo::internal::Deserialize<::mojo_base::mojom::String16DataView>(
        pointer, output, context_);
  }
  inline void GetValueDataView(
      ::mojo_base::mojom::String16DataView* output);

  template <typename UserType>
  WARN_UNUSED_RESULT bool ReadValue(UserType* output) {
    auto* pointer = data_->value.Get();
    return mojo::internal::Deserialize<::mojo_base::mojom::String16DataView>(
        pointer, output, context_);
  }
  inline void GetFormControlTypeDataView(
      mojo::StringDataView* output);

  template <typename UserType>
  WARN_UNUSED_RESULT bool ReadFormControlType(UserType* output) {
    auto* pointer = data_->form_control_type.Get();
    return mojo::internal::Deserialize<mojo::StringDataView>(
        pointer, output, context_);
  }
  inline void GetAutocompleteAttributeDataView(
      mojo::StringDataView* output);

  template <typename UserType>
  WARN_UNUSED_RESULT bool ReadAutocompleteAttribute(UserType* output) {
    auto* pointer = data_->autocomplete_attribute.Get();
    return mojo::internal::Deserialize<mojo::StringDataView>(
        pointer, output, context_);
  }
  inline void GetPlaceholderDataView(
      ::mojo_base::mojom::String16DataView* output);

  template <typename UserType>
  WARN_UNUSED_RESULT bool ReadPlaceholder(UserType* output) {
    auto* pointer = data_->placeholder.Get();
    return mojo::internal::Deserialize<::mojo_base::mojom::String16DataView>(
        pointer, output, context_);
  }
  inline void GetCssClassesDataView(
      ::mojo_base::mojom::String16DataView* output);

  template <typename UserType>
  WARN_UNUSED_RESULT bool ReadCssClasses(UserType* output) {
    auto* pointer = data_->css_classes.Get();
    return mojo::internal::Deserialize<::mojo_base::mojom::String16DataView>(
        pointer, output, context_);
  }
  inline void GetAriaLabelDataView(
      ::mojo_base::mojom::String16DataView* output);

  template <typename UserType>
  WARN_UNUSED_RESULT bool ReadAriaLabel(UserType* output) {
    auto* pointer = data_->aria_label.Get();
    return mojo::internal::Deserialize<::mojo_base::mojom::String16DataView>(
        pointer, output, context_);
  }
  inline void GetAriaDescriptionDataView(
      ::mojo_base::mojom::String16DataView* output);

  template <typename UserType>
  WARN_UNUSED_RESULT bool ReadAriaDescription(UserType* output) {
    auto* pointer = data_->aria_description.Get();
    return mojo::internal::Deserialize<::mojo_base::mojom::String16DataView>(
        pointer, output, context_);
  }
  uint32_t unique_renderer_id() const {
    return data_->unique_renderer_id;
  }
  uint32_t properties_mask() const {
    return data_->properties_mask;
  }
  int32_t form_control_ax_id() const {
    return data_->form_control_ax_id;
  }
  uint64_t max_length() const {
    return data_->max_length;
  }
  bool is_autofilled() const {
    return data_->is_autofilled;
  }
  inline void GetSectionDataView(
      mojo::StringDataView* output);

  template <typename UserType>
  WARN_UNUSED_RESULT bool ReadSection(UserType* output) {
    auto* pointer = data_->section.Get();
    return mojo::internal::Deserialize<mojo::StringDataView>(
        pointer, output, context_);
  }
  template <typename UserType>
  WARN_UNUSED_RESULT bool ReadCheckStatus(UserType* output) const {
    auto data_value = data_->check_status;
    return mojo::internal::Deserialize<::autofill::mojom::FormFieldData_CheckStatus>(
        data_value, output);
  }

  FormFieldData_CheckStatus check_status() const {
    return static_cast<FormFieldData_CheckStatus>(data_->check_status);
  }
  bool is_focusable() const {
    return data_->is_focusable;
  }
  bool should_autocomplete() const {
    return data_->should_autocomplete;
  }
  template <typename UserType>
  WARN_UNUSED_RESULT bool ReadRole(UserType* output) const {
    auto data_value = data_->role;
    return mojo::internal::Deserialize<::autofill::mojom::FormFieldData_RoleAttribute>(
        data_value, output);
  }

  FormFieldData_RoleAttribute role() const {
    return static_cast<FormFieldData_RoleAttribute>(data_->role);
  }
  template <typename UserType>
  WARN_UNUSED_RESULT bool ReadTextDirection(UserType* output) const {
    auto data_value = data_->text_direction;
    return mojo::internal::Deserialize<::mojo_base::mojom::TextDirection>(
        data_value, output);
  }

  ::mojo_base::mojom::TextDirection text_direction() const {
    return static_cast<::mojo_base::mojom::TextDirection>(data_->text_direction);
  }
  bool is_enabled() const {
    return data_->is_enabled;
  }
  bool is_readonly() const {
    return data_->is_readonly;
  }
  inline void GetTypedValueDataView(
      ::mojo_base::mojom::String16DataView* output);

  template <typename UserType>
  WARN_UNUSED_RESULT bool ReadTypedValue(UserType* output) {
    auto* pointer = data_->typed_value.Get();
    return mojo::internal::Deserialize<::mojo_base::mojom::String16DataView>(
        pointer, output, context_);
  }
  inline void GetOptionValuesDataView(
      mojo::ArrayDataView<::mojo_base::mojom::String16DataView>* output);

  template <typename UserType>
  WARN_UNUSED_RESULT bool ReadOptionValues(UserType* output) {
    auto* pointer = data_->option_values.Get();
    return mojo::internal::Deserialize<mojo::ArrayDataView<::mojo_base::mojom::String16DataView>>(
        pointer, output, context_);
  }
  inline void GetOptionContentsDataView(
      mojo::ArrayDataView<::mojo_base::mojom::String16DataView>* output);

  template <typename UserType>
  WARN_UNUSED_RESULT bool ReadOptionContents(UserType* output) {
    auto* pointer = data_->option_contents.Get();
    return mojo::internal::Deserialize<mojo::ArrayDataView<::mojo_base::mojom::String16DataView>>(
        pointer, output, context_);
  }
  template <typename UserType>
  WARN_UNUSED_RESULT bool ReadLabelSource(UserType* output) const {
    auto data_value = data_->label_source;
    return mojo::internal::Deserialize<::autofill::mojom::FormFieldData_LabelSource>(
        data_value, output);
  }

  FormFieldData_LabelSource label_source() const {
    return static_cast<FormFieldData_LabelSource>(data_->label_source);
  }
 private:
  internal::FormFieldData_Data* data_ = nullptr;
  mojo::internal::SerializationContext* context_ = nullptr;
};

class ButtonTitleInfoDataView {
 public:
  ButtonTitleInfoDataView() {}

  ButtonTitleInfoDataView(
      internal::ButtonTitleInfo_Data* data,
      mojo::internal::SerializationContext* context)
      : data_(data), context_(context) {}

  bool is_null() const { return !data_; }
  inline void GetTitleDataView(
      ::mojo_base::mojom::String16DataView* output);

  template <typename UserType>
  WARN_UNUSED_RESULT bool ReadTitle(UserType* output) {
    auto* pointer = data_->title.Get();
    return mojo::internal::Deserialize<::mojo_base::mojom::String16DataView>(
        pointer, output, context_);
  }
  template <typename UserType>
  WARN_UNUSED_RESULT bool ReadType(UserType* output) const {
    auto data_value = data_->type;
    return mojo::internal::Deserialize<::autofill::mojom::ButtonTitleType>(
        data_value, output);
  }

  ButtonTitleType type() const {
    return static_cast<ButtonTitleType>(data_->type);
  }
 private:
  internal::ButtonTitleInfo_Data* data_ = nullptr;
  mojo::internal::SerializationContext* context_ = nullptr;
};

class FormDataDataView {
 public:
  FormDataDataView() {}

  FormDataDataView(
      internal::FormData_Data* data,
      mojo::internal::SerializationContext* context)
      : data_(data), context_(context) {}

  bool is_null() const { return !data_; }
  inline void GetIdAttributeDataView(
      ::mojo_base::mojom::String16DataView* output);

  template <typename UserType>
  WARN_UNUSED_RESULT bool ReadIdAttribute(UserType* output) {
    auto* pointer = data_->id_attribute.Get();
    return mojo::internal::Deserialize<::mojo_base::mojom::String16DataView>(
        pointer, output, context_);
  }
  inline void GetNameAttributeDataView(
      ::mojo_base::mojom::String16DataView* output);

  template <typename UserType>
  WARN_UNUSED_RESULT bool ReadNameAttribute(UserType* output) {
    auto* pointer = data_->name_attribute.Get();
    return mojo::internal::Deserialize<::mojo_base::mojom::String16DataView>(
        pointer, output, context_);
  }
  inline void GetNameDataView(
      ::mojo_base::mojom::String16DataView* output);

  template <typename UserType>
  WARN_UNUSED_RESULT bool ReadName(UserType* output) {
    auto* pointer = data_->name.Get();
    return mojo::internal::Deserialize<::mojo_base::mojom::String16DataView>(
        pointer, output, context_);
  }
  inline void GetButtonTitlesDataView(
      mojo::ArrayDataView<ButtonTitleInfoDataView>* output);

  template <typename UserType>
  WARN_UNUSED_RESULT bool ReadButtonTitles(UserType* output) {
    auto* pointer = data_->button_titles.Get();
    return mojo::internal::Deserialize<mojo::ArrayDataView<::autofill::mojom::ButtonTitleInfoDataView>>(
        pointer, output, context_);
  }
  inline void GetUrlDataView(
      ::url::mojom::UrlDataView* output);

  template <typename UserType>
  WARN_UNUSED_RESULT bool ReadUrl(UserType* output) {
    auto* pointer = data_->url.Get();
    return mojo::internal::Deserialize<::url::mojom::UrlDataView>(
        pointer, output, context_);
  }
  inline void GetActionDataView(
      ::url::mojom::UrlDataView* output);

  template <typename UserType>
  WARN_UNUSED_RESULT bool ReadAction(UserType* output) {
    auto* pointer = data_->action.Get();
    return mojo::internal::Deserialize<::url::mojom::UrlDataView>(
        pointer, output, context_);
  }
  bool is_action_empty() const {
    return data_->is_action_empty;
  }
  inline void GetMainFrameOriginDataView(
      ::url::mojom::OriginDataView* output);

  template <typename UserType>
  WARN_UNUSED_RESULT bool ReadMainFrameOrigin(UserType* output) {
    auto* pointer = data_->main_frame_origin.Get();
    return mojo::internal::Deserialize<::url::mojom::OriginDataView>(
        pointer, output, context_);
  }
  bool is_form_tag() const {
    return data_->is_form_tag;
  }
  bool is_formless_checkout() const {
    return data_->is_formless_checkout;
  }
  uint32_t unique_renderer_id() const {
    return data_->unique_renderer_id;
  }
  template <typename UserType>
  WARN_UNUSED_RESULT bool ReadSubmissionEvent(UserType* output) const {
    auto data_value = data_->submission_event;
    return mojo::internal::Deserialize<::autofill::mojom::SubmissionIndicatorEvent>(
        data_value, output);
  }

  SubmissionIndicatorEvent submission_event() const {
    return static_cast<SubmissionIndicatorEvent>(data_->submission_event);
  }
  inline void GetFieldsDataView(
      mojo::ArrayDataView<FormFieldDataDataView>* output);

  template <typename UserType>
  WARN_UNUSED_RESULT bool ReadFields(UserType* output) {
    auto* pointer = data_->fields.Get();
    return mojo::internal::Deserialize<mojo::ArrayDataView<::autofill::mojom::FormFieldDataDataView>>(
        pointer, output, context_);
  }
  inline void GetUsernamePredictionsDataView(
      mojo::ArrayDataView<uint32_t>* output);

  template <typename UserType>
  WARN_UNUSED_RESULT bool ReadUsernamePredictions(UserType* output) {
    auto* pointer = data_->username_predictions.Get();
    return mojo::internal::Deserialize<mojo::ArrayDataView<uint32_t>>(
        pointer, output, context_);
  }
  bool is_gaia_with_skip_save_password_form() const {
    return data_->is_gaia_with_skip_save_password_form;
  }
 private:
  internal::FormData_Data* data_ = nullptr;
  mojo::internal::SerializationContext* context_ = nullptr;
};

class FormFieldDataPredictionsDataView {
 public:
  FormFieldDataPredictionsDataView() {}

  FormFieldDataPredictionsDataView(
      internal::FormFieldDataPredictions_Data* data,
      mojo::internal::SerializationContext* context)
      : data_(data), context_(context) {}

  bool is_null() const { return !data_; }
  inline void GetFieldDataView(
      FormFieldDataDataView* output);

  template <typename UserType>
  WARN_UNUSED_RESULT bool ReadField(UserType* output) {
    auto* pointer = data_->field.Get();
    return mojo::internal::Deserialize<::autofill::mojom::FormFieldDataDataView>(
        pointer, output, context_);
  }
  inline void GetSignatureDataView(
      mojo::StringDataView* output);

  template <typename UserType>
  WARN_UNUSED_RESULT bool ReadSignature(UserType* output) {
    auto* pointer = data_->signature.Get();
    return mojo::internal::Deserialize<mojo::StringDataView>(
        pointer, output, context_);
  }
  inline void GetHeuristicTypeDataView(
      mojo::StringDataView* output);

  template <typename UserType>
  WARN_UNUSED_RESULT bool ReadHeuristicType(UserType* output) {
    auto* pointer = data_->heuristic_type.Get();
    return mojo::internal::Deserialize<mojo::StringDataView>(
        pointer, output, context_);
  }
  inline void GetServerTypeDataView(
      mojo::StringDataView* output);

  template <typename UserType>
  WARN_UNUSED_RESULT bool ReadServerType(UserType* output) {
    auto* pointer = data_->server_type.Get();
    return mojo::internal::Deserialize<mojo::StringDataView>(
        pointer, output, context_);
  }
  inline void GetOverallTypeDataView(
      mojo::StringDataView* output);

  template <typename UserType>
  WARN_UNUSED_RESULT bool ReadOverallType(UserType* output) {
    auto* pointer = data_->overall_type.Get();
    return mojo::internal::Deserialize<mojo::StringDataView>(
        pointer, output, context_);
  }
  inline void GetParseableNameDataView(
      mojo::StringDataView* output);

  template <typename UserType>
  WARN_UNUSED_RESULT bool ReadParseableName(UserType* output) {
    auto* pointer = data_->parseable_name.Get();
    return mojo::internal::Deserialize<mojo::StringDataView>(
        pointer, output, context_);
  }
  inline void GetSectionDataView(
      mojo::StringDataView* output);

  template <typename UserType>
  WARN_UNUSED_RESULT bool ReadSection(UserType* output) {
    auto* pointer = data_->section.Get();
    return mojo::internal::Deserialize<mojo::StringDataView>(
        pointer, output, context_);
  }
 private:
  internal::FormFieldDataPredictions_Data* data_ = nullptr;
  mojo::internal::SerializationContext* context_ = nullptr;
};

class FormDataPredictionsDataView {
 public:
  FormDataPredictionsDataView() {}

  FormDataPredictionsDataView(
      internal::FormDataPredictions_Data* data,
      mojo::internal::SerializationContext* context)
      : data_(data), context_(context) {}

  bool is_null() const { return !data_; }
  inline void GetDataDataView(
      FormDataDataView* output);

  template <typename UserType>
  WARN_UNUSED_RESULT bool ReadData(UserType* output) {
    auto* pointer = data_->data.Get();
    return mojo::internal::Deserialize<::autofill::mojom::FormDataDataView>(
        pointer, output, context_);
  }
  inline void GetSignatureDataView(
      mojo::StringDataView* output);

  template <typename UserType>
  WARN_UNUSED_RESULT bool ReadSignature(UserType* output) {
    auto* pointer = data_->signature.Get();
    return mojo::internal::Deserialize<mojo::StringDataView>(
        pointer, output, context_);
  }
  inline void GetFieldsDataView(
      mojo::ArrayDataView<FormFieldDataPredictionsDataView>* output);

  template <typename UserType>
  WARN_UNUSED_RESULT bool ReadFields(UserType* output) {
    auto* pointer = data_->fields.Get();
    return mojo::internal::Deserialize<mojo::ArrayDataView<::autofill::mojom::FormFieldDataPredictionsDataView>>(
        pointer, output, context_);
  }
 private:
  internal::FormDataPredictions_Data* data_ = nullptr;
  mojo::internal::SerializationContext* context_ = nullptr;
};

class PasswordAndMetadataDataView {
 public:
  PasswordAndMetadataDataView() {}

  PasswordAndMetadataDataView(
      internal::PasswordAndMetadata_Data* data,
      mojo::internal::SerializationContext* context)
      : data_(data), context_(context) {}

  bool is_null() const { return !data_; }
  inline void GetPasswordDataView(
      ::mojo_base::mojom::String16DataView* output);

  template <typename UserType>
  WARN_UNUSED_RESULT bool ReadPassword(UserType* output) {
    auto* pointer = data_->password.Get();
    return mojo::internal::Deserialize<::mojo_base::mojom::String16DataView>(
        pointer, output, context_);
  }
  inline void GetRealmDataView(
      mojo::StringDataView* output);

  template <typename UserType>
  WARN_UNUSED_RESULT bool ReadRealm(UserType* output) {
    auto* pointer = data_->realm.Get();
    return mojo::internal::Deserialize<mojo::StringDataView>(
        pointer, output, context_);
  }
  bool uses_account_store() const {
    return data_->uses_account_store;
  }
 private:
  internal::PasswordAndMetadata_Data* data_ = nullptr;
  mojo::internal::SerializationContext* context_ = nullptr;
};

class PasswordFormFillDataDataView {
 public:
  PasswordFormFillDataDataView() {}

  PasswordFormFillDataDataView(
      internal::PasswordFormFillData_Data* data,
      mojo::internal::SerializationContext* context)
      : data_(data), context_(context) {}

  bool is_null() const { return !data_; }
  uint32_t form_renderer_id() const {
    return data_->form_renderer_id;
  }
  inline void GetOriginDataView(
      ::url::mojom::UrlDataView* output);

  template <typename UserType>
  WARN_UNUSED_RESULT bool ReadOrigin(UserType* output) {
    auto* pointer = data_->origin.Get();
    return mojo::internal::Deserialize<::url::mojom::UrlDataView>(
        pointer, output, context_);
  }
  inline void GetActionDataView(
      ::url::mojom::UrlDataView* output);

  template <typename UserType>
  WARN_UNUSED_RESULT bool ReadAction(UserType* output) {
    auto* pointer = data_->action.Get();
    return mojo::internal::Deserialize<::url::mojom::UrlDataView>(
        pointer, output, context_);
  }
  inline void GetUsernameFieldDataView(
      FormFieldDataDataView* output);

  template <typename UserType>
  WARN_UNUSED_RESULT bool ReadUsernameField(UserType* output) {
    auto* pointer = data_->username_field.Get();
    return mojo::internal::Deserialize<::autofill::mojom::FormFieldDataDataView>(
        pointer, output, context_);
  }
  inline void GetPasswordFieldDataView(
      FormFieldDataDataView* output);

  template <typename UserType>
  WARN_UNUSED_RESULT bool ReadPasswordField(UserType* output) {
    auto* pointer = data_->password_field.Get();
    return mojo::internal::Deserialize<::autofill::mojom::FormFieldDataDataView>(
        pointer, output, context_);
  }
  bool username_may_use_prefilled_placeholder() const {
    return data_->username_may_use_prefilled_placeholder;
  }
  inline void GetPreferredRealmDataView(
      mojo::StringDataView* output);

  template <typename UserType>
  WARN_UNUSED_RESULT bool ReadPreferredRealm(UserType* output) {
    auto* pointer = data_->preferred_realm.Get();
    return mojo::internal::Deserialize<mojo::StringDataView>(
        pointer, output, context_);
  }
  bool uses_account_store() const {
    return data_->uses_account_store;
  }
  inline void GetAdditionalLoginsDataView(
      mojo::MapDataView<::mojo_base::mojom::String16DataView, PasswordAndMetadataDataView>* output);

  template <typename UserType>
  WARN_UNUSED_RESULT bool ReadAdditionalLogins(UserType* output) {
    auto* pointer = data_->additional_logins.Get();
    return mojo::internal::Deserialize<mojo::MapDataView<::mojo_base::mojom::String16DataView, ::autofill::mojom::PasswordAndMetadataDataView>>(
        pointer, output, context_);
  }
  bool wait_for_username() const {
    return data_->wait_for_username;
  }
  bool has_renderer_ids() const {
    return data_->has_renderer_ids;
  }
 private:
  internal::PasswordFormFillData_Data* data_ = nullptr;
  mojo::internal::SerializationContext* context_ = nullptr;
};

class PasswordFormGenerationDataDataView {
 public:
  PasswordFormGenerationDataDataView() {}

  PasswordFormGenerationDataDataView(
      internal::PasswordFormGenerationData_Data* data,
      mojo::internal::SerializationContext* context)
      : data_(data) {}

  bool is_null() const { return !data_; }
  uint32_t new_password_renderer_id() const {
    return data_->new_password_renderer_id;
  }
  uint32_t confirmation_password_renderer_id() const {
    return data_->confirmation_password_renderer_id;
  }
 private:
  internal::PasswordFormGenerationData_Data* data_ = nullptr;
};

class PasswordGenerationUIDataDataView {
 public:
  PasswordGenerationUIDataDataView() {}

  PasswordGenerationUIDataDataView(
      internal::PasswordGenerationUIData_Data* data,
      mojo::internal::SerializationContext* context)
      : data_(data), context_(context) {}

  bool is_null() const { return !data_; }
  inline void GetBoundsDataView(
      ::gfx::mojom::RectFDataView* output);

  template <typename UserType>
  WARN_UNUSED_RESULT bool ReadBounds(UserType* output) {
    auto* pointer = data_->bounds.Get();
    return mojo::internal::Deserialize<::gfx::mojom::RectFDataView>(
        pointer, output, context_);
  }
  int32_t max_length() const {
    return data_->max_length;
  }
  inline void GetGenerationElementDataView(
      ::mojo_base::mojom::String16DataView* output);

  template <typename UserType>
  WARN_UNUSED_RESULT bool ReadGenerationElement(UserType* output) {
    auto* pointer = data_->generation_element.Get();
    return mojo::internal::Deserialize<::mojo_base::mojom::String16DataView>(
        pointer, output, context_);
  }
  uint32_t generation_element_id() const {
    return data_->generation_element_id;
  }
  bool is_generation_element_password_type() const {
    return data_->is_generation_element_password_type;
  }
  template <typename UserType>
  WARN_UNUSED_RESULT bool ReadTextDirection(UserType* output) const {
    auto data_value = data_->text_direction;
    return mojo::internal::Deserialize<::mojo_base::mojom::TextDirection>(
        data_value, output);
  }

  ::mojo_base::mojom::TextDirection text_direction() const {
    return static_cast<::mojo_base::mojom::TextDirection>(data_->text_direction);
  }
  inline void GetFormDataDataView(
      FormDataDataView* output);

  template <typename UserType>
  WARN_UNUSED_RESULT bool ReadFormData(UserType* output) {
    auto* pointer = data_->form_data.Get();
    return mojo::internal::Deserialize<::autofill::mojom::FormDataDataView>(
        pointer, output, context_);
  }
 private:
  internal::PasswordGenerationUIData_Data* data_ = nullptr;
  mojo::internal::SerializationContext* context_ = nullptr;
};

class ValueElementPairDataView {
 public:
  ValueElementPairDataView() {}

  ValueElementPairDataView(
      internal::ValueElementPair_Data* data,
      mojo::internal::SerializationContext* context)
      : data_(data), context_(context) {}

  bool is_null() const { return !data_; }
  inline void GetValueDataView(
      ::mojo_base::mojom::String16DataView* output);

  template <typename UserType>
  WARN_UNUSED_RESULT bool ReadValue(UserType* output) {
    auto* pointer = data_->value.Get();
    return mojo::internal::Deserialize<::mojo_base::mojom::String16DataView>(
        pointer, output, context_);
  }
  inline void GetFieldNameDataView(
      ::mojo_base::mojom::String16DataView* output);

  template <typename UserType>
  WARN_UNUSED_RESULT bool ReadFieldName(UserType* output) {
    auto* pointer = data_->field_name.Get();
    return mojo::internal::Deserialize<::mojo_base::mojom::String16DataView>(
        pointer, output, context_);
  }
 private:
  internal::ValueElementPair_Data* data_ = nullptr;
  mojo::internal::SerializationContext* context_ = nullptr;
};

class PasswordFormDataView {
 public:
  PasswordFormDataView() {}

  PasswordFormDataView(
      internal::PasswordForm_Data* data,
      mojo::internal::SerializationContext* context)
      : data_(data), context_(context) {}

  bool is_null() const { return !data_; }
  template <typename UserType>
  WARN_UNUSED_RESULT bool ReadScheme(UserType* output) const {
    auto data_value = data_->scheme;
    return mojo::internal::Deserialize<::autofill::mojom::PasswordForm_Scheme>(
        data_value, output);
  }

  PasswordForm_Scheme scheme() const {
    return static_cast<PasswordForm_Scheme>(data_->scheme);
  }
  inline void GetSignonRealmDataView(
      mojo::StringDataView* output);

  template <typename UserType>
  WARN_UNUSED_RESULT bool ReadSignonRealm(UserType* output) {
    auto* pointer = data_->signon_realm.Get();
    return mojo::internal::Deserialize<mojo::StringDataView>(
        pointer, output, context_);
  }
  inline void GetOriginWithPathDataView(
      ::url::mojom::UrlDataView* output);

  template <typename UserType>
  WARN_UNUSED_RESULT bool ReadOriginWithPath(UserType* output) {
    auto* pointer = data_->origin_with_path.Get();
    return mojo::internal::Deserialize<::url::mojom::UrlDataView>(
        pointer, output, context_);
  }
  inline void GetActionDataView(
      ::url::mojom::UrlDataView* output);

  template <typename UserType>
  WARN_UNUSED_RESULT bool ReadAction(UserType* output) {
    auto* pointer = data_->action.Get();
    return mojo::internal::Deserialize<::url::mojom::UrlDataView>(
        pointer, output, context_);
  }
  inline void GetAffiliatedWebRealmDataView(
      mojo::StringDataView* output);

  template <typename UserType>
  WARN_UNUSED_RESULT bool ReadAffiliatedWebRealm(UserType* output) {
    auto* pointer = data_->affiliated_web_realm.Get();
    return mojo::internal::Deserialize<mojo::StringDataView>(
        pointer, output, context_);
  }
  inline void GetSubmitElementDataView(
      ::mojo_base::mojom::String16DataView* output);

  template <typename UserType>
  WARN_UNUSED_RESULT bool ReadSubmitElement(UserType* output) {
    auto* pointer = data_->submit_element.Get();
    return mojo::internal::Deserialize<::mojo_base::mojom::String16DataView>(
        pointer, output, context_);
  }
  inline void GetUsernameElementDataView(
      ::mojo_base::mojom::String16DataView* output);

  template <typename UserType>
  WARN_UNUSED_RESULT bool ReadUsernameElement(UserType* output) {
    auto* pointer = data_->username_element.Get();
    return mojo::internal::Deserialize<::mojo_base::mojom::String16DataView>(
        pointer, output, context_);
  }
  bool username_marked_by_site() const {
    return data_->username_marked_by_site;
  }
  inline void GetUsernameValueDataView(
      ::mojo_base::mojom::String16DataView* output);

  template <typename UserType>
  WARN_UNUSED_RESULT bool ReadUsernameValue(UserType* output) {
    auto* pointer = data_->username_value.Get();
    return mojo::internal::Deserialize<::mojo_base::mojom::String16DataView>(
        pointer, output, context_);
  }
  inline void GetAllPossibleUsernamesDataView(
      mojo::ArrayDataView<ValueElementPairDataView>* output);

  template <typename UserType>
  WARN_UNUSED_RESULT bool ReadAllPossibleUsernames(UserType* output) {
    auto* pointer = data_->all_possible_usernames.Get();
    return mojo::internal::Deserialize<mojo::ArrayDataView<::autofill::mojom::ValueElementPairDataView>>(
        pointer, output, context_);
  }
  inline void GetAllPossiblePasswordsDataView(
      mojo::ArrayDataView<ValueElementPairDataView>* output);

  template <typename UserType>
  WARN_UNUSED_RESULT bool ReadAllPossiblePasswords(UserType* output) {
    auto* pointer = data_->all_possible_passwords.Get();
    return mojo::internal::Deserialize<mojo::ArrayDataView<::autofill::mojom::ValueElementPairDataView>>(
        pointer, output, context_);
  }
  bool form_has_autofilled_value() const {
    return data_->form_has_autofilled_value;
  }
  inline void GetPasswordElementDataView(
      ::mojo_base::mojom::String16DataView* output);

  template <typename UserType>
  WARN_UNUSED_RESULT bool ReadPasswordElement(UserType* output) {
    auto* pointer = data_->password_element.Get();
    return mojo::internal::Deserialize<::mojo_base::mojom::String16DataView>(
        pointer, output, context_);
  }
  inline void GetPasswordValueDataView(
      ::mojo_base::mojom::String16DataView* output);

  template <typename UserType>
  WARN_UNUSED_RESULT bool ReadPasswordValue(UserType* output) {
    auto* pointer = data_->password_value.Get();
    return mojo::internal::Deserialize<::mojo_base::mojom::String16DataView>(
        pointer, output, context_);
  }
  inline void GetNewPasswordElementDataView(
      ::mojo_base::mojom::String16DataView* output);

  template <typename UserType>
  WARN_UNUSED_RESULT bool ReadNewPasswordElement(UserType* output) {
    auto* pointer = data_->new_password_element.Get();
    return mojo::internal::Deserialize<::mojo_base::mojom::String16DataView>(
        pointer, output, context_);
  }
  inline void GetNewPasswordValueDataView(
      ::mojo_base::mojom::String16DataView* output);

  template <typename UserType>
  WARN_UNUSED_RESULT bool ReadNewPasswordValue(UserType* output) {
    auto* pointer = data_->new_password_value.Get();
    return mojo::internal::Deserialize<::mojo_base::mojom::String16DataView>(
        pointer, output, context_);
  }
  bool new_password_marked_by_site() const {
    return data_->new_password_marked_by_site;
  }
  inline void GetConfirmationPasswordElementDataView(
      ::mojo_base::mojom::String16DataView* output);

  template <typename UserType>
  WARN_UNUSED_RESULT bool ReadConfirmationPasswordElement(UserType* output) {
    auto* pointer = data_->confirmation_password_element.Get();
    return mojo::internal::Deserialize<::mojo_base::mojom::String16DataView>(
        pointer, output, context_);
  }
  inline void GetDateCreatedDataView(
      ::mojo_base::mojom::TimeDataView* output);

  template <typename UserType>
  WARN_UNUSED_RESULT bool ReadDateCreated(UserType* output) {
    auto* pointer = data_->date_created.Get();
    return mojo::internal::Deserialize<::mojo_base::mojom::TimeDataView>(
        pointer, output, context_);
  }
  inline void GetDateSyncedDataView(
      ::mojo_base::mojom::TimeDataView* output);

  template <typename UserType>
  WARN_UNUSED_RESULT bool ReadDateSynced(UserType* output) {
    auto* pointer = data_->date_synced.Get();
    return mojo::internal::Deserialize<::mojo_base::mojom::TimeDataView>(
        pointer, output, context_);
  }
  bool blacklisted_by_user() const {
    return data_->blacklisted_by_user;
  }
  template <typename UserType>
  WARN_UNUSED_RESULT bool ReadType(UserType* output) const {
    auto data_value = data_->type;
    return mojo::internal::Deserialize<::autofill::mojom::PasswordForm_Type>(
        data_value, output);
  }

  PasswordForm_Type type() const {
    return static_cast<PasswordForm_Type>(data_->type);
  }
  int32_t times_used() const {
    return data_->times_used;
  }
  inline void GetFormDataDataView(
      FormDataDataView* output);

  template <typename UserType>
  WARN_UNUSED_RESULT bool ReadFormData(UserType* output) {
    auto* pointer = data_->form_data.Get();
    return mojo::internal::Deserialize<::autofill::mojom::FormDataDataView>(
        pointer, output, context_);
  }
  template <typename UserType>
  WARN_UNUSED_RESULT bool ReadGenerationUploadStatus(UserType* output) const {
    auto data_value = data_->generation_upload_status;
    return mojo::internal::Deserialize<::autofill::mojom::PasswordForm_GenerationUploadStatus>(
        data_value, output);
  }

  PasswordForm_GenerationUploadStatus generation_upload_status() const {
    return static_cast<PasswordForm_GenerationUploadStatus>(data_->generation_upload_status);
  }
  inline void GetDisplayNameDataView(
      ::mojo_base::mojom::String16DataView* output);

  template <typename UserType>
  WARN_UNUSED_RESULT bool ReadDisplayName(UserType* output) {
    auto* pointer = data_->display_name.Get();
    return mojo::internal::Deserialize<::mojo_base::mojom::String16DataView>(
        pointer, output, context_);
  }
  inline void GetIconUrlDataView(
      ::url::mojom::UrlDataView* output);

  template <typename UserType>
  WARN_UNUSED_RESULT bool ReadIconUrl(UserType* output) {
    auto* pointer = data_->icon_url.Get();
    return mojo::internal::Deserialize<::url::mojom::UrlDataView>(
        pointer, output, context_);
  }
  inline void GetFederationOriginDataView(
      ::url::mojom::OriginDataView* output);

  template <typename UserType>
  WARN_UNUSED_RESULT bool ReadFederationOrigin(UserType* output) {
    auto* pointer = data_->federation_origin.Get();
    return mojo::internal::Deserialize<::url::mojom::OriginDataView>(
        pointer, output, context_);
  }
  bool skip_zero_click() const {
    return data_->skip_zero_click;
  }
  bool was_parsed_using_autofill_predictions() const {
    return data_->was_parsed_using_autofill_predictions;
  }
  bool is_public_suffix_match() const {
    return data_->is_public_suffix_match;
  }
  bool is_affiliation_based_match() const {
    return data_->is_affiliation_based_match;
  }
  template <typename UserType>
  WARN_UNUSED_RESULT bool ReadSubmissionEvent(UserType* output) const {
    auto data_value = data_->submission_event;
    return mojo::internal::Deserialize<::autofill::mojom::SubmissionIndicatorEvent>(
        data_value, output);
  }

  SubmissionIndicatorEvent submission_event() const {
    return static_cast<SubmissionIndicatorEvent>(data_->submission_event);
  }
  bool only_for_fallback() const {
    return data_->only_for_fallback;
  }
 private:
  internal::PasswordForm_Data* data_ = nullptr;
  mojo::internal::SerializationContext* context_ = nullptr;
};

class ParsingResultDataView {
 public:
  ParsingResultDataView() {}

  ParsingResultDataView(
      internal::ParsingResult_Data* data,
      mojo::internal::SerializationContext* context)
      : data_(data) {}

  bool is_null() const { return !data_; }
  uint32_t username_renderer_id() const {
    return data_->username_renderer_id;
  }
  uint32_t password_renderer_id() const {
    return data_->password_renderer_id;
  }
  uint32_t new_password_renderer_id() const {
    return data_->new_password_renderer_id;
  }
  uint32_t confirm_password_renderer_id() const {
    return data_->confirm_password_renderer_id;
  }
 private:
  internal::ParsingResult_Data* data_ = nullptr;
};



}  // namespace mojom
}  // namespace autofill

namespace std {

template <>
struct hash<::autofill::mojom::SubmissionIndicatorEvent>
    : public mojo::internal::EnumHashImpl<::autofill::mojom::SubmissionIndicatorEvent> {};

template <>
struct hash<::autofill::mojom::PasswordFormFieldPredictionType>
    : public mojo::internal::EnumHashImpl<::autofill::mojom::PasswordFormFieldPredictionType> {};

template <>
struct hash<::autofill::mojom::SubmissionSource>
    : public mojo::internal::EnumHashImpl<::autofill::mojom::SubmissionSource> {};

template <>
struct hash<::autofill::mojom::FocusedFieldType>
    : public mojo::internal::EnumHashImpl<::autofill::mojom::FocusedFieldType> {};

template <>
struct hash<::autofill::mojom::ButtonTitleType>
    : public mojo::internal::EnumHashImpl<::autofill::mojom::ButtonTitleType> {};

template <>
struct hash<::autofill::mojom::AutofillState>
    : public mojo::internal::EnumHashImpl<::autofill::mojom::AutofillState> {};

template <>
struct hash<::autofill::mojom::FormFieldData_CheckStatus>
    : public mojo::internal::EnumHashImpl<::autofill::mojom::FormFieldData_CheckStatus> {};

template <>
struct hash<::autofill::mojom::FormFieldData_RoleAttribute>
    : public mojo::internal::EnumHashImpl<::autofill::mojom::FormFieldData_RoleAttribute> {};

template <>
struct hash<::autofill::mojom::FormFieldData_LabelSource>
    : public mojo::internal::EnumHashImpl<::autofill::mojom::FormFieldData_LabelSource> {};

template <>
struct hash<::autofill::mojom::PasswordForm_Scheme>
    : public mojo::internal::EnumHashImpl<::autofill::mojom::PasswordForm_Scheme> {};

template <>
struct hash<::autofill::mojom::PasswordForm_Type>
    : public mojo::internal::EnumHashImpl<::autofill::mojom::PasswordForm_Type> {};

template <>
struct hash<::autofill::mojom::PasswordForm_GenerationUploadStatus>
    : public mojo::internal::EnumHashImpl<::autofill::mojom::PasswordForm_GenerationUploadStatus> {};

}  // namespace std

namespace mojo {


template <>
struct EnumTraits<::autofill::mojom::SubmissionIndicatorEvent, ::autofill::mojom::SubmissionIndicatorEvent> {
  static ::autofill::mojom::SubmissionIndicatorEvent ToMojom(::autofill::mojom::SubmissionIndicatorEvent input) { return input; }
  static bool FromMojom(::autofill::mojom::SubmissionIndicatorEvent input, ::autofill::mojom::SubmissionIndicatorEvent* output) {
    *output = input;
    return true;
  }
};

namespace internal {

template <typename MaybeConstUserType>
struct Serializer<::autofill::mojom::SubmissionIndicatorEvent, MaybeConstUserType> {
  using UserType = typename std::remove_const<MaybeConstUserType>::type;
  using Traits = EnumTraits<::autofill::mojom::SubmissionIndicatorEvent, UserType>;

  static void Serialize(UserType input, int32_t* output) {
    *output = static_cast<int32_t>(Traits::ToMojom(input));
  }

  static bool Deserialize(int32_t input, UserType* output) {
    return Traits::FromMojom(static_cast<::autofill::mojom::SubmissionIndicatorEvent>(input), output);
  }
};

}  // namespace internal


template <>
struct EnumTraits<::autofill::mojom::PasswordFormFieldPredictionType, ::autofill::mojom::PasswordFormFieldPredictionType> {
  static ::autofill::mojom::PasswordFormFieldPredictionType ToMojom(::autofill::mojom::PasswordFormFieldPredictionType input) { return input; }
  static bool FromMojom(::autofill::mojom::PasswordFormFieldPredictionType input, ::autofill::mojom::PasswordFormFieldPredictionType* output) {
    *output = input;
    return true;
  }
};

namespace internal {

template <typename MaybeConstUserType>
struct Serializer<::autofill::mojom::PasswordFormFieldPredictionType, MaybeConstUserType> {
  using UserType = typename std::remove_const<MaybeConstUserType>::type;
  using Traits = EnumTraits<::autofill::mojom::PasswordFormFieldPredictionType, UserType>;

  static void Serialize(UserType input, int32_t* output) {
    *output = static_cast<int32_t>(Traits::ToMojom(input));
  }

  static bool Deserialize(int32_t input, UserType* output) {
    return Traits::FromMojom(static_cast<::autofill::mojom::PasswordFormFieldPredictionType>(input), output);
  }
};

}  // namespace internal


template <>
struct EnumTraits<::autofill::mojom::SubmissionSource, ::autofill::mojom::SubmissionSource> {
  static ::autofill::mojom::SubmissionSource ToMojom(::autofill::mojom::SubmissionSource input) { return input; }
  static bool FromMojom(::autofill::mojom::SubmissionSource input, ::autofill::mojom::SubmissionSource* output) {
    *output = input;
    return true;
  }
};

namespace internal {

template <typename MaybeConstUserType>
struct Serializer<::autofill::mojom::SubmissionSource, MaybeConstUserType> {
  using UserType = typename std::remove_const<MaybeConstUserType>::type;
  using Traits = EnumTraits<::autofill::mojom::SubmissionSource, UserType>;

  static void Serialize(UserType input, int32_t* output) {
    *output = static_cast<int32_t>(Traits::ToMojom(input));
  }

  static bool Deserialize(int32_t input, UserType* output) {
    return Traits::FromMojom(static_cast<::autofill::mojom::SubmissionSource>(input), output);
  }
};

}  // namespace internal


template <>
struct EnumTraits<::autofill::mojom::FocusedFieldType, ::autofill::mojom::FocusedFieldType> {
  static ::autofill::mojom::FocusedFieldType ToMojom(::autofill::mojom::FocusedFieldType input) { return input; }
  static bool FromMojom(::autofill::mojom::FocusedFieldType input, ::autofill::mojom::FocusedFieldType* output) {
    *output = input;
    return true;
  }
};

namespace internal {

template <typename MaybeConstUserType>
struct Serializer<::autofill::mojom::FocusedFieldType, MaybeConstUserType> {
  using UserType = typename std::remove_const<MaybeConstUserType>::type;
  using Traits = EnumTraits<::autofill::mojom::FocusedFieldType, UserType>;

  static void Serialize(UserType input, int32_t* output) {
    *output = static_cast<int32_t>(Traits::ToMojom(input));
  }

  static bool Deserialize(int32_t input, UserType* output) {
    return Traits::FromMojom(static_cast<::autofill::mojom::FocusedFieldType>(input), output);
  }
};

}  // namespace internal


template <>
struct EnumTraits<::autofill::mojom::ButtonTitleType, ::autofill::mojom::ButtonTitleType> {
  static ::autofill::mojom::ButtonTitleType ToMojom(::autofill::mojom::ButtonTitleType input) { return input; }
  static bool FromMojom(::autofill::mojom::ButtonTitleType input, ::autofill::mojom::ButtonTitleType* output) {
    *output = input;
    return true;
  }
};

namespace internal {

template <typename MaybeConstUserType>
struct Serializer<::autofill::mojom::ButtonTitleType, MaybeConstUserType> {
  using UserType = typename std::remove_const<MaybeConstUserType>::type;
  using Traits = EnumTraits<::autofill::mojom::ButtonTitleType, UserType>;

  static void Serialize(UserType input, int32_t* output) {
    *output = static_cast<int32_t>(Traits::ToMojom(input));
  }

  static bool Deserialize(int32_t input, UserType* output) {
    return Traits::FromMojom(static_cast<::autofill::mojom::ButtonTitleType>(input), output);
  }
};

}  // namespace internal


template <>
struct EnumTraits<::autofill::mojom::AutofillState, ::autofill::mojom::AutofillState> {
  static ::autofill::mojom::AutofillState ToMojom(::autofill::mojom::AutofillState input) { return input; }
  static bool FromMojom(::autofill::mojom::AutofillState input, ::autofill::mojom::AutofillState* output) {
    *output = input;
    return true;
  }
};

namespace internal {

template <typename MaybeConstUserType>
struct Serializer<::autofill::mojom::AutofillState, MaybeConstUserType> {
  using UserType = typename std::remove_const<MaybeConstUserType>::type;
  using Traits = EnumTraits<::autofill::mojom::AutofillState, UserType>;

  static void Serialize(UserType input, int32_t* output) {
    *output = static_cast<int32_t>(Traits::ToMojom(input));
  }

  static bool Deserialize(int32_t input, UserType* output) {
    return Traits::FromMojom(static_cast<::autofill::mojom::AutofillState>(input), output);
  }
};

}  // namespace internal


template <>
struct EnumTraits<::autofill::mojom::FormFieldData_CheckStatus, ::autofill::mojom::FormFieldData_CheckStatus> {
  static ::autofill::mojom::FormFieldData_CheckStatus ToMojom(::autofill::mojom::FormFieldData_CheckStatus input) { return input; }
  static bool FromMojom(::autofill::mojom::FormFieldData_CheckStatus input, ::autofill::mojom::FormFieldData_CheckStatus* output) {
    *output = input;
    return true;
  }
};

namespace internal {

template <typename MaybeConstUserType>
struct Serializer<::autofill::mojom::FormFieldData_CheckStatus, MaybeConstUserType> {
  using UserType = typename std::remove_const<MaybeConstUserType>::type;
  using Traits = EnumTraits<::autofill::mojom::FormFieldData_CheckStatus, UserType>;

  static void Serialize(UserType input, int32_t* output) {
    *output = static_cast<int32_t>(Traits::ToMojom(input));
  }

  static bool Deserialize(int32_t input, UserType* output) {
    return Traits::FromMojom(static_cast<::autofill::mojom::FormFieldData_CheckStatus>(input), output);
  }
};

}  // namespace internal


template <>
struct EnumTraits<::autofill::mojom::FormFieldData_RoleAttribute, ::autofill::mojom::FormFieldData_RoleAttribute> {
  static ::autofill::mojom::FormFieldData_RoleAttribute ToMojom(::autofill::mojom::FormFieldData_RoleAttribute input) { return input; }
  static bool FromMojom(::autofill::mojom::FormFieldData_RoleAttribute input, ::autofill::mojom::FormFieldData_RoleAttribute* output) {
    *output = input;
    return true;
  }
};

namespace internal {

template <typename MaybeConstUserType>
struct Serializer<::autofill::mojom::FormFieldData_RoleAttribute, MaybeConstUserType> {
  using UserType = typename std::remove_const<MaybeConstUserType>::type;
  using Traits = EnumTraits<::autofill::mojom::FormFieldData_RoleAttribute, UserType>;

  static void Serialize(UserType input, int32_t* output) {
    *output = static_cast<int32_t>(Traits::ToMojom(input));
  }

  static bool Deserialize(int32_t input, UserType* output) {
    return Traits::FromMojom(static_cast<::autofill::mojom::FormFieldData_RoleAttribute>(input), output);
  }
};

}  // namespace internal


template <>
struct EnumTraits<::autofill::mojom::FormFieldData_LabelSource, ::autofill::mojom::FormFieldData_LabelSource> {
  static ::autofill::mojom::FormFieldData_LabelSource ToMojom(::autofill::mojom::FormFieldData_LabelSource input) { return input; }
  static bool FromMojom(::autofill::mojom::FormFieldData_LabelSource input, ::autofill::mojom::FormFieldData_LabelSource* output) {
    *output = input;
    return true;
  }
};

namespace internal {

template <typename MaybeConstUserType>
struct Serializer<::autofill::mojom::FormFieldData_LabelSource, MaybeConstUserType> {
  using UserType = typename std::remove_const<MaybeConstUserType>::type;
  using Traits = EnumTraits<::autofill::mojom::FormFieldData_LabelSource, UserType>;

  static void Serialize(UserType input, int32_t* output) {
    *output = static_cast<int32_t>(Traits::ToMojom(input));
  }

  static bool Deserialize(int32_t input, UserType* output) {
    return Traits::FromMojom(static_cast<::autofill::mojom::FormFieldData_LabelSource>(input), output);
  }
};

}  // namespace internal


template <>
struct EnumTraits<::autofill::mojom::PasswordForm_Scheme, ::autofill::mojom::PasswordForm_Scheme> {
  static ::autofill::mojom::PasswordForm_Scheme ToMojom(::autofill::mojom::PasswordForm_Scheme input) { return input; }
  static bool FromMojom(::autofill::mojom::PasswordForm_Scheme input, ::autofill::mojom::PasswordForm_Scheme* output) {
    *output = input;
    return true;
  }
};

namespace internal {

template <typename MaybeConstUserType>
struct Serializer<::autofill::mojom::PasswordForm_Scheme, MaybeConstUserType> {
  using UserType = typename std::remove_const<MaybeConstUserType>::type;
  using Traits = EnumTraits<::autofill::mojom::PasswordForm_Scheme, UserType>;

  static void Serialize(UserType input, int32_t* output) {
    *output = static_cast<int32_t>(Traits::ToMojom(input));
  }

  static bool Deserialize(int32_t input, UserType* output) {
    return Traits::FromMojom(static_cast<::autofill::mojom::PasswordForm_Scheme>(input), output);
  }
};

}  // namespace internal


template <>
struct EnumTraits<::autofill::mojom::PasswordForm_Type, ::autofill::mojom::PasswordForm_Type> {
  static ::autofill::mojom::PasswordForm_Type ToMojom(::autofill::mojom::PasswordForm_Type input) { return input; }
  static bool FromMojom(::autofill::mojom::PasswordForm_Type input, ::autofill::mojom::PasswordForm_Type* output) {
    *output = input;
    return true;
  }
};

namespace internal {

template <typename MaybeConstUserType>
struct Serializer<::autofill::mojom::PasswordForm_Type, MaybeConstUserType> {
  using UserType = typename std::remove_const<MaybeConstUserType>::type;
  using Traits = EnumTraits<::autofill::mojom::PasswordForm_Type, UserType>;

  static void Serialize(UserType input, int32_t* output) {
    *output = static_cast<int32_t>(Traits::ToMojom(input));
  }

  static bool Deserialize(int32_t input, UserType* output) {
    return Traits::FromMojom(static_cast<::autofill::mojom::PasswordForm_Type>(input), output);
  }
};

}  // namespace internal


template <>
struct EnumTraits<::autofill::mojom::PasswordForm_GenerationUploadStatus, ::autofill::mojom::PasswordForm_GenerationUploadStatus> {
  static ::autofill::mojom::PasswordForm_GenerationUploadStatus ToMojom(::autofill::mojom::PasswordForm_GenerationUploadStatus input) { return input; }
  static bool FromMojom(::autofill::mojom::PasswordForm_GenerationUploadStatus input, ::autofill::mojom::PasswordForm_GenerationUploadStatus* output) {
    *output = input;
    return true;
  }
};

namespace internal {

template <typename MaybeConstUserType>
struct Serializer<::autofill::mojom::PasswordForm_GenerationUploadStatus, MaybeConstUserType> {
  using UserType = typename std::remove_const<MaybeConstUserType>::type;
  using Traits = EnumTraits<::autofill::mojom::PasswordForm_GenerationUploadStatus, UserType>;

  static void Serialize(UserType input, int32_t* output) {
    *output = static_cast<int32_t>(Traits::ToMojom(input));
  }

  static bool Deserialize(int32_t input, UserType* output) {
    return Traits::FromMojom(static_cast<::autofill::mojom::PasswordForm_GenerationUploadStatus>(input), output);
  }
};

}  // namespace internal


namespace internal {

template <typename MaybeConstUserType>
struct Serializer<::autofill::mojom::FormFieldDataDataView, MaybeConstUserType> {
  using UserType = typename std::remove_const<MaybeConstUserType>::type;
  using Traits = StructTraits<::autofill::mojom::FormFieldDataDataView, UserType>;

  static void Serialize(MaybeConstUserType& input,
                        Buffer* buffer,
                        ::autofill::mojom::internal::FormFieldData_Data::BufferWriter* output,
                        SerializationContext* context) {
    if (CallIsNullIfExists<Traits>(input))
      return;
    (*output).Allocate(buffer);
    decltype(Traits::label(input)) in_label = Traits::label(input);
    typename decltype((*output)->label)::BaseType::BufferWriter
        label_writer;
    mojo::internal::Serialize<::mojo_base::mojom::String16DataView>(
        in_label, buffer, &label_writer, context);
    (*output)->label.Set(
        label_writer.is_null() ? nullptr : label_writer.data());
    MOJO_INTERNAL_DLOG_SERIALIZATION_WARNING(
        (*output)->label.is_null(),
        mojo::internal::VALIDATION_ERROR_UNEXPECTED_NULL_POINTER,
        "null label in FormFieldData struct");
    decltype(Traits::name(input)) in_name = Traits::name(input);
    typename decltype((*output)->name)::BaseType::BufferWriter
        name_writer;
    mojo::internal::Serialize<::mojo_base::mojom::String16DataView>(
        in_name, buffer, &name_writer, context);
    (*output)->name.Set(
        name_writer.is_null() ? nullptr : name_writer.data());
    MOJO_INTERNAL_DLOG_SERIALIZATION_WARNING(
        (*output)->name.is_null(),
        mojo::internal::VALIDATION_ERROR_UNEXPECTED_NULL_POINTER,
        "null name in FormFieldData struct");
    decltype(Traits::id_attribute(input)) in_id_attribute = Traits::id_attribute(input);
    typename decltype((*output)->id_attribute)::BaseType::BufferWriter
        id_attribute_writer;
    mojo::internal::Serialize<::mojo_base::mojom::String16DataView>(
        in_id_attribute, buffer, &id_attribute_writer, context);
    (*output)->id_attribute.Set(
        id_attribute_writer.is_null() ? nullptr : id_attribute_writer.data());
    MOJO_INTERNAL_DLOG_SERIALIZATION_WARNING(
        (*output)->id_attribute.is_null(),
        mojo::internal::VALIDATION_ERROR_UNEXPECTED_NULL_POINTER,
        "null id_attribute in FormFieldData struct");
    decltype(Traits::name_attribute(input)) in_name_attribute = Traits::name_attribute(input);
    typename decltype((*output)->name_attribute)::BaseType::BufferWriter
        name_attribute_writer;
    mojo::internal::Serialize<::mojo_base::mojom::String16DataView>(
        in_name_attribute, buffer, &name_attribute_writer, context);
    (*output)->name_attribute.Set(
        name_attribute_writer.is_null() ? nullptr : name_attribute_writer.data());
    MOJO_INTERNAL_DLOG_SERIALIZATION_WARNING(
        (*output)->name_attribute.is_null(),
        mojo::internal::VALIDATION_ERROR_UNEXPECTED_NULL_POINTER,
        "null name_attribute in FormFieldData struct");
    decltype(Traits::value(input)) in_value = Traits::value(input);
    typename decltype((*output)->value)::BaseType::BufferWriter
        value_writer;
    mojo::internal::Serialize<::mojo_base::mojom::String16DataView>(
        in_value, buffer, &value_writer, context);
    (*output)->value.Set(
        value_writer.is_null() ? nullptr : value_writer.data());
    MOJO_INTERNAL_DLOG_SERIALIZATION_WARNING(
        (*output)->value.is_null(),
        mojo::internal::VALIDATION_ERROR_UNEXPECTED_NULL_POINTER,
        "null value in FormFieldData struct");
    decltype(Traits::form_control_type(input)) in_form_control_type = Traits::form_control_type(input);
    typename decltype((*output)->form_control_type)::BaseType::BufferWriter
        form_control_type_writer;
    mojo::internal::Serialize<mojo::StringDataView>(
        in_form_control_type, buffer, &form_control_type_writer, context);
    (*output)->form_control_type.Set(
        form_control_type_writer.is_null() ? nullptr : form_control_type_writer.data());
    MOJO_INTERNAL_DLOG_SERIALIZATION_WARNING(
        (*output)->form_control_type.is_null(),
        mojo::internal::VALIDATION_ERROR_UNEXPECTED_NULL_POINTER,
        "null form_control_type in FormFieldData struct");
    decltype(Traits::autocomplete_attribute(input)) in_autocomplete_attribute = Traits::autocomplete_attribute(input);
    typename decltype((*output)->autocomplete_attribute)::BaseType::BufferWriter
        autocomplete_attribute_writer;
    mojo::internal::Serialize<mojo::StringDataView>(
        in_autocomplete_attribute, buffer, &autocomplete_attribute_writer, context);
    (*output)->autocomplete_attribute.Set(
        autocomplete_attribute_writer.is_null() ? nullptr : autocomplete_attribute_writer.data());
    MOJO_INTERNAL_DLOG_SERIALIZATION_WARNING(
        (*output)->autocomplete_attribute.is_null(),
        mojo::internal::VALIDATION_ERROR_UNEXPECTED_NULL_POINTER,
        "null autocomplete_attribute in FormFieldData struct");
    decltype(Traits::placeholder(input)) in_placeholder = Traits::placeholder(input);
    typename decltype((*output)->placeholder)::BaseType::BufferWriter
        placeholder_writer;
    mojo::internal::Serialize<::mojo_base::mojom::String16DataView>(
        in_placeholder, buffer, &placeholder_writer, context);
    (*output)->placeholder.Set(
        placeholder_writer.is_null() ? nullptr : placeholder_writer.data());
    MOJO_INTERNAL_DLOG_SERIALIZATION_WARNING(
        (*output)->placeholder.is_null(),
        mojo::internal::VALIDATION_ERROR_UNEXPECTED_NULL_POINTER,
        "null placeholder in FormFieldData struct");
    decltype(Traits::css_classes(input)) in_css_classes = Traits::css_classes(input);
    typename decltype((*output)->css_classes)::BaseType::BufferWriter
        css_classes_writer;
    mojo::internal::Serialize<::mojo_base::mojom::String16DataView>(
        in_css_classes, buffer, &css_classes_writer, context);
    (*output)->css_classes.Set(
        css_classes_writer.is_null() ? nullptr : css_classes_writer.data());
    MOJO_INTERNAL_DLOG_SERIALIZATION_WARNING(
        (*output)->css_classes.is_null(),
        mojo::internal::VALIDATION_ERROR_UNEXPECTED_NULL_POINTER,
        "null css_classes in FormFieldData struct");
    decltype(Traits::aria_label(input)) in_aria_label = Traits::aria_label(input);
    typename decltype((*output)->aria_label)::BaseType::BufferWriter
        aria_label_writer;
    mojo::internal::Serialize<::mojo_base::mojom::String16DataView>(
        in_aria_label, buffer, &aria_label_writer, context);
    (*output)->aria_label.Set(
        aria_label_writer.is_null() ? nullptr : aria_label_writer.data());
    MOJO_INTERNAL_DLOG_SERIALIZATION_WARNING(
        (*output)->aria_label.is_null(),
        mojo::internal::VALIDATION_ERROR_UNEXPECTED_NULL_POINTER,
        "null aria_label in FormFieldData struct");
    decltype(Traits::aria_description(input)) in_aria_description = Traits::aria_description(input);
    typename decltype((*output)->aria_description)::BaseType::BufferWriter
        aria_description_writer;
    mojo::internal::Serialize<::mojo_base::mojom::String16DataView>(
        in_aria_description, buffer, &aria_description_writer, context);
    (*output)->aria_description.Set(
        aria_description_writer.is_null() ? nullptr : aria_description_writer.data());
    MOJO_INTERNAL_DLOG_SERIALIZATION_WARNING(
        (*output)->aria_description.is_null(),
        mojo::internal::VALIDATION_ERROR_UNEXPECTED_NULL_POINTER,
        "null aria_description in FormFieldData struct");
    (*output)->unique_renderer_id = Traits::unique_renderer_id(input);
    (*output)->properties_mask = Traits::properties_mask(input);
    (*output)->form_control_ax_id = Traits::form_control_ax_id(input);
    (*output)->max_length = Traits::max_length(input);
    (*output)->is_autofilled = Traits::is_autofilled(input);
    decltype(Traits::section(input)) in_section = Traits::section(input);
    typename decltype((*output)->section)::BaseType::BufferWriter
        section_writer;
    mojo::internal::Serialize<mojo::StringDataView>(
        in_section, buffer, &section_writer, context);
    (*output)->section.Set(
        section_writer.is_null() ? nullptr : section_writer.data());
    MOJO_INTERNAL_DLOG_SERIALIZATION_WARNING(
        (*output)->section.is_null(),
        mojo::internal::VALIDATION_ERROR_UNEXPECTED_NULL_POINTER,
        "null section in FormFieldData struct");
    mojo::internal::Serialize<::autofill::mojom::FormFieldData_CheckStatus>(
        Traits::check_status(input), &(*output)->check_status);
    (*output)->is_focusable = Traits::is_focusable(input);
    (*output)->should_autocomplete = Traits::should_autocomplete(input);
    mojo::internal::Serialize<::autofill::mojom::FormFieldData_RoleAttribute>(
        Traits::role(input), &(*output)->role);
    mojo::internal::Serialize<::mojo_base::mojom::TextDirection>(
        Traits::text_direction(input), &(*output)->text_direction);
    (*output)->is_enabled = Traits::is_enabled(input);
    (*output)->is_readonly = Traits::is_readonly(input);
    decltype(Traits::typed_value(input)) in_typed_value = Traits::typed_value(input);
    typename decltype((*output)->typed_value)::BaseType::BufferWriter
        typed_value_writer;
    mojo::internal::Serialize<::mojo_base::mojom::String16DataView>(
        in_typed_value, buffer, &typed_value_writer, context);
    (*output)->typed_value.Set(
        typed_value_writer.is_null() ? nullptr : typed_value_writer.data());
    MOJO_INTERNAL_DLOG_SERIALIZATION_WARNING(
        (*output)->typed_value.is_null(),
        mojo::internal::VALIDATION_ERROR_UNEXPECTED_NULL_POINTER,
        "null typed_value in FormFieldData struct");
    decltype(Traits::option_values(input)) in_option_values = Traits::option_values(input);
    typename decltype((*output)->option_values)::BaseType::BufferWriter
        option_values_writer;
    const mojo::internal::ContainerValidateParams option_values_validate_params(
        0, false, nullptr);
    mojo::internal::Serialize<mojo::ArrayDataView<::mojo_base::mojom::String16DataView>>(
        in_option_values, buffer, &option_values_writer, &option_values_validate_params,
        context);
    (*output)->option_values.Set(
        option_values_writer.is_null() ? nullptr : option_values_writer.data());
    MOJO_INTERNAL_DLOG_SERIALIZATION_WARNING(
        (*output)->option_values.is_null(),
        mojo::internal::VALIDATION_ERROR_UNEXPECTED_NULL_POINTER,
        "null option_values in FormFieldData struct");
    decltype(Traits::option_contents(input)) in_option_contents = Traits::option_contents(input);
    typename decltype((*output)->option_contents)::BaseType::BufferWriter
        option_contents_writer;
    const mojo::internal::ContainerValidateParams option_contents_validate_params(
        0, false, nullptr);
    mojo::internal::Serialize<mojo::ArrayDataView<::mojo_base::mojom::String16DataView>>(
        in_option_contents, buffer, &option_contents_writer, &option_contents_validate_params,
        context);
    (*output)->option_contents.Set(
        option_contents_writer.is_null() ? nullptr : option_contents_writer.data());
    MOJO_INTERNAL_DLOG_SERIALIZATION_WARNING(
        (*output)->option_contents.is_null(),
        mojo::internal::VALIDATION_ERROR_UNEXPECTED_NULL_POINTER,
        "null option_contents in FormFieldData struct");
    mojo::internal::Serialize<::autofill::mojom::FormFieldData_LabelSource>(
        Traits::label_source(input), &(*output)->label_source);
  }

  static bool Deserialize(::autofill::mojom::internal::FormFieldData_Data* input,
                          UserType* output,
                          SerializationContext* context) {
    if (!input)
      return CallSetToNullIfExists<Traits>(output);

    ::autofill::mojom::FormFieldDataDataView data_view(input, context);
    return Traits::Read(data_view, output);
  }
};

}  // namespace internal


namespace internal {

template <typename MaybeConstUserType>
struct Serializer<::autofill::mojom::ButtonTitleInfoDataView, MaybeConstUserType> {
  using UserType = typename std::remove_const<MaybeConstUserType>::type;
  using Traits = StructTraits<::autofill::mojom::ButtonTitleInfoDataView, UserType>;

  static void Serialize(MaybeConstUserType& input,
                        Buffer* buffer,
                        ::autofill::mojom::internal::ButtonTitleInfo_Data::BufferWriter* output,
                        SerializationContext* context) {
    if (CallIsNullIfExists<Traits>(input))
      return;
    (*output).Allocate(buffer);
    decltype(Traits::title(input)) in_title = Traits::title(input);
    typename decltype((*output)->title)::BaseType::BufferWriter
        title_writer;
    mojo::internal::Serialize<::mojo_base::mojom::String16DataView>(
        in_title, buffer, &title_writer, context);
    (*output)->title.Set(
        title_writer.is_null() ? nullptr : title_writer.data());
    MOJO_INTERNAL_DLOG_SERIALIZATION_WARNING(
        (*output)->title.is_null(),
        mojo::internal::VALIDATION_ERROR_UNEXPECTED_NULL_POINTER,
        "null title in ButtonTitleInfo struct");
    mojo::internal::Serialize<::autofill::mojom::ButtonTitleType>(
        Traits::type(input), &(*output)->type);
  }

  static bool Deserialize(::autofill::mojom::internal::ButtonTitleInfo_Data* input,
                          UserType* output,
                          SerializationContext* context) {
    if (!input)
      return CallSetToNullIfExists<Traits>(output);

    ::autofill::mojom::ButtonTitleInfoDataView data_view(input, context);
    return Traits::Read(data_view, output);
  }
};

}  // namespace internal


namespace internal {

template <typename MaybeConstUserType>
struct Serializer<::autofill::mojom::FormDataDataView, MaybeConstUserType> {
  using UserType = typename std::remove_const<MaybeConstUserType>::type;
  using Traits = StructTraits<::autofill::mojom::FormDataDataView, UserType>;

  static void Serialize(MaybeConstUserType& input,
                        Buffer* buffer,
                        ::autofill::mojom::internal::FormData_Data::BufferWriter* output,
                        SerializationContext* context) {
    if (CallIsNullIfExists<Traits>(input))
      return;
    (*output).Allocate(buffer);
    decltype(Traits::id_attribute(input)) in_id_attribute = Traits::id_attribute(input);
    typename decltype((*output)->id_attribute)::BaseType::BufferWriter
        id_attribute_writer;
    mojo::internal::Serialize<::mojo_base::mojom::String16DataView>(
        in_id_attribute, buffer, &id_attribute_writer, context);
    (*output)->id_attribute.Set(
        id_attribute_writer.is_null() ? nullptr : id_attribute_writer.data());
    MOJO_INTERNAL_DLOG_SERIALIZATION_WARNING(
        (*output)->id_attribute.is_null(),
        mojo::internal::VALIDATION_ERROR_UNEXPECTED_NULL_POINTER,
        "null id_attribute in FormData struct");
    decltype(Traits::name_attribute(input)) in_name_attribute = Traits::name_attribute(input);
    typename decltype((*output)->name_attribute)::BaseType::BufferWriter
        name_attribute_writer;
    mojo::internal::Serialize<::mojo_base::mojom::String16DataView>(
        in_name_attribute, buffer, &name_attribute_writer, context);
    (*output)->name_attribute.Set(
        name_attribute_writer.is_null() ? nullptr : name_attribute_writer.data());
    MOJO_INTERNAL_DLOG_SERIALIZATION_WARNING(
        (*output)->name_attribute.is_null(),
        mojo::internal::VALIDATION_ERROR_UNEXPECTED_NULL_POINTER,
        "null name_attribute in FormData struct");
    decltype(Traits::name(input)) in_name = Traits::name(input);
    typename decltype((*output)->name)::BaseType::BufferWriter
        name_writer;
    mojo::internal::Serialize<::mojo_base::mojom::String16DataView>(
        in_name, buffer, &name_writer, context);
    (*output)->name.Set(
        name_writer.is_null() ? nullptr : name_writer.data());
    MOJO_INTERNAL_DLOG_SERIALIZATION_WARNING(
        (*output)->name.is_null(),
        mojo::internal::VALIDATION_ERROR_UNEXPECTED_NULL_POINTER,
        "null name in FormData struct");
    decltype(Traits::button_titles(input)) in_button_titles = Traits::button_titles(input);
    typename decltype((*output)->button_titles)::BaseType::BufferWriter
        button_titles_writer;
    const mojo::internal::ContainerValidateParams button_titles_validate_params(
        0, false, nullptr);
    mojo::internal::Serialize<mojo::ArrayDataView<::autofill::mojom::ButtonTitleInfoDataView>>(
        in_button_titles, buffer, &button_titles_writer, &button_titles_validate_params,
        context);
    (*output)->button_titles.Set(
        button_titles_writer.is_null() ? nullptr : button_titles_writer.data());
    MOJO_INTERNAL_DLOG_SERIALIZATION_WARNING(
        (*output)->button_titles.is_null(),
        mojo::internal::VALIDATION_ERROR_UNEXPECTED_NULL_POINTER,
        "null button_titles in FormData struct");
    decltype(Traits::url(input)) in_url = Traits::url(input);
    typename decltype((*output)->url)::BaseType::BufferWriter
        url_writer;
    mojo::internal::Serialize<::url::mojom::UrlDataView>(
        in_url, buffer, &url_writer, context);
    (*output)->url.Set(
        url_writer.is_null() ? nullptr : url_writer.data());
    MOJO_INTERNAL_DLOG_SERIALIZATION_WARNING(
        (*output)->url.is_null(),
        mojo::internal::VALIDATION_ERROR_UNEXPECTED_NULL_POINTER,
        "null url in FormData struct");
    decltype(Traits::action(input)) in_action = Traits::action(input);
    typename decltype((*output)->action)::BaseType::BufferWriter
        action_writer;
    mojo::internal::Serialize<::url::mojom::UrlDataView>(
        in_action, buffer, &action_writer, context);
    (*output)->action.Set(
        action_writer.is_null() ? nullptr : action_writer.data());
    MOJO_INTERNAL_DLOG_SERIALIZATION_WARNING(
        (*output)->action.is_null(),
        mojo::internal::VALIDATION_ERROR_UNEXPECTED_NULL_POINTER,
        "null action in FormData struct");
    (*output)->is_action_empty = Traits::is_action_empty(input);
    decltype(Traits::main_frame_origin(input)) in_main_frame_origin = Traits::main_frame_origin(input);
    typename decltype((*output)->main_frame_origin)::BaseType::BufferWriter
        main_frame_origin_writer;
    mojo::internal::Serialize<::url::mojom::OriginDataView>(
        in_main_frame_origin, buffer, &main_frame_origin_writer, context);
    (*output)->main_frame_origin.Set(
        main_frame_origin_writer.is_null() ? nullptr : main_frame_origin_writer.data());
    MOJO_INTERNAL_DLOG_SERIALIZATION_WARNING(
        (*output)->main_frame_origin.is_null(),
        mojo::internal::VALIDATION_ERROR_UNEXPECTED_NULL_POINTER,
        "null main_frame_origin in FormData struct");
    (*output)->is_form_tag = Traits::is_form_tag(input);
    (*output)->is_formless_checkout = Traits::is_formless_checkout(input);
    (*output)->unique_renderer_id = Traits::unique_renderer_id(input);
    mojo::internal::Serialize<::autofill::mojom::SubmissionIndicatorEvent>(
        Traits::submission_event(input), &(*output)->submission_event);
    decltype(Traits::fields(input)) in_fields = Traits::fields(input);
    typename decltype((*output)->fields)::BaseType::BufferWriter
        fields_writer;
    const mojo::internal::ContainerValidateParams fields_validate_params(
        0, false, nullptr);
    mojo::internal::Serialize<mojo::ArrayDataView<::autofill::mojom::FormFieldDataDataView>>(
        in_fields, buffer, &fields_writer, &fields_validate_params,
        context);
    (*output)->fields.Set(
        fields_writer.is_null() ? nullptr : fields_writer.data());
    MOJO_INTERNAL_DLOG_SERIALIZATION_WARNING(
        (*output)->fields.is_null(),
        mojo::internal::VALIDATION_ERROR_UNEXPECTED_NULL_POINTER,
        "null fields in FormData struct");
    decltype(Traits::username_predictions(input)) in_username_predictions = Traits::username_predictions(input);
    typename decltype((*output)->username_predictions)::BaseType::BufferWriter
        username_predictions_writer;
    const mojo::internal::ContainerValidateParams username_predictions_validate_params(
        0, false, nullptr);
    mojo::internal::Serialize<mojo::ArrayDataView<uint32_t>>(
        in_username_predictions, buffer, &username_predictions_writer, &username_predictions_validate_params,
        context);
    (*output)->username_predictions.Set(
        username_predictions_writer.is_null() ? nullptr : username_predictions_writer.data());
    MOJO_INTERNAL_DLOG_SERIALIZATION_WARNING(
        (*output)->username_predictions.is_null(),
        mojo::internal::VALIDATION_ERROR_UNEXPECTED_NULL_POINTER,
        "null username_predictions in FormData struct");
    (*output)->is_gaia_with_skip_save_password_form = Traits::is_gaia_with_skip_save_password_form(input);
  }

  static bool Deserialize(::autofill::mojom::internal::FormData_Data* input,
                          UserType* output,
                          SerializationContext* context) {
    if (!input)
      return CallSetToNullIfExists<Traits>(output);

    ::autofill::mojom::FormDataDataView data_view(input, context);
    return Traits::Read(data_view, output);
  }
};

}  // namespace internal


namespace internal {

template <typename MaybeConstUserType>
struct Serializer<::autofill::mojom::FormFieldDataPredictionsDataView, MaybeConstUserType> {
  using UserType = typename std::remove_const<MaybeConstUserType>::type;
  using Traits = StructTraits<::autofill::mojom::FormFieldDataPredictionsDataView, UserType>;

  static void Serialize(MaybeConstUserType& input,
                        Buffer* buffer,
                        ::autofill::mojom::internal::FormFieldDataPredictions_Data::BufferWriter* output,
                        SerializationContext* context) {
    if (CallIsNullIfExists<Traits>(input))
      return;
    (*output).Allocate(buffer);
    decltype(Traits::field(input)) in_field = Traits::field(input);
    typename decltype((*output)->field)::BaseType::BufferWriter
        field_writer;
    mojo::internal::Serialize<::autofill::mojom::FormFieldDataDataView>(
        in_field, buffer, &field_writer, context);
    (*output)->field.Set(
        field_writer.is_null() ? nullptr : field_writer.data());
    MOJO_INTERNAL_DLOG_SERIALIZATION_WARNING(
        (*output)->field.is_null(),
        mojo::internal::VALIDATION_ERROR_UNEXPECTED_NULL_POINTER,
        "null field in FormFieldDataPredictions struct");
    decltype(Traits::signature(input)) in_signature = Traits::signature(input);
    typename decltype((*output)->signature)::BaseType::BufferWriter
        signature_writer;
    mojo::internal::Serialize<mojo::StringDataView>(
        in_signature, buffer, &signature_writer, context);
    (*output)->signature.Set(
        signature_writer.is_null() ? nullptr : signature_writer.data());
    MOJO_INTERNAL_DLOG_SERIALIZATION_WARNING(
        (*output)->signature.is_null(),
        mojo::internal::VALIDATION_ERROR_UNEXPECTED_NULL_POINTER,
        "null signature in FormFieldDataPredictions struct");
    decltype(Traits::heuristic_type(input)) in_heuristic_type = Traits::heuristic_type(input);
    typename decltype((*output)->heuristic_type)::BaseType::BufferWriter
        heuristic_type_writer;
    mojo::internal::Serialize<mojo::StringDataView>(
        in_heuristic_type, buffer, &heuristic_type_writer, context);
    (*output)->heuristic_type.Set(
        heuristic_type_writer.is_null() ? nullptr : heuristic_type_writer.data());
    MOJO_INTERNAL_DLOG_SERIALIZATION_WARNING(
        (*output)->heuristic_type.is_null(),
        mojo::internal::VALIDATION_ERROR_UNEXPECTED_NULL_POINTER,
        "null heuristic_type in FormFieldDataPredictions struct");
    decltype(Traits::server_type(input)) in_server_type = Traits::server_type(input);
    typename decltype((*output)->server_type)::BaseType::BufferWriter
        server_type_writer;
    mojo::internal::Serialize<mojo::StringDataView>(
        in_server_type, buffer, &server_type_writer, context);
    (*output)->server_type.Set(
        server_type_writer.is_null() ? nullptr : server_type_writer.data());
    MOJO_INTERNAL_DLOG_SERIALIZATION_WARNING(
        (*output)->server_type.is_null(),
        mojo::internal::VALIDATION_ERROR_UNEXPECTED_NULL_POINTER,
        "null server_type in FormFieldDataPredictions struct");
    decltype(Traits::overall_type(input)) in_overall_type = Traits::overall_type(input);
    typename decltype((*output)->overall_type)::BaseType::BufferWriter
        overall_type_writer;
    mojo::internal::Serialize<mojo::StringDataView>(
        in_overall_type, buffer, &overall_type_writer, context);
    (*output)->overall_type.Set(
        overall_type_writer.is_null() ? nullptr : overall_type_writer.data());
    MOJO_INTERNAL_DLOG_SERIALIZATION_WARNING(
        (*output)->overall_type.is_null(),
        mojo::internal::VALIDATION_ERROR_UNEXPECTED_NULL_POINTER,
        "null overall_type in FormFieldDataPredictions struct");
    decltype(Traits::parseable_name(input)) in_parseable_name = Traits::parseable_name(input);
    typename decltype((*output)->parseable_name)::BaseType::BufferWriter
        parseable_name_writer;
    mojo::internal::Serialize<mojo::StringDataView>(
        in_parseable_name, buffer, &parseable_name_writer, context);
    (*output)->parseable_name.Set(
        parseable_name_writer.is_null() ? nullptr : parseable_name_writer.data());
    MOJO_INTERNAL_DLOG_SERIALIZATION_WARNING(
        (*output)->parseable_name.is_null(),
        mojo::internal::VALIDATION_ERROR_UNEXPECTED_NULL_POINTER,
        "null parseable_name in FormFieldDataPredictions struct");
    decltype(Traits::section(input)) in_section = Traits::section(input);
    typename decltype((*output)->section)::BaseType::BufferWriter
        section_writer;
    mojo::internal::Serialize<mojo::StringDataView>(
        in_section, buffer, &section_writer, context);
    (*output)->section.Set(
        section_writer.is_null() ? nullptr : section_writer.data());
    MOJO_INTERNAL_DLOG_SERIALIZATION_WARNING(
        (*output)->section.is_null(),
        mojo::internal::VALIDATION_ERROR_UNEXPECTED_NULL_POINTER,
        "null section in FormFieldDataPredictions struct");
  }

  static bool Deserialize(::autofill::mojom::internal::FormFieldDataPredictions_Data* input,
                          UserType* output,
                          SerializationContext* context) {
    if (!input)
      return CallSetToNullIfExists<Traits>(output);

    ::autofill::mojom::FormFieldDataPredictionsDataView data_view(input, context);
    return Traits::Read(data_view, output);
  }
};

}  // namespace internal


namespace internal {

template <typename MaybeConstUserType>
struct Serializer<::autofill::mojom::FormDataPredictionsDataView, MaybeConstUserType> {
  using UserType = typename std::remove_const<MaybeConstUserType>::type;
  using Traits = StructTraits<::autofill::mojom::FormDataPredictionsDataView, UserType>;

  static void Serialize(MaybeConstUserType& input,
                        Buffer* buffer,
                        ::autofill::mojom::internal::FormDataPredictions_Data::BufferWriter* output,
                        SerializationContext* context) {
    if (CallIsNullIfExists<Traits>(input))
      return;
    (*output).Allocate(buffer);
    decltype(Traits::data(input)) in_data = Traits::data(input);
    typename decltype((*output)->data)::BaseType::BufferWriter
        data_writer;
    mojo::internal::Serialize<::autofill::mojom::FormDataDataView>(
        in_data, buffer, &data_writer, context);
    (*output)->data.Set(
        data_writer.is_null() ? nullptr : data_writer.data());
    MOJO_INTERNAL_DLOG_SERIALIZATION_WARNING(
        (*output)->data.is_null(),
        mojo::internal::VALIDATION_ERROR_UNEXPECTED_NULL_POINTER,
        "null data in FormDataPredictions struct");
    decltype(Traits::signature(input)) in_signature = Traits::signature(input);
    typename decltype((*output)->signature)::BaseType::BufferWriter
        signature_writer;
    mojo::internal::Serialize<mojo::StringDataView>(
        in_signature, buffer, &signature_writer, context);
    (*output)->signature.Set(
        signature_writer.is_null() ? nullptr : signature_writer.data());
    MOJO_INTERNAL_DLOG_SERIALIZATION_WARNING(
        (*output)->signature.is_null(),
        mojo::internal::VALIDATION_ERROR_UNEXPECTED_NULL_POINTER,
        "null signature in FormDataPredictions struct");
    decltype(Traits::fields(input)) in_fields = Traits::fields(input);
    typename decltype((*output)->fields)::BaseType::BufferWriter
        fields_writer;
    const mojo::internal::ContainerValidateParams fields_validate_params(
        0, false, nullptr);
    mojo::internal::Serialize<mojo::ArrayDataView<::autofill::mojom::FormFieldDataPredictionsDataView>>(
        in_fields, buffer, &fields_writer, &fields_validate_params,
        context);
    (*output)->fields.Set(
        fields_writer.is_null() ? nullptr : fields_writer.data());
    MOJO_INTERNAL_DLOG_SERIALIZATION_WARNING(
        (*output)->fields.is_null(),
        mojo::internal::VALIDATION_ERROR_UNEXPECTED_NULL_POINTER,
        "null fields in FormDataPredictions struct");
  }

  static bool Deserialize(::autofill::mojom::internal::FormDataPredictions_Data* input,
                          UserType* output,
                          SerializationContext* context) {
    if (!input)
      return CallSetToNullIfExists<Traits>(output);

    ::autofill::mojom::FormDataPredictionsDataView data_view(input, context);
    return Traits::Read(data_view, output);
  }
};

}  // namespace internal


namespace internal {

template <typename MaybeConstUserType>
struct Serializer<::autofill::mojom::PasswordAndMetadataDataView, MaybeConstUserType> {
  using UserType = typename std::remove_const<MaybeConstUserType>::type;
  using Traits = StructTraits<::autofill::mojom::PasswordAndMetadataDataView, UserType>;

  static void Serialize(MaybeConstUserType& input,
                        Buffer* buffer,
                        ::autofill::mojom::internal::PasswordAndMetadata_Data::BufferWriter* output,
                        SerializationContext* context) {
    if (CallIsNullIfExists<Traits>(input))
      return;
    (*output).Allocate(buffer);
    decltype(Traits::password(input)) in_password = Traits::password(input);
    typename decltype((*output)->password)::BaseType::BufferWriter
        password_writer;
    mojo::internal::Serialize<::mojo_base::mojom::String16DataView>(
        in_password, buffer, &password_writer, context);
    (*output)->password.Set(
        password_writer.is_null() ? nullptr : password_writer.data());
    MOJO_INTERNAL_DLOG_SERIALIZATION_WARNING(
        (*output)->password.is_null(),
        mojo::internal::VALIDATION_ERROR_UNEXPECTED_NULL_POINTER,
        "null password in PasswordAndMetadata struct");
    decltype(Traits::realm(input)) in_realm = Traits::realm(input);
    typename decltype((*output)->realm)::BaseType::BufferWriter
        realm_writer;
    mojo::internal::Serialize<mojo::StringDataView>(
        in_realm, buffer, &realm_writer, context);
    (*output)->realm.Set(
        realm_writer.is_null() ? nullptr : realm_writer.data());
    MOJO_INTERNAL_DLOG_SERIALIZATION_WARNING(
        (*output)->realm.is_null(),
        mojo::internal::VALIDATION_ERROR_UNEXPECTED_NULL_POINTER,
        "null realm in PasswordAndMetadata struct");
    (*output)->uses_account_store = Traits::uses_account_store(input);
  }

  static bool Deserialize(::autofill::mojom::internal::PasswordAndMetadata_Data* input,
                          UserType* output,
                          SerializationContext* context) {
    if (!input)
      return CallSetToNullIfExists<Traits>(output);

    ::autofill::mojom::PasswordAndMetadataDataView data_view(input, context);
    return Traits::Read(data_view, output);
  }
};

}  // namespace internal


namespace internal {

template <typename MaybeConstUserType>
struct Serializer<::autofill::mojom::PasswordFormFillDataDataView, MaybeConstUserType> {
  using UserType = typename std::remove_const<MaybeConstUserType>::type;
  using Traits = StructTraits<::autofill::mojom::PasswordFormFillDataDataView, UserType>;

  static void Serialize(MaybeConstUserType& input,
                        Buffer* buffer,
                        ::autofill::mojom::internal::PasswordFormFillData_Data::BufferWriter* output,
                        SerializationContext* context) {
    if (CallIsNullIfExists<Traits>(input))
      return;
    (*output).Allocate(buffer);
    (*output)->form_renderer_id = Traits::form_renderer_id(input);
    decltype(Traits::origin(input)) in_origin = Traits::origin(input);
    typename decltype((*output)->origin)::BaseType::BufferWriter
        origin_writer;
    mojo::internal::Serialize<::url::mojom::UrlDataView>(
        in_origin, buffer, &origin_writer, context);
    (*output)->origin.Set(
        origin_writer.is_null() ? nullptr : origin_writer.data());
    MOJO_INTERNAL_DLOG_SERIALIZATION_WARNING(
        (*output)->origin.is_null(),
        mojo::internal::VALIDATION_ERROR_UNEXPECTED_NULL_POINTER,
        "null origin in PasswordFormFillData struct");
    decltype(Traits::action(input)) in_action = Traits::action(input);
    typename decltype((*output)->action)::BaseType::BufferWriter
        action_writer;
    mojo::internal::Serialize<::url::mojom::UrlDataView>(
        in_action, buffer, &action_writer, context);
    (*output)->action.Set(
        action_writer.is_null() ? nullptr : action_writer.data());
    MOJO_INTERNAL_DLOG_SERIALIZATION_WARNING(
        (*output)->action.is_null(),
        mojo::internal::VALIDATION_ERROR_UNEXPECTED_NULL_POINTER,
        "null action in PasswordFormFillData struct");
    decltype(Traits::username_field(input)) in_username_field = Traits::username_field(input);
    typename decltype((*output)->username_field)::BaseType::BufferWriter
        username_field_writer;
    mojo::internal::Serialize<::autofill::mojom::FormFieldDataDataView>(
        in_username_field, buffer, &username_field_writer, context);
    (*output)->username_field.Set(
        username_field_writer.is_null() ? nullptr : username_field_writer.data());
    MOJO_INTERNAL_DLOG_SERIALIZATION_WARNING(
        (*output)->username_field.is_null(),
        mojo::internal::VALIDATION_ERROR_UNEXPECTED_NULL_POINTER,
        "null username_field in PasswordFormFillData struct");
    decltype(Traits::password_field(input)) in_password_field = Traits::password_field(input);
    typename decltype((*output)->password_field)::BaseType::BufferWriter
        password_field_writer;
    mojo::internal::Serialize<::autofill::mojom::FormFieldDataDataView>(
        in_password_field, buffer, &password_field_writer, context);
    (*output)->password_field.Set(
        password_field_writer.is_null() ? nullptr : password_field_writer.data());
    MOJO_INTERNAL_DLOG_SERIALIZATION_WARNING(
        (*output)->password_field.is_null(),
        mojo::internal::VALIDATION_ERROR_UNEXPECTED_NULL_POINTER,
        "null password_field in PasswordFormFillData struct");
    (*output)->username_may_use_prefilled_placeholder = Traits::username_may_use_prefilled_placeholder(input);
    decltype(Traits::preferred_realm(input)) in_preferred_realm = Traits::preferred_realm(input);
    typename decltype((*output)->preferred_realm)::BaseType::BufferWriter
        preferred_realm_writer;
    mojo::internal::Serialize<mojo::StringDataView>(
        in_preferred_realm, buffer, &preferred_realm_writer, context);
    (*output)->preferred_realm.Set(
        preferred_realm_writer.is_null() ? nullptr : preferred_realm_writer.data());
    MOJO_INTERNAL_DLOG_SERIALIZATION_WARNING(
        (*output)->preferred_realm.is_null(),
        mojo::internal::VALIDATION_ERROR_UNEXPECTED_NULL_POINTER,
        "null preferred_realm in PasswordFormFillData struct");
    (*output)->uses_account_store = Traits::uses_account_store(input);
    decltype(Traits::additional_logins(input)) in_additional_logins = Traits::additional_logins(input);
    typename decltype((*output)->additional_logins)::BaseType::BufferWriter
        additional_logins_writer;
    const mojo::internal::ContainerValidateParams additional_logins_validate_params(
        new mojo::internal::ContainerValidateParams(0, false, nullptr), new mojo::internal::ContainerValidateParams(0, false, nullptr));
    mojo::internal::Serialize<mojo::MapDataView<::mojo_base::mojom::String16DataView, ::autofill::mojom::PasswordAndMetadataDataView>>(
        in_additional_logins, buffer, &additional_logins_writer, &additional_logins_validate_params,
        context);
    (*output)->additional_logins.Set(
        additional_logins_writer.is_null() ? nullptr : additional_logins_writer.data());
    MOJO_INTERNAL_DLOG_SERIALIZATION_WARNING(
        (*output)->additional_logins.is_null(),
        mojo::internal::VALIDATION_ERROR_UNEXPECTED_NULL_POINTER,
        "null additional_logins in PasswordFormFillData struct");
    (*output)->wait_for_username = Traits::wait_for_username(input);
    (*output)->has_renderer_ids = Traits::has_renderer_ids(input);
  }

  static bool Deserialize(::autofill::mojom::internal::PasswordFormFillData_Data* input,
                          UserType* output,
                          SerializationContext* context) {
    if (!input)
      return CallSetToNullIfExists<Traits>(output);

    ::autofill::mojom::PasswordFormFillDataDataView data_view(input, context);
    return Traits::Read(data_view, output);
  }
};

}  // namespace internal


namespace internal {

template <typename MaybeConstUserType>
struct Serializer<::autofill::mojom::PasswordFormGenerationDataDataView, MaybeConstUserType> {
  using UserType = typename std::remove_const<MaybeConstUserType>::type;
  using Traits = StructTraits<::autofill::mojom::PasswordFormGenerationDataDataView, UserType>;

  static void Serialize(MaybeConstUserType& input,
                        Buffer* buffer,
                        ::autofill::mojom::internal::PasswordFormGenerationData_Data::BufferWriter* output,
                        SerializationContext* context) {
    if (CallIsNullIfExists<Traits>(input))
      return;
    (*output).Allocate(buffer);
    (*output)->new_password_renderer_id = Traits::new_password_renderer_id(input);
    (*output)->confirmation_password_renderer_id = Traits::confirmation_password_renderer_id(input);
  }

  static bool Deserialize(::autofill::mojom::internal::PasswordFormGenerationData_Data* input,
                          UserType* output,
                          SerializationContext* context) {
    if (!input)
      return CallSetToNullIfExists<Traits>(output);

    ::autofill::mojom::PasswordFormGenerationDataDataView data_view(input, context);
    return Traits::Read(data_view, output);
  }
};

}  // namespace internal


namespace internal {

template <typename MaybeConstUserType>
struct Serializer<::autofill::mojom::PasswordGenerationUIDataDataView, MaybeConstUserType> {
  using UserType = typename std::remove_const<MaybeConstUserType>::type;
  using Traits = StructTraits<::autofill::mojom::PasswordGenerationUIDataDataView, UserType>;

  static void Serialize(MaybeConstUserType& input,
                        Buffer* buffer,
                        ::autofill::mojom::internal::PasswordGenerationUIData_Data::BufferWriter* output,
                        SerializationContext* context) {
    if (CallIsNullIfExists<Traits>(input))
      return;
    (*output).Allocate(buffer);
    decltype(Traits::bounds(input)) in_bounds = Traits::bounds(input);
    typename decltype((*output)->bounds)::BaseType::BufferWriter
        bounds_writer;
    mojo::internal::Serialize<::gfx::mojom::RectFDataView>(
        in_bounds, buffer, &bounds_writer, context);
    (*output)->bounds.Set(
        bounds_writer.is_null() ? nullptr : bounds_writer.data());
    MOJO_INTERNAL_DLOG_SERIALIZATION_WARNING(
        (*output)->bounds.is_null(),
        mojo::internal::VALIDATION_ERROR_UNEXPECTED_NULL_POINTER,
        "null bounds in PasswordGenerationUIData struct");
    (*output)->max_length = Traits::max_length(input);
    decltype(Traits::generation_element(input)) in_generation_element = Traits::generation_element(input);
    typename decltype((*output)->generation_element)::BaseType::BufferWriter
        generation_element_writer;
    mojo::internal::Serialize<::mojo_base::mojom::String16DataView>(
        in_generation_element, buffer, &generation_element_writer, context);
    (*output)->generation_element.Set(
        generation_element_writer.is_null() ? nullptr : generation_element_writer.data());
    MOJO_INTERNAL_DLOG_SERIALIZATION_WARNING(
        (*output)->generation_element.is_null(),
        mojo::internal::VALIDATION_ERROR_UNEXPECTED_NULL_POINTER,
        "null generation_element in PasswordGenerationUIData struct");
    (*output)->generation_element_id = Traits::generation_element_id(input);
    (*output)->is_generation_element_password_type = Traits::is_generation_element_password_type(input);
    mojo::internal::Serialize<::mojo_base::mojom::TextDirection>(
        Traits::text_direction(input), &(*output)->text_direction);
    decltype(Traits::form_data(input)) in_form_data = Traits::form_data(input);
    typename decltype((*output)->form_data)::BaseType::BufferWriter
        form_data_writer;
    mojo::internal::Serialize<::autofill::mojom::FormDataDataView>(
        in_form_data, buffer, &form_data_writer, context);
    (*output)->form_data.Set(
        form_data_writer.is_null() ? nullptr : form_data_writer.data());
    MOJO_INTERNAL_DLOG_SERIALIZATION_WARNING(
        (*output)->form_data.is_null(),
        mojo::internal::VALIDATION_ERROR_UNEXPECTED_NULL_POINTER,
        "null form_data in PasswordGenerationUIData struct");
  }

  static bool Deserialize(::autofill::mojom::internal::PasswordGenerationUIData_Data* input,
                          UserType* output,
                          SerializationContext* context) {
    if (!input)
      return CallSetToNullIfExists<Traits>(output);

    ::autofill::mojom::PasswordGenerationUIDataDataView data_view(input, context);
    return Traits::Read(data_view, output);
  }
};

}  // namespace internal


namespace internal {

template <typename MaybeConstUserType>
struct Serializer<::autofill::mojom::ValueElementPairDataView, MaybeConstUserType> {
  using UserType = typename std::remove_const<MaybeConstUserType>::type;
  using Traits = StructTraits<::autofill::mojom::ValueElementPairDataView, UserType>;

  static void Serialize(MaybeConstUserType& input,
                        Buffer* buffer,
                        ::autofill::mojom::internal::ValueElementPair_Data::BufferWriter* output,
                        SerializationContext* context) {
    if (CallIsNullIfExists<Traits>(input))
      return;
    (*output).Allocate(buffer);
    decltype(Traits::value(input)) in_value = Traits::value(input);
    typename decltype((*output)->value)::BaseType::BufferWriter
        value_writer;
    mojo::internal::Serialize<::mojo_base::mojom::String16DataView>(
        in_value, buffer, &value_writer, context);
    (*output)->value.Set(
        value_writer.is_null() ? nullptr : value_writer.data());
    MOJO_INTERNAL_DLOG_SERIALIZATION_WARNING(
        (*output)->value.is_null(),
        mojo::internal::VALIDATION_ERROR_UNEXPECTED_NULL_POINTER,
        "null value in ValueElementPair struct");
    decltype(Traits::field_name(input)) in_field_name = Traits::field_name(input);
    typename decltype((*output)->field_name)::BaseType::BufferWriter
        field_name_writer;
    mojo::internal::Serialize<::mojo_base::mojom::String16DataView>(
        in_field_name, buffer, &field_name_writer, context);
    (*output)->field_name.Set(
        field_name_writer.is_null() ? nullptr : field_name_writer.data());
    MOJO_INTERNAL_DLOG_SERIALIZATION_WARNING(
        (*output)->field_name.is_null(),
        mojo::internal::VALIDATION_ERROR_UNEXPECTED_NULL_POINTER,
        "null field_name in ValueElementPair struct");
  }

  static bool Deserialize(::autofill::mojom::internal::ValueElementPair_Data* input,
                          UserType* output,
                          SerializationContext* context) {
    if (!input)
      return CallSetToNullIfExists<Traits>(output);

    ::autofill::mojom::ValueElementPairDataView data_view(input, context);
    return Traits::Read(data_view, output);
  }
};

}  // namespace internal


namespace internal {

template <typename MaybeConstUserType>
struct Serializer<::autofill::mojom::PasswordFormDataView, MaybeConstUserType> {
  using UserType = typename std::remove_const<MaybeConstUserType>::type;
  using Traits = StructTraits<::autofill::mojom::PasswordFormDataView, UserType>;

  static void Serialize(MaybeConstUserType& input,
                        Buffer* buffer,
                        ::autofill::mojom::internal::PasswordForm_Data::BufferWriter* output,
                        SerializationContext* context) {
    if (CallIsNullIfExists<Traits>(input))
      return;
    (*output).Allocate(buffer);
    mojo::internal::Serialize<::autofill::mojom::PasswordForm_Scheme>(
        Traits::scheme(input), &(*output)->scheme);
    decltype(Traits::signon_realm(input)) in_signon_realm = Traits::signon_realm(input);
    typename decltype((*output)->signon_realm)::BaseType::BufferWriter
        signon_realm_writer;
    mojo::internal::Serialize<mojo::StringDataView>(
        in_signon_realm, buffer, &signon_realm_writer, context);
    (*output)->signon_realm.Set(
        signon_realm_writer.is_null() ? nullptr : signon_realm_writer.data());
    MOJO_INTERNAL_DLOG_SERIALIZATION_WARNING(
        (*output)->signon_realm.is_null(),
        mojo::internal::VALIDATION_ERROR_UNEXPECTED_NULL_POINTER,
        "null signon_realm in PasswordForm struct");
    decltype(Traits::origin_with_path(input)) in_origin_with_path = Traits::origin_with_path(input);
    typename decltype((*output)->origin_with_path)::BaseType::BufferWriter
        origin_with_path_writer;
    mojo::internal::Serialize<::url::mojom::UrlDataView>(
        in_origin_with_path, buffer, &origin_with_path_writer, context);
    (*output)->origin_with_path.Set(
        origin_with_path_writer.is_null() ? nullptr : origin_with_path_writer.data());
    MOJO_INTERNAL_DLOG_SERIALIZATION_WARNING(
        (*output)->origin_with_path.is_null(),
        mojo::internal::VALIDATION_ERROR_UNEXPECTED_NULL_POINTER,
        "null origin_with_path in PasswordForm struct");
    decltype(Traits::action(input)) in_action = Traits::action(input);
    typename decltype((*output)->action)::BaseType::BufferWriter
        action_writer;
    mojo::internal::Serialize<::url::mojom::UrlDataView>(
        in_action, buffer, &action_writer, context);
    (*output)->action.Set(
        action_writer.is_null() ? nullptr : action_writer.data());
    MOJO_INTERNAL_DLOG_SERIALIZATION_WARNING(
        (*output)->action.is_null(),
        mojo::internal::VALIDATION_ERROR_UNEXPECTED_NULL_POINTER,
        "null action in PasswordForm struct");
    decltype(Traits::affiliated_web_realm(input)) in_affiliated_web_realm = Traits::affiliated_web_realm(input);
    typename decltype((*output)->affiliated_web_realm)::BaseType::BufferWriter
        affiliated_web_realm_writer;
    mojo::internal::Serialize<mojo::StringDataView>(
        in_affiliated_web_realm, buffer, &affiliated_web_realm_writer, context);
    (*output)->affiliated_web_realm.Set(
        affiliated_web_realm_writer.is_null() ? nullptr : affiliated_web_realm_writer.data());
    MOJO_INTERNAL_DLOG_SERIALIZATION_WARNING(
        (*output)->affiliated_web_realm.is_null(),
        mojo::internal::VALIDATION_ERROR_UNEXPECTED_NULL_POINTER,
        "null affiliated_web_realm in PasswordForm struct");
    decltype(Traits::submit_element(input)) in_submit_element = Traits::submit_element(input);
    typename decltype((*output)->submit_element)::BaseType::BufferWriter
        submit_element_writer;
    mojo::internal::Serialize<::mojo_base::mojom::String16DataView>(
        in_submit_element, buffer, &submit_element_writer, context);
    (*output)->submit_element.Set(
        submit_element_writer.is_null() ? nullptr : submit_element_writer.data());
    MOJO_INTERNAL_DLOG_SERIALIZATION_WARNING(
        (*output)->submit_element.is_null(),
        mojo::internal::VALIDATION_ERROR_UNEXPECTED_NULL_POINTER,
        "null submit_element in PasswordForm struct");
    decltype(Traits::username_element(input)) in_username_element = Traits::username_element(input);
    typename decltype((*output)->username_element)::BaseType::BufferWriter
        username_element_writer;
    mojo::internal::Serialize<::mojo_base::mojom::String16DataView>(
        in_username_element, buffer, &username_element_writer, context);
    (*output)->username_element.Set(
        username_element_writer.is_null() ? nullptr : username_element_writer.data());
    MOJO_INTERNAL_DLOG_SERIALIZATION_WARNING(
        (*output)->username_element.is_null(),
        mojo::internal::VALIDATION_ERROR_UNEXPECTED_NULL_POINTER,
        "null username_element in PasswordForm struct");
    (*output)->username_marked_by_site = Traits::username_marked_by_site(input);
    decltype(Traits::username_value(input)) in_username_value = Traits::username_value(input);
    typename decltype((*output)->username_value)::BaseType::BufferWriter
        username_value_writer;
    mojo::internal::Serialize<::mojo_base::mojom::String16DataView>(
        in_username_value, buffer, &username_value_writer, context);
    (*output)->username_value.Set(
        username_value_writer.is_null() ? nullptr : username_value_writer.data());
    MOJO_INTERNAL_DLOG_SERIALIZATION_WARNING(
        (*output)->username_value.is_null(),
        mojo::internal::VALIDATION_ERROR_UNEXPECTED_NULL_POINTER,
        "null username_value in PasswordForm struct");
    decltype(Traits::all_possible_usernames(input)) in_all_possible_usernames = Traits::all_possible_usernames(input);
    typename decltype((*output)->all_possible_usernames)::BaseType::BufferWriter
        all_possible_usernames_writer;
    const mojo::internal::ContainerValidateParams all_possible_usernames_validate_params(
        0, false, nullptr);
    mojo::internal::Serialize<mojo::ArrayDataView<::autofill::mojom::ValueElementPairDataView>>(
        in_all_possible_usernames, buffer, &all_possible_usernames_writer, &all_possible_usernames_validate_params,
        context);
    (*output)->all_possible_usernames.Set(
        all_possible_usernames_writer.is_null() ? nullptr : all_possible_usernames_writer.data());
    MOJO_INTERNAL_DLOG_SERIALIZATION_WARNING(
        (*output)->all_possible_usernames.is_null(),
        mojo::internal::VALIDATION_ERROR_UNEXPECTED_NULL_POINTER,
        "null all_possible_usernames in PasswordForm struct");
    decltype(Traits::all_possible_passwords(input)) in_all_possible_passwords = Traits::all_possible_passwords(input);
    typename decltype((*output)->all_possible_passwords)::BaseType::BufferWriter
        all_possible_passwords_writer;
    const mojo::internal::ContainerValidateParams all_possible_passwords_validate_params(
        0, false, nullptr);
    mojo::internal::Serialize<mojo::ArrayDataView<::autofill::mojom::ValueElementPairDataView>>(
        in_all_possible_passwords, buffer, &all_possible_passwords_writer, &all_possible_passwords_validate_params,
        context);
    (*output)->all_possible_passwords.Set(
        all_possible_passwords_writer.is_null() ? nullptr : all_possible_passwords_writer.data());
    MOJO_INTERNAL_DLOG_SERIALIZATION_WARNING(
        (*output)->all_possible_passwords.is_null(),
        mojo::internal::VALIDATION_ERROR_UNEXPECTED_NULL_POINTER,
        "null all_possible_passwords in PasswordForm struct");
    (*output)->form_has_autofilled_value = Traits::form_has_autofilled_value(input);
    decltype(Traits::password_element(input)) in_password_element = Traits::password_element(input);
    typename decltype((*output)->password_element)::BaseType::BufferWriter
        password_element_writer;
    mojo::internal::Serialize<::mojo_base::mojom::String16DataView>(
        in_password_element, buffer, &password_element_writer, context);
    (*output)->password_element.Set(
        password_element_writer.is_null() ? nullptr : password_element_writer.data());
    MOJO_INTERNAL_DLOG_SERIALIZATION_WARNING(
        (*output)->password_element.is_null(),
        mojo::internal::VALIDATION_ERROR_UNEXPECTED_NULL_POINTER,
        "null password_element in PasswordForm struct");
    decltype(Traits::password_value(input)) in_password_value = Traits::password_value(input);
    typename decltype((*output)->password_value)::BaseType::BufferWriter
        password_value_writer;
    mojo::internal::Serialize<::mojo_base::mojom::String16DataView>(
        in_password_value, buffer, &password_value_writer, context);
    (*output)->password_value.Set(
        password_value_writer.is_null() ? nullptr : password_value_writer.data());
    MOJO_INTERNAL_DLOG_SERIALIZATION_WARNING(
        (*output)->password_value.is_null(),
        mojo::internal::VALIDATION_ERROR_UNEXPECTED_NULL_POINTER,
        "null password_value in PasswordForm struct");
    decltype(Traits::new_password_element(input)) in_new_password_element = Traits::new_password_element(input);
    typename decltype((*output)->new_password_element)::BaseType::BufferWriter
        new_password_element_writer;
    mojo::internal::Serialize<::mojo_base::mojom::String16DataView>(
        in_new_password_element, buffer, &new_password_element_writer, context);
    (*output)->new_password_element.Set(
        new_password_element_writer.is_null() ? nullptr : new_password_element_writer.data());
    MOJO_INTERNAL_DLOG_SERIALIZATION_WARNING(
        (*output)->new_password_element.is_null(),
        mojo::internal::VALIDATION_ERROR_UNEXPECTED_NULL_POINTER,
        "null new_password_element in PasswordForm struct");
    decltype(Traits::new_password_value(input)) in_new_password_value = Traits::new_password_value(input);
    typename decltype((*output)->new_password_value)::BaseType::BufferWriter
        new_password_value_writer;
    mojo::internal::Serialize<::mojo_base::mojom::String16DataView>(
        in_new_password_value, buffer, &new_password_value_writer, context);
    (*output)->new_password_value.Set(
        new_password_value_writer.is_null() ? nullptr : new_password_value_writer.data());
    MOJO_INTERNAL_DLOG_SERIALIZATION_WARNING(
        (*output)->new_password_value.is_null(),
        mojo::internal::VALIDATION_ERROR_UNEXPECTED_NULL_POINTER,
        "null new_password_value in PasswordForm struct");
    (*output)->new_password_marked_by_site = Traits::new_password_marked_by_site(input);
    decltype(Traits::confirmation_password_element(input)) in_confirmation_password_element = Traits::confirmation_password_element(input);
    typename decltype((*output)->confirmation_password_element)::BaseType::BufferWriter
        confirmation_password_element_writer;
    mojo::internal::Serialize<::mojo_base::mojom::String16DataView>(
        in_confirmation_password_element, buffer, &confirmation_password_element_writer, context);
    (*output)->confirmation_password_element.Set(
        confirmation_password_element_writer.is_null() ? nullptr : confirmation_password_element_writer.data());
    MOJO_INTERNAL_DLOG_SERIALIZATION_WARNING(
        (*output)->confirmation_password_element.is_null(),
        mojo::internal::VALIDATION_ERROR_UNEXPECTED_NULL_POINTER,
        "null confirmation_password_element in PasswordForm struct");
    decltype(Traits::date_created(input)) in_date_created = Traits::date_created(input);
    typename decltype((*output)->date_created)::BaseType::BufferWriter
        date_created_writer;
    mojo::internal::Serialize<::mojo_base::mojom::TimeDataView>(
        in_date_created, buffer, &date_created_writer, context);
    (*output)->date_created.Set(
        date_created_writer.is_null() ? nullptr : date_created_writer.data());
    MOJO_INTERNAL_DLOG_SERIALIZATION_WARNING(
        (*output)->date_created.is_null(),
        mojo::internal::VALIDATION_ERROR_UNEXPECTED_NULL_POINTER,
        "null date_created in PasswordForm struct");
    decltype(Traits::date_synced(input)) in_date_synced = Traits::date_synced(input);
    typename decltype((*output)->date_synced)::BaseType::BufferWriter
        date_synced_writer;
    mojo::internal::Serialize<::mojo_base::mojom::TimeDataView>(
        in_date_synced, buffer, &date_synced_writer, context);
    (*output)->date_synced.Set(
        date_synced_writer.is_null() ? nullptr : date_synced_writer.data());
    MOJO_INTERNAL_DLOG_SERIALIZATION_WARNING(
        (*output)->date_synced.is_null(),
        mojo::internal::VALIDATION_ERROR_UNEXPECTED_NULL_POINTER,
        "null date_synced in PasswordForm struct");
    (*output)->blacklisted_by_user = Traits::blacklisted_by_user(input);
    mojo::internal::Serialize<::autofill::mojom::PasswordForm_Type>(
        Traits::type(input), &(*output)->type);
    (*output)->times_used = Traits::times_used(input);
    decltype(Traits::form_data(input)) in_form_data = Traits::form_data(input);
    typename decltype((*output)->form_data)::BaseType::BufferWriter
        form_data_writer;
    mojo::internal::Serialize<::autofill::mojom::FormDataDataView>(
        in_form_data, buffer, &form_data_writer, context);
    (*output)->form_data.Set(
        form_data_writer.is_null() ? nullptr : form_data_writer.data());
    MOJO_INTERNAL_DLOG_SERIALIZATION_WARNING(
        (*output)->form_data.is_null(),
        mojo::internal::VALIDATION_ERROR_UNEXPECTED_NULL_POINTER,
        "null form_data in PasswordForm struct");
    mojo::internal::Serialize<::autofill::mojom::PasswordForm_GenerationUploadStatus>(
        Traits::generation_upload_status(input), &(*output)->generation_upload_status);
    decltype(Traits::display_name(input)) in_display_name = Traits::display_name(input);
    typename decltype((*output)->display_name)::BaseType::BufferWriter
        display_name_writer;
    mojo::internal::Serialize<::mojo_base::mojom::String16DataView>(
        in_display_name, buffer, &display_name_writer, context);
    (*output)->display_name.Set(
        display_name_writer.is_null() ? nullptr : display_name_writer.data());
    MOJO_INTERNAL_DLOG_SERIALIZATION_WARNING(
        (*output)->display_name.is_null(),
        mojo::internal::VALIDATION_ERROR_UNEXPECTED_NULL_POINTER,
        "null display_name in PasswordForm struct");
    decltype(Traits::icon_url(input)) in_icon_url = Traits::icon_url(input);
    typename decltype((*output)->icon_url)::BaseType::BufferWriter
        icon_url_writer;
    mojo::internal::Serialize<::url::mojom::UrlDataView>(
        in_icon_url, buffer, &icon_url_writer, context);
    (*output)->icon_url.Set(
        icon_url_writer.is_null() ? nullptr : icon_url_writer.data());
    MOJO_INTERNAL_DLOG_SERIALIZATION_WARNING(
        (*output)->icon_url.is_null(),
        mojo::internal::VALIDATION_ERROR_UNEXPECTED_NULL_POINTER,
        "null icon_url in PasswordForm struct");
    decltype(Traits::federation_origin(input)) in_federation_origin = Traits::federation_origin(input);
    typename decltype((*output)->federation_origin)::BaseType::BufferWriter
        federation_origin_writer;
    mojo::internal::Serialize<::url::mojom::OriginDataView>(
        in_federation_origin, buffer, &federation_origin_writer, context);
    (*output)->federation_origin.Set(
        federation_origin_writer.is_null() ? nullptr : federation_origin_writer.data());
    MOJO_INTERNAL_DLOG_SERIALIZATION_WARNING(
        (*output)->federation_origin.is_null(),
        mojo::internal::VALIDATION_ERROR_UNEXPECTED_NULL_POINTER,
        "null federation_origin in PasswordForm struct");
    (*output)->skip_zero_click = Traits::skip_zero_click(input);
    (*output)->was_parsed_using_autofill_predictions = Traits::was_parsed_using_autofill_predictions(input);
    (*output)->is_public_suffix_match = Traits::is_public_suffix_match(input);
    (*output)->is_affiliation_based_match = Traits::is_affiliation_based_match(input);
    mojo::internal::Serialize<::autofill::mojom::SubmissionIndicatorEvent>(
        Traits::submission_event(input), &(*output)->submission_event);
    (*output)->only_for_fallback = Traits::only_for_fallback(input);
  }

  static bool Deserialize(::autofill::mojom::internal::PasswordForm_Data* input,
                          UserType* output,
                          SerializationContext* context) {
    if (!input)
      return CallSetToNullIfExists<Traits>(output);

    ::autofill::mojom::PasswordFormDataView data_view(input, context);
    return Traits::Read(data_view, output);
  }
};

}  // namespace internal


namespace internal {

template <typename MaybeConstUserType>
struct Serializer<::autofill::mojom::ParsingResultDataView, MaybeConstUserType> {
  using UserType = typename std::remove_const<MaybeConstUserType>::type;
  using Traits = StructTraits<::autofill::mojom::ParsingResultDataView, UserType>;

  static void Serialize(MaybeConstUserType& input,
                        Buffer* buffer,
                        ::autofill::mojom::internal::ParsingResult_Data::BufferWriter* output,
                        SerializationContext* context) {
    if (CallIsNullIfExists<Traits>(input))
      return;
    (*output).Allocate(buffer);
    (*output)->username_renderer_id = Traits::username_renderer_id(input);
    (*output)->password_renderer_id = Traits::password_renderer_id(input);
    (*output)->new_password_renderer_id = Traits::new_password_renderer_id(input);
    (*output)->confirm_password_renderer_id = Traits::confirm_password_renderer_id(input);
  }

  static bool Deserialize(::autofill::mojom::internal::ParsingResult_Data* input,
                          UserType* output,
                          SerializationContext* context) {
    if (!input)
      return CallSetToNullIfExists<Traits>(output);

    ::autofill::mojom::ParsingResultDataView data_view(input, context);
    return Traits::Read(data_view, output);
  }
};

}  // namespace internal

}  // namespace mojo


namespace autofill {
namespace mojom {

inline void FormFieldDataDataView::GetLabelDataView(
    ::mojo_base::mojom::String16DataView* output) {
  auto pointer = data_->label.Get();
  *output = ::mojo_base::mojom::String16DataView(pointer, context_);
}
inline void FormFieldDataDataView::GetNameDataView(
    ::mojo_base::mojom::String16DataView* output) {
  auto pointer = data_->name.Get();
  *output = ::mojo_base::mojom::String16DataView(pointer, context_);
}
inline void FormFieldDataDataView::GetIdAttributeDataView(
    ::mojo_base::mojom::String16DataView* output) {
  auto pointer = data_->id_attribute.Get();
  *output = ::mojo_base::mojom::String16DataView(pointer, context_);
}
inline void FormFieldDataDataView::GetNameAttributeDataView(
    ::mojo_base::mojom::String16DataView* output) {
  auto pointer = data_->name_attribute.Get();
  *output = ::mojo_base::mojom::String16DataView(pointer, context_);
}
inline void FormFieldDataDataView::GetValueDataView(
    ::mojo_base::mojom::String16DataView* output) {
  auto pointer = data_->value.Get();
  *output = ::mojo_base::mojom::String16DataView(pointer, context_);
}
inline void FormFieldDataDataView::GetFormControlTypeDataView(
    mojo::StringDataView* output) {
  auto pointer = data_->form_control_type.Get();
  *output = mojo::StringDataView(pointer, context_);
}
inline void FormFieldDataDataView::GetAutocompleteAttributeDataView(
    mojo::StringDataView* output) {
  auto pointer = data_->autocomplete_attribute.Get();
  *output = mojo::StringDataView(pointer, context_);
}
inline void FormFieldDataDataView::GetPlaceholderDataView(
    ::mojo_base::mojom::String16DataView* output) {
  auto pointer = data_->placeholder.Get();
  *output = ::mojo_base::mojom::String16DataView(pointer, context_);
}
inline void FormFieldDataDataView::GetCssClassesDataView(
    ::mojo_base::mojom::String16DataView* output) {
  auto pointer = data_->css_classes.Get();
  *output = ::mojo_base::mojom::String16DataView(pointer, context_);
}
inline void FormFieldDataDataView::GetAriaLabelDataView(
    ::mojo_base::mojom::String16DataView* output) {
  auto pointer = data_->aria_label.Get();
  *output = ::mojo_base::mojom::String16DataView(pointer, context_);
}
inline void FormFieldDataDataView::GetAriaDescriptionDataView(
    ::mojo_base::mojom::String16DataView* output) {
  auto pointer = data_->aria_description.Get();
  *output = ::mojo_base::mojom::String16DataView(pointer, context_);
}
inline void FormFieldDataDataView::GetSectionDataView(
    mojo::StringDataView* output) {
  auto pointer = data_->section.Get();
  *output = mojo::StringDataView(pointer, context_);
}
inline void FormFieldDataDataView::GetTypedValueDataView(
    ::mojo_base::mojom::String16DataView* output) {
  auto pointer = data_->typed_value.Get();
  *output = ::mojo_base::mojom::String16DataView(pointer, context_);
}
inline void FormFieldDataDataView::GetOptionValuesDataView(
    mojo::ArrayDataView<::mojo_base::mojom::String16DataView>* output) {
  auto pointer = data_->option_values.Get();
  *output = mojo::ArrayDataView<::mojo_base::mojom::String16DataView>(pointer, context_);
}
inline void FormFieldDataDataView::GetOptionContentsDataView(
    mojo::ArrayDataView<::mojo_base::mojom::String16DataView>* output) {
  auto pointer = data_->option_contents.Get();
  *output = mojo::ArrayDataView<::mojo_base::mojom::String16DataView>(pointer, context_);
}


inline void ButtonTitleInfoDataView::GetTitleDataView(
    ::mojo_base::mojom::String16DataView* output) {
  auto pointer = data_->title.Get();
  *output = ::mojo_base::mojom::String16DataView(pointer, context_);
}


inline void FormDataDataView::GetIdAttributeDataView(
    ::mojo_base::mojom::String16DataView* output) {
  auto pointer = data_->id_attribute.Get();
  *output = ::mojo_base::mojom::String16DataView(pointer, context_);
}
inline void FormDataDataView::GetNameAttributeDataView(
    ::mojo_base::mojom::String16DataView* output) {
  auto pointer = data_->name_attribute.Get();
  *output = ::mojo_base::mojom::String16DataView(pointer, context_);
}
inline void FormDataDataView::GetNameDataView(
    ::mojo_base::mojom::String16DataView* output) {
  auto pointer = data_->name.Get();
  *output = ::mojo_base::mojom::String16DataView(pointer, context_);
}
inline void FormDataDataView::GetButtonTitlesDataView(
    mojo::ArrayDataView<ButtonTitleInfoDataView>* output) {
  auto pointer = data_->button_titles.Get();
  *output = mojo::ArrayDataView<ButtonTitleInfoDataView>(pointer, context_);
}
inline void FormDataDataView::GetUrlDataView(
    ::url::mojom::UrlDataView* output) {
  auto pointer = data_->url.Get();
  *output = ::url::mojom::UrlDataView(pointer, context_);
}
inline void FormDataDataView::GetActionDataView(
    ::url::mojom::UrlDataView* output) {
  auto pointer = data_->action.Get();
  *output = ::url::mojom::UrlDataView(pointer, context_);
}
inline void FormDataDataView::GetMainFrameOriginDataView(
    ::url::mojom::OriginDataView* output) {
  auto pointer = data_->main_frame_origin.Get();
  *output = ::url::mojom::OriginDataView(pointer, context_);
}
inline void FormDataDataView::GetFieldsDataView(
    mojo::ArrayDataView<FormFieldDataDataView>* output) {
  auto pointer = data_->fields.Get();
  *output = mojo::ArrayDataView<FormFieldDataDataView>(pointer, context_);
}
inline void FormDataDataView::GetUsernamePredictionsDataView(
    mojo::ArrayDataView<uint32_t>* output) {
  auto pointer = data_->username_predictions.Get();
  *output = mojo::ArrayDataView<uint32_t>(pointer, context_);
}


inline void FormFieldDataPredictionsDataView::GetFieldDataView(
    FormFieldDataDataView* output) {
  auto pointer = data_->field.Get();
  *output = FormFieldDataDataView(pointer, context_);
}
inline void FormFieldDataPredictionsDataView::GetSignatureDataView(
    mojo::StringDataView* output) {
  auto pointer = data_->signature.Get();
  *output = mojo::StringDataView(pointer, context_);
}
inline void FormFieldDataPredictionsDataView::GetHeuristicTypeDataView(
    mojo::StringDataView* output) {
  auto pointer = data_->heuristic_type.Get();
  *output = mojo::StringDataView(pointer, context_);
}
inline void FormFieldDataPredictionsDataView::GetServerTypeDataView(
    mojo::StringDataView* output) {
  auto pointer = data_->server_type.Get();
  *output = mojo::StringDataView(pointer, context_);
}
inline void FormFieldDataPredictionsDataView::GetOverallTypeDataView(
    mojo::StringDataView* output) {
  auto pointer = data_->overall_type.Get();
  *output = mojo::StringDataView(pointer, context_);
}
inline void FormFieldDataPredictionsDataView::GetParseableNameDataView(
    mojo::StringDataView* output) {
  auto pointer = data_->parseable_name.Get();
  *output = mojo::StringDataView(pointer, context_);
}
inline void FormFieldDataPredictionsDataView::GetSectionDataView(
    mojo::StringDataView* output) {
  auto pointer = data_->section.Get();
  *output = mojo::StringDataView(pointer, context_);
}


inline void FormDataPredictionsDataView::GetDataDataView(
    FormDataDataView* output) {
  auto pointer = data_->data.Get();
  *output = FormDataDataView(pointer, context_);
}
inline void FormDataPredictionsDataView::GetSignatureDataView(
    mojo::StringDataView* output) {
  auto pointer = data_->signature.Get();
  *output = mojo::StringDataView(pointer, context_);
}
inline void FormDataPredictionsDataView::GetFieldsDataView(
    mojo::ArrayDataView<FormFieldDataPredictionsDataView>* output) {
  auto pointer = data_->fields.Get();
  *output = mojo::ArrayDataView<FormFieldDataPredictionsDataView>(pointer, context_);
}


inline void PasswordAndMetadataDataView::GetPasswordDataView(
    ::mojo_base::mojom::String16DataView* output) {
  auto pointer = data_->password.Get();
  *output = ::mojo_base::mojom::String16DataView(pointer, context_);
}
inline void PasswordAndMetadataDataView::GetRealmDataView(
    mojo::StringDataView* output) {
  auto pointer = data_->realm.Get();
  *output = mojo::StringDataView(pointer, context_);
}


inline void PasswordFormFillDataDataView::GetOriginDataView(
    ::url::mojom::UrlDataView* output) {
  auto pointer = data_->origin.Get();
  *output = ::url::mojom::UrlDataView(pointer, context_);
}
inline void PasswordFormFillDataDataView::GetActionDataView(
    ::url::mojom::UrlDataView* output) {
  auto pointer = data_->action.Get();
  *output = ::url::mojom::UrlDataView(pointer, context_);
}
inline void PasswordFormFillDataDataView::GetUsernameFieldDataView(
    FormFieldDataDataView* output) {
  auto pointer = data_->username_field.Get();
  *output = FormFieldDataDataView(pointer, context_);
}
inline void PasswordFormFillDataDataView::GetPasswordFieldDataView(
    FormFieldDataDataView* output) {
  auto pointer = data_->password_field.Get();
  *output = FormFieldDataDataView(pointer, context_);
}
inline void PasswordFormFillDataDataView::GetPreferredRealmDataView(
    mojo::StringDataView* output) {
  auto pointer = data_->preferred_realm.Get();
  *output = mojo::StringDataView(pointer, context_);
}
inline void PasswordFormFillDataDataView::GetAdditionalLoginsDataView(
    mojo::MapDataView<::mojo_base::mojom::String16DataView, PasswordAndMetadataDataView>* output) {
  auto pointer = data_->additional_logins.Get();
  *output = mojo::MapDataView<::mojo_base::mojom::String16DataView, PasswordAndMetadataDataView>(pointer, context_);
}




inline void PasswordGenerationUIDataDataView::GetBoundsDataView(
    ::gfx::mojom::RectFDataView* output) {
  auto pointer = data_->bounds.Get();
  *output = ::gfx::mojom::RectFDataView(pointer, context_);
}
inline void PasswordGenerationUIDataDataView::GetGenerationElementDataView(
    ::mojo_base::mojom::String16DataView* output) {
  auto pointer = data_->generation_element.Get();
  *output = ::mojo_base::mojom::String16DataView(pointer, context_);
}
inline void PasswordGenerationUIDataDataView::GetFormDataDataView(
    FormDataDataView* output) {
  auto pointer = data_->form_data.Get();
  *output = FormDataDataView(pointer, context_);
}


inline void ValueElementPairDataView::GetValueDataView(
    ::mojo_base::mojom::String16DataView* output) {
  auto pointer = data_->value.Get();
  *output = ::mojo_base::mojom::String16DataView(pointer, context_);
}
inline void ValueElementPairDataView::GetFieldNameDataView(
    ::mojo_base::mojom::String16DataView* output) {
  auto pointer = data_->field_name.Get();
  *output = ::mojo_base::mojom::String16DataView(pointer, context_);
}


inline void PasswordFormDataView::GetSignonRealmDataView(
    mojo::StringDataView* output) {
  auto pointer = data_->signon_realm.Get();
  *output = mojo::StringDataView(pointer, context_);
}
inline void PasswordFormDataView::GetOriginWithPathDataView(
    ::url::mojom::UrlDataView* output) {
  auto pointer = data_->origin_with_path.Get();
  *output = ::url::mojom::UrlDataView(pointer, context_);
}
inline void PasswordFormDataView::GetActionDataView(
    ::url::mojom::UrlDataView* output) {
  auto pointer = data_->action.Get();
  *output = ::url::mojom::UrlDataView(pointer, context_);
}
inline void PasswordFormDataView::GetAffiliatedWebRealmDataView(
    mojo::StringDataView* output) {
  auto pointer = data_->affiliated_web_realm.Get();
  *output = mojo::StringDataView(pointer, context_);
}
inline void PasswordFormDataView::GetSubmitElementDataView(
    ::mojo_base::mojom::String16DataView* output) {
  auto pointer = data_->submit_element.Get();
  *output = ::mojo_base::mojom::String16DataView(pointer, context_);
}
inline void PasswordFormDataView::GetUsernameElementDataView(
    ::mojo_base::mojom::String16DataView* output) {
  auto pointer = data_->username_element.Get();
  *output = ::mojo_base::mojom::String16DataView(pointer, context_);
}
inline void PasswordFormDataView::GetUsernameValueDataView(
    ::mojo_base::mojom::String16DataView* output) {
  auto pointer = data_->username_value.Get();
  *output = ::mojo_base::mojom::String16DataView(pointer, context_);
}
inline void PasswordFormDataView::GetAllPossibleUsernamesDataView(
    mojo::ArrayDataView<ValueElementPairDataView>* output) {
  auto pointer = data_->all_possible_usernames.Get();
  *output = mojo::ArrayDataView<ValueElementPairDataView>(pointer, context_);
}
inline void PasswordFormDataView::GetAllPossiblePasswordsDataView(
    mojo::ArrayDataView<ValueElementPairDataView>* output) {
  auto pointer = data_->all_possible_passwords.Get();
  *output = mojo::ArrayDataView<ValueElementPairDataView>(pointer, context_);
}
inline void PasswordFormDataView::GetPasswordElementDataView(
    ::mojo_base::mojom::String16DataView* output) {
  auto pointer = data_->password_element.Get();
  *output = ::mojo_base::mojom::String16DataView(pointer, context_);
}
inline void PasswordFormDataView::GetPasswordValueDataView(
    ::mojo_base::mojom::String16DataView* output) {
  auto pointer = data_->password_value.Get();
  *output = ::mojo_base::mojom::String16DataView(pointer, context_);
}
inline void PasswordFormDataView::GetNewPasswordElementDataView(
    ::mojo_base::mojom::String16DataView* output) {
  auto pointer = data_->new_password_element.Get();
  *output = ::mojo_base::mojom::String16DataView(pointer, context_);
}
inline void PasswordFormDataView::GetNewPasswordValueDataView(
    ::mojo_base::mojom::String16DataView* output) {
  auto pointer = data_->new_password_value.Get();
  *output = ::mojo_base::mojom::String16DataView(pointer, context_);
}
inline void PasswordFormDataView::GetConfirmationPasswordElementDataView(
    ::mojo_base::mojom::String16DataView* output) {
  auto pointer = data_->confirmation_password_element.Get();
  *output = ::mojo_base::mojom::String16DataView(pointer, context_);
}
inline void PasswordFormDataView::GetDateCreatedDataView(
    ::mojo_base::mojom::TimeDataView* output) {
  auto pointer = data_->date_created.Get();
  *output = ::mojo_base::mojom::TimeDataView(pointer, context_);
}
inline void PasswordFormDataView::GetDateSyncedDataView(
    ::mojo_base::mojom::TimeDataView* output) {
  auto pointer = data_->date_synced.Get();
  *output = ::mojo_base::mojom::TimeDataView(pointer, context_);
}
inline void PasswordFormDataView::GetFormDataDataView(
    FormDataDataView* output) {
  auto pointer = data_->form_data.Get();
  *output = FormDataDataView(pointer, context_);
}
inline void PasswordFormDataView::GetDisplayNameDataView(
    ::mojo_base::mojom::String16DataView* output) {
  auto pointer = data_->display_name.Get();
  *output = ::mojo_base::mojom::String16DataView(pointer, context_);
}
inline void PasswordFormDataView::GetIconUrlDataView(
    ::url::mojom::UrlDataView* output) {
  auto pointer = data_->icon_url.Get();
  *output = ::url::mojom::UrlDataView(pointer, context_);
}
inline void PasswordFormDataView::GetFederationOriginDataView(
    ::url::mojom::OriginDataView* output) {
  auto pointer = data_->federation_origin.Get();
  *output = ::url::mojom::OriginDataView(pointer, context_);
}





}  // namespace mojom
}  // namespace autofill

#endif  // COMPONENTS_AUTOFILL_CORE_COMMON_MOJOM_AUTOFILL_TYPES_MOJOM_SHARED_H_