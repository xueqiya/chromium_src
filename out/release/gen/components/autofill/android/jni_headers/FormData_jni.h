// Copyright 2014 The Chromium Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.


// This file is autogenerated by
//     base/android/jni_generator/jni_generator.py
// For
//     org/chromium/components/autofill/FormData

#ifndef org_chromium_components_autofill_FormData_JNI
#define org_chromium_components_autofill_FormData_JNI

#include <jni.h>

#include "../../../../../../../base/android/jni_generator/jni_generator_helper.h"


// Step 1: Forward declarations.

JNI_REGISTRATION_EXPORT extern const char kClassPath_org_chromium_components_autofill_FormData[];
const char kClassPath_org_chromium_components_autofill_FormData[] =
    "org/chromium/components/autofill/FormData";
// Leaking this jclass as we cannot use LazyInstance from some threads.
JNI_REGISTRATION_EXPORT std::atomic<jclass>
    g_org_chromium_components_autofill_FormData_clazz(nullptr);
#ifndef org_chromium_components_autofill_FormData_clazz_defined
#define org_chromium_components_autofill_FormData_clazz_defined
inline jclass org_chromium_components_autofill_FormData_clazz(JNIEnv* env) {
  return base::android::LazyGetClass(env, kClassPath_org_chromium_components_autofill_FormData,
      &g_org_chromium_components_autofill_FormData_clazz);
}
#endif


// Step 2: Constants (optional).


// Step 3: Method stubs.
namespace autofill {

JNI_GENERATOR_EXPORT jobject Java_J_N_MPHorj3A(
    JNIEnv* env,
    jclass jcaller,
    jlong nativeFormDataAndroid,
    jobject caller) {
  FormDataAndroid* native = reinterpret_cast<FormDataAndroid*>(nativeFormDataAndroid);
  CHECK_NATIVE_PTR(env, jcaller, native, "GetNextFormFieldData", NULL);
  return native->GetNextFormFieldData(env, base::android::JavaParamRef<jobject>(env,
      caller)).Release();
}


static std::atomic<jmethodID> g_org_chromium_components_autofill_FormData_createFormData(nullptr);
static base::android::ScopedJavaLocalRef<jobject> Java_FormData_createFormData(JNIEnv* env, jlong
    nativeObj,
    const base::android::JavaRef<jstring>& name,
    const base::android::JavaRef<jstring>& origin,
    JniIntWrapper fieldCount) {
  jclass clazz = org_chromium_components_autofill_FormData_clazz(env);
  CHECK_CLAZZ(env, clazz,
      org_chromium_components_autofill_FormData_clazz(env), NULL);

  jni_generator::JniJavaCallContextChecked call_context;
  call_context.Init<
      base::android::MethodID::TYPE_STATIC>(
          env,
          clazz,
          "createFormData",
          "(JLjava/lang/String;Ljava/lang/String;I)Lorg/chromium/components/autofill/FormData;",
          &g_org_chromium_components_autofill_FormData_createFormData);

  jobject ret =
      env->CallStaticObjectMethod(clazz,
          call_context.base.method_id, nativeObj, name.obj(), origin.obj(), as_jint(fieldCount));
  return base::android::ScopedJavaLocalRef<jobject>(env, ret);
}

static std::atomic<jmethodID>
    g_org_chromium_components_autofill_FormData_onNativeDestroyed(nullptr);
static void Java_FormData_onNativeDestroyed(JNIEnv* env, const base::android::JavaRef<jobject>& obj)
    {
  jclass clazz = org_chromium_components_autofill_FormData_clazz(env);
  CHECK_CLAZZ(env, obj.obj(),
      org_chromium_components_autofill_FormData_clazz(env));

  jni_generator::JniJavaCallContextChecked call_context;
  call_context.Init<
      base::android::MethodID::TYPE_INSTANCE>(
          env,
          clazz,
          "onNativeDestroyed",
          "()V",
          &g_org_chromium_components_autofill_FormData_onNativeDestroyed);

     env->CallVoidMethod(obj.obj(),
          call_context.base.method_id);
}

}  // namespace autofill

// Step 4: Generated test functions (optional).


#endif  // org_chromium_components_autofill_FormData_JNI
