// Copyright 2014 The Chromium Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.


// This file is autogenerated by
//     base/android/jni_generator/jni_generator.py
// For
//     org/chromium/components/autofill/FormFieldData

#ifndef org_chromium_components_autofill_FormFieldData_JNI
#define org_chromium_components_autofill_FormFieldData_JNI

#include <jni.h>

#include "../../../../../../../base/android/jni_generator/jni_generator_helper.h"


// Step 1: Forward declarations.

JNI_REGISTRATION_EXPORT extern const char
    kClassPath_org_chromium_components_autofill_FormFieldData[];
const char kClassPath_org_chromium_components_autofill_FormFieldData[] =
    "org/chromium/components/autofill/FormFieldData";
// Leaking this jclass as we cannot use LazyInstance from some threads.
JNI_REGISTRATION_EXPORT std::atomic<jclass>
    g_org_chromium_components_autofill_FormFieldData_clazz(nullptr);
#ifndef org_chromium_components_autofill_FormFieldData_clazz_defined
#define org_chromium_components_autofill_FormFieldData_clazz_defined
inline jclass org_chromium_components_autofill_FormFieldData_clazz(JNIEnv* env) {
  return base::android::LazyGetClass(env, kClassPath_org_chromium_components_autofill_FormFieldData,
      &g_org_chromium_components_autofill_FormFieldData_clazz);
}
#endif


// Step 2: Constants (optional).


// Step 3: Method stubs.
namespace autofill {


static std::atomic<jmethodID> g_org_chromium_components_autofill_FormFieldData_getValue(nullptr);
static base::android::ScopedJavaLocalRef<jstring> Java_FormFieldData_getValue(JNIEnv* env, const
    base::android::JavaRef<jobject>& obj) {
  jclass clazz = org_chromium_components_autofill_FormFieldData_clazz(env);
  CHECK_CLAZZ(env, obj.obj(),
      org_chromium_components_autofill_FormFieldData_clazz(env), NULL);

  jni_generator::JniJavaCallContextChecked call_context;
  call_context.Init<
      base::android::MethodID::TYPE_INSTANCE>(
          env,
          clazz,
          "getValue",
          "()Ljava/lang/String;",
          &g_org_chromium_components_autofill_FormFieldData_getValue);

  jstring ret =
      static_cast<jstring>(env->CallObjectMethod(obj.obj(),
          call_context.base.method_id));
  return base::android::ScopedJavaLocalRef<jstring>(env, ret);
}

static std::atomic<jmethodID> g_org_chromium_components_autofill_FormFieldData_updateValue(nullptr);
static void Java_FormFieldData_updateValue(JNIEnv* env, const base::android::JavaRef<jobject>& obj,
    const base::android::JavaRef<jstring>& value) {
  jclass clazz = org_chromium_components_autofill_FormFieldData_clazz(env);
  CHECK_CLAZZ(env, obj.obj(),
      org_chromium_components_autofill_FormFieldData_clazz(env));

  jni_generator::JniJavaCallContextChecked call_context;
  call_context.Init<
      base::android::MethodID::TYPE_INSTANCE>(
          env,
          clazz,
          "updateValue",
          "(Ljava/lang/String;)V",
          &g_org_chromium_components_autofill_FormFieldData_updateValue);

     env->CallVoidMethod(obj.obj(),
          call_context.base.method_id, value.obj());
}

static std::atomic<jmethodID> g_org_chromium_components_autofill_FormFieldData_isChecked(nullptr);
static jboolean Java_FormFieldData_isChecked(JNIEnv* env, const base::android::JavaRef<jobject>&
    obj) {
  jclass clazz = org_chromium_components_autofill_FormFieldData_clazz(env);
  CHECK_CLAZZ(env, obj.obj(),
      org_chromium_components_autofill_FormFieldData_clazz(env), false);

  jni_generator::JniJavaCallContextChecked call_context;
  call_context.Init<
      base::android::MethodID::TYPE_INSTANCE>(
          env,
          clazz,
          "isChecked",
          "()Z",
          &g_org_chromium_components_autofill_FormFieldData_isChecked);

  jboolean ret =
      env->CallBooleanMethod(obj.obj(),
          call_context.base.method_id);
  return ret;
}

static std::atomic<jmethodID>
    g_org_chromium_components_autofill_FormFieldData_createFormFieldData(nullptr);
static base::android::ScopedJavaLocalRef<jobject> Java_FormFieldData_createFormFieldData(JNIEnv*
    env, const base::android::JavaRef<jstring>& name,
    const base::android::JavaRef<jstring>& label,
    const base::android::JavaRef<jstring>& value,
    const base::android::JavaRef<jstring>& autocompleteAttr,
    jboolean shouldAutocomplete,
    const base::android::JavaRef<jstring>& placeholder,
    const base::android::JavaRef<jstring>& type,
    const base::android::JavaRef<jstring>& id,
    const base::android::JavaRef<jobjectArray>& optionValues,
    const base::android::JavaRef<jobjectArray>& optionContents,
    jboolean isCheckField,
    jboolean isChecked,
    JniIntWrapper maxLength,
    const base::android::JavaRef<jstring>& heuristicType) {
  jclass clazz = org_chromium_components_autofill_FormFieldData_clazz(env);
  CHECK_CLAZZ(env, clazz,
      org_chromium_components_autofill_FormFieldData_clazz(env), NULL);

  jni_generator::JniJavaCallContextChecked call_context;
  call_context.Init<
      base::android::MethodID::TYPE_STATIC>(
          env,
          clazz,
          "createFormFieldData",
"(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;[Ljava/lang/String;ZZILjava/lang/String;)Lorg/chromium/components/autofill/FormFieldData;",
          &g_org_chromium_components_autofill_FormFieldData_createFormFieldData);

  jobject ret =
      env->CallStaticObjectMethod(clazz,
          call_context.base.method_id, name.obj(), label.obj(), value.obj(), autocompleteAttr.obj(),
              shouldAutocomplete, placeholder.obj(), type.obj(), id.obj(), optionValues.obj(),
              optionContents.obj(), isCheckField, isChecked, as_jint(maxLength),
              heuristicType.obj());
  return base::android::ScopedJavaLocalRef<jobject>(env, ret);
}

}  // namespace autofill

// Step 4: Generated test functions (optional).


#endif  // org_chromium_components_autofill_FormFieldData_JNI
