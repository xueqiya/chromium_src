// components/page_load_metrics/common/page_load_metrics.mojom-test-utils.cc is auto generated by mojom_bindings_generator.py, do not edit

// Copyright 2019 The Chromium Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.

#if defined(__clang__)
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wunused-private-field"
#elif defined(_MSC_VER)
#pragma warning(push)
#pragma warning(disable:4056)
#pragma warning(disable:4065)
#pragma warning(disable:4756)
#endif


#include "components/page_load_metrics/common/page_load_metrics.mojom-test-utils.h"

#include <utility>

#include "base/bind.h"
#include "base/run_loop.h"
#include "mojo/public/mojom/base/time.mojom.h"
#include "third_party/blink/public/mojom/web_feature/web_feature.mojom.h"
#include "third_party/blink/public/mojom/use_counter/css_property_id.mojom.h"
#include "url/mojom/origin.mojom.h"


#ifndef COMPONENTS_PAGE_LOAD_METRICS_COMMON_PAGE_LOAD_METRICS_MOJOM_JUMBO_H_
#define COMPONENTS_PAGE_LOAD_METRICS_COMMON_PAGE_LOAD_METRICS_MOJOM_JUMBO_H_
#include "mojo/public/cpp/base/time_mojom_traits.h"
#include "mojo/public/cpp/base/unguessable_token_mojom_traits.h"
#include "url/mojom/origin_mojom_traits.h"
#endif


namespace page_load_metrics {
namespace mojom {


void PageLoadMetricsInterceptorForTesting::UpdateTiming(PageLoadTimingPtr page_load_timing, PageLoadMetadataPtr page_load_metadata, PageLoadFeaturesPtr new_features, std::vector<ResourceDataUpdatePtr> resources, FrameRenderDataUpdatePtr render_data, CpuTimingPtr cpu_load_timing, DeferredResourceCountsPtr new_deferred_resource_data) {
  GetForwardingInterface()->UpdateTiming(std::move(page_load_timing), std::move(page_load_metadata), std::move(new_features), std::move(resources), std::move(render_data), std::move(cpu_load_timing), std::move(new_deferred_resource_data));
}
PageLoadMetricsAsyncWaiter::PageLoadMetricsAsyncWaiter(
    PageLoadMetrics* proxy) : proxy_(proxy) {}

PageLoadMetricsAsyncWaiter::~PageLoadMetricsAsyncWaiter() = default;






}  // namespace mojom
}  // namespace page_load_metrics

#if defined(__clang__)
#pragma clang diagnostic pop
#elif defined(_MSC_VER)
#pragma warning(pop)
#endif