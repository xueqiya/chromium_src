// components/security_interstitials/core/common/mojom/interstitial_commands.mojom-params-data.h is auto generated by mojom_bindings_generator.py, do not edit

// Copyright 2019 The Chromium Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.

#ifndef COMPONENTS_SECURITY_INTERSTITIALS_CORE_COMMON_MOJOM_INTERSTITIAL_COMMANDS_MOJOM_PARAMS_DATA_H_
#define COMPONENTS_SECURITY_INTERSTITIALS_CORE_COMMON_MOJOM_INTERSTITIAL_COMMANDS_MOJOM_PARAMS_DATA_H_

#include "base/logging.h"
#include "base/macros.h"
#include "mojo/public/cpp/bindings/lib/bindings_internal.h"
#include "mojo/public/cpp/bindings/lib/buffer.h"
#include "mojo/public/cpp/bindings/lib/validation_context.h"

#if defined(__clang__)
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wunused-private-field"
#elif defined(_MSC_VER)
#pragma warning(push)
#pragma warning(disable:4056)
#pragma warning(disable:4065)
#pragma warning(disable:4756)
#endif
namespace security_interstitials {
namespace mojom {
namespace internal {
class  InterstitialCommands_DontProceed_Params_Data {
 public:
  class BufferWriter {
   public:
    BufferWriter() = default;

    void Allocate(mojo::internal::Buffer* serialization_buffer) {
      serialization_buffer_ = serialization_buffer;
      index_ = serialization_buffer_->Allocate(sizeof(InterstitialCommands_DontProceed_Params_Data));
      new (data()) InterstitialCommands_DontProceed_Params_Data();
    }

    bool is_null() const { return !serialization_buffer_; }
    InterstitialCommands_DontProceed_Params_Data* data() {
      DCHECK(!is_null());
      return serialization_buffer_->Get<InterstitialCommands_DontProceed_Params_Data>(index_);
    }
    InterstitialCommands_DontProceed_Params_Data* operator->() { return data(); }

   private:
    mojo::internal::Buffer* serialization_buffer_ = nullptr;
    size_t index_ = 0;

    DISALLOW_COPY_AND_ASSIGN(BufferWriter);
  };

  static bool Validate(const void* data,
                       mojo::internal::ValidationContext* validation_context);

  mojo::internal::StructHeader header_;

 private:
  InterstitialCommands_DontProceed_Params_Data();
  ~InterstitialCommands_DontProceed_Params_Data() = delete;
};
static_assert(sizeof(InterstitialCommands_DontProceed_Params_Data) == 8,
              "Bad sizeof(InterstitialCommands_DontProceed_Params_Data)");
class  InterstitialCommands_Proceed_Params_Data {
 public:
  class BufferWriter {
   public:
    BufferWriter() = default;

    void Allocate(mojo::internal::Buffer* serialization_buffer) {
      serialization_buffer_ = serialization_buffer;
      index_ = serialization_buffer_->Allocate(sizeof(InterstitialCommands_Proceed_Params_Data));
      new (data()) InterstitialCommands_Proceed_Params_Data();
    }

    bool is_null() const { return !serialization_buffer_; }
    InterstitialCommands_Proceed_Params_Data* data() {
      DCHECK(!is_null());
      return serialization_buffer_->Get<InterstitialCommands_Proceed_Params_Data>(index_);
    }
    InterstitialCommands_Proceed_Params_Data* operator->() { return data(); }

   private:
    mojo::internal::Buffer* serialization_buffer_ = nullptr;
    size_t index_ = 0;

    DISALLOW_COPY_AND_ASSIGN(BufferWriter);
  };

  static bool Validate(const void* data,
                       mojo::internal::ValidationContext* validation_context);

  mojo::internal::StructHeader header_;

 private:
  InterstitialCommands_Proceed_Params_Data();
  ~InterstitialCommands_Proceed_Params_Data() = delete;
};
static_assert(sizeof(InterstitialCommands_Proceed_Params_Data) == 8,
              "Bad sizeof(InterstitialCommands_Proceed_Params_Data)");
class  InterstitialCommands_ShowMoreSection_Params_Data {
 public:
  class BufferWriter {
   public:
    BufferWriter() = default;

    void Allocate(mojo::internal::Buffer* serialization_buffer) {
      serialization_buffer_ = serialization_buffer;
      index_ = serialization_buffer_->Allocate(sizeof(InterstitialCommands_ShowMoreSection_Params_Data));
      new (data()) InterstitialCommands_ShowMoreSection_Params_Data();
    }

    bool is_null() const { return !serialization_buffer_; }
    InterstitialCommands_ShowMoreSection_Params_Data* data() {
      DCHECK(!is_null());
      return serialization_buffer_->Get<InterstitialCommands_ShowMoreSection_Params_Data>(index_);
    }
    InterstitialCommands_ShowMoreSection_Params_Data* operator->() { return data(); }

   private:
    mojo::internal::Buffer* serialization_buffer_ = nullptr;
    size_t index_ = 0;

    DISALLOW_COPY_AND_ASSIGN(BufferWriter);
  };

  static bool Validate(const void* data,
                       mojo::internal::ValidationContext* validation_context);

  mojo::internal::StructHeader header_;

 private:
  InterstitialCommands_ShowMoreSection_Params_Data();
  ~InterstitialCommands_ShowMoreSection_Params_Data() = delete;
};
static_assert(sizeof(InterstitialCommands_ShowMoreSection_Params_Data) == 8,
              "Bad sizeof(InterstitialCommands_ShowMoreSection_Params_Data)");
class  InterstitialCommands_OpenHelpCenter_Params_Data {
 public:
  class BufferWriter {
   public:
    BufferWriter() = default;

    void Allocate(mojo::internal::Buffer* serialization_buffer) {
      serialization_buffer_ = serialization_buffer;
      index_ = serialization_buffer_->Allocate(sizeof(InterstitialCommands_OpenHelpCenter_Params_Data));
      new (data()) InterstitialCommands_OpenHelpCenter_Params_Data();
    }

    bool is_null() const { return !serialization_buffer_; }
    InterstitialCommands_OpenHelpCenter_Params_Data* data() {
      DCHECK(!is_null());
      return serialization_buffer_->Get<InterstitialCommands_OpenHelpCenter_Params_Data>(index_);
    }
    InterstitialCommands_OpenHelpCenter_Params_Data* operator->() { return data(); }

   private:
    mojo::internal::Buffer* serialization_buffer_ = nullptr;
    size_t index_ = 0;

    DISALLOW_COPY_AND_ASSIGN(BufferWriter);
  };

  static bool Validate(const void* data,
                       mojo::internal::ValidationContext* validation_context);

  mojo::internal::StructHeader header_;

 private:
  InterstitialCommands_OpenHelpCenter_Params_Data();
  ~InterstitialCommands_OpenHelpCenter_Params_Data() = delete;
};
static_assert(sizeof(InterstitialCommands_OpenHelpCenter_Params_Data) == 8,
              "Bad sizeof(InterstitialCommands_OpenHelpCenter_Params_Data)");
class  InterstitialCommands_OpenDiagnostic_Params_Data {
 public:
  class BufferWriter {
   public:
    BufferWriter() = default;

    void Allocate(mojo::internal::Buffer* serialization_buffer) {
      serialization_buffer_ = serialization_buffer;
      index_ = serialization_buffer_->Allocate(sizeof(InterstitialCommands_OpenDiagnostic_Params_Data));
      new (data()) InterstitialCommands_OpenDiagnostic_Params_Data();
    }

    bool is_null() const { return !serialization_buffer_; }
    InterstitialCommands_OpenDiagnostic_Params_Data* data() {
      DCHECK(!is_null());
      return serialization_buffer_->Get<InterstitialCommands_OpenDiagnostic_Params_Data>(index_);
    }
    InterstitialCommands_OpenDiagnostic_Params_Data* operator->() { return data(); }

   private:
    mojo::internal::Buffer* serialization_buffer_ = nullptr;
    size_t index_ = 0;

    DISALLOW_COPY_AND_ASSIGN(BufferWriter);
  };

  static bool Validate(const void* data,
                       mojo::internal::ValidationContext* validation_context);

  mojo::internal::StructHeader header_;

 private:
  InterstitialCommands_OpenDiagnostic_Params_Data();
  ~InterstitialCommands_OpenDiagnostic_Params_Data() = delete;
};
static_assert(sizeof(InterstitialCommands_OpenDiagnostic_Params_Data) == 8,
              "Bad sizeof(InterstitialCommands_OpenDiagnostic_Params_Data)");
class  InterstitialCommands_Reload_Params_Data {
 public:
  class BufferWriter {
   public:
    BufferWriter() = default;

    void Allocate(mojo::internal::Buffer* serialization_buffer) {
      serialization_buffer_ = serialization_buffer;
      index_ = serialization_buffer_->Allocate(sizeof(InterstitialCommands_Reload_Params_Data));
      new (data()) InterstitialCommands_Reload_Params_Data();
    }

    bool is_null() const { return !serialization_buffer_; }
    InterstitialCommands_Reload_Params_Data* data() {
      DCHECK(!is_null());
      return serialization_buffer_->Get<InterstitialCommands_Reload_Params_Data>(index_);
    }
    InterstitialCommands_Reload_Params_Data* operator->() { return data(); }

   private:
    mojo::internal::Buffer* serialization_buffer_ = nullptr;
    size_t index_ = 0;

    DISALLOW_COPY_AND_ASSIGN(BufferWriter);
  };

  static bool Validate(const void* data,
                       mojo::internal::ValidationContext* validation_context);

  mojo::internal::StructHeader header_;

 private:
  InterstitialCommands_Reload_Params_Data();
  ~InterstitialCommands_Reload_Params_Data() = delete;
};
static_assert(sizeof(InterstitialCommands_Reload_Params_Data) == 8,
              "Bad sizeof(InterstitialCommands_Reload_Params_Data)");
class  InterstitialCommands_OpenDateSettings_Params_Data {
 public:
  class BufferWriter {
   public:
    BufferWriter() = default;

    void Allocate(mojo::internal::Buffer* serialization_buffer) {
      serialization_buffer_ = serialization_buffer;
      index_ = serialization_buffer_->Allocate(sizeof(InterstitialCommands_OpenDateSettings_Params_Data));
      new (data()) InterstitialCommands_OpenDateSettings_Params_Data();
    }

    bool is_null() const { return !serialization_buffer_; }
    InterstitialCommands_OpenDateSettings_Params_Data* data() {
      DCHECK(!is_null());
      return serialization_buffer_->Get<InterstitialCommands_OpenDateSettings_Params_Data>(index_);
    }
    InterstitialCommands_OpenDateSettings_Params_Data* operator->() { return data(); }

   private:
    mojo::internal::Buffer* serialization_buffer_ = nullptr;
    size_t index_ = 0;

    DISALLOW_COPY_AND_ASSIGN(BufferWriter);
  };

  static bool Validate(const void* data,
                       mojo::internal::ValidationContext* validation_context);

  mojo::internal::StructHeader header_;

 private:
  InterstitialCommands_OpenDateSettings_Params_Data();
  ~InterstitialCommands_OpenDateSettings_Params_Data() = delete;
};
static_assert(sizeof(InterstitialCommands_OpenDateSettings_Params_Data) == 8,
              "Bad sizeof(InterstitialCommands_OpenDateSettings_Params_Data)");
class  InterstitialCommands_OpenLogin_Params_Data {
 public:
  class BufferWriter {
   public:
    BufferWriter() = default;

    void Allocate(mojo::internal::Buffer* serialization_buffer) {
      serialization_buffer_ = serialization_buffer;
      index_ = serialization_buffer_->Allocate(sizeof(InterstitialCommands_OpenLogin_Params_Data));
      new (data()) InterstitialCommands_OpenLogin_Params_Data();
    }

    bool is_null() const { return !serialization_buffer_; }
    InterstitialCommands_OpenLogin_Params_Data* data() {
      DCHECK(!is_null());
      return serialization_buffer_->Get<InterstitialCommands_OpenLogin_Params_Data>(index_);
    }
    InterstitialCommands_OpenLogin_Params_Data* operator->() { return data(); }

   private:
    mojo::internal::Buffer* serialization_buffer_ = nullptr;
    size_t index_ = 0;

    DISALLOW_COPY_AND_ASSIGN(BufferWriter);
  };

  static bool Validate(const void* data,
                       mojo::internal::ValidationContext* validation_context);

  mojo::internal::StructHeader header_;

 private:
  InterstitialCommands_OpenLogin_Params_Data();
  ~InterstitialCommands_OpenLogin_Params_Data() = delete;
};
static_assert(sizeof(InterstitialCommands_OpenLogin_Params_Data) == 8,
              "Bad sizeof(InterstitialCommands_OpenLogin_Params_Data)");
class  InterstitialCommands_DoReport_Params_Data {
 public:
  class BufferWriter {
   public:
    BufferWriter() = default;

    void Allocate(mojo::internal::Buffer* serialization_buffer) {
      serialization_buffer_ = serialization_buffer;
      index_ = serialization_buffer_->Allocate(sizeof(InterstitialCommands_DoReport_Params_Data));
      new (data()) InterstitialCommands_DoReport_Params_Data();
    }

    bool is_null() const { return !serialization_buffer_; }
    InterstitialCommands_DoReport_Params_Data* data() {
      DCHECK(!is_null());
      return serialization_buffer_->Get<InterstitialCommands_DoReport_Params_Data>(index_);
    }
    InterstitialCommands_DoReport_Params_Data* operator->() { return data(); }

   private:
    mojo::internal::Buffer* serialization_buffer_ = nullptr;
    size_t index_ = 0;

    DISALLOW_COPY_AND_ASSIGN(BufferWriter);
  };

  static bool Validate(const void* data,
                       mojo::internal::ValidationContext* validation_context);

  mojo::internal::StructHeader header_;

 private:
  InterstitialCommands_DoReport_Params_Data();
  ~InterstitialCommands_DoReport_Params_Data() = delete;
};
static_assert(sizeof(InterstitialCommands_DoReport_Params_Data) == 8,
              "Bad sizeof(InterstitialCommands_DoReport_Params_Data)");
class  InterstitialCommands_DontReport_Params_Data {
 public:
  class BufferWriter {
   public:
    BufferWriter() = default;

    void Allocate(mojo::internal::Buffer* serialization_buffer) {
      serialization_buffer_ = serialization_buffer;
      index_ = serialization_buffer_->Allocate(sizeof(InterstitialCommands_DontReport_Params_Data));
      new (data()) InterstitialCommands_DontReport_Params_Data();
    }

    bool is_null() const { return !serialization_buffer_; }
    InterstitialCommands_DontReport_Params_Data* data() {
      DCHECK(!is_null());
      return serialization_buffer_->Get<InterstitialCommands_DontReport_Params_Data>(index_);
    }
    InterstitialCommands_DontReport_Params_Data* operator->() { return data(); }

   private:
    mojo::internal::Buffer* serialization_buffer_ = nullptr;
    size_t index_ = 0;

    DISALLOW_COPY_AND_ASSIGN(BufferWriter);
  };

  static bool Validate(const void* data,
                       mojo::internal::ValidationContext* validation_context);

  mojo::internal::StructHeader header_;

 private:
  InterstitialCommands_DontReport_Params_Data();
  ~InterstitialCommands_DontReport_Params_Data() = delete;
};
static_assert(sizeof(InterstitialCommands_DontReport_Params_Data) == 8,
              "Bad sizeof(InterstitialCommands_DontReport_Params_Data)");
class  InterstitialCommands_OpenReportingPrivacy_Params_Data {
 public:
  class BufferWriter {
   public:
    BufferWriter() = default;

    void Allocate(mojo::internal::Buffer* serialization_buffer) {
      serialization_buffer_ = serialization_buffer;
      index_ = serialization_buffer_->Allocate(sizeof(InterstitialCommands_OpenReportingPrivacy_Params_Data));
      new (data()) InterstitialCommands_OpenReportingPrivacy_Params_Data();
    }

    bool is_null() const { return !serialization_buffer_; }
    InterstitialCommands_OpenReportingPrivacy_Params_Data* data() {
      DCHECK(!is_null());
      return serialization_buffer_->Get<InterstitialCommands_OpenReportingPrivacy_Params_Data>(index_);
    }
    InterstitialCommands_OpenReportingPrivacy_Params_Data* operator->() { return data(); }

   private:
    mojo::internal::Buffer* serialization_buffer_ = nullptr;
    size_t index_ = 0;

    DISALLOW_COPY_AND_ASSIGN(BufferWriter);
  };

  static bool Validate(const void* data,
                       mojo::internal::ValidationContext* validation_context);

  mojo::internal::StructHeader header_;

 private:
  InterstitialCommands_OpenReportingPrivacy_Params_Data();
  ~InterstitialCommands_OpenReportingPrivacy_Params_Data() = delete;
};
static_assert(sizeof(InterstitialCommands_OpenReportingPrivacy_Params_Data) == 8,
              "Bad sizeof(InterstitialCommands_OpenReportingPrivacy_Params_Data)");
class  InterstitialCommands_OpenWhitepaper_Params_Data {
 public:
  class BufferWriter {
   public:
    BufferWriter() = default;

    void Allocate(mojo::internal::Buffer* serialization_buffer) {
      serialization_buffer_ = serialization_buffer;
      index_ = serialization_buffer_->Allocate(sizeof(InterstitialCommands_OpenWhitepaper_Params_Data));
      new (data()) InterstitialCommands_OpenWhitepaper_Params_Data();
    }

    bool is_null() const { return !serialization_buffer_; }
    InterstitialCommands_OpenWhitepaper_Params_Data* data() {
      DCHECK(!is_null());
      return serialization_buffer_->Get<InterstitialCommands_OpenWhitepaper_Params_Data>(index_);
    }
    InterstitialCommands_OpenWhitepaper_Params_Data* operator->() { return data(); }

   private:
    mojo::internal::Buffer* serialization_buffer_ = nullptr;
    size_t index_ = 0;

    DISALLOW_COPY_AND_ASSIGN(BufferWriter);
  };

  static bool Validate(const void* data,
                       mojo::internal::ValidationContext* validation_context);

  mojo::internal::StructHeader header_;

 private:
  InterstitialCommands_OpenWhitepaper_Params_Data();
  ~InterstitialCommands_OpenWhitepaper_Params_Data() = delete;
};
static_assert(sizeof(InterstitialCommands_OpenWhitepaper_Params_Data) == 8,
              "Bad sizeof(InterstitialCommands_OpenWhitepaper_Params_Data)");
class  InterstitialCommands_ReportPhishingError_Params_Data {
 public:
  class BufferWriter {
   public:
    BufferWriter() = default;

    void Allocate(mojo::internal::Buffer* serialization_buffer) {
      serialization_buffer_ = serialization_buffer;
      index_ = serialization_buffer_->Allocate(sizeof(InterstitialCommands_ReportPhishingError_Params_Data));
      new (data()) InterstitialCommands_ReportPhishingError_Params_Data();
    }

    bool is_null() const { return !serialization_buffer_; }
    InterstitialCommands_ReportPhishingError_Params_Data* data() {
      DCHECK(!is_null());
      return serialization_buffer_->Get<InterstitialCommands_ReportPhishingError_Params_Data>(index_);
    }
    InterstitialCommands_ReportPhishingError_Params_Data* operator->() { return data(); }

   private:
    mojo::internal::Buffer* serialization_buffer_ = nullptr;
    size_t index_ = 0;

    DISALLOW_COPY_AND_ASSIGN(BufferWriter);
  };

  static bool Validate(const void* data,
                       mojo::internal::ValidationContext* validation_context);

  mojo::internal::StructHeader header_;

 private:
  InterstitialCommands_ReportPhishingError_Params_Data();
  ~InterstitialCommands_ReportPhishingError_Params_Data() = delete;
};
static_assert(sizeof(InterstitialCommands_ReportPhishingError_Params_Data) == 8,
              "Bad sizeof(InterstitialCommands_ReportPhishingError_Params_Data)");

}  // namespace internal
class InterstitialCommands_DontProceed_ParamsDataView {
 public:
  InterstitialCommands_DontProceed_ParamsDataView() {}

  InterstitialCommands_DontProceed_ParamsDataView(
      internal::InterstitialCommands_DontProceed_Params_Data* data,
      mojo::internal::SerializationContext* context)
      : data_(data) {}

  bool is_null() const { return !data_; }
 private:
  internal::InterstitialCommands_DontProceed_Params_Data* data_ = nullptr;
};

class InterstitialCommands_Proceed_ParamsDataView {
 public:
  InterstitialCommands_Proceed_ParamsDataView() {}

  InterstitialCommands_Proceed_ParamsDataView(
      internal::InterstitialCommands_Proceed_Params_Data* data,
      mojo::internal::SerializationContext* context)
      : data_(data) {}

  bool is_null() const { return !data_; }
 private:
  internal::InterstitialCommands_Proceed_Params_Data* data_ = nullptr;
};

class InterstitialCommands_ShowMoreSection_ParamsDataView {
 public:
  InterstitialCommands_ShowMoreSection_ParamsDataView() {}

  InterstitialCommands_ShowMoreSection_ParamsDataView(
      internal::InterstitialCommands_ShowMoreSection_Params_Data* data,
      mojo::internal::SerializationContext* context)
      : data_(data) {}

  bool is_null() const { return !data_; }
 private:
  internal::InterstitialCommands_ShowMoreSection_Params_Data* data_ = nullptr;
};

class InterstitialCommands_OpenHelpCenter_ParamsDataView {
 public:
  InterstitialCommands_OpenHelpCenter_ParamsDataView() {}

  InterstitialCommands_OpenHelpCenter_ParamsDataView(
      internal::InterstitialCommands_OpenHelpCenter_Params_Data* data,
      mojo::internal::SerializationContext* context)
      : data_(data) {}

  bool is_null() const { return !data_; }
 private:
  internal::InterstitialCommands_OpenHelpCenter_Params_Data* data_ = nullptr;
};

class InterstitialCommands_OpenDiagnostic_ParamsDataView {
 public:
  InterstitialCommands_OpenDiagnostic_ParamsDataView() {}

  InterstitialCommands_OpenDiagnostic_ParamsDataView(
      internal::InterstitialCommands_OpenDiagnostic_Params_Data* data,
      mojo::internal::SerializationContext* context)
      : data_(data) {}

  bool is_null() const { return !data_; }
 private:
  internal::InterstitialCommands_OpenDiagnostic_Params_Data* data_ = nullptr;
};

class InterstitialCommands_Reload_ParamsDataView {
 public:
  InterstitialCommands_Reload_ParamsDataView() {}

  InterstitialCommands_Reload_ParamsDataView(
      internal::InterstitialCommands_Reload_Params_Data* data,
      mojo::internal::SerializationContext* context)
      : data_(data) {}

  bool is_null() const { return !data_; }
 private:
  internal::InterstitialCommands_Reload_Params_Data* data_ = nullptr;
};

class InterstitialCommands_OpenDateSettings_ParamsDataView {
 public:
  InterstitialCommands_OpenDateSettings_ParamsDataView() {}

  InterstitialCommands_OpenDateSettings_ParamsDataView(
      internal::InterstitialCommands_OpenDateSettings_Params_Data* data,
      mojo::internal::SerializationContext* context)
      : data_(data) {}

  bool is_null() const { return !data_; }
 private:
  internal::InterstitialCommands_OpenDateSettings_Params_Data* data_ = nullptr;
};

class InterstitialCommands_OpenLogin_ParamsDataView {
 public:
  InterstitialCommands_OpenLogin_ParamsDataView() {}

  InterstitialCommands_OpenLogin_ParamsDataView(
      internal::InterstitialCommands_OpenLogin_Params_Data* data,
      mojo::internal::SerializationContext* context)
      : data_(data) {}

  bool is_null() const { return !data_; }
 private:
  internal::InterstitialCommands_OpenLogin_Params_Data* data_ = nullptr;
};

class InterstitialCommands_DoReport_ParamsDataView {
 public:
  InterstitialCommands_DoReport_ParamsDataView() {}

  InterstitialCommands_DoReport_ParamsDataView(
      internal::InterstitialCommands_DoReport_Params_Data* data,
      mojo::internal::SerializationContext* context)
      : data_(data) {}

  bool is_null() const { return !data_; }
 private:
  internal::InterstitialCommands_DoReport_Params_Data* data_ = nullptr;
};

class InterstitialCommands_DontReport_ParamsDataView {
 public:
  InterstitialCommands_DontReport_ParamsDataView() {}

  InterstitialCommands_DontReport_ParamsDataView(
      internal::InterstitialCommands_DontReport_Params_Data* data,
      mojo::internal::SerializationContext* context)
      : data_(data) {}

  bool is_null() const { return !data_; }
 private:
  internal::InterstitialCommands_DontReport_Params_Data* data_ = nullptr;
};

class InterstitialCommands_OpenReportingPrivacy_ParamsDataView {
 public:
  InterstitialCommands_OpenReportingPrivacy_ParamsDataView() {}

  InterstitialCommands_OpenReportingPrivacy_ParamsDataView(
      internal::InterstitialCommands_OpenReportingPrivacy_Params_Data* data,
      mojo::internal::SerializationContext* context)
      : data_(data) {}

  bool is_null() const { return !data_; }
 private:
  internal::InterstitialCommands_OpenReportingPrivacy_Params_Data* data_ = nullptr;
};

class InterstitialCommands_OpenWhitepaper_ParamsDataView {
 public:
  InterstitialCommands_OpenWhitepaper_ParamsDataView() {}

  InterstitialCommands_OpenWhitepaper_ParamsDataView(
      internal::InterstitialCommands_OpenWhitepaper_Params_Data* data,
      mojo::internal::SerializationContext* context)
      : data_(data) {}

  bool is_null() const { return !data_; }
 private:
  internal::InterstitialCommands_OpenWhitepaper_Params_Data* data_ = nullptr;
};

class InterstitialCommands_ReportPhishingError_ParamsDataView {
 public:
  InterstitialCommands_ReportPhishingError_ParamsDataView() {}

  InterstitialCommands_ReportPhishingError_ParamsDataView(
      internal::InterstitialCommands_ReportPhishingError_Params_Data* data,
      mojo::internal::SerializationContext* context)
      : data_(data) {}

  bool is_null() const { return !data_; }
 private:
  internal::InterstitialCommands_ReportPhishingError_Params_Data* data_ = nullptr;
};



























}  // namespace mojom
}  // namespace security_interstitials

#if defined(__clang__)
#pragma clang diagnostic pop
#elif defined(_MSC_VER)
#pragma warning(pop)
#endif

#endif  // COMPONENTS_SECURITY_INTERSTITIALS_CORE_COMMON_MOJOM_INTERSTITIAL_COMMANDS_MOJOM_PARAMS_DATA_H_