// Copyright 2014 The Chromium Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.


// This file is autogenerated by
//     base/android/jni_generator/jni_generator.py
// For
//     org/chromium/components/signin/ChildAccountInfoFetcher

#ifndef org_chromium_components_signin_ChildAccountInfoFetcher_JNI
#define org_chromium_components_signin_ChildAccountInfoFetcher_JNI

#include <jni.h>

#include "../../../../../../../../../base/android/jni_generator/jni_generator_helper.h"


// Step 1: Forward declarations.

JNI_REGISTRATION_EXPORT extern const char
    kClassPath_org_chromium_components_signin_ChildAccountInfoFetcher[];
const char kClassPath_org_chromium_components_signin_ChildAccountInfoFetcher[] =
    "org/chromium/components/signin/ChildAccountInfoFetcher";
// Leaking this jclass as we cannot use LazyInstance from some threads.
JNI_REGISTRATION_EXPORT std::atomic<jclass>
    g_org_chromium_components_signin_ChildAccountInfoFetcher_clazz(nullptr);
#ifndef org_chromium_components_signin_ChildAccountInfoFetcher_clazz_defined
#define org_chromium_components_signin_ChildAccountInfoFetcher_clazz_defined
inline jclass org_chromium_components_signin_ChildAccountInfoFetcher_clazz(JNIEnv* env) {
  return base::android::LazyGetClass(env,
      kClassPath_org_chromium_components_signin_ChildAccountInfoFetcher,
      &g_org_chromium_components_signin_ChildAccountInfoFetcher_clazz);
}
#endif


// Step 2: Constants (optional).


// Step 3: Method stubs.
static void JNI_ChildAccountInfoFetcher_SetIsChildAccount(JNIEnv* env, jlong
    accountFetcherServicePtr,
    const base::android::JavaParamRef<jstring>& accountId,
    jboolean isChildAccount);

JNI_GENERATOR_EXPORT void Java_J_N_MBZpZMbr(
    JNIEnv* env,
    jclass jcaller,
    jlong accountFetcherServicePtr,
    jstring accountId,
    jboolean isChildAccount) {
  return JNI_ChildAccountInfoFetcher_SetIsChildAccount(env, accountFetcherServicePtr,
      base::android::JavaParamRef<jstring>(env, accountId), isChildAccount);
}


static std::atomic<jmethodID>
    g_org_chromium_components_signin_ChildAccountInfoFetcher_create(nullptr);
static base::android::ScopedJavaLocalRef<jobject> Java_ChildAccountInfoFetcher_create(JNIEnv* env,
    jlong nativeAccountFetcherService,
    const base::android::JavaRef<jstring>& accountId,
    const base::android::JavaRef<jstring>& accountName) {
  jclass clazz = org_chromium_components_signin_ChildAccountInfoFetcher_clazz(env);
  CHECK_CLAZZ(env, clazz,
      org_chromium_components_signin_ChildAccountInfoFetcher_clazz(env), NULL);

  jni_generator::JniJavaCallContextChecked call_context;
  call_context.Init<
      base::android::MethodID::TYPE_STATIC>(
          env,
          clazz,
          "create",
"(JLjava/lang/String;Ljava/lang/String;)Lorg/chromium/components/signin/ChildAccountInfoFetcher;",
          &g_org_chromium_components_signin_ChildAccountInfoFetcher_create);

  jobject ret =
      env->CallStaticObjectMethod(clazz,
          call_context.base.method_id, nativeAccountFetcherService, accountId.obj(),
              accountName.obj());
  return base::android::ScopedJavaLocalRef<jobject>(env, ret);
}

static std::atomic<jmethodID>
    g_org_chromium_components_signin_ChildAccountInfoFetcher_destroy(nullptr);
static void Java_ChildAccountInfoFetcher_destroy(JNIEnv* env, const base::android::JavaRef<jobject>&
    obj) {
  jclass clazz = org_chromium_components_signin_ChildAccountInfoFetcher_clazz(env);
  CHECK_CLAZZ(env, obj.obj(),
      org_chromium_components_signin_ChildAccountInfoFetcher_clazz(env));

  jni_generator::JniJavaCallContextChecked call_context;
  call_context.Init<
      base::android::MethodID::TYPE_INSTANCE>(
          env,
          clazz,
          "destroy",
          "()V",
          &g_org_chromium_components_signin_ChildAccountInfoFetcher_destroy);

     env->CallVoidMethod(obj.obj(),
          call_context.base.method_id);
}

static std::atomic<jmethodID>
    g_org_chromium_components_signin_ChildAccountInfoFetcher_initializeForTests(nullptr);
static void Java_ChildAccountInfoFetcher_initializeForTests(JNIEnv* env) {
  jclass clazz = org_chromium_components_signin_ChildAccountInfoFetcher_clazz(env);
  CHECK_CLAZZ(env, clazz,
      org_chromium_components_signin_ChildAccountInfoFetcher_clazz(env));

  jni_generator::JniJavaCallContextChecked call_context;
  call_context.Init<
      base::android::MethodID::TYPE_STATIC>(
          env,
          clazz,
          "initializeForTests",
          "()V",
          &g_org_chromium_components_signin_ChildAccountInfoFetcher_initializeForTests);

     env->CallStaticVoidMethod(clazz,
          call_context.base.method_id);
}

// Step 4: Generated test functions (optional).


#endif  // org_chromium_components_signin_ChildAccountInfoFetcher_JNI
