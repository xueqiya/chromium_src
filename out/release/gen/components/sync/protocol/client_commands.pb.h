// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: client_commands.proto

#ifndef GOOGLE_PROTOBUF_INCLUDED_client_5fcommands_2eproto
#define GOOGLE_PROTOBUF_INCLUDED_client_5fcommands_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3009000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3009000 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata_lite.h>
#include <google/protobuf/message_lite.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_client_5fcommands_2eproto
PROTOBUF_NAMESPACE_OPEN
namespace internal {
class AnyMetadata;
}  // namespace internal
PROTOBUF_NAMESPACE_CLOSE

// Internal implementation detail -- do not use these members.
struct TableStruct_client_5fcommands_2eproto {
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTableField entries[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::AuxillaryParseTableField aux[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTable schema[2]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::FieldMetadata field_metadata[];
  static const ::PROTOBUF_NAMESPACE_ID::internal::SerializationTable serialization_table[];
  static const ::PROTOBUF_NAMESPACE_ID::uint32 offsets[];
};
namespace sync_pb {
class ClientCommand;
class ClientCommandDefaultTypeInternal;
extern ClientCommandDefaultTypeInternal _ClientCommand_default_instance_;
class CustomNudgeDelay;
class CustomNudgeDelayDefaultTypeInternal;
extern CustomNudgeDelayDefaultTypeInternal _CustomNudgeDelay_default_instance_;
}  // namespace sync_pb
PROTOBUF_NAMESPACE_OPEN
template<> ::sync_pb::ClientCommand* Arena::CreateMaybeMessage<::sync_pb::ClientCommand>(Arena*);
template<> ::sync_pb::CustomNudgeDelay* Arena::CreateMaybeMessage<::sync_pb::CustomNudgeDelay>(Arena*);
PROTOBUF_NAMESPACE_CLOSE
namespace sync_pb {

// ===================================================================

class CustomNudgeDelay :
    public ::PROTOBUF_NAMESPACE_ID::MessageLite /* @@protoc_insertion_point(class_definition:sync_pb.CustomNudgeDelay) */ {
 public:
  CustomNudgeDelay();
  virtual ~CustomNudgeDelay();

  CustomNudgeDelay(const CustomNudgeDelay& from);
  CustomNudgeDelay(CustomNudgeDelay&& from) noexcept
    : CustomNudgeDelay() {
    *this = ::std::move(from);
  }

  inline CustomNudgeDelay& operator=(const CustomNudgeDelay& from) {
    CopyFrom(from);
    return *this;
  }
  inline CustomNudgeDelay& operator=(CustomNudgeDelay&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const std::string& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline std::string* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const CustomNudgeDelay& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CustomNudgeDelay* internal_default_instance() {
    return reinterpret_cast<const CustomNudgeDelay*>(
               &_CustomNudgeDelay_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(CustomNudgeDelay& a, CustomNudgeDelay& b) {
    a.Swap(&b);
  }
  inline void Swap(CustomNudgeDelay* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CustomNudgeDelay* New() const final {
    return CreateMaybeMessage<CustomNudgeDelay>(nullptr);
  }

  CustomNudgeDelay* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CustomNudgeDelay>(arena);
  }
  void CheckTypeAndMergeFrom(const ::PROTOBUF_NAMESPACE_ID::MessageLite& from)
    final;
  void CopyFrom(const CustomNudgeDelay& from);
  void MergeFrom(const CustomNudgeDelay& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  #else
  bool MergePartialFromCodedStream(
      ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const final;
  void DiscardUnknownFields();
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(CustomNudgeDelay* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "sync_pb.CustomNudgeDelay";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  std::string GetTypeName() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kDatatypeIdFieldNumber = 1,
    kDelayMsFieldNumber = 2,
  };
  // optional int32 datatype_id = 1;
  bool has_datatype_id() const;
  void clear_datatype_id();
  ::PROTOBUF_NAMESPACE_ID::int32 datatype_id() const;
  void set_datatype_id(::PROTOBUF_NAMESPACE_ID::int32 value);

  // optional int32 delay_ms = 2;
  bool has_delay_ms() const;
  void clear_delay_ms();
  ::PROTOBUF_NAMESPACE_ID::int32 delay_ms() const;
  void set_delay_ms(::PROTOBUF_NAMESPACE_ID::int32 value);

  // @@protoc_insertion_point(class_scope:sync_pb.CustomNudgeDelay)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArenaLite _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::int32 datatype_id_;
  ::PROTOBUF_NAMESPACE_ID::int32 delay_ms_;
  friend struct ::TableStruct_client_5fcommands_2eproto;
};
// -------------------------------------------------------------------

class ClientCommand :
    public ::PROTOBUF_NAMESPACE_ID::MessageLite /* @@protoc_insertion_point(class_definition:sync_pb.ClientCommand) */ {
 public:
  ClientCommand();
  virtual ~ClientCommand();

  ClientCommand(const ClientCommand& from);
  ClientCommand(ClientCommand&& from) noexcept
    : ClientCommand() {
    *this = ::std::move(from);
  }

  inline ClientCommand& operator=(const ClientCommand& from) {
    CopyFrom(from);
    return *this;
  }
  inline ClientCommand& operator=(ClientCommand&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const std::string& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline std::string* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ClientCommand& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ClientCommand* internal_default_instance() {
    return reinterpret_cast<const ClientCommand*>(
               &_ClientCommand_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  friend void swap(ClientCommand& a, ClientCommand& b) {
    a.Swap(&b);
  }
  inline void Swap(ClientCommand* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline ClientCommand* New() const final {
    return CreateMaybeMessage<ClientCommand>(nullptr);
  }

  ClientCommand* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<ClientCommand>(arena);
  }
  void CheckTypeAndMergeFrom(const ::PROTOBUF_NAMESPACE_ID::MessageLite& from)
    final;
  void CopyFrom(const ClientCommand& from);
  void MergeFrom(const ClientCommand& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  #else
  bool MergePartialFromCodedStream(
      ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const final;
  void DiscardUnknownFields();
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(ClientCommand* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "sync_pb.ClientCommand";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  std::string GetTypeName() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kCustomNudgeDelaysFieldNumber = 8,
    kSetSyncPollIntervalFieldNumber = 1,
    kSetSyncLongPollIntervalFieldNumber = 2,
    kMaxCommitBatchSizeFieldNumber = 3,
    kSessionsCommitDelaySecondsFieldNumber = 4,
    kThrottleDelaySecondsFieldNumber = 5,
    kClientInvalidationHintBufferSizeFieldNumber = 6,
    kGuRetryDelaySecondsFieldNumber = 7,
  };
  // repeated .sync_pb.CustomNudgeDelay custom_nudge_delays = 8;
  int custom_nudge_delays_size() const;
  void clear_custom_nudge_delays();
  ::sync_pb::CustomNudgeDelay* mutable_custom_nudge_delays(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::sync_pb::CustomNudgeDelay >*
      mutable_custom_nudge_delays();
  const ::sync_pb::CustomNudgeDelay& custom_nudge_delays(int index) const;
  ::sync_pb::CustomNudgeDelay* add_custom_nudge_delays();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::sync_pb::CustomNudgeDelay >&
      custom_nudge_delays() const;

  // optional int32 set_sync_poll_interval = 1;
  bool has_set_sync_poll_interval() const;
  void clear_set_sync_poll_interval();
  ::PROTOBUF_NAMESPACE_ID::int32 set_sync_poll_interval() const;
  void set_set_sync_poll_interval(::PROTOBUF_NAMESPACE_ID::int32 value);

  // optional int32 set_sync_long_poll_interval = 2 [deprecated = true];
  PROTOBUF_DEPRECATED bool has_set_sync_long_poll_interval() const;
  PROTOBUF_DEPRECATED void clear_set_sync_long_poll_interval();
  PROTOBUF_DEPRECATED ::PROTOBUF_NAMESPACE_ID::int32 set_sync_long_poll_interval() const;
  PROTOBUF_DEPRECATED void set_set_sync_long_poll_interval(::PROTOBUF_NAMESPACE_ID::int32 value);

  // optional int32 max_commit_batch_size = 3;
  bool has_max_commit_batch_size() const;
  void clear_max_commit_batch_size();
  ::PROTOBUF_NAMESPACE_ID::int32 max_commit_batch_size() const;
  void set_max_commit_batch_size(::PROTOBUF_NAMESPACE_ID::int32 value);

  // optional int32 sessions_commit_delay_seconds = 4;
  bool has_sessions_commit_delay_seconds() const;
  void clear_sessions_commit_delay_seconds();
  ::PROTOBUF_NAMESPACE_ID::int32 sessions_commit_delay_seconds() const;
  void set_sessions_commit_delay_seconds(::PROTOBUF_NAMESPACE_ID::int32 value);

  // optional int32 throttle_delay_seconds = 5;
  bool has_throttle_delay_seconds() const;
  void clear_throttle_delay_seconds();
  ::PROTOBUF_NAMESPACE_ID::int32 throttle_delay_seconds() const;
  void set_throttle_delay_seconds(::PROTOBUF_NAMESPACE_ID::int32 value);

  // optional int32 client_invalidation_hint_buffer_size = 6;
  bool has_client_invalidation_hint_buffer_size() const;
  void clear_client_invalidation_hint_buffer_size();
  ::PROTOBUF_NAMESPACE_ID::int32 client_invalidation_hint_buffer_size() const;
  void set_client_invalidation_hint_buffer_size(::PROTOBUF_NAMESPACE_ID::int32 value);

  // optional int32 gu_retry_delay_seconds = 7;
  bool has_gu_retry_delay_seconds() const;
  void clear_gu_retry_delay_seconds();
  ::PROTOBUF_NAMESPACE_ID::int32 gu_retry_delay_seconds() const;
  void set_gu_retry_delay_seconds(::PROTOBUF_NAMESPACE_ID::int32 value);

  // @@protoc_insertion_point(class_scope:sync_pb.ClientCommand)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArenaLite _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::sync_pb::CustomNudgeDelay > custom_nudge_delays_;
  ::PROTOBUF_NAMESPACE_ID::int32 set_sync_poll_interval_;
  ::PROTOBUF_NAMESPACE_ID::int32 set_sync_long_poll_interval_;
  ::PROTOBUF_NAMESPACE_ID::int32 max_commit_batch_size_;
  ::PROTOBUF_NAMESPACE_ID::int32 sessions_commit_delay_seconds_;
  ::PROTOBUF_NAMESPACE_ID::int32 throttle_delay_seconds_;
  ::PROTOBUF_NAMESPACE_ID::int32 client_invalidation_hint_buffer_size_;
  ::PROTOBUF_NAMESPACE_ID::int32 gu_retry_delay_seconds_;
  friend struct ::TableStruct_client_5fcommands_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// CustomNudgeDelay

// optional int32 datatype_id = 1;
inline bool CustomNudgeDelay::has_datatype_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CustomNudgeDelay::clear_datatype_id() {
  datatype_id_ = 0;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CustomNudgeDelay::datatype_id() const {
  // @@protoc_insertion_point(field_get:sync_pb.CustomNudgeDelay.datatype_id)
  return datatype_id_;
}
inline void CustomNudgeDelay::set_datatype_id(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000001u;
  datatype_id_ = value;
  // @@protoc_insertion_point(field_set:sync_pb.CustomNudgeDelay.datatype_id)
}

// optional int32 delay_ms = 2;
inline bool CustomNudgeDelay::has_delay_ms() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CustomNudgeDelay::clear_delay_ms() {
  delay_ms_ = 0;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CustomNudgeDelay::delay_ms() const {
  // @@protoc_insertion_point(field_get:sync_pb.CustomNudgeDelay.delay_ms)
  return delay_ms_;
}
inline void CustomNudgeDelay::set_delay_ms(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000002u;
  delay_ms_ = value;
  // @@protoc_insertion_point(field_set:sync_pb.CustomNudgeDelay.delay_ms)
}

// -------------------------------------------------------------------

// ClientCommand

// optional int32 set_sync_poll_interval = 1;
inline bool ClientCommand::has_set_sync_poll_interval() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ClientCommand::clear_set_sync_poll_interval() {
  set_sync_poll_interval_ = 0;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 ClientCommand::set_sync_poll_interval() const {
  // @@protoc_insertion_point(field_get:sync_pb.ClientCommand.set_sync_poll_interval)
  return set_sync_poll_interval_;
}
inline void ClientCommand::set_set_sync_poll_interval(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000001u;
  set_sync_poll_interval_ = value;
  // @@protoc_insertion_point(field_set:sync_pb.ClientCommand.set_sync_poll_interval)
}

// optional int32 set_sync_long_poll_interval = 2 [deprecated = true];
inline bool ClientCommand::has_set_sync_long_poll_interval() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ClientCommand::clear_set_sync_long_poll_interval() {
  set_sync_long_poll_interval_ = 0;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 ClientCommand::set_sync_long_poll_interval() const {
  // @@protoc_insertion_point(field_get:sync_pb.ClientCommand.set_sync_long_poll_interval)
  return set_sync_long_poll_interval_;
}
inline void ClientCommand::set_set_sync_long_poll_interval(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000002u;
  set_sync_long_poll_interval_ = value;
  // @@protoc_insertion_point(field_set:sync_pb.ClientCommand.set_sync_long_poll_interval)
}

// optional int32 max_commit_batch_size = 3;
inline bool ClientCommand::has_max_commit_batch_size() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ClientCommand::clear_max_commit_batch_size() {
  max_commit_batch_size_ = 0;
  _has_bits_[0] &= ~0x00000004u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 ClientCommand::max_commit_batch_size() const {
  // @@protoc_insertion_point(field_get:sync_pb.ClientCommand.max_commit_batch_size)
  return max_commit_batch_size_;
}
inline void ClientCommand::set_max_commit_batch_size(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000004u;
  max_commit_batch_size_ = value;
  // @@protoc_insertion_point(field_set:sync_pb.ClientCommand.max_commit_batch_size)
}

// optional int32 sessions_commit_delay_seconds = 4;
inline bool ClientCommand::has_sessions_commit_delay_seconds() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void ClientCommand::clear_sessions_commit_delay_seconds() {
  sessions_commit_delay_seconds_ = 0;
  _has_bits_[0] &= ~0x00000008u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 ClientCommand::sessions_commit_delay_seconds() const {
  // @@protoc_insertion_point(field_get:sync_pb.ClientCommand.sessions_commit_delay_seconds)
  return sessions_commit_delay_seconds_;
}
inline void ClientCommand::set_sessions_commit_delay_seconds(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000008u;
  sessions_commit_delay_seconds_ = value;
  // @@protoc_insertion_point(field_set:sync_pb.ClientCommand.sessions_commit_delay_seconds)
}

// optional int32 throttle_delay_seconds = 5;
inline bool ClientCommand::has_throttle_delay_seconds() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void ClientCommand::clear_throttle_delay_seconds() {
  throttle_delay_seconds_ = 0;
  _has_bits_[0] &= ~0x00000010u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 ClientCommand::throttle_delay_seconds() const {
  // @@protoc_insertion_point(field_get:sync_pb.ClientCommand.throttle_delay_seconds)
  return throttle_delay_seconds_;
}
inline void ClientCommand::set_throttle_delay_seconds(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000010u;
  throttle_delay_seconds_ = value;
  // @@protoc_insertion_point(field_set:sync_pb.ClientCommand.throttle_delay_seconds)
}

// optional int32 client_invalidation_hint_buffer_size = 6;
inline bool ClientCommand::has_client_invalidation_hint_buffer_size() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void ClientCommand::clear_client_invalidation_hint_buffer_size() {
  client_invalidation_hint_buffer_size_ = 0;
  _has_bits_[0] &= ~0x00000020u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 ClientCommand::client_invalidation_hint_buffer_size() const {
  // @@protoc_insertion_point(field_get:sync_pb.ClientCommand.client_invalidation_hint_buffer_size)
  return client_invalidation_hint_buffer_size_;
}
inline void ClientCommand::set_client_invalidation_hint_buffer_size(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000020u;
  client_invalidation_hint_buffer_size_ = value;
  // @@protoc_insertion_point(field_set:sync_pb.ClientCommand.client_invalidation_hint_buffer_size)
}

// optional int32 gu_retry_delay_seconds = 7;
inline bool ClientCommand::has_gu_retry_delay_seconds() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void ClientCommand::clear_gu_retry_delay_seconds() {
  gu_retry_delay_seconds_ = 0;
  _has_bits_[0] &= ~0x00000040u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 ClientCommand::gu_retry_delay_seconds() const {
  // @@protoc_insertion_point(field_get:sync_pb.ClientCommand.gu_retry_delay_seconds)
  return gu_retry_delay_seconds_;
}
inline void ClientCommand::set_gu_retry_delay_seconds(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000040u;
  gu_retry_delay_seconds_ = value;
  // @@protoc_insertion_point(field_set:sync_pb.ClientCommand.gu_retry_delay_seconds)
}

// repeated .sync_pb.CustomNudgeDelay custom_nudge_delays = 8;
inline int ClientCommand::custom_nudge_delays_size() const {
  return custom_nudge_delays_.size();
}
inline void ClientCommand::clear_custom_nudge_delays() {
  custom_nudge_delays_.Clear();
}
inline ::sync_pb::CustomNudgeDelay* ClientCommand::mutable_custom_nudge_delays(int index) {
  // @@protoc_insertion_point(field_mutable:sync_pb.ClientCommand.custom_nudge_delays)
  return custom_nudge_delays_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::sync_pb::CustomNudgeDelay >*
ClientCommand::mutable_custom_nudge_delays() {
  // @@protoc_insertion_point(field_mutable_list:sync_pb.ClientCommand.custom_nudge_delays)
  return &custom_nudge_delays_;
}
inline const ::sync_pb::CustomNudgeDelay& ClientCommand::custom_nudge_delays(int index) const {
  // @@protoc_insertion_point(field_get:sync_pb.ClientCommand.custom_nudge_delays)
  return custom_nudge_delays_.Get(index);
}
inline ::sync_pb::CustomNudgeDelay* ClientCommand::add_custom_nudge_delays() {
  // @@protoc_insertion_point(field_add:sync_pb.ClientCommand.custom_nudge_delays)
  return custom_nudge_delays_.Add();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::sync_pb::CustomNudgeDelay >&
ClientCommand::custom_nudge_delays() const {
  // @@protoc_insertion_point(field_list:sync_pb.ClientCommand.custom_nudge_delays)
  return custom_nudge_delays_;
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace sync_pb

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // GOOGLE_PROTOBUF_INCLUDED_GOOGLE_PROTOBUF_INCLUDED_client_5fcommands_2eproto
