// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: test.proto

#ifndef GOOGLE_PROTOBUF_INCLUDED_test_2eproto
#define GOOGLE_PROTOBUF_INCLUDED_test_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3009000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3009000 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata_lite.h>
#include <google/protobuf/message_lite.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_test_2eproto
PROTOBUF_NAMESPACE_OPEN
namespace internal {
class AnyMetadata;
}  // namespace internal
PROTOBUF_NAMESPACE_CLOSE

// Internal implementation detail -- do not use these members.
struct TableStruct_test_2eproto {
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTableField entries[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::AuxillaryParseTableField aux[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTable schema[2]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::FieldMetadata field_metadata[];
  static const ::PROTOBUF_NAMESPACE_ID::internal::SerializationTable serialization_table[];
  static const ::PROTOBUF_NAMESPACE_ID::uint32 offsets[];
};
namespace sync_pb {
class UnknownFieldsTestA;
class UnknownFieldsTestADefaultTypeInternal;
extern UnknownFieldsTestADefaultTypeInternal _UnknownFieldsTestA_default_instance_;
class UnknownFieldsTestB;
class UnknownFieldsTestBDefaultTypeInternal;
extern UnknownFieldsTestBDefaultTypeInternal _UnknownFieldsTestB_default_instance_;
}  // namespace sync_pb
PROTOBUF_NAMESPACE_OPEN
template<> ::sync_pb::UnknownFieldsTestA* Arena::CreateMaybeMessage<::sync_pb::UnknownFieldsTestA>(Arena*);
template<> ::sync_pb::UnknownFieldsTestB* Arena::CreateMaybeMessage<::sync_pb::UnknownFieldsTestB>(Arena*);
PROTOBUF_NAMESPACE_CLOSE
namespace sync_pb {

// ===================================================================

class UnknownFieldsTestA :
    public ::PROTOBUF_NAMESPACE_ID::MessageLite /* @@protoc_insertion_point(class_definition:sync_pb.UnknownFieldsTestA) */ {
 public:
  UnknownFieldsTestA();
  virtual ~UnknownFieldsTestA();

  UnknownFieldsTestA(const UnknownFieldsTestA& from);
  UnknownFieldsTestA(UnknownFieldsTestA&& from) noexcept
    : UnknownFieldsTestA() {
    *this = ::std::move(from);
  }

  inline UnknownFieldsTestA& operator=(const UnknownFieldsTestA& from) {
    CopyFrom(from);
    return *this;
  }
  inline UnknownFieldsTestA& operator=(UnknownFieldsTestA&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const std::string& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline std::string* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const UnknownFieldsTestA& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const UnknownFieldsTestA* internal_default_instance() {
    return reinterpret_cast<const UnknownFieldsTestA*>(
               &_UnknownFieldsTestA_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(UnknownFieldsTestA& a, UnknownFieldsTestA& b) {
    a.Swap(&b);
  }
  inline void Swap(UnknownFieldsTestA* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline UnknownFieldsTestA* New() const final {
    return CreateMaybeMessage<UnknownFieldsTestA>(nullptr);
  }

  UnknownFieldsTestA* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<UnknownFieldsTestA>(arena);
  }
  void CheckTypeAndMergeFrom(const ::PROTOBUF_NAMESPACE_ID::MessageLite& from)
    final;
  void CopyFrom(const UnknownFieldsTestA& from);
  void MergeFrom(const UnknownFieldsTestA& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  #else
  bool MergePartialFromCodedStream(
      ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const final;
  void DiscardUnknownFields();
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(UnknownFieldsTestA* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "sync_pb.UnknownFieldsTestA";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  std::string GetTypeName() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kFooFieldNumber = 1,
  };
  // required bool foo = 1;
  bool has_foo() const;
  void clear_foo();
  bool foo() const;
  void set_foo(bool value);

  // @@protoc_insertion_point(class_scope:sync_pb.UnknownFieldsTestA)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArenaLite _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  bool foo_;
  friend struct ::TableStruct_test_2eproto;
};
// -------------------------------------------------------------------

class UnknownFieldsTestB :
    public ::PROTOBUF_NAMESPACE_ID::MessageLite /* @@protoc_insertion_point(class_definition:sync_pb.UnknownFieldsTestB) */ {
 public:
  UnknownFieldsTestB();
  virtual ~UnknownFieldsTestB();

  UnknownFieldsTestB(const UnknownFieldsTestB& from);
  UnknownFieldsTestB(UnknownFieldsTestB&& from) noexcept
    : UnknownFieldsTestB() {
    *this = ::std::move(from);
  }

  inline UnknownFieldsTestB& operator=(const UnknownFieldsTestB& from) {
    CopyFrom(from);
    return *this;
  }
  inline UnknownFieldsTestB& operator=(UnknownFieldsTestB&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const std::string& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline std::string* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const UnknownFieldsTestB& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const UnknownFieldsTestB* internal_default_instance() {
    return reinterpret_cast<const UnknownFieldsTestB*>(
               &_UnknownFieldsTestB_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  friend void swap(UnknownFieldsTestB& a, UnknownFieldsTestB& b) {
    a.Swap(&b);
  }
  inline void Swap(UnknownFieldsTestB* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline UnknownFieldsTestB* New() const final {
    return CreateMaybeMessage<UnknownFieldsTestB>(nullptr);
  }

  UnknownFieldsTestB* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<UnknownFieldsTestB>(arena);
  }
  void CheckTypeAndMergeFrom(const ::PROTOBUF_NAMESPACE_ID::MessageLite& from)
    final;
  void CopyFrom(const UnknownFieldsTestB& from);
  void MergeFrom(const UnknownFieldsTestB& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  #else
  bool MergePartialFromCodedStream(
      ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const final;
  void DiscardUnknownFields();
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(UnknownFieldsTestB* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "sync_pb.UnknownFieldsTestB";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  std::string GetTypeName() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kFooFieldNumber = 1,
    kBarFieldNumber = 2,
  };
  // required bool foo = 1;
  bool has_foo() const;
  void clear_foo();
  bool foo() const;
  void set_foo(bool value);

  // required bool bar = 2;
  bool has_bar() const;
  void clear_bar();
  bool bar() const;
  void set_bar(bool value);

  // @@protoc_insertion_point(class_scope:sync_pb.UnknownFieldsTestB)
 private:
  class _Internal;

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArenaLite _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  bool foo_;
  bool bar_;
  friend struct ::TableStruct_test_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// UnknownFieldsTestA

// required bool foo = 1;
inline bool UnknownFieldsTestA::has_foo() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void UnknownFieldsTestA::clear_foo() {
  foo_ = false;
  _has_bits_[0] &= ~0x00000001u;
}
inline bool UnknownFieldsTestA::foo() const {
  // @@protoc_insertion_point(field_get:sync_pb.UnknownFieldsTestA.foo)
  return foo_;
}
inline void UnknownFieldsTestA::set_foo(bool value) {
  _has_bits_[0] |= 0x00000001u;
  foo_ = value;
  // @@protoc_insertion_point(field_set:sync_pb.UnknownFieldsTestA.foo)
}

// -------------------------------------------------------------------

// UnknownFieldsTestB

// required bool foo = 1;
inline bool UnknownFieldsTestB::has_foo() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void UnknownFieldsTestB::clear_foo() {
  foo_ = false;
  _has_bits_[0] &= ~0x00000001u;
}
inline bool UnknownFieldsTestB::foo() const {
  // @@protoc_insertion_point(field_get:sync_pb.UnknownFieldsTestB.foo)
  return foo_;
}
inline void UnknownFieldsTestB::set_foo(bool value) {
  _has_bits_[0] |= 0x00000001u;
  foo_ = value;
  // @@protoc_insertion_point(field_set:sync_pb.UnknownFieldsTestB.foo)
}

// required bool bar = 2;
inline bool UnknownFieldsTestB::has_bar() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void UnknownFieldsTestB::clear_bar() {
  bar_ = false;
  _has_bits_[0] &= ~0x00000002u;
}
inline bool UnknownFieldsTestB::bar() const {
  // @@protoc_insertion_point(field_get:sync_pb.UnknownFieldsTestB.bar)
  return bar_;
}
inline void UnknownFieldsTestB::set_bar(bool value) {
  _has_bits_[0] |= 0x00000002u;
  bar_ = value;
  // @@protoc_insertion_point(field_set:sync_pb.UnknownFieldsTestB.bar)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace sync_pb

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // GOOGLE_PROTOBUF_INCLUDED_GOOGLE_PROTOBUF_INCLUDED_test_2eproto
