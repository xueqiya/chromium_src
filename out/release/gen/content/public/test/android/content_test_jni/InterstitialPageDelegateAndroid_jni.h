// Copyright 2014 The Chromium Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.


// This file is autogenerated by
//     base/android/jni_generator/jni_generator.py
// For
//     org/chromium/content_public/browser/test/InterstitialPageDelegateAndroid

#ifndef org_chromium_content_public_browser_test_InterstitialPageDelegateAndroid_JNI
#define org_chromium_content_public_browser_test_InterstitialPageDelegateAndroid_JNI

#include <jni.h>

#include "../../../../../../../../base/android/jni_generator/jni_generator_helper.h"


// Step 1: Forward declarations.

JNI_REGISTRATION_EXPORT extern const char
    kClassPath_org_chromium_content_1public_browser_test_InterstitialPageDelegateAndroid[];
const char kClassPath_org_chromium_content_1public_browser_test_InterstitialPageDelegateAndroid[] =
    "org/chromium/content_public/browser/test/InterstitialPageDelegateAndroid";
// Leaking this jclass as we cannot use LazyInstance from some threads.
JNI_REGISTRATION_EXPORT std::atomic<jclass>
    g_org_chromium_content_1public_browser_test_InterstitialPageDelegateAndroid_clazz(nullptr);
#ifndef org_chromium_content_1public_browser_test_InterstitialPageDelegateAndroid_clazz_defined
#define org_chromium_content_1public_browser_test_InterstitialPageDelegateAndroid_clazz_defined
inline jclass
    org_chromium_content_1public_browser_test_InterstitialPageDelegateAndroid_clazz(JNIEnv* env) {
  return base::android::LazyGetClass(env,
      kClassPath_org_chromium_content_1public_browser_test_InterstitialPageDelegateAndroid,
      &g_org_chromium_content_1public_browser_test_InterstitialPageDelegateAndroid_clazz);
}
#endif


// Step 2: Constants (optional).


// Step 3: Method stubs.
namespace content {

static jlong JNI_InterstitialPageDelegateAndroid_Init(JNIEnv* env, const
    base::android::JavaParamRef<jobject>& jcaller,
    const base::android::JavaParamRef<jstring>& htmlContent);

JNI_GENERATOR_EXPORT jlong
    Java_org_chromium_content_1public_browser_test_InterstitialPageDelegateAndroid_nativeInit(
    JNIEnv* env,
    jobject jcaller,
    jstring htmlContent) {
  return JNI_InterstitialPageDelegateAndroid_Init(env, base::android::JavaParamRef<jobject>(env,
      jcaller), base::android::JavaParamRef<jstring>(env, htmlContent));
}

JNI_GENERATOR_EXPORT void
    Java_org_chromium_content_1public_browser_test_InterstitialPageDelegateAndroid_nativeProceed(
    JNIEnv* env,
    jobject jcaller,
    jlong nativeInterstitialPageDelegateAndroid) {
  InterstitialPageDelegateAndroid* native =
      reinterpret_cast<InterstitialPageDelegateAndroid*>(nativeInterstitialPageDelegateAndroid);
  CHECK_NATIVE_PTR(env, jcaller, native, "Proceed");
  return native->Proceed(env, base::android::JavaParamRef<jobject>(env, jcaller));
}

JNI_GENERATOR_EXPORT void
    Java_org_chromium_content_1public_browser_test_InterstitialPageDelegateAndroid_nativeDontProceed(
    JNIEnv* env,
    jobject jcaller,
    jlong nativeInterstitialPageDelegateAndroid) {
  InterstitialPageDelegateAndroid* native =
      reinterpret_cast<InterstitialPageDelegateAndroid*>(nativeInterstitialPageDelegateAndroid);
  CHECK_NATIVE_PTR(env, jcaller, native, "DontProceed");
  return native->DontProceed(env, base::android::JavaParamRef<jobject>(env, jcaller));
}

JNI_GENERATOR_EXPORT void
    Java_org_chromium_content_1public_browser_test_InterstitialPageDelegateAndroid_nativeShowInterstitialPage(
    JNIEnv* env,
    jobject jcaller,
    jlong nativeInterstitialPageDelegateAndroid,
    jstring url,
    jobject webContents) {
  InterstitialPageDelegateAndroid* native =
      reinterpret_cast<InterstitialPageDelegateAndroid*>(nativeInterstitialPageDelegateAndroid);
  CHECK_NATIVE_PTR(env, jcaller, native, "ShowInterstitialPage");
  return native->ShowInterstitialPage(env, base::android::JavaParamRef<jobject>(env, jcaller),
      base::android::JavaParamRef<jstring>(env, url), base::android::JavaParamRef<jobject>(env,
      webContents));
}


static std::atomic<jmethodID>
    g_org_chromium_content_1public_browser_test_InterstitialPageDelegateAndroid_onProceed(nullptr);
static void Java_InterstitialPageDelegateAndroid_onProceed(JNIEnv* env, const
    base::android::JavaRef<jobject>& obj) {
  jclass clazz =
      org_chromium_content_1public_browser_test_InterstitialPageDelegateAndroid_clazz(env);
  CHECK_CLAZZ(env, obj.obj(),
      org_chromium_content_1public_browser_test_InterstitialPageDelegateAndroid_clazz(env));

  jni_generator::JniJavaCallContextChecked call_context;
  call_context.Init<
      base::android::MethodID::TYPE_INSTANCE>(
          env,
          clazz,
          "onProceed",
          "()V",
          &g_org_chromium_content_1public_browser_test_InterstitialPageDelegateAndroid_onProceed);

     env->CallVoidMethod(obj.obj(),
          call_context.base.method_id);
}

static std::atomic<jmethodID>
    g_org_chromium_content_1public_browser_test_InterstitialPageDelegateAndroid_onDontProceed(nullptr);
static void Java_InterstitialPageDelegateAndroid_onDontProceed(JNIEnv* env, const
    base::android::JavaRef<jobject>& obj) {
  jclass clazz =
      org_chromium_content_1public_browser_test_InterstitialPageDelegateAndroid_clazz(env);
  CHECK_CLAZZ(env, obj.obj(),
      org_chromium_content_1public_browser_test_InterstitialPageDelegateAndroid_clazz(env));

  jni_generator::JniJavaCallContextChecked call_context;
  call_context.Init<
      base::android::MethodID::TYPE_INSTANCE>(
          env,
          clazz,
          "onDontProceed",
          "()V",
&g_org_chromium_content_1public_browser_test_InterstitialPageDelegateAndroid_onDontProceed);

     env->CallVoidMethod(obj.obj(),
          call_context.base.method_id);
}

static std::atomic<jmethodID>
    g_org_chromium_content_1public_browser_test_InterstitialPageDelegateAndroid_commandReceived(nullptr);
static void Java_InterstitialPageDelegateAndroid_commandReceived(JNIEnv* env, const
    base::android::JavaRef<jobject>& obj, const base::android::JavaRef<jstring>& command) {
  jclass clazz =
      org_chromium_content_1public_browser_test_InterstitialPageDelegateAndroid_clazz(env);
  CHECK_CLAZZ(env, obj.obj(),
      org_chromium_content_1public_browser_test_InterstitialPageDelegateAndroid_clazz(env));

  jni_generator::JniJavaCallContextChecked call_context;
  call_context.Init<
      base::android::MethodID::TYPE_INSTANCE>(
          env,
          clazz,
          "commandReceived",
          "(Ljava/lang/String;)V",
&g_org_chromium_content_1public_browser_test_InterstitialPageDelegateAndroid_commandReceived);

     env->CallVoidMethod(obj.obj(),
          call_context.base.method_id, command.obj());
}

static std::atomic<jmethodID>
    g_org_chromium_content_1public_browser_test_InterstitialPageDelegateAndroid_onNativeDestroyed(nullptr);
static void Java_InterstitialPageDelegateAndroid_onNativeDestroyed(JNIEnv* env, const
    base::android::JavaRef<jobject>& obj) {
  jclass clazz =
      org_chromium_content_1public_browser_test_InterstitialPageDelegateAndroid_clazz(env);
  CHECK_CLAZZ(env, obj.obj(),
      org_chromium_content_1public_browser_test_InterstitialPageDelegateAndroid_clazz(env));

  jni_generator::JniJavaCallContextChecked call_context;
  call_context.Init<
      base::android::MethodID::TYPE_INSTANCE>(
          env,
          clazz,
          "onNativeDestroyed",
          "()V",
&g_org_chromium_content_1public_browser_test_InterstitialPageDelegateAndroid_onNativeDestroyed);

     env->CallVoidMethod(obj.obj(),
          call_context.base.method_id);
}

}  // namespace content

// Step 4: Generated test functions (optional).


#endif  // org_chromium_content_public_browser_test_InterstitialPageDelegateAndroid_JNI
