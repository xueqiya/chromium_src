// Copyright 2014 The Chromium Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.


// This file is autogenerated by
//     base/android/jni_generator/jni_generator.py
// For
//     org/chromium/content_public/browser/test/util/WebContentsUtils

#ifndef org_chromium_content_public_browser_test_util_WebContentsUtils_JNI
#define org_chromium_content_public_browser_test_util_WebContentsUtils_JNI

#include <jni.h>

#include "../../../../../../../../base/android/jni_generator/jni_generator_helper.h"


// Step 1: Forward declarations.

JNI_REGISTRATION_EXPORT extern const char
    kClassPath_org_chromium_content_1public_browser_test_util_WebContentsUtils[];
const char kClassPath_org_chromium_content_1public_browser_test_util_WebContentsUtils[] =
    "org/chromium/content_public/browser/test/util/WebContentsUtils";
// Leaking this jclass as we cannot use LazyInstance from some threads.
JNI_REGISTRATION_EXPORT std::atomic<jclass>
    g_org_chromium_content_1public_browser_test_util_WebContentsUtils_clazz(nullptr);
#ifndef org_chromium_content_1public_browser_test_util_WebContentsUtils_clazz_defined
#define org_chromium_content_1public_browser_test_util_WebContentsUtils_clazz_defined
inline jclass org_chromium_content_1public_browser_test_util_WebContentsUtils_clazz(JNIEnv* env) {
  return base::android::LazyGetClass(env,
      kClassPath_org_chromium_content_1public_browser_test_util_WebContentsUtils,
      &g_org_chromium_content_1public_browser_test_util_WebContentsUtils_clazz);
}
#endif


// Step 2: Constants (optional).


// Step 3: Method stubs.
namespace content {

static void JNI_WebContentsUtils_ReportAllFrameSubmissions(JNIEnv* env, const
    base::android::JavaParamRef<jobject>& webContents,
    jboolean enabled);

JNI_GENERATOR_EXPORT void
    Java_org_chromium_content_1public_browser_test_util_WebContentsUtils_nativeReportAllFrameSubmissions(
    JNIEnv* env,
    jclass jcaller,
    jobject webContents,
    jboolean enabled) {
  return JNI_WebContentsUtils_ReportAllFrameSubmissions(env,
      base::android::JavaParamRef<jobject>(env, webContents), enabled);
}

static base::android::ScopedJavaLocalRef<jobject> JNI_WebContentsUtils_GetFocusedFrame(JNIEnv* env,
    const base::android::JavaParamRef<jobject>& webContents);

JNI_GENERATOR_EXPORT jobject
    Java_org_chromium_content_1public_browser_test_util_WebContentsUtils_nativeGetFocusedFrame(
    JNIEnv* env,
    jclass jcaller,
    jobject webContents) {
  return JNI_WebContentsUtils_GetFocusedFrame(env, base::android::JavaParamRef<jobject>(env,
      webContents)).Release();
}

static void JNI_WebContentsUtils_EvaluateJavaScriptWithUserGesture(JNIEnv* env, const
    base::android::JavaParamRef<jobject>& webContents,
    const base::android::JavaParamRef<jstring>& script);

JNI_GENERATOR_EXPORT void
    Java_org_chromium_content_1public_browser_test_util_WebContentsUtils_nativeEvaluateJavaScriptWithUserGesture(
    JNIEnv* env,
    jclass jcaller,
    jobject webContents,
    jstring script) {
  return JNI_WebContentsUtils_EvaluateJavaScriptWithUserGesture(env,
      base::android::JavaParamRef<jobject>(env, webContents),
      base::android::JavaParamRef<jstring>(env, script));
}


}  // namespace content

// Step 4: Generated test functions (optional).


#endif  // org_chromium_content_public_browser_test_util_WebContentsUtils_JNI
