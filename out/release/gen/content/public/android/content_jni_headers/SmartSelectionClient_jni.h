// Copyright 2014 The Chromium Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.


// This file is autogenerated by
//     base/android/jni_generator/jni_generator.py
// For
//     org/chromium/content/browser/selection/SmartSelectionClient

#ifndef org_chromium_content_browser_selection_SmartSelectionClient_JNI
#define org_chromium_content_browser_selection_SmartSelectionClient_JNI

#include <jni.h>

#include "../../../../../../../base/android/jni_generator/jni_generator_helper.h"


// Step 1: Forward declarations.

JNI_REGISTRATION_EXPORT extern const char
    kClassPath_org_chromium_content_browser_selection_SmartSelectionClient[];
const char kClassPath_org_chromium_content_browser_selection_SmartSelectionClient[] =
    "org/chromium/content/browser/selection/SmartSelectionClient";
// Leaking this jclass as we cannot use LazyInstance from some threads.
JNI_REGISTRATION_EXPORT std::atomic<jclass>
    g_org_chromium_content_browser_selection_SmartSelectionClient_clazz(nullptr);
#ifndef org_chromium_content_browser_selection_SmartSelectionClient_clazz_defined
#define org_chromium_content_browser_selection_SmartSelectionClient_clazz_defined
inline jclass org_chromium_content_browser_selection_SmartSelectionClient_clazz(JNIEnv* env) {
  return base::android::LazyGetClass(env,
      kClassPath_org_chromium_content_browser_selection_SmartSelectionClient,
      &g_org_chromium_content_browser_selection_SmartSelectionClient_clazz);
}
#endif


// Step 2: Constants (optional).


// Step 3: Method stubs.
namespace content {

static jlong JNI_SmartSelectionClient_Init(JNIEnv* env, const base::android::JavaParamRef<jobject>&
    caller,
    const base::android::JavaParamRef<jobject>& webContents);

JNI_GENERATOR_EXPORT jlong Java_J_N_MFA_1dMJC(
    JNIEnv* env,
    jclass jcaller,
    jobject caller,
    jobject webContents) {
  return JNI_SmartSelectionClient_Init(env, base::android::JavaParamRef<jobject>(env, caller),
      base::android::JavaParamRef<jobject>(env, webContents));
}

JNI_GENERATOR_EXPORT void Java_J_N_M2GZ6ZNR(
    JNIEnv* env,
    jclass jcaller,
    jlong nativeSmartSelectionClient,
    jobject caller,
    jint numExtraCharacters,
    jint callbackData) {
  SmartSelectionClient* native =
      reinterpret_cast<SmartSelectionClient*>(nativeSmartSelectionClient);
  CHECK_NATIVE_PTR(env, jcaller, native, "RequestSurroundingText");
  return native->RequestSurroundingText(env, base::android::JavaParamRef<jobject>(env, caller),
      numExtraCharacters, callbackData);
}

JNI_GENERATOR_EXPORT void Java_J_N_MVHq2mA2(
    JNIEnv* env,
    jclass jcaller,
    jlong nativeSmartSelectionClient,
    jobject caller) {
  SmartSelectionClient* native =
      reinterpret_cast<SmartSelectionClient*>(nativeSmartSelectionClient);
  CHECK_NATIVE_PTR(env, jcaller, native, "CancelAllRequests");
  return native->CancelAllRequests(env, base::android::JavaParamRef<jobject>(env, caller));
}


static std::atomic<jmethodID>
    g_org_chromium_content_browser_selection_SmartSelectionClient_onNativeSideDestroyed(nullptr);
static void Java_SmartSelectionClient_onNativeSideDestroyed(JNIEnv* env, const
    base::android::JavaRef<jobject>& obj, jlong nativeSmartSelectionClient) {
  jclass clazz = org_chromium_content_browser_selection_SmartSelectionClient_clazz(env);
  CHECK_CLAZZ(env, obj.obj(),
      org_chromium_content_browser_selection_SmartSelectionClient_clazz(env));

  jni_generator::JniJavaCallContextChecked call_context;
  call_context.Init<
      base::android::MethodID::TYPE_INSTANCE>(
          env,
          clazz,
          "onNativeSideDestroyed",
          "(J)V",
          &g_org_chromium_content_browser_selection_SmartSelectionClient_onNativeSideDestroyed);

     env->CallVoidMethod(obj.obj(),
          call_context.base.method_id, nativeSmartSelectionClient);
}

static std::atomic<jmethodID>
    g_org_chromium_content_browser_selection_SmartSelectionClient_onSurroundingTextReceived(nullptr);
static void Java_SmartSelectionClient_onSurroundingTextReceived(JNIEnv* env, const
    base::android::JavaRef<jobject>& obj, JniIntWrapper callbackData,
    const base::android::JavaRef<jstring>& text,
    JniIntWrapper start,
    JniIntWrapper end) {
  jclass clazz = org_chromium_content_browser_selection_SmartSelectionClient_clazz(env);
  CHECK_CLAZZ(env, obj.obj(),
      org_chromium_content_browser_selection_SmartSelectionClient_clazz(env));

  jni_generator::JniJavaCallContextChecked call_context;
  call_context.Init<
      base::android::MethodID::TYPE_INSTANCE>(
          env,
          clazz,
          "onSurroundingTextReceived",
          "(ILjava/lang/String;II)V",
          &g_org_chromium_content_browser_selection_SmartSelectionClient_onSurroundingTextReceived);

     env->CallVoidMethod(obj.obj(),
          call_context.base.method_id, as_jint(callbackData), text.obj(), as_jint(start),
              as_jint(end));
}

}  // namespace content

// Step 4: Generated test functions (optional).


#endif  // org_chromium_content_browser_selection_SmartSelectionClient_JNI
