// Copyright 2014 The Chromium Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.


// This file is autogenerated by
//     base/android/jni_generator/jni_generator.py
// For
//     org/chromium/content/browser/input/SelectPopup

#ifndef org_chromium_content_browser_input_SelectPopup_JNI
#define org_chromium_content_browser_input_SelectPopup_JNI

#include <jni.h>

#include "../../../../../../../base/android/jni_generator/jni_generator_helper.h"


// Step 1: Forward declarations.

JNI_REGISTRATION_EXPORT extern const char
    kClassPath_org_chromium_content_browser_input_SelectPopup[];
const char kClassPath_org_chromium_content_browser_input_SelectPopup[] =
    "org/chromium/content/browser/input/SelectPopup";
// Leaking this jclass as we cannot use LazyInstance from some threads.
JNI_REGISTRATION_EXPORT std::atomic<jclass>
    g_org_chromium_content_browser_input_SelectPopup_clazz(nullptr);
#ifndef org_chromium_content_browser_input_SelectPopup_clazz_defined
#define org_chromium_content_browser_input_SelectPopup_clazz_defined
inline jclass org_chromium_content_browser_input_SelectPopup_clazz(JNIEnv* env) {
  return base::android::LazyGetClass(env, kClassPath_org_chromium_content_browser_input_SelectPopup,
      &g_org_chromium_content_browser_input_SelectPopup_clazz);
}
#endif


// Step 2: Constants (optional).


// Step 3: Method stubs.
namespace content {

JNI_GENERATOR_EXPORT void Java_J_N_ME0LgXse(
    JNIEnv* env,
    jclass jcaller,
    jlong nativeSelectPopup,
    jobject caller,
    jlong nativeSelectPopupSourceFrame,
    jintArray indices) {
  SelectPopup* native = reinterpret_cast<SelectPopup*>(nativeSelectPopup);
  CHECK_NATIVE_PTR(env, jcaller, native, "SelectMenuItems");
  return native->SelectMenuItems(env, base::android::JavaParamRef<jobject>(env, caller),
      nativeSelectPopupSourceFrame, base::android::JavaParamRef<jintArray>(env, indices));
}


static std::atomic<jmethodID> g_org_chromium_content_browser_input_SelectPopup_create(nullptr);
static base::android::ScopedJavaLocalRef<jobject> Java_SelectPopup_create(JNIEnv* env, const
    base::android::JavaRef<jobject>& webContents,
    jlong nativePtr) {
  jclass clazz = org_chromium_content_browser_input_SelectPopup_clazz(env);
  CHECK_CLAZZ(env, clazz,
      org_chromium_content_browser_input_SelectPopup_clazz(env), NULL);

  jni_generator::JniJavaCallContextChecked call_context;
  call_context.Init<
      base::android::MethodID::TYPE_STATIC>(
          env,
          clazz,
          "create",
"(Lorg/chromium/content_public/browser/WebContents;J)Lorg/chromium/content/browser/input/SelectPopup;",
          &g_org_chromium_content_browser_input_SelectPopup_create);

  jobject ret =
      env->CallStaticObjectMethod(clazz,
          call_context.base.method_id, webContents.obj(), nativePtr);
  return base::android::ScopedJavaLocalRef<jobject>(env, ret);
}

static std::atomic<jmethodID> g_org_chromium_content_browser_input_SelectPopup_show(nullptr);
static void Java_SelectPopup_show(JNIEnv* env, const base::android::JavaRef<jobject>& obj, const
    base::android::JavaRef<jobject>& anchorView,
    jlong nativeSelectPopupSourceFrame,
    const base::android::JavaRef<jobjectArray>& items,
    const base::android::JavaRef<jintArray>& enabled,
    jboolean multiple,
    const base::android::JavaRef<jintArray>& selectedIndices,
    jboolean rightAligned) {
  jclass clazz = org_chromium_content_browser_input_SelectPopup_clazz(env);
  CHECK_CLAZZ(env, obj.obj(),
      org_chromium_content_browser_input_SelectPopup_clazz(env));

  jni_generator::JniJavaCallContextChecked call_context;
  call_context.Init<
      base::android::MethodID::TYPE_INSTANCE>(
          env,
          clazz,
          "show",
          "(Landroid/view/View;J[Ljava/lang/String;[IZ[IZ)V",
          &g_org_chromium_content_browser_input_SelectPopup_show);

     env->CallVoidMethod(obj.obj(),
          call_context.base.method_id, anchorView.obj(), nativeSelectPopupSourceFrame, items.obj(),
              enabled.obj(), multiple, selectedIndices.obj(), rightAligned);
}

static std::atomic<jmethodID>
    g_org_chromium_content_browser_input_SelectPopup_hideWithoutCancel(nullptr);
static void Java_SelectPopup_hideWithoutCancel(JNIEnv* env, const base::android::JavaRef<jobject>&
    obj) {
  jclass clazz = org_chromium_content_browser_input_SelectPopup_clazz(env);
  CHECK_CLAZZ(env, obj.obj(),
      org_chromium_content_browser_input_SelectPopup_clazz(env));

  jni_generator::JniJavaCallContextChecked call_context;
  call_context.Init<
      base::android::MethodID::TYPE_INSTANCE>(
          env,
          clazz,
          "hideWithoutCancel",
          "()V",
          &g_org_chromium_content_browser_input_SelectPopup_hideWithoutCancel);

     env->CallVoidMethod(obj.obj(),
          call_context.base.method_id);
}

static std::atomic<jmethodID>
    g_org_chromium_content_browser_input_SelectPopup_onNativeDestroyed(nullptr);
static void Java_SelectPopup_onNativeDestroyed(JNIEnv* env, const base::android::JavaRef<jobject>&
    obj) {
  jclass clazz = org_chromium_content_browser_input_SelectPopup_clazz(env);
  CHECK_CLAZZ(env, obj.obj(),
      org_chromium_content_browser_input_SelectPopup_clazz(env));

  jni_generator::JniJavaCallContextChecked call_context;
  call_context.Init<
      base::android::MethodID::TYPE_INSTANCE>(
          env,
          clazz,
          "onNativeDestroyed",
          "()V",
          &g_org_chromium_content_browser_input_SelectPopup_onNativeDestroyed);

     env->CallVoidMethod(obj.obj(),
          call_context.base.method_id);
}

}  // namespace content

// Step 4: Generated test functions (optional).


#endif  // org_chromium_content_browser_input_SelectPopup_JNI
