// Copyright 2014 The Chromium Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.


// This file is autogenerated by
//     base/android/jni_generator/jni_generator.py
// For
//     org/chromium/content/browser/input/DateTimeChooserAndroid

#ifndef org_chromium_content_browser_input_DateTimeChooserAndroid_JNI
#define org_chromium_content_browser_input_DateTimeChooserAndroid_JNI

#include <jni.h>

#include "../../../../../../../base/android/jni_generator/jni_generator_helper.h"


// Step 1: Forward declarations.

JNI_REGISTRATION_EXPORT extern const char
    kClassPath_org_chromium_content_browser_input_DateTimeChooserAndroid[];
const char kClassPath_org_chromium_content_browser_input_DateTimeChooserAndroid[] =
    "org/chromium/content/browser/input/DateTimeChooserAndroid";
// Leaking this jclass as we cannot use LazyInstance from some threads.
JNI_REGISTRATION_EXPORT std::atomic<jclass>
    g_org_chromium_content_browser_input_DateTimeChooserAndroid_clazz(nullptr);
#ifndef org_chromium_content_browser_input_DateTimeChooserAndroid_clazz_defined
#define org_chromium_content_browser_input_DateTimeChooserAndroid_clazz_defined
inline jclass org_chromium_content_browser_input_DateTimeChooserAndroid_clazz(JNIEnv* env) {
  return base::android::LazyGetClass(env,
      kClassPath_org_chromium_content_browser_input_DateTimeChooserAndroid,
      &g_org_chromium_content_browser_input_DateTimeChooserAndroid_clazz);
}
#endif


// Step 2: Constants (optional).


// Step 3: Method stubs.
namespace content {

JNI_GENERATOR_EXPORT void Java_J_N_MgUhdCLo(
    JNIEnv* env,
    jclass jcaller,
    jlong nativeDateTimeChooserAndroid,
    jobject caller,
    jdouble dialogValue) {
  DateTimeChooserAndroid* native =
      reinterpret_cast<DateTimeChooserAndroid*>(nativeDateTimeChooserAndroid);
  CHECK_NATIVE_PTR(env, jcaller, native, "ReplaceDateTime");
  return native->ReplaceDateTime(env, base::android::JavaParamRef<jobject>(env, caller),
      dialogValue);
}

JNI_GENERATOR_EXPORT void Java_J_N_MCtaZNwj(
    JNIEnv* env,
    jclass jcaller,
    jlong nativeDateTimeChooserAndroid,
    jobject caller) {
  DateTimeChooserAndroid* native =
      reinterpret_cast<DateTimeChooserAndroid*>(nativeDateTimeChooserAndroid);
  CHECK_NATIVE_PTR(env, jcaller, native, "CancelDialog");
  return native->CancelDialog(env, base::android::JavaParamRef<jobject>(env, caller));
}


static std::atomic<jmethodID>
    g_org_chromium_content_browser_input_DateTimeChooserAndroid_createDateTimeChooser(nullptr);
static base::android::ScopedJavaLocalRef<jobject>
    Java_DateTimeChooserAndroid_createDateTimeChooser(JNIEnv* env, const
    base::android::JavaRef<jobject>& windowAndroid,
    jlong nativeDateTimeChooserAndroid,
    JniIntWrapper dialogType,
    jdouble dialogValue,
    jdouble min,
    jdouble max,
    jdouble step,
    const base::android::JavaRef<jobjectArray>& suggestions) {
  jclass clazz = org_chromium_content_browser_input_DateTimeChooserAndroid_clazz(env);
  CHECK_CLAZZ(env, clazz,
      org_chromium_content_browser_input_DateTimeChooserAndroid_clazz(env), NULL);

  jni_generator::JniJavaCallContextChecked call_context;
  call_context.Init<
      base::android::MethodID::TYPE_STATIC>(
          env,
          clazz,
          "createDateTimeChooser",
"(Lorg/chromium/ui/base/WindowAndroid;JIDDDD[Lorg/chromium/content/browser/picker/DateTimeSuggestion;)Lorg/chromium/content/browser/input/DateTimeChooserAndroid;",
          &g_org_chromium_content_browser_input_DateTimeChooserAndroid_createDateTimeChooser);

  jobject ret =
      env->CallStaticObjectMethod(clazz,
          call_context.base.method_id, windowAndroid.obj(), nativeDateTimeChooserAndroid,
              as_jint(dialogType), dialogValue, min, max, step, suggestions.obj());
  return base::android::ScopedJavaLocalRef<jobject>(env, ret);
}

static std::atomic<jmethodID>
    g_org_chromium_content_browser_input_DateTimeChooserAndroid_createSuggestionsArray(nullptr);
static base::android::ScopedJavaLocalRef<jobjectArray>
    Java_DateTimeChooserAndroid_createSuggestionsArray(JNIEnv* env, JniIntWrapper size) {
  jclass clazz = org_chromium_content_browser_input_DateTimeChooserAndroid_clazz(env);
  CHECK_CLAZZ(env, clazz,
      org_chromium_content_browser_input_DateTimeChooserAndroid_clazz(env), NULL);

  jni_generator::JniJavaCallContextChecked call_context;
  call_context.Init<
      base::android::MethodID::TYPE_STATIC>(
          env,
          clazz,
          "createSuggestionsArray",
          "(I)[Lorg/chromium/content/browser/picker/DateTimeSuggestion;",
          &g_org_chromium_content_browser_input_DateTimeChooserAndroid_createSuggestionsArray);

  jobjectArray ret =
      static_cast<jobjectArray>(env->CallStaticObjectMethod(clazz,
          call_context.base.method_id, as_jint(size)));
  return base::android::ScopedJavaLocalRef<jobjectArray>(env, ret);
}

static std::atomic<jmethodID>
    g_org_chromium_content_browser_input_DateTimeChooserAndroid_setDateTimeSuggestionAt(nullptr);
static void Java_DateTimeChooserAndroid_setDateTimeSuggestionAt(JNIEnv* env, const
    base::android::JavaRef<jobjectArray>& array,
    JniIntWrapper index,
    jdouble value,
    const base::android::JavaRef<jstring>& localizedValue,
    const base::android::JavaRef<jstring>& label) {
  jclass clazz = org_chromium_content_browser_input_DateTimeChooserAndroid_clazz(env);
  CHECK_CLAZZ(env, clazz,
      org_chromium_content_browser_input_DateTimeChooserAndroid_clazz(env));

  jni_generator::JniJavaCallContextChecked call_context;
  call_context.Init<
      base::android::MethodID::TYPE_STATIC>(
          env,
          clazz,
          "setDateTimeSuggestionAt",
"([Lorg/chromium/content/browser/picker/DateTimeSuggestion;IDLjava/lang/String;Ljava/lang/String;)V",
          &g_org_chromium_content_browser_input_DateTimeChooserAndroid_setDateTimeSuggestionAt);

     env->CallStaticVoidMethod(clazz,
          call_context.base.method_id, array.obj(), as_jint(index), value, localizedValue.obj(),
              label.obj());
}

}  // namespace content

// Step 4: Generated test functions (optional).


#endif  // org_chromium_content_browser_input_DateTimeChooserAndroid_JNI
