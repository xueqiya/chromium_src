// content/public/common/client_hints.mojom-test-utils.cc is auto generated by mojom_bindings_generator.py, do not edit

// Copyright 2019 The Chromium Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.

#if defined(__clang__)
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wunused-private-field"
#elif defined(_MSC_VER)
#pragma warning(push)
#pragma warning(disable:4056)
#pragma warning(disable:4065)
#pragma warning(disable:4756)
#endif


#include "content/public/common/client_hints.mojom-test-utils.h"

#include <utility>

#include "base/bind.h"
#include "base/run_loop.h"
#include "mojo/public/mojom/base/time.mojom.h"
#include "third_party/blink/public/mojom/web_client_hints/web_client_hints_types.mojom.h"
#include "url/mojom/origin.mojom.h"


#ifndef CONTENT_PUBLIC_COMMON_CLIENT_HINTS_MOJOM_JUMBO_H_
#define CONTENT_PUBLIC_COMMON_CLIENT_HINTS_MOJOM_JUMBO_H_
#include "mojo/public/cpp/base/time_mojom_traits.h"
#include "mojo/public/cpp/base/unguessable_token_mojom_traits.h"
#include "url/mojom/origin_mojom_traits.h"
#endif


namespace client_hints {
namespace mojom {


void ClientHintsInterceptorForTesting::PersistClientHints(const ::url::Origin& primary_origin, const std::vector<::blink::mojom::WebClientHintsType>& client_hints, ::base::TimeDelta expiration_duration) {
  GetForwardingInterface()->PersistClientHints(std::move(primary_origin), std::move(client_hints), std::move(expiration_duration));
}
ClientHintsAsyncWaiter::ClientHintsAsyncWaiter(
    ClientHints* proxy) : proxy_(proxy) {}

ClientHintsAsyncWaiter::~ClientHintsAsyncWaiter() = default;






}  // namespace mojom
}  // namespace client_hints

#if defined(__clang__)
#pragma clang diagnostic pop
#elif defined(_MSC_VER)
#pragma warning(pop)
#endif