// content/common/input/synchronous_compositor.mojom-params-data.h is auto generated by mojom_bindings_generator.py, do not edit

// Copyright 2019 The Chromium Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.

#ifndef CONTENT_COMMON_INPUT_SYNCHRONOUS_COMPOSITOR_MOJOM_PARAMS_DATA_H_
#define CONTENT_COMMON_INPUT_SYNCHRONOUS_COMPOSITOR_MOJOM_PARAMS_DATA_H_

#include "base/logging.h"
#include "base/macros.h"
#include "mojo/public/cpp/bindings/lib/bindings_internal.h"
#include "mojo/public/cpp/bindings/lib/buffer.h"
#include "mojo/public/cpp/bindings/lib/validation_context.h"

#if defined(__clang__)
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wunused-private-field"
#elif defined(_MSC_VER)
#pragma warning(push)
#pragma warning(disable:4056)
#pragma warning(disable:4065)
#pragma warning(disable:4756)
#endif
namespace content {
namespace mojom {
namespace internal {
class COMPONENT_EXPORT(MOJOM_SHARED_CONTENT_EXPORT) SynchronousCompositor_DemandDrawHwAsync_Params_Data {
 public:
  class BufferWriter {
   public:
    BufferWriter() = default;

    void Allocate(mojo::internal::Buffer* serialization_buffer) {
      serialization_buffer_ = serialization_buffer;
      index_ = serialization_buffer_->Allocate(sizeof(SynchronousCompositor_DemandDrawHwAsync_Params_Data));
      new (data()) SynchronousCompositor_DemandDrawHwAsync_Params_Data();
    }

    bool is_null() const { return !serialization_buffer_; }
    SynchronousCompositor_DemandDrawHwAsync_Params_Data* data() {
      DCHECK(!is_null());
      return serialization_buffer_->Get<SynchronousCompositor_DemandDrawHwAsync_Params_Data>(index_);
    }
    SynchronousCompositor_DemandDrawHwAsync_Params_Data* operator->() { return data(); }

   private:
    mojo::internal::Buffer* serialization_buffer_ = nullptr;
    size_t index_ = 0;

    DISALLOW_COPY_AND_ASSIGN(BufferWriter);
  };

  static bool Validate(const void* data,
                       mojo::internal::ValidationContext* validation_context);

  mojo::internal::StructHeader header_;
  mojo::internal::Pointer<internal::SyncCompositorDemandDrawHwParams_Data> draw_params;

 private:
  SynchronousCompositor_DemandDrawHwAsync_Params_Data();
  ~SynchronousCompositor_DemandDrawHwAsync_Params_Data() = delete;
};
static_assert(sizeof(SynchronousCompositor_DemandDrawHwAsync_Params_Data) == 16,
              "Bad sizeof(SynchronousCompositor_DemandDrawHwAsync_Params_Data)");
class COMPONENT_EXPORT(MOJOM_SHARED_CONTENT_EXPORT) SynchronousCompositor_DemandDrawHw_Params_Data {
 public:
  class BufferWriter {
   public:
    BufferWriter() = default;

    void Allocate(mojo::internal::Buffer* serialization_buffer) {
      serialization_buffer_ = serialization_buffer;
      index_ = serialization_buffer_->Allocate(sizeof(SynchronousCompositor_DemandDrawHw_Params_Data));
      new (data()) SynchronousCompositor_DemandDrawHw_Params_Data();
    }

    bool is_null() const { return !serialization_buffer_; }
    SynchronousCompositor_DemandDrawHw_Params_Data* data() {
      DCHECK(!is_null());
      return serialization_buffer_->Get<SynchronousCompositor_DemandDrawHw_Params_Data>(index_);
    }
    SynchronousCompositor_DemandDrawHw_Params_Data* operator->() { return data(); }

   private:
    mojo::internal::Buffer* serialization_buffer_ = nullptr;
    size_t index_ = 0;

    DISALLOW_COPY_AND_ASSIGN(BufferWriter);
  };

  static bool Validate(const void* data,
                       mojo::internal::ValidationContext* validation_context);

  mojo::internal::StructHeader header_;
  mojo::internal::Pointer<internal::SyncCompositorDemandDrawHwParams_Data> draw_params;

 private:
  SynchronousCompositor_DemandDrawHw_Params_Data();
  ~SynchronousCompositor_DemandDrawHw_Params_Data() = delete;
};
static_assert(sizeof(SynchronousCompositor_DemandDrawHw_Params_Data) == 16,
              "Bad sizeof(SynchronousCompositor_DemandDrawHw_Params_Data)");
class COMPONENT_EXPORT(MOJOM_SHARED_CONTENT_EXPORT) SynchronousCompositor_DemandDrawHw_ResponseParams_Data {
 public:
  class BufferWriter {
   public:
    BufferWriter() = default;

    void Allocate(mojo::internal::Buffer* serialization_buffer) {
      serialization_buffer_ = serialization_buffer;
      index_ = serialization_buffer_->Allocate(sizeof(SynchronousCompositor_DemandDrawHw_ResponseParams_Data));
      new (data()) SynchronousCompositor_DemandDrawHw_ResponseParams_Data();
    }

    bool is_null() const { return !serialization_buffer_; }
    SynchronousCompositor_DemandDrawHw_ResponseParams_Data* data() {
      DCHECK(!is_null());
      return serialization_buffer_->Get<SynchronousCompositor_DemandDrawHw_ResponseParams_Data>(index_);
    }
    SynchronousCompositor_DemandDrawHw_ResponseParams_Data* operator->() { return data(); }

   private:
    mojo::internal::Buffer* serialization_buffer_ = nullptr;
    size_t index_ = 0;

    DISALLOW_COPY_AND_ASSIGN(BufferWriter);
  };

  static bool Validate(const void* data,
                       mojo::internal::ValidationContext* validation_context);

  mojo::internal::StructHeader header_;
  mojo::internal::Pointer<internal::SyncCompositorCommonRendererParams_Data> result;
  uint32_t layer_tree_frame_sink_id;
  uint32_t metadata_version;
  mojo::internal::Pointer<::viz::mojom::internal::CompositorFrame_Data> frame;
  mojo::internal::Pointer<::viz::mojom::internal::HitTestRegionList_Data> hit_test_region_list;

 private:
  SynchronousCompositor_DemandDrawHw_ResponseParams_Data();
  ~SynchronousCompositor_DemandDrawHw_ResponseParams_Data() = delete;
};
static_assert(sizeof(SynchronousCompositor_DemandDrawHw_ResponseParams_Data) == 40,
              "Bad sizeof(SynchronousCompositor_DemandDrawHw_ResponseParams_Data)");
class COMPONENT_EXPORT(MOJOM_SHARED_CONTENT_EXPORT) SynchronousCompositor_SetSharedMemory_Params_Data {
 public:
  class BufferWriter {
   public:
    BufferWriter() = default;

    void Allocate(mojo::internal::Buffer* serialization_buffer) {
      serialization_buffer_ = serialization_buffer;
      index_ = serialization_buffer_->Allocate(sizeof(SynchronousCompositor_SetSharedMemory_Params_Data));
      new (data()) SynchronousCompositor_SetSharedMemory_Params_Data();
    }

    bool is_null() const { return !serialization_buffer_; }
    SynchronousCompositor_SetSharedMemory_Params_Data* data() {
      DCHECK(!is_null());
      return serialization_buffer_->Get<SynchronousCompositor_SetSharedMemory_Params_Data>(index_);
    }
    SynchronousCompositor_SetSharedMemory_Params_Data* operator->() { return data(); }

   private:
    mojo::internal::Buffer* serialization_buffer_ = nullptr;
    size_t index_ = 0;

    DISALLOW_COPY_AND_ASSIGN(BufferWriter);
  };

  static bool Validate(const void* data,
                       mojo::internal::ValidationContext* validation_context);

  mojo::internal::StructHeader header_;
  mojo::internal::Pointer<::mojo_base::mojom::internal::WritableSharedMemoryRegion_Data> shm_region;

 private:
  SynchronousCompositor_SetSharedMemory_Params_Data();
  ~SynchronousCompositor_SetSharedMemory_Params_Data() = delete;
};
static_assert(sizeof(SynchronousCompositor_SetSharedMemory_Params_Data) == 16,
              "Bad sizeof(SynchronousCompositor_SetSharedMemory_Params_Data)");
class COMPONENT_EXPORT(MOJOM_SHARED_CONTENT_EXPORT) SynchronousCompositor_SetSharedMemory_ResponseParams_Data {
 public:
  class BufferWriter {
   public:
    BufferWriter() = default;

    void Allocate(mojo::internal::Buffer* serialization_buffer) {
      serialization_buffer_ = serialization_buffer;
      index_ = serialization_buffer_->Allocate(sizeof(SynchronousCompositor_SetSharedMemory_ResponseParams_Data));
      new (data()) SynchronousCompositor_SetSharedMemory_ResponseParams_Data();
    }

    bool is_null() const { return !serialization_buffer_; }
    SynchronousCompositor_SetSharedMemory_ResponseParams_Data* data() {
      DCHECK(!is_null());
      return serialization_buffer_->Get<SynchronousCompositor_SetSharedMemory_ResponseParams_Data>(index_);
    }
    SynchronousCompositor_SetSharedMemory_ResponseParams_Data* operator->() { return data(); }

   private:
    mojo::internal::Buffer* serialization_buffer_ = nullptr;
    size_t index_ = 0;

    DISALLOW_COPY_AND_ASSIGN(BufferWriter);
  };

  static bool Validate(const void* data,
                       mojo::internal::ValidationContext* validation_context);

  mojo::internal::StructHeader header_;
  uint8_t success : 1;
  uint8_t pad0_[7];
  mojo::internal::Pointer<internal::SyncCompositorCommonRendererParams_Data> result;

 private:
  SynchronousCompositor_SetSharedMemory_ResponseParams_Data();
  ~SynchronousCompositor_SetSharedMemory_ResponseParams_Data() = delete;
};
static_assert(sizeof(SynchronousCompositor_SetSharedMemory_ResponseParams_Data) == 24,
              "Bad sizeof(SynchronousCompositor_SetSharedMemory_ResponseParams_Data)");
class COMPONENT_EXPORT(MOJOM_SHARED_CONTENT_EXPORT) SynchronousCompositor_DemandDrawSw_Params_Data {
 public:
  class BufferWriter {
   public:
    BufferWriter() = default;

    void Allocate(mojo::internal::Buffer* serialization_buffer) {
      serialization_buffer_ = serialization_buffer;
      index_ = serialization_buffer_->Allocate(sizeof(SynchronousCompositor_DemandDrawSw_Params_Data));
      new (data()) SynchronousCompositor_DemandDrawSw_Params_Data();
    }

    bool is_null() const { return !serialization_buffer_; }
    SynchronousCompositor_DemandDrawSw_Params_Data* data() {
      DCHECK(!is_null());
      return serialization_buffer_->Get<SynchronousCompositor_DemandDrawSw_Params_Data>(index_);
    }
    SynchronousCompositor_DemandDrawSw_Params_Data* operator->() { return data(); }

   private:
    mojo::internal::Buffer* serialization_buffer_ = nullptr;
    size_t index_ = 0;

    DISALLOW_COPY_AND_ASSIGN(BufferWriter);
  };

  static bool Validate(const void* data,
                       mojo::internal::ValidationContext* validation_context);

  mojo::internal::StructHeader header_;
  mojo::internal::Pointer<internal::SyncCompositorDemandDrawSwParams_Data> draw_params;

 private:
  SynchronousCompositor_DemandDrawSw_Params_Data();
  ~SynchronousCompositor_DemandDrawSw_Params_Data() = delete;
};
static_assert(sizeof(SynchronousCompositor_DemandDrawSw_Params_Data) == 16,
              "Bad sizeof(SynchronousCompositor_DemandDrawSw_Params_Data)");
class COMPONENT_EXPORT(MOJOM_SHARED_CONTENT_EXPORT) SynchronousCompositor_DemandDrawSw_ResponseParams_Data {
 public:
  class BufferWriter {
   public:
    BufferWriter() = default;

    void Allocate(mojo::internal::Buffer* serialization_buffer) {
      serialization_buffer_ = serialization_buffer;
      index_ = serialization_buffer_->Allocate(sizeof(SynchronousCompositor_DemandDrawSw_ResponseParams_Data));
      new (data()) SynchronousCompositor_DemandDrawSw_ResponseParams_Data();
    }

    bool is_null() const { return !serialization_buffer_; }
    SynchronousCompositor_DemandDrawSw_ResponseParams_Data* data() {
      DCHECK(!is_null());
      return serialization_buffer_->Get<SynchronousCompositor_DemandDrawSw_ResponseParams_Data>(index_);
    }
    SynchronousCompositor_DemandDrawSw_ResponseParams_Data* operator->() { return data(); }

   private:
    mojo::internal::Buffer* serialization_buffer_ = nullptr;
    size_t index_ = 0;

    DISALLOW_COPY_AND_ASSIGN(BufferWriter);
  };

  static bool Validate(const void* data,
                       mojo::internal::ValidationContext* validation_context);

  mojo::internal::StructHeader header_;
  mojo::internal::Pointer<internal::SyncCompositorCommonRendererParams_Data> result;
  uint32_t metadata_version;
  uint8_t pad1_[4];
  mojo::internal::Pointer<::viz::mojom::internal::CompositorFrameMetadata_Data> meta_data;

 private:
  SynchronousCompositor_DemandDrawSw_ResponseParams_Data();
  ~SynchronousCompositor_DemandDrawSw_ResponseParams_Data() = delete;
};
static_assert(sizeof(SynchronousCompositor_DemandDrawSw_ResponseParams_Data) == 32,
              "Bad sizeof(SynchronousCompositor_DemandDrawSw_ResponseParams_Data)");
class COMPONENT_EXPORT(MOJOM_SHARED_CONTENT_EXPORT) SynchronousCompositor_WillSkipDraw_Params_Data {
 public:
  class BufferWriter {
   public:
    BufferWriter() = default;

    void Allocate(mojo::internal::Buffer* serialization_buffer) {
      serialization_buffer_ = serialization_buffer;
      index_ = serialization_buffer_->Allocate(sizeof(SynchronousCompositor_WillSkipDraw_Params_Data));
      new (data()) SynchronousCompositor_WillSkipDraw_Params_Data();
    }

    bool is_null() const { return !serialization_buffer_; }
    SynchronousCompositor_WillSkipDraw_Params_Data* data() {
      DCHECK(!is_null());
      return serialization_buffer_->Get<SynchronousCompositor_WillSkipDraw_Params_Data>(index_);
    }
    SynchronousCompositor_WillSkipDraw_Params_Data* operator->() { return data(); }

   private:
    mojo::internal::Buffer* serialization_buffer_ = nullptr;
    size_t index_ = 0;

    DISALLOW_COPY_AND_ASSIGN(BufferWriter);
  };

  static bool Validate(const void* data,
                       mojo::internal::ValidationContext* validation_context);

  mojo::internal::StructHeader header_;

 private:
  SynchronousCompositor_WillSkipDraw_Params_Data();
  ~SynchronousCompositor_WillSkipDraw_Params_Data() = delete;
};
static_assert(sizeof(SynchronousCompositor_WillSkipDraw_Params_Data) == 8,
              "Bad sizeof(SynchronousCompositor_WillSkipDraw_Params_Data)");
class COMPONENT_EXPORT(MOJOM_SHARED_CONTENT_EXPORT) SynchronousCompositor_ZeroSharedMemory_Params_Data {
 public:
  class BufferWriter {
   public:
    BufferWriter() = default;

    void Allocate(mojo::internal::Buffer* serialization_buffer) {
      serialization_buffer_ = serialization_buffer;
      index_ = serialization_buffer_->Allocate(sizeof(SynchronousCompositor_ZeroSharedMemory_Params_Data));
      new (data()) SynchronousCompositor_ZeroSharedMemory_Params_Data();
    }

    bool is_null() const { return !serialization_buffer_; }
    SynchronousCompositor_ZeroSharedMemory_Params_Data* data() {
      DCHECK(!is_null());
      return serialization_buffer_->Get<SynchronousCompositor_ZeroSharedMemory_Params_Data>(index_);
    }
    SynchronousCompositor_ZeroSharedMemory_Params_Data* operator->() { return data(); }

   private:
    mojo::internal::Buffer* serialization_buffer_ = nullptr;
    size_t index_ = 0;

    DISALLOW_COPY_AND_ASSIGN(BufferWriter);
  };

  static bool Validate(const void* data,
                       mojo::internal::ValidationContext* validation_context);

  mojo::internal::StructHeader header_;

 private:
  SynchronousCompositor_ZeroSharedMemory_Params_Data();
  ~SynchronousCompositor_ZeroSharedMemory_Params_Data() = delete;
};
static_assert(sizeof(SynchronousCompositor_ZeroSharedMemory_Params_Data) == 8,
              "Bad sizeof(SynchronousCompositor_ZeroSharedMemory_Params_Data)");
class COMPONENT_EXPORT(MOJOM_SHARED_CONTENT_EXPORT) SynchronousCompositor_ZoomBy_Params_Data {
 public:
  class BufferWriter {
   public:
    BufferWriter() = default;

    void Allocate(mojo::internal::Buffer* serialization_buffer) {
      serialization_buffer_ = serialization_buffer;
      index_ = serialization_buffer_->Allocate(sizeof(SynchronousCompositor_ZoomBy_Params_Data));
      new (data()) SynchronousCompositor_ZoomBy_Params_Data();
    }

    bool is_null() const { return !serialization_buffer_; }
    SynchronousCompositor_ZoomBy_Params_Data* data() {
      DCHECK(!is_null());
      return serialization_buffer_->Get<SynchronousCompositor_ZoomBy_Params_Data>(index_);
    }
    SynchronousCompositor_ZoomBy_Params_Data* operator->() { return data(); }

   private:
    mojo::internal::Buffer* serialization_buffer_ = nullptr;
    size_t index_ = 0;

    DISALLOW_COPY_AND_ASSIGN(BufferWriter);
  };

  static bool Validate(const void* data,
                       mojo::internal::ValidationContext* validation_context);

  mojo::internal::StructHeader header_;
  float delta;
  uint8_t pad0_[4];
  mojo::internal::Pointer<::gfx::mojom::internal::Point_Data> anchor;

 private:
  SynchronousCompositor_ZoomBy_Params_Data();
  ~SynchronousCompositor_ZoomBy_Params_Data() = delete;
};
static_assert(sizeof(SynchronousCompositor_ZoomBy_Params_Data) == 24,
              "Bad sizeof(SynchronousCompositor_ZoomBy_Params_Data)");
class COMPONENT_EXPORT(MOJOM_SHARED_CONTENT_EXPORT) SynchronousCompositor_ZoomBy_ResponseParams_Data {
 public:
  class BufferWriter {
   public:
    BufferWriter() = default;

    void Allocate(mojo::internal::Buffer* serialization_buffer) {
      serialization_buffer_ = serialization_buffer;
      index_ = serialization_buffer_->Allocate(sizeof(SynchronousCompositor_ZoomBy_ResponseParams_Data));
      new (data()) SynchronousCompositor_ZoomBy_ResponseParams_Data();
    }

    bool is_null() const { return !serialization_buffer_; }
    SynchronousCompositor_ZoomBy_ResponseParams_Data* data() {
      DCHECK(!is_null());
      return serialization_buffer_->Get<SynchronousCompositor_ZoomBy_ResponseParams_Data>(index_);
    }
    SynchronousCompositor_ZoomBy_ResponseParams_Data* operator->() { return data(); }

   private:
    mojo::internal::Buffer* serialization_buffer_ = nullptr;
    size_t index_ = 0;

    DISALLOW_COPY_AND_ASSIGN(BufferWriter);
  };

  static bool Validate(const void* data,
                       mojo::internal::ValidationContext* validation_context);

  mojo::internal::StructHeader header_;
  mojo::internal::Pointer<internal::SyncCompositorCommonRendererParams_Data> result;

 private:
  SynchronousCompositor_ZoomBy_ResponseParams_Data();
  ~SynchronousCompositor_ZoomBy_ResponseParams_Data() = delete;
};
static_assert(sizeof(SynchronousCompositor_ZoomBy_ResponseParams_Data) == 16,
              "Bad sizeof(SynchronousCompositor_ZoomBy_ResponseParams_Data)");
class COMPONENT_EXPORT(MOJOM_SHARED_CONTENT_EXPORT) SynchronousCompositor_SetMemoryPolicy_Params_Data {
 public:
  class BufferWriter {
   public:
    BufferWriter() = default;

    void Allocate(mojo::internal::Buffer* serialization_buffer) {
      serialization_buffer_ = serialization_buffer;
      index_ = serialization_buffer_->Allocate(sizeof(SynchronousCompositor_SetMemoryPolicy_Params_Data));
      new (data()) SynchronousCompositor_SetMemoryPolicy_Params_Data();
    }

    bool is_null() const { return !serialization_buffer_; }
    SynchronousCompositor_SetMemoryPolicy_Params_Data* data() {
      DCHECK(!is_null());
      return serialization_buffer_->Get<SynchronousCompositor_SetMemoryPolicy_Params_Data>(index_);
    }
    SynchronousCompositor_SetMemoryPolicy_Params_Data* operator->() { return data(); }

   private:
    mojo::internal::Buffer* serialization_buffer_ = nullptr;
    size_t index_ = 0;

    DISALLOW_COPY_AND_ASSIGN(BufferWriter);
  };

  static bool Validate(const void* data,
                       mojo::internal::ValidationContext* validation_context);

  mojo::internal::StructHeader header_;
  uint32_t bytes_limit;
  uint8_t padfinal_[4];

 private:
  SynchronousCompositor_SetMemoryPolicy_Params_Data();
  ~SynchronousCompositor_SetMemoryPolicy_Params_Data() = delete;
};
static_assert(sizeof(SynchronousCompositor_SetMemoryPolicy_Params_Data) == 16,
              "Bad sizeof(SynchronousCompositor_SetMemoryPolicy_Params_Data)");
class COMPONENT_EXPORT(MOJOM_SHARED_CONTENT_EXPORT) SynchronousCompositor_ReclaimResources_Params_Data {
 public:
  class BufferWriter {
   public:
    BufferWriter() = default;

    void Allocate(mojo::internal::Buffer* serialization_buffer) {
      serialization_buffer_ = serialization_buffer;
      index_ = serialization_buffer_->Allocate(sizeof(SynchronousCompositor_ReclaimResources_Params_Data));
      new (data()) SynchronousCompositor_ReclaimResources_Params_Data();
    }

    bool is_null() const { return !serialization_buffer_; }
    SynchronousCompositor_ReclaimResources_Params_Data* data() {
      DCHECK(!is_null());
      return serialization_buffer_->Get<SynchronousCompositor_ReclaimResources_Params_Data>(index_);
    }
    SynchronousCompositor_ReclaimResources_Params_Data* operator->() { return data(); }

   private:
    mojo::internal::Buffer* serialization_buffer_ = nullptr;
    size_t index_ = 0;

    DISALLOW_COPY_AND_ASSIGN(BufferWriter);
  };

  static bool Validate(const void* data,
                       mojo::internal::ValidationContext* validation_context);

  mojo::internal::StructHeader header_;
  uint32_t layer_tree_frame_sink_id;
  uint8_t pad0_[4];
  mojo::internal::Pointer<mojo::internal::Array_Data<mojo::internal::Pointer<::viz::mojom::internal::ReturnedResource_Data>>> resources;

 private:
  SynchronousCompositor_ReclaimResources_Params_Data();
  ~SynchronousCompositor_ReclaimResources_Params_Data() = delete;
};
static_assert(sizeof(SynchronousCompositor_ReclaimResources_Params_Data) == 24,
              "Bad sizeof(SynchronousCompositor_ReclaimResources_Params_Data)");
class COMPONENT_EXPORT(MOJOM_SHARED_CONTENT_EXPORT) SynchronousCompositor_SetScroll_Params_Data {
 public:
  class BufferWriter {
   public:
    BufferWriter() = default;

    void Allocate(mojo::internal::Buffer* serialization_buffer) {
      serialization_buffer_ = serialization_buffer;
      index_ = serialization_buffer_->Allocate(sizeof(SynchronousCompositor_SetScroll_Params_Data));
      new (data()) SynchronousCompositor_SetScroll_Params_Data();
    }

    bool is_null() const { return !serialization_buffer_; }
    SynchronousCompositor_SetScroll_Params_Data* data() {
      DCHECK(!is_null());
      return serialization_buffer_->Get<SynchronousCompositor_SetScroll_Params_Data>(index_);
    }
    SynchronousCompositor_SetScroll_Params_Data* operator->() { return data(); }

   private:
    mojo::internal::Buffer* serialization_buffer_ = nullptr;
    size_t index_ = 0;

    DISALLOW_COPY_AND_ASSIGN(BufferWriter);
  };

  static bool Validate(const void* data,
                       mojo::internal::ValidationContext* validation_context);

  mojo::internal::StructHeader header_;
  mojo::internal::Pointer<::gfx::mojom::internal::ScrollOffset_Data> offset;

 private:
  SynchronousCompositor_SetScroll_Params_Data();
  ~SynchronousCompositor_SetScroll_Params_Data() = delete;
};
static_assert(sizeof(SynchronousCompositor_SetScroll_Params_Data) == 16,
              "Bad sizeof(SynchronousCompositor_SetScroll_Params_Data)");
class COMPONENT_EXPORT(MOJOM_SHARED_CONTENT_EXPORT) SynchronousCompositor_BeginFrame_Params_Data {
 public:
  class BufferWriter {
   public:
    BufferWriter() = default;

    void Allocate(mojo::internal::Buffer* serialization_buffer) {
      serialization_buffer_ = serialization_buffer;
      index_ = serialization_buffer_->Allocate(sizeof(SynchronousCompositor_BeginFrame_Params_Data));
      new (data()) SynchronousCompositor_BeginFrame_Params_Data();
    }

    bool is_null() const { return !serialization_buffer_; }
    SynchronousCompositor_BeginFrame_Params_Data* data() {
      DCHECK(!is_null());
      return serialization_buffer_->Get<SynchronousCompositor_BeginFrame_Params_Data>(index_);
    }
    SynchronousCompositor_BeginFrame_Params_Data* operator->() { return data(); }

   private:
    mojo::internal::Buffer* serialization_buffer_ = nullptr;
    size_t index_ = 0;

    DISALLOW_COPY_AND_ASSIGN(BufferWriter);
  };

  static bool Validate(const void* data,
                       mojo::internal::ValidationContext* validation_context);

  mojo::internal::StructHeader header_;
  mojo::internal::Pointer<::viz::mojom::internal::BeginFrameArgs_Data> args;
  mojo::internal::Pointer<mojo::internal::Map_Data<uint32_t, mojo::internal::Pointer<::viz::mojom::internal::FrameTimingDetails_Data>>> timing_details;

 private:
  SynchronousCompositor_BeginFrame_Params_Data();
  ~SynchronousCompositor_BeginFrame_Params_Data() = delete;
};
static_assert(sizeof(SynchronousCompositor_BeginFrame_Params_Data) == 24,
              "Bad sizeof(SynchronousCompositor_BeginFrame_Params_Data)");
class COMPONENT_EXPORT(MOJOM_SHARED_CONTENT_EXPORT) SynchronousCompositor_SetBeginFrameSourcePaused_Params_Data {
 public:
  class BufferWriter {
   public:
    BufferWriter() = default;

    void Allocate(mojo::internal::Buffer* serialization_buffer) {
      serialization_buffer_ = serialization_buffer;
      index_ = serialization_buffer_->Allocate(sizeof(SynchronousCompositor_SetBeginFrameSourcePaused_Params_Data));
      new (data()) SynchronousCompositor_SetBeginFrameSourcePaused_Params_Data();
    }

    bool is_null() const { return !serialization_buffer_; }
    SynchronousCompositor_SetBeginFrameSourcePaused_Params_Data* data() {
      DCHECK(!is_null());
      return serialization_buffer_->Get<SynchronousCompositor_SetBeginFrameSourcePaused_Params_Data>(index_);
    }
    SynchronousCompositor_SetBeginFrameSourcePaused_Params_Data* operator->() { return data(); }

   private:
    mojo::internal::Buffer* serialization_buffer_ = nullptr;
    size_t index_ = 0;

    DISALLOW_COPY_AND_ASSIGN(BufferWriter);
  };

  static bool Validate(const void* data,
                       mojo::internal::ValidationContext* validation_context);

  mojo::internal::StructHeader header_;
  uint8_t paused : 1;
  uint8_t padfinal_[7];

 private:
  SynchronousCompositor_SetBeginFrameSourcePaused_Params_Data();
  ~SynchronousCompositor_SetBeginFrameSourcePaused_Params_Data() = delete;
};
static_assert(sizeof(SynchronousCompositor_SetBeginFrameSourcePaused_Params_Data) == 16,
              "Bad sizeof(SynchronousCompositor_SetBeginFrameSourcePaused_Params_Data)");
class COMPONENT_EXPORT(MOJOM_SHARED_CONTENT_EXPORT) SynchronousCompositorHost_LayerTreeFrameSinkCreated_Params_Data {
 public:
  class BufferWriter {
   public:
    BufferWriter() = default;

    void Allocate(mojo::internal::Buffer* serialization_buffer) {
      serialization_buffer_ = serialization_buffer;
      index_ = serialization_buffer_->Allocate(sizeof(SynchronousCompositorHost_LayerTreeFrameSinkCreated_Params_Data));
      new (data()) SynchronousCompositorHost_LayerTreeFrameSinkCreated_Params_Data();
    }

    bool is_null() const { return !serialization_buffer_; }
    SynchronousCompositorHost_LayerTreeFrameSinkCreated_Params_Data* data() {
      DCHECK(!is_null());
      return serialization_buffer_->Get<SynchronousCompositorHost_LayerTreeFrameSinkCreated_Params_Data>(index_);
    }
    SynchronousCompositorHost_LayerTreeFrameSinkCreated_Params_Data* operator->() { return data(); }

   private:
    mojo::internal::Buffer* serialization_buffer_ = nullptr;
    size_t index_ = 0;

    DISALLOW_COPY_AND_ASSIGN(BufferWriter);
  };

  static bool Validate(const void* data,
                       mojo::internal::ValidationContext* validation_context);

  mojo::internal::StructHeader header_;

 private:
  SynchronousCompositorHost_LayerTreeFrameSinkCreated_Params_Data();
  ~SynchronousCompositorHost_LayerTreeFrameSinkCreated_Params_Data() = delete;
};
static_assert(sizeof(SynchronousCompositorHost_LayerTreeFrameSinkCreated_Params_Data) == 8,
              "Bad sizeof(SynchronousCompositorHost_LayerTreeFrameSinkCreated_Params_Data)");
class COMPONENT_EXPORT(MOJOM_SHARED_CONTENT_EXPORT) SynchronousCompositorHost_UpdateState_Params_Data {
 public:
  class BufferWriter {
   public:
    BufferWriter() = default;

    void Allocate(mojo::internal::Buffer* serialization_buffer) {
      serialization_buffer_ = serialization_buffer;
      index_ = serialization_buffer_->Allocate(sizeof(SynchronousCompositorHost_UpdateState_Params_Data));
      new (data()) SynchronousCompositorHost_UpdateState_Params_Data();
    }

    bool is_null() const { return !serialization_buffer_; }
    SynchronousCompositorHost_UpdateState_Params_Data* data() {
      DCHECK(!is_null());
      return serialization_buffer_->Get<SynchronousCompositorHost_UpdateState_Params_Data>(index_);
    }
    SynchronousCompositorHost_UpdateState_Params_Data* operator->() { return data(); }

   private:
    mojo::internal::Buffer* serialization_buffer_ = nullptr;
    size_t index_ = 0;

    DISALLOW_COPY_AND_ASSIGN(BufferWriter);
  };

  static bool Validate(const void* data,
                       mojo::internal::ValidationContext* validation_context);

  mojo::internal::StructHeader header_;
  mojo::internal::Pointer<internal::SyncCompositorCommonRendererParams_Data> params;

 private:
  SynchronousCompositorHost_UpdateState_Params_Data();
  ~SynchronousCompositorHost_UpdateState_Params_Data() = delete;
};
static_assert(sizeof(SynchronousCompositorHost_UpdateState_Params_Data) == 16,
              "Bad sizeof(SynchronousCompositorHost_UpdateState_Params_Data)");
class COMPONENT_EXPORT(MOJOM_SHARED_CONTENT_EXPORT) SynchronousCompositorHost_SetNeedsBeginFrames_Params_Data {
 public:
  class BufferWriter {
   public:
    BufferWriter() = default;

    void Allocate(mojo::internal::Buffer* serialization_buffer) {
      serialization_buffer_ = serialization_buffer;
      index_ = serialization_buffer_->Allocate(sizeof(SynchronousCompositorHost_SetNeedsBeginFrames_Params_Data));
      new (data()) SynchronousCompositorHost_SetNeedsBeginFrames_Params_Data();
    }

    bool is_null() const { return !serialization_buffer_; }
    SynchronousCompositorHost_SetNeedsBeginFrames_Params_Data* data() {
      DCHECK(!is_null());
      return serialization_buffer_->Get<SynchronousCompositorHost_SetNeedsBeginFrames_Params_Data>(index_);
    }
    SynchronousCompositorHost_SetNeedsBeginFrames_Params_Data* operator->() { return data(); }

   private:
    mojo::internal::Buffer* serialization_buffer_ = nullptr;
    size_t index_ = 0;

    DISALLOW_COPY_AND_ASSIGN(BufferWriter);
  };

  static bool Validate(const void* data,
                       mojo::internal::ValidationContext* validation_context);

  mojo::internal::StructHeader header_;
  uint8_t needs_begin_frames : 1;
  uint8_t padfinal_[7];

 private:
  SynchronousCompositorHost_SetNeedsBeginFrames_Params_Data();
  ~SynchronousCompositorHost_SetNeedsBeginFrames_Params_Data() = delete;
};
static_assert(sizeof(SynchronousCompositorHost_SetNeedsBeginFrames_Params_Data) == 16,
              "Bad sizeof(SynchronousCompositorHost_SetNeedsBeginFrames_Params_Data)");
class COMPONENT_EXPORT(MOJOM_SHARED_CONTENT_EXPORT) SynchronousCompositorControlHost_ReturnFrame_Params_Data {
 public:
  class BufferWriter {
   public:
    BufferWriter() = default;

    void Allocate(mojo::internal::Buffer* serialization_buffer) {
      serialization_buffer_ = serialization_buffer;
      index_ = serialization_buffer_->Allocate(sizeof(SynchronousCompositorControlHost_ReturnFrame_Params_Data));
      new (data()) SynchronousCompositorControlHost_ReturnFrame_Params_Data();
    }

    bool is_null() const { return !serialization_buffer_; }
    SynchronousCompositorControlHost_ReturnFrame_Params_Data* data() {
      DCHECK(!is_null());
      return serialization_buffer_->Get<SynchronousCompositorControlHost_ReturnFrame_Params_Data>(index_);
    }
    SynchronousCompositorControlHost_ReturnFrame_Params_Data* operator->() { return data(); }

   private:
    mojo::internal::Buffer* serialization_buffer_ = nullptr;
    size_t index_ = 0;

    DISALLOW_COPY_AND_ASSIGN(BufferWriter);
  };

  static bool Validate(const void* data,
                       mojo::internal::ValidationContext* validation_context);

  mojo::internal::StructHeader header_;
  uint32_t layer_tree_frame_sink_id;
  uint32_t metadata_version;
  mojo::internal::Pointer<::viz::mojom::internal::CompositorFrame_Data> frame;
  mojo::internal::Pointer<::viz::mojom::internal::HitTestRegionList_Data> hit_test_region_list;

 private:
  SynchronousCompositorControlHost_ReturnFrame_Params_Data();
  ~SynchronousCompositorControlHost_ReturnFrame_Params_Data() = delete;
};
static_assert(sizeof(SynchronousCompositorControlHost_ReturnFrame_Params_Data) == 32,
              "Bad sizeof(SynchronousCompositorControlHost_ReturnFrame_Params_Data)");
class COMPONENT_EXPORT(MOJOM_SHARED_CONTENT_EXPORT) SynchronousCompositorControlHost_BeginFrameResponse_Params_Data {
 public:
  class BufferWriter {
   public:
    BufferWriter() = default;

    void Allocate(mojo::internal::Buffer* serialization_buffer) {
      serialization_buffer_ = serialization_buffer;
      index_ = serialization_buffer_->Allocate(sizeof(SynchronousCompositorControlHost_BeginFrameResponse_Params_Data));
      new (data()) SynchronousCompositorControlHost_BeginFrameResponse_Params_Data();
    }

    bool is_null() const { return !serialization_buffer_; }
    SynchronousCompositorControlHost_BeginFrameResponse_Params_Data* data() {
      DCHECK(!is_null());
      return serialization_buffer_->Get<SynchronousCompositorControlHost_BeginFrameResponse_Params_Data>(index_);
    }
    SynchronousCompositorControlHost_BeginFrameResponse_Params_Data* operator->() { return data(); }

   private:
    mojo::internal::Buffer* serialization_buffer_ = nullptr;
    size_t index_ = 0;

    DISALLOW_COPY_AND_ASSIGN(BufferWriter);
  };

  static bool Validate(const void* data,
                       mojo::internal::ValidationContext* validation_context);

  mojo::internal::StructHeader header_;
  mojo::internal::Pointer<internal::SyncCompositorCommonRendererParams_Data> params;

 private:
  SynchronousCompositorControlHost_BeginFrameResponse_Params_Data();
  ~SynchronousCompositorControlHost_BeginFrameResponse_Params_Data() = delete;
};
static_assert(sizeof(SynchronousCompositorControlHost_BeginFrameResponse_Params_Data) == 16,
              "Bad sizeof(SynchronousCompositorControlHost_BeginFrameResponse_Params_Data)");

}  // namespace internal
class SynchronousCompositor_DemandDrawHwAsync_ParamsDataView {
 public:
  SynchronousCompositor_DemandDrawHwAsync_ParamsDataView() {}

  SynchronousCompositor_DemandDrawHwAsync_ParamsDataView(
      internal::SynchronousCompositor_DemandDrawHwAsync_Params_Data* data,
      mojo::internal::SerializationContext* context)
      : data_(data), context_(context) {}

  bool is_null() const { return !data_; }
  inline void GetDrawParamsDataView(
      SyncCompositorDemandDrawHwParamsDataView* output);

  template <typename UserType>
  WARN_UNUSED_RESULT bool ReadDrawParams(UserType* output) {
    auto* pointer = data_->draw_params.Get();
    return mojo::internal::Deserialize<::content::mojom::SyncCompositorDemandDrawHwParamsDataView>(
        pointer, output, context_);
  }
 private:
  internal::SynchronousCompositor_DemandDrawHwAsync_Params_Data* data_ = nullptr;
  mojo::internal::SerializationContext* context_ = nullptr;
};

class SynchronousCompositor_DemandDrawHw_ParamsDataView {
 public:
  SynchronousCompositor_DemandDrawHw_ParamsDataView() {}

  SynchronousCompositor_DemandDrawHw_ParamsDataView(
      internal::SynchronousCompositor_DemandDrawHw_Params_Data* data,
      mojo::internal::SerializationContext* context)
      : data_(data), context_(context) {}

  bool is_null() const { return !data_; }
  inline void GetDrawParamsDataView(
      SyncCompositorDemandDrawHwParamsDataView* output);

  template <typename UserType>
  WARN_UNUSED_RESULT bool ReadDrawParams(UserType* output) {
    auto* pointer = data_->draw_params.Get();
    return mojo::internal::Deserialize<::content::mojom::SyncCompositorDemandDrawHwParamsDataView>(
        pointer, output, context_);
  }
 private:
  internal::SynchronousCompositor_DemandDrawHw_Params_Data* data_ = nullptr;
  mojo::internal::SerializationContext* context_ = nullptr;
};

class SynchronousCompositor_DemandDrawHw_ResponseParamsDataView {
 public:
  SynchronousCompositor_DemandDrawHw_ResponseParamsDataView() {}

  SynchronousCompositor_DemandDrawHw_ResponseParamsDataView(
      internal::SynchronousCompositor_DemandDrawHw_ResponseParams_Data* data,
      mojo::internal::SerializationContext* context)
      : data_(data), context_(context) {}

  bool is_null() const { return !data_; }
  inline void GetResultDataView(
      SyncCompositorCommonRendererParamsDataView* output);

  template <typename UserType>
  WARN_UNUSED_RESULT bool ReadResult(UserType* output) {
    auto* pointer = data_->result.Get();
    return mojo::internal::Deserialize<::content::mojom::SyncCompositorCommonRendererParamsDataView>(
        pointer, output, context_);
  }
  uint32_t layer_tree_frame_sink_id() const {
    return data_->layer_tree_frame_sink_id;
  }
  uint32_t metadata_version() const {
    return data_->metadata_version;
  }
  inline void GetFrameDataView(
      ::viz::mojom::CompositorFrameDataView* output);

  template <typename UserType>
  WARN_UNUSED_RESULT bool ReadFrame(UserType* output) {
    auto* pointer = data_->frame.Get();
    return mojo::internal::Deserialize<::viz::mojom::CompositorFrameDataView>(
        pointer, output, context_);
  }
  inline void GetHitTestRegionListDataView(
      ::viz::mojom::HitTestRegionListDataView* output);

  template <typename UserType>
  WARN_UNUSED_RESULT bool ReadHitTestRegionList(UserType* output) {
    auto* pointer = data_->hit_test_region_list.Get();
    return mojo::internal::Deserialize<::viz::mojom::HitTestRegionListDataView>(
        pointer, output, context_);
  }
 private:
  internal::SynchronousCompositor_DemandDrawHw_ResponseParams_Data* data_ = nullptr;
  mojo::internal::SerializationContext* context_ = nullptr;
};

class SynchronousCompositor_SetSharedMemory_ParamsDataView {
 public:
  SynchronousCompositor_SetSharedMemory_ParamsDataView() {}

  SynchronousCompositor_SetSharedMemory_ParamsDataView(
      internal::SynchronousCompositor_SetSharedMemory_Params_Data* data,
      mojo::internal::SerializationContext* context)
      : data_(data), context_(context) {}

  bool is_null() const { return !data_; }
  inline void GetShmRegionDataView(
      ::mojo_base::mojom::WritableSharedMemoryRegionDataView* output);

  template <typename UserType>
  WARN_UNUSED_RESULT bool ReadShmRegion(UserType* output) {
    auto* pointer = data_->shm_region.Get();
    return mojo::internal::Deserialize<::mojo_base::mojom::WritableSharedMemoryRegionDataView>(
        pointer, output, context_);
  }
 private:
  internal::SynchronousCompositor_SetSharedMemory_Params_Data* data_ = nullptr;
  mojo::internal::SerializationContext* context_ = nullptr;
};

class SynchronousCompositor_SetSharedMemory_ResponseParamsDataView {
 public:
  SynchronousCompositor_SetSharedMemory_ResponseParamsDataView() {}

  SynchronousCompositor_SetSharedMemory_ResponseParamsDataView(
      internal::SynchronousCompositor_SetSharedMemory_ResponseParams_Data* data,
      mojo::internal::SerializationContext* context)
      : data_(data), context_(context) {}

  bool is_null() const { return !data_; }
  bool success() const {
    return data_->success;
  }
  inline void GetResultDataView(
      SyncCompositorCommonRendererParamsDataView* output);

  template <typename UserType>
  WARN_UNUSED_RESULT bool ReadResult(UserType* output) {
    auto* pointer = data_->result.Get();
    return mojo::internal::Deserialize<::content::mojom::SyncCompositorCommonRendererParamsDataView>(
        pointer, output, context_);
  }
 private:
  internal::SynchronousCompositor_SetSharedMemory_ResponseParams_Data* data_ = nullptr;
  mojo::internal::SerializationContext* context_ = nullptr;
};

class SynchronousCompositor_DemandDrawSw_ParamsDataView {
 public:
  SynchronousCompositor_DemandDrawSw_ParamsDataView() {}

  SynchronousCompositor_DemandDrawSw_ParamsDataView(
      internal::SynchronousCompositor_DemandDrawSw_Params_Data* data,
      mojo::internal::SerializationContext* context)
      : data_(data), context_(context) {}

  bool is_null() const { return !data_; }
  inline void GetDrawParamsDataView(
      SyncCompositorDemandDrawSwParamsDataView* output);

  template <typename UserType>
  WARN_UNUSED_RESULT bool ReadDrawParams(UserType* output) {
    auto* pointer = data_->draw_params.Get();
    return mojo::internal::Deserialize<::content::mojom::SyncCompositorDemandDrawSwParamsDataView>(
        pointer, output, context_);
  }
 private:
  internal::SynchronousCompositor_DemandDrawSw_Params_Data* data_ = nullptr;
  mojo::internal::SerializationContext* context_ = nullptr;
};

class SynchronousCompositor_DemandDrawSw_ResponseParamsDataView {
 public:
  SynchronousCompositor_DemandDrawSw_ResponseParamsDataView() {}

  SynchronousCompositor_DemandDrawSw_ResponseParamsDataView(
      internal::SynchronousCompositor_DemandDrawSw_ResponseParams_Data* data,
      mojo::internal::SerializationContext* context)
      : data_(data), context_(context) {}

  bool is_null() const { return !data_; }
  inline void GetResultDataView(
      SyncCompositorCommonRendererParamsDataView* output);

  template <typename UserType>
  WARN_UNUSED_RESULT bool ReadResult(UserType* output) {
    auto* pointer = data_->result.Get();
    return mojo::internal::Deserialize<::content::mojom::SyncCompositorCommonRendererParamsDataView>(
        pointer, output, context_);
  }
  uint32_t metadata_version() const {
    return data_->metadata_version;
  }
  inline void GetMetaDataDataView(
      ::viz::mojom::CompositorFrameMetadataDataView* output);

  template <typename UserType>
  WARN_UNUSED_RESULT bool ReadMetaData(UserType* output) {
    auto* pointer = data_->meta_data.Get();
    return mojo::internal::Deserialize<::viz::mojom::CompositorFrameMetadataDataView>(
        pointer, output, context_);
  }
 private:
  internal::SynchronousCompositor_DemandDrawSw_ResponseParams_Data* data_ = nullptr;
  mojo::internal::SerializationContext* context_ = nullptr;
};

class SynchronousCompositor_WillSkipDraw_ParamsDataView {
 public:
  SynchronousCompositor_WillSkipDraw_ParamsDataView() {}

  SynchronousCompositor_WillSkipDraw_ParamsDataView(
      internal::SynchronousCompositor_WillSkipDraw_Params_Data* data,
      mojo::internal::SerializationContext* context)
      : data_(data) {}

  bool is_null() const { return !data_; }
 private:
  internal::SynchronousCompositor_WillSkipDraw_Params_Data* data_ = nullptr;
};

class SynchronousCompositor_ZeroSharedMemory_ParamsDataView {
 public:
  SynchronousCompositor_ZeroSharedMemory_ParamsDataView() {}

  SynchronousCompositor_ZeroSharedMemory_ParamsDataView(
      internal::SynchronousCompositor_ZeroSharedMemory_Params_Data* data,
      mojo::internal::SerializationContext* context)
      : data_(data) {}

  bool is_null() const { return !data_; }
 private:
  internal::SynchronousCompositor_ZeroSharedMemory_Params_Data* data_ = nullptr;
};

class SynchronousCompositor_ZoomBy_ParamsDataView {
 public:
  SynchronousCompositor_ZoomBy_ParamsDataView() {}

  SynchronousCompositor_ZoomBy_ParamsDataView(
      internal::SynchronousCompositor_ZoomBy_Params_Data* data,
      mojo::internal::SerializationContext* context)
      : data_(data), context_(context) {}

  bool is_null() const { return !data_; }
  float delta() const {
    return data_->delta;
  }
  inline void GetAnchorDataView(
      ::gfx::mojom::PointDataView* output);

  template <typename UserType>
  WARN_UNUSED_RESULT bool ReadAnchor(UserType* output) {
    auto* pointer = data_->anchor.Get();
    return mojo::internal::Deserialize<::gfx::mojom::PointDataView>(
        pointer, output, context_);
  }
 private:
  internal::SynchronousCompositor_ZoomBy_Params_Data* data_ = nullptr;
  mojo::internal::SerializationContext* context_ = nullptr;
};

class SynchronousCompositor_ZoomBy_ResponseParamsDataView {
 public:
  SynchronousCompositor_ZoomBy_ResponseParamsDataView() {}

  SynchronousCompositor_ZoomBy_ResponseParamsDataView(
      internal::SynchronousCompositor_ZoomBy_ResponseParams_Data* data,
      mojo::internal::SerializationContext* context)
      : data_(data), context_(context) {}

  bool is_null() const { return !data_; }
  inline void GetResultDataView(
      SyncCompositorCommonRendererParamsDataView* output);

  template <typename UserType>
  WARN_UNUSED_RESULT bool ReadResult(UserType* output) {
    auto* pointer = data_->result.Get();
    return mojo::internal::Deserialize<::content::mojom::SyncCompositorCommonRendererParamsDataView>(
        pointer, output, context_);
  }
 private:
  internal::SynchronousCompositor_ZoomBy_ResponseParams_Data* data_ = nullptr;
  mojo::internal::SerializationContext* context_ = nullptr;
};

class SynchronousCompositor_SetMemoryPolicy_ParamsDataView {
 public:
  SynchronousCompositor_SetMemoryPolicy_ParamsDataView() {}

  SynchronousCompositor_SetMemoryPolicy_ParamsDataView(
      internal::SynchronousCompositor_SetMemoryPolicy_Params_Data* data,
      mojo::internal::SerializationContext* context)
      : data_(data) {}

  bool is_null() const { return !data_; }
  uint32_t bytes_limit() const {
    return data_->bytes_limit;
  }
 private:
  internal::SynchronousCompositor_SetMemoryPolicy_Params_Data* data_ = nullptr;
};

class SynchronousCompositor_ReclaimResources_ParamsDataView {
 public:
  SynchronousCompositor_ReclaimResources_ParamsDataView() {}

  SynchronousCompositor_ReclaimResources_ParamsDataView(
      internal::SynchronousCompositor_ReclaimResources_Params_Data* data,
      mojo::internal::SerializationContext* context)
      : data_(data), context_(context) {}

  bool is_null() const { return !data_; }
  uint32_t layer_tree_frame_sink_id() const {
    return data_->layer_tree_frame_sink_id;
  }
  inline void GetResourcesDataView(
      mojo::ArrayDataView<::viz::mojom::ReturnedResourceDataView>* output);

  template <typename UserType>
  WARN_UNUSED_RESULT bool ReadResources(UserType* output) {
    auto* pointer = data_->resources.Get();
    return mojo::internal::Deserialize<mojo::ArrayDataView<::viz::mojom::ReturnedResourceDataView>>(
        pointer, output, context_);
  }
 private:
  internal::SynchronousCompositor_ReclaimResources_Params_Data* data_ = nullptr;
  mojo::internal::SerializationContext* context_ = nullptr;
};

class SynchronousCompositor_SetScroll_ParamsDataView {
 public:
  SynchronousCompositor_SetScroll_ParamsDataView() {}

  SynchronousCompositor_SetScroll_ParamsDataView(
      internal::SynchronousCompositor_SetScroll_Params_Data* data,
      mojo::internal::SerializationContext* context)
      : data_(data), context_(context) {}

  bool is_null() const { return !data_; }
  inline void GetOffsetDataView(
      ::gfx::mojom::ScrollOffsetDataView* output);

  template <typename UserType>
  WARN_UNUSED_RESULT bool ReadOffset(UserType* output) {
    auto* pointer = data_->offset.Get();
    return mojo::internal::Deserialize<::gfx::mojom::ScrollOffsetDataView>(
        pointer, output, context_);
  }
 private:
  internal::SynchronousCompositor_SetScroll_Params_Data* data_ = nullptr;
  mojo::internal::SerializationContext* context_ = nullptr;
};

class SynchronousCompositor_BeginFrame_ParamsDataView {
 public:
  SynchronousCompositor_BeginFrame_ParamsDataView() {}

  SynchronousCompositor_BeginFrame_ParamsDataView(
      internal::SynchronousCompositor_BeginFrame_Params_Data* data,
      mojo::internal::SerializationContext* context)
      : data_(data), context_(context) {}

  bool is_null() const { return !data_; }
  inline void GetArgsDataView(
      ::viz::mojom::BeginFrameArgsDataView* output);

  template <typename UserType>
  WARN_UNUSED_RESULT bool ReadArgs(UserType* output) {
    auto* pointer = data_->args.Get();
    return mojo::internal::Deserialize<::viz::mojom::BeginFrameArgsDataView>(
        pointer, output, context_);
  }
  inline void GetTimingDetailsDataView(
      mojo::MapDataView<uint32_t, ::viz::mojom::FrameTimingDetailsDataView>* output);

  template <typename UserType>
  WARN_UNUSED_RESULT bool ReadTimingDetails(UserType* output) {
    auto* pointer = data_->timing_details.Get();
    return mojo::internal::Deserialize<mojo::MapDataView<uint32_t, ::viz::mojom::FrameTimingDetailsDataView>>(
        pointer, output, context_);
  }
 private:
  internal::SynchronousCompositor_BeginFrame_Params_Data* data_ = nullptr;
  mojo::internal::SerializationContext* context_ = nullptr;
};

class SynchronousCompositor_SetBeginFrameSourcePaused_ParamsDataView {
 public:
  SynchronousCompositor_SetBeginFrameSourcePaused_ParamsDataView() {}

  SynchronousCompositor_SetBeginFrameSourcePaused_ParamsDataView(
      internal::SynchronousCompositor_SetBeginFrameSourcePaused_Params_Data* data,
      mojo::internal::SerializationContext* context)
      : data_(data) {}

  bool is_null() const { return !data_; }
  bool paused() const {
    return data_->paused;
  }
 private:
  internal::SynchronousCompositor_SetBeginFrameSourcePaused_Params_Data* data_ = nullptr;
};

class SynchronousCompositorHost_LayerTreeFrameSinkCreated_ParamsDataView {
 public:
  SynchronousCompositorHost_LayerTreeFrameSinkCreated_ParamsDataView() {}

  SynchronousCompositorHost_LayerTreeFrameSinkCreated_ParamsDataView(
      internal::SynchronousCompositorHost_LayerTreeFrameSinkCreated_Params_Data* data,
      mojo::internal::SerializationContext* context)
      : data_(data) {}

  bool is_null() const { return !data_; }
 private:
  internal::SynchronousCompositorHost_LayerTreeFrameSinkCreated_Params_Data* data_ = nullptr;
};

class SynchronousCompositorHost_UpdateState_ParamsDataView {
 public:
  SynchronousCompositorHost_UpdateState_ParamsDataView() {}

  SynchronousCompositorHost_UpdateState_ParamsDataView(
      internal::SynchronousCompositorHost_UpdateState_Params_Data* data,
      mojo::internal::SerializationContext* context)
      : data_(data), context_(context) {}

  bool is_null() const { return !data_; }
  inline void GetParamsDataView(
      SyncCompositorCommonRendererParamsDataView* output);

  template <typename UserType>
  WARN_UNUSED_RESULT bool ReadParams(UserType* output) {
    auto* pointer = data_->params.Get();
    return mojo::internal::Deserialize<::content::mojom::SyncCompositorCommonRendererParamsDataView>(
        pointer, output, context_);
  }
 private:
  internal::SynchronousCompositorHost_UpdateState_Params_Data* data_ = nullptr;
  mojo::internal::SerializationContext* context_ = nullptr;
};

class SynchronousCompositorHost_SetNeedsBeginFrames_ParamsDataView {
 public:
  SynchronousCompositorHost_SetNeedsBeginFrames_ParamsDataView() {}

  SynchronousCompositorHost_SetNeedsBeginFrames_ParamsDataView(
      internal::SynchronousCompositorHost_SetNeedsBeginFrames_Params_Data* data,
      mojo::internal::SerializationContext* context)
      : data_(data) {}

  bool is_null() const { return !data_; }
  bool needs_begin_frames() const {
    return data_->needs_begin_frames;
  }
 private:
  internal::SynchronousCompositorHost_SetNeedsBeginFrames_Params_Data* data_ = nullptr;
};

class SynchronousCompositorControlHost_ReturnFrame_ParamsDataView {
 public:
  SynchronousCompositorControlHost_ReturnFrame_ParamsDataView() {}

  SynchronousCompositorControlHost_ReturnFrame_ParamsDataView(
      internal::SynchronousCompositorControlHost_ReturnFrame_Params_Data* data,
      mojo::internal::SerializationContext* context)
      : data_(data), context_(context) {}

  bool is_null() const { return !data_; }
  uint32_t layer_tree_frame_sink_id() const {
    return data_->layer_tree_frame_sink_id;
  }
  uint32_t metadata_version() const {
    return data_->metadata_version;
  }
  inline void GetFrameDataView(
      ::viz::mojom::CompositorFrameDataView* output);

  template <typename UserType>
  WARN_UNUSED_RESULT bool ReadFrame(UserType* output) {
    auto* pointer = data_->frame.Get();
    return mojo::internal::Deserialize<::viz::mojom::CompositorFrameDataView>(
        pointer, output, context_);
  }
  inline void GetHitTestRegionListDataView(
      ::viz::mojom::HitTestRegionListDataView* output);

  template <typename UserType>
  WARN_UNUSED_RESULT bool ReadHitTestRegionList(UserType* output) {
    auto* pointer = data_->hit_test_region_list.Get();
    return mojo::internal::Deserialize<::viz::mojom::HitTestRegionListDataView>(
        pointer, output, context_);
  }
 private:
  internal::SynchronousCompositorControlHost_ReturnFrame_Params_Data* data_ = nullptr;
  mojo::internal::SerializationContext* context_ = nullptr;
};

class SynchronousCompositorControlHost_BeginFrameResponse_ParamsDataView {
 public:
  SynchronousCompositorControlHost_BeginFrameResponse_ParamsDataView() {}

  SynchronousCompositorControlHost_BeginFrameResponse_ParamsDataView(
      internal::SynchronousCompositorControlHost_BeginFrameResponse_Params_Data* data,
      mojo::internal::SerializationContext* context)
      : data_(data), context_(context) {}

  bool is_null() const { return !data_; }
  inline void GetParamsDataView(
      SyncCompositorCommonRendererParamsDataView* output);

  template <typename UserType>
  WARN_UNUSED_RESULT bool ReadParams(UserType* output) {
    auto* pointer = data_->params.Get();
    return mojo::internal::Deserialize<::content::mojom::SyncCompositorCommonRendererParamsDataView>(
        pointer, output, context_);
  }
 private:
  internal::SynchronousCompositorControlHost_BeginFrameResponse_Params_Data* data_ = nullptr;
  mojo::internal::SerializationContext* context_ = nullptr;
};


inline void SynchronousCompositor_DemandDrawHwAsync_ParamsDataView::GetDrawParamsDataView(
    SyncCompositorDemandDrawHwParamsDataView* output) {
  auto pointer = data_->draw_params.Get();
  *output = SyncCompositorDemandDrawHwParamsDataView(pointer, context_);
}


inline void SynchronousCompositor_DemandDrawHw_ParamsDataView::GetDrawParamsDataView(
    SyncCompositorDemandDrawHwParamsDataView* output) {
  auto pointer = data_->draw_params.Get();
  *output = SyncCompositorDemandDrawHwParamsDataView(pointer, context_);
}


inline void SynchronousCompositor_DemandDrawHw_ResponseParamsDataView::GetResultDataView(
    SyncCompositorCommonRendererParamsDataView* output) {
  auto pointer = data_->result.Get();
  *output = SyncCompositorCommonRendererParamsDataView(pointer, context_);
}
inline void SynchronousCompositor_DemandDrawHw_ResponseParamsDataView::GetFrameDataView(
    ::viz::mojom::CompositorFrameDataView* output) {
  auto pointer = data_->frame.Get();
  *output = ::viz::mojom::CompositorFrameDataView(pointer, context_);
}
inline void SynchronousCompositor_DemandDrawHw_ResponseParamsDataView::GetHitTestRegionListDataView(
    ::viz::mojom::HitTestRegionListDataView* output) {
  auto pointer = data_->hit_test_region_list.Get();
  *output = ::viz::mojom::HitTestRegionListDataView(pointer, context_);
}


inline void SynchronousCompositor_SetSharedMemory_ParamsDataView::GetShmRegionDataView(
    ::mojo_base::mojom::WritableSharedMemoryRegionDataView* output) {
  auto pointer = data_->shm_region.Get();
  *output = ::mojo_base::mojom::WritableSharedMemoryRegionDataView(pointer, context_);
}


inline void SynchronousCompositor_SetSharedMemory_ResponseParamsDataView::GetResultDataView(
    SyncCompositorCommonRendererParamsDataView* output) {
  auto pointer = data_->result.Get();
  *output = SyncCompositorCommonRendererParamsDataView(pointer, context_);
}


inline void SynchronousCompositor_DemandDrawSw_ParamsDataView::GetDrawParamsDataView(
    SyncCompositorDemandDrawSwParamsDataView* output) {
  auto pointer = data_->draw_params.Get();
  *output = SyncCompositorDemandDrawSwParamsDataView(pointer, context_);
}


inline void SynchronousCompositor_DemandDrawSw_ResponseParamsDataView::GetResultDataView(
    SyncCompositorCommonRendererParamsDataView* output) {
  auto pointer = data_->result.Get();
  *output = SyncCompositorCommonRendererParamsDataView(pointer, context_);
}
inline void SynchronousCompositor_DemandDrawSw_ResponseParamsDataView::GetMetaDataDataView(
    ::viz::mojom::CompositorFrameMetadataDataView* output) {
  auto pointer = data_->meta_data.Get();
  *output = ::viz::mojom::CompositorFrameMetadataDataView(pointer, context_);
}






inline void SynchronousCompositor_ZoomBy_ParamsDataView::GetAnchorDataView(
    ::gfx::mojom::PointDataView* output) {
  auto pointer = data_->anchor.Get();
  *output = ::gfx::mojom::PointDataView(pointer, context_);
}


inline void SynchronousCompositor_ZoomBy_ResponseParamsDataView::GetResultDataView(
    SyncCompositorCommonRendererParamsDataView* output) {
  auto pointer = data_->result.Get();
  *output = SyncCompositorCommonRendererParamsDataView(pointer, context_);
}




inline void SynchronousCompositor_ReclaimResources_ParamsDataView::GetResourcesDataView(
    mojo::ArrayDataView<::viz::mojom::ReturnedResourceDataView>* output) {
  auto pointer = data_->resources.Get();
  *output = mojo::ArrayDataView<::viz::mojom::ReturnedResourceDataView>(pointer, context_);
}


inline void SynchronousCompositor_SetScroll_ParamsDataView::GetOffsetDataView(
    ::gfx::mojom::ScrollOffsetDataView* output) {
  auto pointer = data_->offset.Get();
  *output = ::gfx::mojom::ScrollOffsetDataView(pointer, context_);
}


inline void SynchronousCompositor_BeginFrame_ParamsDataView::GetArgsDataView(
    ::viz::mojom::BeginFrameArgsDataView* output) {
  auto pointer = data_->args.Get();
  *output = ::viz::mojom::BeginFrameArgsDataView(pointer, context_);
}
inline void SynchronousCompositor_BeginFrame_ParamsDataView::GetTimingDetailsDataView(
    mojo::MapDataView<uint32_t, ::viz::mojom::FrameTimingDetailsDataView>* output) {
  auto pointer = data_->timing_details.Get();
  *output = mojo::MapDataView<uint32_t, ::viz::mojom::FrameTimingDetailsDataView>(pointer, context_);
}






inline void SynchronousCompositorHost_UpdateState_ParamsDataView::GetParamsDataView(
    SyncCompositorCommonRendererParamsDataView* output) {
  auto pointer = data_->params.Get();
  *output = SyncCompositorCommonRendererParamsDataView(pointer, context_);
}




inline void SynchronousCompositorControlHost_ReturnFrame_ParamsDataView::GetFrameDataView(
    ::viz::mojom::CompositorFrameDataView* output) {
  auto pointer = data_->frame.Get();
  *output = ::viz::mojom::CompositorFrameDataView(pointer, context_);
}
inline void SynchronousCompositorControlHost_ReturnFrame_ParamsDataView::GetHitTestRegionListDataView(
    ::viz::mojom::HitTestRegionListDataView* output) {
  auto pointer = data_->hit_test_region_list.Get();
  *output = ::viz::mojom::HitTestRegionListDataView(pointer, context_);
}


inline void SynchronousCompositorControlHost_BeginFrameResponse_ParamsDataView::GetParamsDataView(
    SyncCompositorCommonRendererParamsDataView* output) {
  auto pointer = data_->params.Get();
  *output = SyncCompositorCommonRendererParamsDataView(pointer, context_);
}

}  // namespace mojom
}  // namespace content

#if defined(__clang__)
#pragma clang diagnostic pop
#elif defined(_MSC_VER)
#pragma warning(pop)
#endif

#endif  // CONTENT_COMMON_INPUT_SYNCHRONOUS_COMPOSITOR_MOJOM_PARAMS_DATA_H_