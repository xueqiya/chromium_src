// content/common/input/synchronous_compositor.mojom-shared.h is auto generated by mojom_bindings_generator.py, do not edit

// Copyright 2016 The Chromium Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.

#ifndef CONTENT_COMMON_INPUT_SYNCHRONOUS_COMPOSITOR_MOJOM_SHARED_H_
#define CONTENT_COMMON_INPUT_SYNCHRONOUS_COMPOSITOR_MOJOM_SHARED_H_

#include <stdint.h>

#include <functional>
#include <ostream>
#include <type_traits>
#include <utility>

#include "base/compiler_specific.h"
#include "base/containers/flat_map.h"
#include "mojo/public/cpp/bindings/array_data_view.h"
#include "mojo/public/cpp/bindings/enum_traits.h"
#include "mojo/public/cpp/bindings/interface_data_view.h"
#include "mojo/public/cpp/bindings/lib/bindings_internal.h"
#include "mojo/public/cpp/bindings/lib/serialization.h"
#include "mojo/public/cpp/bindings/map_data_view.h"
#include "mojo/public/cpp/bindings/string_data_view.h"
#include "content/common/input/synchronous_compositor.mojom-shared-internal.h"
#include "mojo/public/mojom/base/shared_memory.mojom-shared.h"
#include "mojo/public/mojom/base/time.mojom-shared.h"
#include "services/viz/public/mojom/compositing/begin_frame_args.mojom-shared.h"
#include "services/viz/public/mojom/compositing/compositor_frame.mojom-shared.h"
#include "services/viz/public/mojom/compositing/compositor_frame_metadata.mojom-shared.h"
#include "services/viz/public/mojom/compositing/frame_timing_details.mojom-shared.h"
#include "services/viz/public/mojom/compositing/returned_resource.mojom-shared.h"
#include "services/viz/public/mojom/hit_test/hit_test_region_list.mojom-shared.h"
#include "ui/gfx/geometry/mojom/geometry.mojom-shared.h"
#include "mojo/public/cpp/bindings/lib/interface_serialization.h"


#include "mojo/public/cpp/bindings/native_enum.h"
#include "mojo/public/cpp/bindings/lib/native_struct_serialization.h"
#include "base/component_export.h"




namespace content {
namespace mojom {
using SyncCompositorDemandDrawHwParamsDataView = mojo::native::NativeStructDataView;

using SyncCompositorDemandDrawSwParamsDataView = mojo::native::NativeStructDataView;

using SyncCompositorCommonRendererParamsDataView = mojo::native::NativeStructDataView;



}  // namespace mojom
}  // namespace content

namespace mojo {
namespace internal {

}  // namespace internal
}  // namespace mojo


namespace content {
namespace mojom {
// Interface base classes. They are used for type safety check.
class SynchronousCompositorInterfaceBase {};

using SynchronousCompositorPtrDataView =
    mojo::InterfacePtrDataView<SynchronousCompositorInterfaceBase>;
using SynchronousCompositorRequestDataView =
    mojo::InterfaceRequestDataView<SynchronousCompositorInterfaceBase>;
using SynchronousCompositorAssociatedPtrInfoDataView =
    mojo::AssociatedInterfacePtrInfoDataView<SynchronousCompositorInterfaceBase>;
using SynchronousCompositorAssociatedRequestDataView =
    mojo::AssociatedInterfaceRequestDataView<SynchronousCompositorInterfaceBase>;
class SynchronousCompositorHostInterfaceBase {};

using SynchronousCompositorHostPtrDataView =
    mojo::InterfacePtrDataView<SynchronousCompositorHostInterfaceBase>;
using SynchronousCompositorHostRequestDataView =
    mojo::InterfaceRequestDataView<SynchronousCompositorHostInterfaceBase>;
using SynchronousCompositorHostAssociatedPtrInfoDataView =
    mojo::AssociatedInterfacePtrInfoDataView<SynchronousCompositorHostInterfaceBase>;
using SynchronousCompositorHostAssociatedRequestDataView =
    mojo::AssociatedInterfaceRequestDataView<SynchronousCompositorHostInterfaceBase>;
class SynchronousCompositorControlHostInterfaceBase {};

using SynchronousCompositorControlHostPtrDataView =
    mojo::InterfacePtrDataView<SynchronousCompositorControlHostInterfaceBase>;
using SynchronousCompositorControlHostRequestDataView =
    mojo::InterfaceRequestDataView<SynchronousCompositorControlHostInterfaceBase>;
using SynchronousCompositorControlHostAssociatedPtrInfoDataView =
    mojo::AssociatedInterfacePtrInfoDataView<SynchronousCompositorControlHostInterfaceBase>;
using SynchronousCompositorControlHostAssociatedRequestDataView =
    mojo::AssociatedInterfaceRequestDataView<SynchronousCompositorControlHostInterfaceBase>;


}  // namespace mojom
}  // namespace content

namespace std {

}  // namespace std

namespace mojo {

}  // namespace mojo


namespace content {
namespace mojom {


}  // namespace mojom
}  // namespace content

#endif  // CONTENT_COMMON_INPUT_SYNCHRONOUS_COMPOSITOR_MOJOM_SHARED_H_