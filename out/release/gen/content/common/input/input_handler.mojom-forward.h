// content/common/input/input_handler.mojom-forward.h is auto generated by mojom_bindings_generator.py, do not edit

// Copyright 2019 The Chromium Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.

#ifndef CONTENT_COMMON_INPUT_INPUT_HANDLER_MOJOM_FORWARD_H_
#define CONTENT_COMMON_INPUT_INPUT_HANDLER_MOJOM_FORWARD_H_



#include "mojo/public/cpp/bindings/struct_forward.h"

#include "mojo/public/cpp/bindings/deprecated_interface_types_forward.h"


#include "mojo/public/interfaces/bindings/native_struct.mojom-forward.h"






namespace content {
namespace mojom {
class KeyDataDataView;

class PointerDataDataView;

class WheelDataDataView;

class MouseDataDataView;

class ScrollUpdateDataView;

class ScrollDataDataView;

class PinchBeginDataDataView;

class PinchUpdateDataDataView;

class PinchEndDataDataView;

class FlingDataDataView;

class TapDataDataView;

class GestureDataDataView;

class TouchPointDataView;

class TouchDataDataView;

class EventDataView;

class TouchActionOptionalDataView;

class KeyData;
using KeyDataPtr = mojo::StructPtr<KeyData>;

class PointerData;
using PointerDataPtr = mojo::StructPtr<PointerData>;

class WheelData;
using WheelDataPtr = mojo::StructPtr<WheelData>;

class MouseData;
using MouseDataPtr = mojo::StructPtr<MouseData>;

class ScrollUpdate;
using ScrollUpdatePtr = mojo::InlinedStructPtr<ScrollUpdate>;

class ScrollData;
using ScrollDataPtr = mojo::StructPtr<ScrollData>;

class PinchBeginData;
using PinchBeginDataPtr = mojo::InlinedStructPtr<PinchBeginData>;

class PinchUpdateData;
using PinchUpdateDataPtr = mojo::InlinedStructPtr<PinchUpdateData>;

class PinchEndData;
using PinchEndDataPtr = mojo::InlinedStructPtr<PinchEndData>;

class FlingData;
using FlingDataPtr = mojo::InlinedStructPtr<FlingData>;

class TapData;
using TapDataPtr = mojo::InlinedStructPtr<TapData>;

class GestureData;
using GestureDataPtr = mojo::StructPtr<GestureData>;

class TouchPoint;
using TouchPointPtr = mojo::StructPtr<TouchPoint>;

class TouchData;
using TouchDataPtr = mojo::StructPtr<TouchData>;

class Event;
using EventPtr = mojo::StructPtr<Event>;

class TouchActionOptional;
using TouchActionOptionalPtr = mojo::InlinedStructPtr<TouchActionOptional>;

class WidgetInputHandlerHost;

using WidgetInputHandlerHostPtr = mojo::InterfacePtr<WidgetInputHandlerHost>;
using WidgetInputHandlerHostPtrInfo = mojo::InterfacePtrInfo<WidgetInputHandlerHost>;
using ThreadSafeWidgetInputHandlerHostPtr =
    mojo::ThreadSafeInterfacePtr<WidgetInputHandlerHost>;

using WidgetInputHandlerHostRequest = mojo::InterfaceRequest<WidgetInputHandlerHost>;

using WidgetInputHandlerHostAssociatedPtr =
    mojo::AssociatedInterfacePtr<WidgetInputHandlerHost>;
using ThreadSafeWidgetInputHandlerHostAssociatedPtr =
    mojo::ThreadSafeAssociatedInterfacePtr<WidgetInputHandlerHost>;
using WidgetInputHandlerHostAssociatedPtrInfo =
    mojo::AssociatedInterfacePtrInfo<WidgetInputHandlerHost>;

using WidgetInputHandlerHostAssociatedRequest =
    mojo::AssociatedInterfaceRequest<WidgetInputHandlerHost>;

class WidgetInputHandler;

using WidgetInputHandlerPtr = mojo::InterfacePtr<WidgetInputHandler>;
using WidgetInputHandlerPtrInfo = mojo::InterfacePtrInfo<WidgetInputHandler>;
using ThreadSafeWidgetInputHandlerPtr =
    mojo::ThreadSafeInterfacePtr<WidgetInputHandler>;

using WidgetInputHandlerRequest = mojo::InterfaceRequest<WidgetInputHandler>;

using WidgetInputHandlerAssociatedPtr =
    mojo::AssociatedInterfacePtr<WidgetInputHandler>;
using ThreadSafeWidgetInputHandlerAssociatedPtr =
    mojo::ThreadSafeAssociatedInterfacePtr<WidgetInputHandler>;
using WidgetInputHandlerAssociatedPtrInfo =
    mojo::AssociatedInterfacePtrInfo<WidgetInputHandler>;

using WidgetInputHandlerAssociatedRequest =
    mojo::AssociatedInterfaceRequest<WidgetInputHandler>;

class FrameInputHandler;

using FrameInputHandlerPtr = mojo::InterfacePtr<FrameInputHandler>;
using FrameInputHandlerPtrInfo = mojo::InterfacePtrInfo<FrameInputHandler>;
using ThreadSafeFrameInputHandlerPtr =
    mojo::ThreadSafeInterfacePtr<FrameInputHandler>;

using FrameInputHandlerRequest = mojo::InterfaceRequest<FrameInputHandler>;

using FrameInputHandlerAssociatedPtr =
    mojo::AssociatedInterfacePtr<FrameInputHandler>;
using ThreadSafeFrameInputHandlerAssociatedPtr =
    mojo::ThreadSafeAssociatedInterfacePtr<FrameInputHandler>;
using FrameInputHandlerAssociatedPtrInfo =
    mojo::AssociatedInterfacePtrInfo<FrameInputHandler>;

using FrameInputHandlerAssociatedRequest =
    mojo::AssociatedInterfaceRequest<FrameInputHandler>;




}  // namespace mojom
}  // namespace content
#include "cc/input/touch_action.h"
#include "content/common/content_security_policy/csp_context.h"
#include "content/common/cursors/webcursor.h"
#include "content/common/edit_command.h"
#include "content/common/frame_owner_properties.h"
#include "content/common/frame_replication_state.h"
#include "content/common/input/input_event.h"
#include "content/common/input/synthetic_pinch_gesture_params.h"
#include "content/common/input/synthetic_pointer_action_list_params.h"
#include "content/common/input/synthetic_smooth_drag_gesture_params.h"
#include "content/common/input/synthetic_smooth_scroll_gesture_params.h"
#include "content/common/input/synthetic_tap_gesture_params.h"
#include "content/common/visual_properties.h"
#include "content/public/common/input_event_ack_source.h"
#include "content/public/common/input_event_ack_state.h"
#include "content/public/common/web_preferences.h"
#include "net/base/network_change_notifier.h"
#include "third_party/blink/public/common/input/web_gesture_device.h"
#include "third_party/blink/public/common/input/web_gesture_event.h"
#include "third_party/blink/public/common/input/web_input_event.h"
#include "third_party/blink/public/common/input/web_mouse_wheel_event.h"
#include "third_party/blink/public/common/input/web_pointer_properties.h"
#include "third_party/blink/public/common/input/web_touch_point.h"
#include "ui/events/blink/did_overscroll_params.h"
#include "ui/events/blink/web_input_event_traits.h"
#include "ui/latency/ipc/latency_info_param_traits.h"
#include "ui/native_theme/native_theme.h"

#endif  // CONTENT_COMMON_INPUT_INPUT_HANDLER_MOJOM_FORWARD_H_