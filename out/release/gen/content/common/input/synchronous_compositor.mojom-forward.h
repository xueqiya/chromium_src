// content/common/input/synchronous_compositor.mojom-forward.h is auto generated by mojom_bindings_generator.py, do not edit

// Copyright 2019 The Chromium Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.

#ifndef CONTENT_COMMON_INPUT_SYNCHRONOUS_COMPOSITOR_MOJOM_FORWARD_H_
#define CONTENT_COMMON_INPUT_SYNCHRONOUS_COMPOSITOR_MOJOM_FORWARD_H_



#include "mojo/public/cpp/bindings/struct_forward.h"

#include "mojo/public/cpp/bindings/deprecated_interface_types_forward.h"


#include "mojo/public/interfaces/bindings/native_struct.mojom-forward.h"






namespace content {
namespace mojom {
using SyncCompositorDemandDrawHwParamsDataView = mojo::native::NativeStructDataView;

using SyncCompositorDemandDrawSwParamsDataView = mojo::native::NativeStructDataView;

using SyncCompositorCommonRendererParamsDataView = mojo::native::NativeStructDataView;

using SyncCompositorDemandDrawHwParams = mojo::native::NativeStruct;
using SyncCompositorDemandDrawHwParamsPtr = mojo::native::NativeStructPtr;

using SyncCompositorDemandDrawSwParams = mojo::native::NativeStruct;
using SyncCompositorDemandDrawSwParamsPtr = mojo::native::NativeStructPtr;

using SyncCompositorCommonRendererParams = mojo::native::NativeStruct;
using SyncCompositorCommonRendererParamsPtr = mojo::native::NativeStructPtr;

class SynchronousCompositor;

using SynchronousCompositorPtr = mojo::InterfacePtr<SynchronousCompositor>;
using SynchronousCompositorPtrInfo = mojo::InterfacePtrInfo<SynchronousCompositor>;
using ThreadSafeSynchronousCompositorPtr =
    mojo::ThreadSafeInterfacePtr<SynchronousCompositor>;

using SynchronousCompositorRequest = mojo::InterfaceRequest<SynchronousCompositor>;

using SynchronousCompositorAssociatedPtr =
    mojo::AssociatedInterfacePtr<SynchronousCompositor>;
using ThreadSafeSynchronousCompositorAssociatedPtr =
    mojo::ThreadSafeAssociatedInterfacePtr<SynchronousCompositor>;
using SynchronousCompositorAssociatedPtrInfo =
    mojo::AssociatedInterfacePtrInfo<SynchronousCompositor>;

using SynchronousCompositorAssociatedRequest =
    mojo::AssociatedInterfaceRequest<SynchronousCompositor>;

class SynchronousCompositorHost;

using SynchronousCompositorHostPtr = mojo::InterfacePtr<SynchronousCompositorHost>;
using SynchronousCompositorHostPtrInfo = mojo::InterfacePtrInfo<SynchronousCompositorHost>;
using ThreadSafeSynchronousCompositorHostPtr =
    mojo::ThreadSafeInterfacePtr<SynchronousCompositorHost>;

using SynchronousCompositorHostRequest = mojo::InterfaceRequest<SynchronousCompositorHost>;

using SynchronousCompositorHostAssociatedPtr =
    mojo::AssociatedInterfacePtr<SynchronousCompositorHost>;
using ThreadSafeSynchronousCompositorHostAssociatedPtr =
    mojo::ThreadSafeAssociatedInterfacePtr<SynchronousCompositorHost>;
using SynchronousCompositorHostAssociatedPtrInfo =
    mojo::AssociatedInterfacePtrInfo<SynchronousCompositorHost>;

using SynchronousCompositorHostAssociatedRequest =
    mojo::AssociatedInterfaceRequest<SynchronousCompositorHost>;

class SynchronousCompositorControlHost;

using SynchronousCompositorControlHostPtr = mojo::InterfacePtr<SynchronousCompositorControlHost>;
using SynchronousCompositorControlHostPtrInfo = mojo::InterfacePtrInfo<SynchronousCompositorControlHost>;
using ThreadSafeSynchronousCompositorControlHostPtr =
    mojo::ThreadSafeInterfacePtr<SynchronousCompositorControlHost>;

using SynchronousCompositorControlHostRequest = mojo::InterfaceRequest<SynchronousCompositorControlHost>;

using SynchronousCompositorControlHostAssociatedPtr =
    mojo::AssociatedInterfacePtr<SynchronousCompositorControlHost>;
using ThreadSafeSynchronousCompositorControlHostAssociatedPtr =
    mojo::ThreadSafeAssociatedInterfacePtr<SynchronousCompositorControlHost>;
using SynchronousCompositorControlHostAssociatedPtrInfo =
    mojo::AssociatedInterfacePtrInfo<SynchronousCompositorControlHost>;

using SynchronousCompositorControlHostAssociatedRequest =
    mojo::AssociatedInterfaceRequest<SynchronousCompositorControlHost>;




}  // namespace mojom
}  // namespace content
#include "content/common/input/sync_compositor_messages.h"

#endif  // CONTENT_COMMON_INPUT_SYNCHRONOUS_COMPOSITOR_MOJOM_FORWARD_H_