// content/common/child_process.mojom-shared.h is auto generated by mojom_bindings_generator.py, do not edit

// Copyright 2016 The Chromium Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.

#ifndef CONTENT_COMMON_CHILD_PROCESS_MOJOM_SHARED_H_
#define CONTENT_COMMON_CHILD_PROCESS_MOJOM_SHARED_H_

#include <stdint.h>

#include <functional>
#include <ostream>
#include <type_traits>
#include <utility>

#include "base/compiler_specific.h"
#include "base/containers/flat_map.h"
#include "mojo/public/cpp/bindings/array_data_view.h"
#include "mojo/public/cpp/bindings/enum_traits.h"
#include "mojo/public/cpp/bindings/interface_data_view.h"
#include "mojo/public/cpp/bindings/lib/bindings_internal.h"
#include "mojo/public/cpp/bindings/lib/serialization.h"
#include "mojo/public/cpp/bindings/map_data_view.h"
#include "mojo/public/cpp/bindings/string_data_view.h"
#include "content/common/child_process.mojom-shared-internal.h"
#include "components/tracing/common/background_tracing_agent.mojom-shared.h"
#include "ipc/ipc.mojom-shared.h"
#include "mojo/public/mojom/base/file.mojom-shared.h"
#include "mojo/public/mojom/base/generic_pending_receiver.mojom-shared.h"
#include "services/service_manager/public/mojom/service.mojom-shared.h"
#include "mojo/public/cpp/bindings/lib/interface_serialization.h"


#include "base/component_export.h"




namespace content {
namespace mojom {


}  // namespace mojom
}  // namespace content

namespace mojo {
namespace internal {

}  // namespace internal
}  // namespace mojo


namespace content {
namespace mojom {
// Interface base classes. They are used for type safety check.
class ChildProcessHostInterfaceBase {};

using ChildProcessHostPtrDataView =
    mojo::InterfacePtrDataView<ChildProcessHostInterfaceBase>;
using ChildProcessHostRequestDataView =
    mojo::InterfaceRequestDataView<ChildProcessHostInterfaceBase>;
using ChildProcessHostAssociatedPtrInfoDataView =
    mojo::AssociatedInterfacePtrInfoDataView<ChildProcessHostInterfaceBase>;
using ChildProcessHostAssociatedRequestDataView =
    mojo::AssociatedInterfaceRequestDataView<ChildProcessHostInterfaceBase>;
class ChildProcessHostBootstrapInterfaceBase {};

using ChildProcessHostBootstrapPtrDataView =
    mojo::InterfacePtrDataView<ChildProcessHostBootstrapInterfaceBase>;
using ChildProcessHostBootstrapRequestDataView =
    mojo::InterfaceRequestDataView<ChildProcessHostBootstrapInterfaceBase>;
using ChildProcessHostBootstrapAssociatedPtrInfoDataView =
    mojo::AssociatedInterfacePtrInfoDataView<ChildProcessHostBootstrapInterfaceBase>;
using ChildProcessHostBootstrapAssociatedRequestDataView =
    mojo::AssociatedInterfaceRequestDataView<ChildProcessHostBootstrapInterfaceBase>;
class ChildProcessInterfaceBase {};

using ChildProcessPtrDataView =
    mojo::InterfacePtrDataView<ChildProcessInterfaceBase>;
using ChildProcessRequestDataView =
    mojo::InterfaceRequestDataView<ChildProcessInterfaceBase>;
using ChildProcessAssociatedPtrInfoDataView =
    mojo::AssociatedInterfacePtrInfoDataView<ChildProcessInterfaceBase>;
using ChildProcessAssociatedRequestDataView =
    mojo::AssociatedInterfaceRequestDataView<ChildProcessInterfaceBase>;


}  // namespace mojom
}  // namespace content

namespace std {

}  // namespace std

namespace mojo {

}  // namespace mojo


namespace content {
namespace mojom {


}  // namespace mojom
}  // namespace content

#endif  // CONTENT_COMMON_CHILD_PROCESS_MOJOM_SHARED_H_