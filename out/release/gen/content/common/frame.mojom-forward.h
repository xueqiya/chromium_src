// content/common/frame.mojom-forward.h is auto generated by mojom_bindings_generator.py, do not edit

// Copyright 2019 The Chromium Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.

#ifndef CONTENT_COMMON_FRAME_MOJOM_FORWARD_H_
#define CONTENT_COMMON_FRAME_MOJOM_FORWARD_H_

#include <stdint.h>

#include "mojo/public/cpp/bindings/struct_forward.h"

#include "mojo/public/cpp/bindings/deprecated_interface_types_forward.h"


#include "mojo/public/interfaces/bindings/native_struct.mojom-forward.h"
#include "content/common/content_export.h"



namespace mojo {
enum class NativeEnum;
}  // namespace mojo


namespace content {
namespace mojom {
class CreateNewWindowParamsDataView;

class CreateNewWindowReplyDataView;


enum class CreateNewWindowStatus : int32_t;

CONTENT_EXPORT extern const char kNavigation_FrameSpec[];
class CreateNewWindowParams;
using CreateNewWindowParamsPtr = mojo::StructPtr<CreateNewWindowParams>;

class CreateNewWindowReply;
using CreateNewWindowReplyPtr = mojo::StructPtr<CreateNewWindowReply>;

class Frame;

using FramePtr = mojo::InterfacePtr<Frame>;
using FramePtrInfo = mojo::InterfacePtrInfo<Frame>;
using ThreadSafeFramePtr =
    mojo::ThreadSafeInterfacePtr<Frame>;

using FrameRequest = mojo::InterfaceRequest<Frame>;

using FrameAssociatedPtr =
    mojo::AssociatedInterfacePtr<Frame>;
using ThreadSafeFrameAssociatedPtr =
    mojo::ThreadSafeAssociatedInterfacePtr<Frame>;
using FrameAssociatedPtrInfo =
    mojo::AssociatedInterfacePtrInfo<Frame>;

using FrameAssociatedRequest =
    mojo::AssociatedInterfaceRequest<Frame>;

class FrameNavigationControl;

using FrameNavigationControlPtr = mojo::InterfacePtr<FrameNavigationControl>;
using FrameNavigationControlPtrInfo = mojo::InterfacePtrInfo<FrameNavigationControl>;
using ThreadSafeFrameNavigationControlPtr =
    mojo::ThreadSafeInterfacePtr<FrameNavigationControl>;

using FrameNavigationControlRequest = mojo::InterfaceRequest<FrameNavigationControl>;

using FrameNavigationControlAssociatedPtr =
    mojo::AssociatedInterfacePtr<FrameNavigationControl>;
using ThreadSafeFrameNavigationControlAssociatedPtr =
    mojo::ThreadSafeAssociatedInterfacePtr<FrameNavigationControl>;
using FrameNavigationControlAssociatedPtrInfo =
    mojo::AssociatedInterfacePtrInfo<FrameNavigationControl>;

using FrameNavigationControlAssociatedRequest =
    mojo::AssociatedInterfaceRequest<FrameNavigationControl>;

class FrameBindingsControl;

using FrameBindingsControlPtr = mojo::InterfacePtr<FrameBindingsControl>;
using FrameBindingsControlPtrInfo = mojo::InterfacePtrInfo<FrameBindingsControl>;
using ThreadSafeFrameBindingsControlPtr =
    mojo::ThreadSafeInterfacePtr<FrameBindingsControl>;

using FrameBindingsControlRequest = mojo::InterfaceRequest<FrameBindingsControl>;

using FrameBindingsControlAssociatedPtr =
    mojo::AssociatedInterfacePtr<FrameBindingsControl>;
using ThreadSafeFrameBindingsControlAssociatedPtr =
    mojo::ThreadSafeAssociatedInterfacePtr<FrameBindingsControl>;
using FrameBindingsControlAssociatedPtrInfo =
    mojo::AssociatedInterfacePtrInfo<FrameBindingsControl>;

using FrameBindingsControlAssociatedRequest =
    mojo::AssociatedInterfaceRequest<FrameBindingsControl>;

class FrameFactory;

using FrameFactoryPtr = mojo::InterfacePtr<FrameFactory>;
using FrameFactoryPtrInfo = mojo::InterfacePtrInfo<FrameFactory>;
using ThreadSafeFrameFactoryPtr =
    mojo::ThreadSafeInterfacePtr<FrameFactory>;

using FrameFactoryRequest = mojo::InterfaceRequest<FrameFactory>;

using FrameFactoryAssociatedPtr =
    mojo::AssociatedInterfacePtr<FrameFactory>;
using ThreadSafeFrameFactoryAssociatedPtr =
    mojo::ThreadSafeAssociatedInterfacePtr<FrameFactory>;
using FrameFactoryAssociatedPtrInfo =
    mojo::AssociatedInterfacePtrInfo<FrameFactory>;

using FrameFactoryAssociatedRequest =
    mojo::AssociatedInterfaceRequest<FrameFactory>;

class KeepAliveHandle;

using KeepAliveHandlePtr = mojo::InterfacePtr<KeepAliveHandle>;
using KeepAliveHandlePtrInfo = mojo::InterfacePtrInfo<KeepAliveHandle>;
using ThreadSafeKeepAliveHandlePtr =
    mojo::ThreadSafeInterfacePtr<KeepAliveHandle>;

using KeepAliveHandleRequest = mojo::InterfaceRequest<KeepAliveHandle>;

using KeepAliveHandleAssociatedPtr =
    mojo::AssociatedInterfacePtr<KeepAliveHandle>;
using ThreadSafeKeepAliveHandleAssociatedPtr =
    mojo::ThreadSafeAssociatedInterfacePtr<KeepAliveHandle>;
using KeepAliveHandleAssociatedPtrInfo =
    mojo::AssociatedInterfacePtrInfo<KeepAliveHandle>;

using KeepAliveHandleAssociatedRequest =
    mojo::AssociatedInterfaceRequest<KeepAliveHandle>;

class FrameHost;

using FrameHostPtr = mojo::InterfacePtr<FrameHost>;
using FrameHostPtrInfo = mojo::InterfacePtrInfo<FrameHost>;
using ThreadSafeFrameHostPtr =
    mojo::ThreadSafeInterfacePtr<FrameHost>;

using FrameHostRequest = mojo::InterfaceRequest<FrameHost>;

using FrameHostAssociatedPtr =
    mojo::AssociatedInterfacePtr<FrameHost>;
using ThreadSafeFrameHostAssociatedPtr =
    mojo::ThreadSafeAssociatedInterfacePtr<FrameHost>;
using FrameHostAssociatedPtrInfo =
    mojo::AssociatedInterfacePtrInfo<FrameHost>;

using FrameHostAssociatedRequest =
    mojo::AssociatedInterfaceRequest<FrameHost>;




}  // namespace mojom
}  // namespace content

#endif  // CONTENT_COMMON_FRAME_MOJOM_FORWARD_H_