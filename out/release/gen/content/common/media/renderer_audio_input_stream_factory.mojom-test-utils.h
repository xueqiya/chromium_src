// content/common/media/renderer_audio_input_stream_factory.mojom-test-utils.h is auto generated by mojom_bindings_generator.py, do not edit

// Copyright 2019 The Chromium Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.

#ifndef CONTENT_COMMON_MEDIA_RENDERER_AUDIO_INPUT_STREAM_FACTORY_MOJOM_TEST_UTILS_H_
#define CONTENT_COMMON_MEDIA_RENDERER_AUDIO_INPUT_STREAM_FACTORY_MOJOM_TEST_UTILS_H_

#include "content/common/media/renderer_audio_input_stream_factory.mojom.h"
#include "content/common/content_export.h"


namespace content {
namespace mojom {


class CONTENT_EXPORT RendererAudioInputStreamFactoryInterceptorForTesting : public RendererAudioInputStreamFactory {
  virtual RendererAudioInputStreamFactory* GetForwardingInterface() = 0;
  void CreateStream(mojo::PendingRemote<RendererAudioInputStreamFactoryClient> client, const ::base::UnguessableToken& session_id, const ::media::AudioParameters& params, bool automatic_gain_control, uint32_t shared_memory_count, ::audio::mojom::AudioProcessingConfigPtr processing_config) override;
  void AssociateInputAndOutputForAec(const ::base::UnguessableToken& input_stream_id, const std::string& output_device_id) override;
};
class CONTENT_EXPORT RendererAudioInputStreamFactoryAsyncWaiter {
 public:
  explicit RendererAudioInputStreamFactoryAsyncWaiter(RendererAudioInputStreamFactory* proxy);
  ~RendererAudioInputStreamFactoryAsyncWaiter();

 private:
  RendererAudioInputStreamFactory* const proxy_;

  DISALLOW_COPY_AND_ASSIGN(RendererAudioInputStreamFactoryAsyncWaiter);
};


class CONTENT_EXPORT RendererAudioInputStreamFactoryClientInterceptorForTesting : public RendererAudioInputStreamFactoryClient {
  virtual RendererAudioInputStreamFactoryClient* GetForwardingInterface() = 0;
  void StreamCreated(mojo::PendingRemote<::media::mojom::AudioInputStream> stream, mojo::PendingReceiver<::media::mojom::AudioInputStreamClient> client_request, ::media::mojom::ReadOnlyAudioDataPipePtr data_pipe, bool initially_muted, const base::Optional<::base::UnguessableToken>& stream_id) override;
};
class CONTENT_EXPORT RendererAudioInputStreamFactoryClientAsyncWaiter {
 public:
  explicit RendererAudioInputStreamFactoryClientAsyncWaiter(RendererAudioInputStreamFactoryClient* proxy);
  ~RendererAudioInputStreamFactoryClientAsyncWaiter();

 private:
  RendererAudioInputStreamFactoryClient* const proxy_;

  DISALLOW_COPY_AND_ASSIGN(RendererAudioInputStreamFactoryClientAsyncWaiter);
};




}  // namespace mojom
}  // namespace content

#endif  // CONTENT_COMMON_MEDIA_RENDERER_AUDIO_INPUT_STREAM_FACTORY_MOJOM_TEST_UTILS_H_