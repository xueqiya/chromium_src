// content/common/media/renderer_audio_output_stream_factory.mojom-test-utils.h is auto generated by mojom_bindings_generator.py, do not edit

// Copyright 2019 The Chromium Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.

#ifndef CONTENT_COMMON_MEDIA_RENDERER_AUDIO_OUTPUT_STREAM_FACTORY_MOJOM_TEST_UTILS_H_
#define CONTENT_COMMON_MEDIA_RENDERER_AUDIO_OUTPUT_STREAM_FACTORY_MOJOM_TEST_UTILS_H_

#include "content/common/media/renderer_audio_output_stream_factory.mojom.h"
#include "content/common/content_export.h"


namespace content {
namespace mojom {


class CONTENT_EXPORT RendererAudioOutputStreamFactoryInterceptorForTesting : public RendererAudioOutputStreamFactory {
  virtual RendererAudioOutputStreamFactory* GetForwardingInterface() = 0;
  void RequestDeviceAuthorization(mojo::PendingReceiver<::media::mojom::AudioOutputStreamProvider> stream_provider_receiver, const base::Optional<::base::UnguessableToken>& session_id, const std::string& device_id, RequestDeviceAuthorizationCallback callback) override;
};
class CONTENT_EXPORT RendererAudioOutputStreamFactoryAsyncWaiter {
 public:
  explicit RendererAudioOutputStreamFactoryAsyncWaiter(RendererAudioOutputStreamFactory* proxy);
  ~RendererAudioOutputStreamFactoryAsyncWaiter();
  void RequestDeviceAuthorization(
      mojo::PendingReceiver<::media::mojom::AudioOutputStreamProvider> stream_provider_receiver, const base::Optional<::base::UnguessableToken>& session_id, const std::string& device_id, ::media::OutputDeviceStatus* out_state, ::media::AudioParameters* out_output_params, std::string* out_matched_device_id);

 private:
  RendererAudioOutputStreamFactory* const proxy_;

  DISALLOW_COPY_AND_ASSIGN(RendererAudioOutputStreamFactoryAsyncWaiter);
};




}  // namespace mojom
}  // namespace content

#endif  // CONTENT_COMMON_MEDIA_RENDERER_AUDIO_OUTPUT_STREAM_FACTORY_MOJOM_TEST_UTILS_H_