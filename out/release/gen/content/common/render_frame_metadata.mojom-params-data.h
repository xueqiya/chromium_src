// content/common/render_frame_metadata.mojom-params-data.h is auto generated by mojom_bindings_generator.py, do not edit

// Copyright 2019 The Chromium Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.

#ifndef CONTENT_COMMON_RENDER_FRAME_METADATA_MOJOM_PARAMS_DATA_H_
#define CONTENT_COMMON_RENDER_FRAME_METADATA_MOJOM_PARAMS_DATA_H_

#include "base/logging.h"
#include "base/macros.h"
#include "mojo/public/cpp/bindings/lib/bindings_internal.h"
#include "mojo/public/cpp/bindings/lib/buffer.h"
#include "mojo/public/cpp/bindings/lib/validation_context.h"

#if defined(__clang__)
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wunused-private-field"
#elif defined(_MSC_VER)
#pragma warning(push)
#pragma warning(disable:4056)
#pragma warning(disable:4065)
#pragma warning(disable:4756)
#endif
namespace content {
namespace mojom {
namespace internal {
class COMPONENT_EXPORT(MOJOM_SHARED_CONTENT_EXPORT) RenderFrameMetadataObserver_ReportAllRootScrollsForAccessibility_Params_Data {
 public:
  class BufferWriter {
   public:
    BufferWriter() = default;

    void Allocate(mojo::internal::Buffer* serialization_buffer) {
      serialization_buffer_ = serialization_buffer;
      index_ = serialization_buffer_->Allocate(sizeof(RenderFrameMetadataObserver_ReportAllRootScrollsForAccessibility_Params_Data));
      new (data()) RenderFrameMetadataObserver_ReportAllRootScrollsForAccessibility_Params_Data();
    }

    bool is_null() const { return !serialization_buffer_; }
    RenderFrameMetadataObserver_ReportAllRootScrollsForAccessibility_Params_Data* data() {
      DCHECK(!is_null());
      return serialization_buffer_->Get<RenderFrameMetadataObserver_ReportAllRootScrollsForAccessibility_Params_Data>(index_);
    }
    RenderFrameMetadataObserver_ReportAllRootScrollsForAccessibility_Params_Data* operator->() { return data(); }

   private:
    mojo::internal::Buffer* serialization_buffer_ = nullptr;
    size_t index_ = 0;

    DISALLOW_COPY_AND_ASSIGN(BufferWriter);
  };

  static bool Validate(const void* data,
                       mojo::internal::ValidationContext* validation_context);

  mojo::internal::StructHeader header_;
  uint8_t enabled : 1;
  uint8_t padfinal_[7];

 private:
  RenderFrameMetadataObserver_ReportAllRootScrollsForAccessibility_Params_Data();
  ~RenderFrameMetadataObserver_ReportAllRootScrollsForAccessibility_Params_Data() = delete;
};
static_assert(sizeof(RenderFrameMetadataObserver_ReportAllRootScrollsForAccessibility_Params_Data) == 16,
              "Bad sizeof(RenderFrameMetadataObserver_ReportAllRootScrollsForAccessibility_Params_Data)");
class COMPONENT_EXPORT(MOJOM_SHARED_CONTENT_EXPORT) RenderFrameMetadataObserver_ReportAllFrameSubmissionsForTesting_Params_Data {
 public:
  class BufferWriter {
   public:
    BufferWriter() = default;

    void Allocate(mojo::internal::Buffer* serialization_buffer) {
      serialization_buffer_ = serialization_buffer;
      index_ = serialization_buffer_->Allocate(sizeof(RenderFrameMetadataObserver_ReportAllFrameSubmissionsForTesting_Params_Data));
      new (data()) RenderFrameMetadataObserver_ReportAllFrameSubmissionsForTesting_Params_Data();
    }

    bool is_null() const { return !serialization_buffer_; }
    RenderFrameMetadataObserver_ReportAllFrameSubmissionsForTesting_Params_Data* data() {
      DCHECK(!is_null());
      return serialization_buffer_->Get<RenderFrameMetadataObserver_ReportAllFrameSubmissionsForTesting_Params_Data>(index_);
    }
    RenderFrameMetadataObserver_ReportAllFrameSubmissionsForTesting_Params_Data* operator->() { return data(); }

   private:
    mojo::internal::Buffer* serialization_buffer_ = nullptr;
    size_t index_ = 0;

    DISALLOW_COPY_AND_ASSIGN(BufferWriter);
  };

  static bool Validate(const void* data,
                       mojo::internal::ValidationContext* validation_context);

  mojo::internal::StructHeader header_;
  uint8_t enabled : 1;
  uint8_t padfinal_[7];

 private:
  RenderFrameMetadataObserver_ReportAllFrameSubmissionsForTesting_Params_Data();
  ~RenderFrameMetadataObserver_ReportAllFrameSubmissionsForTesting_Params_Data() = delete;
};
static_assert(sizeof(RenderFrameMetadataObserver_ReportAllFrameSubmissionsForTesting_Params_Data) == 16,
              "Bad sizeof(RenderFrameMetadataObserver_ReportAllFrameSubmissionsForTesting_Params_Data)");
class COMPONENT_EXPORT(MOJOM_SHARED_CONTENT_EXPORT) RenderFrameMetadataObserverClient_OnRenderFrameMetadataChanged_Params_Data {
 public:
  class BufferWriter {
   public:
    BufferWriter() = default;

    void Allocate(mojo::internal::Buffer* serialization_buffer) {
      serialization_buffer_ = serialization_buffer;
      index_ = serialization_buffer_->Allocate(sizeof(RenderFrameMetadataObserverClient_OnRenderFrameMetadataChanged_Params_Data));
      new (data()) RenderFrameMetadataObserverClient_OnRenderFrameMetadataChanged_Params_Data();
    }

    bool is_null() const { return !serialization_buffer_; }
    RenderFrameMetadataObserverClient_OnRenderFrameMetadataChanged_Params_Data* data() {
      DCHECK(!is_null());
      return serialization_buffer_->Get<RenderFrameMetadataObserverClient_OnRenderFrameMetadataChanged_Params_Data>(index_);
    }
    RenderFrameMetadataObserverClient_OnRenderFrameMetadataChanged_Params_Data* operator->() { return data(); }

   private:
    mojo::internal::Buffer* serialization_buffer_ = nullptr;
    size_t index_ = 0;

    DISALLOW_COPY_AND_ASSIGN(BufferWriter);
  };

  static bool Validate(const void* data,
                       mojo::internal::ValidationContext* validation_context);

  mojo::internal::StructHeader header_;
  uint32_t frame_token;
  uint8_t pad0_[4];
  mojo::internal::Pointer<internal::RenderFrameMetadata_Data> metadata;

 private:
  RenderFrameMetadataObserverClient_OnRenderFrameMetadataChanged_Params_Data();
  ~RenderFrameMetadataObserverClient_OnRenderFrameMetadataChanged_Params_Data() = delete;
};
static_assert(sizeof(RenderFrameMetadataObserverClient_OnRenderFrameMetadataChanged_Params_Data) == 24,
              "Bad sizeof(RenderFrameMetadataObserverClient_OnRenderFrameMetadataChanged_Params_Data)");
class COMPONENT_EXPORT(MOJOM_SHARED_CONTENT_EXPORT) RenderFrameMetadataObserverClient_OnFrameSubmissionForTesting_Params_Data {
 public:
  class BufferWriter {
   public:
    BufferWriter() = default;

    void Allocate(mojo::internal::Buffer* serialization_buffer) {
      serialization_buffer_ = serialization_buffer;
      index_ = serialization_buffer_->Allocate(sizeof(RenderFrameMetadataObserverClient_OnFrameSubmissionForTesting_Params_Data));
      new (data()) RenderFrameMetadataObserverClient_OnFrameSubmissionForTesting_Params_Data();
    }

    bool is_null() const { return !serialization_buffer_; }
    RenderFrameMetadataObserverClient_OnFrameSubmissionForTesting_Params_Data* data() {
      DCHECK(!is_null());
      return serialization_buffer_->Get<RenderFrameMetadataObserverClient_OnFrameSubmissionForTesting_Params_Data>(index_);
    }
    RenderFrameMetadataObserverClient_OnFrameSubmissionForTesting_Params_Data* operator->() { return data(); }

   private:
    mojo::internal::Buffer* serialization_buffer_ = nullptr;
    size_t index_ = 0;

    DISALLOW_COPY_AND_ASSIGN(BufferWriter);
  };

  static bool Validate(const void* data,
                       mojo::internal::ValidationContext* validation_context);

  mojo::internal::StructHeader header_;
  uint32_t frame_token;
  uint8_t padfinal_[4];

 private:
  RenderFrameMetadataObserverClient_OnFrameSubmissionForTesting_Params_Data();
  ~RenderFrameMetadataObserverClient_OnFrameSubmissionForTesting_Params_Data() = delete;
};
static_assert(sizeof(RenderFrameMetadataObserverClient_OnFrameSubmissionForTesting_Params_Data) == 16,
              "Bad sizeof(RenderFrameMetadataObserverClient_OnFrameSubmissionForTesting_Params_Data)");

}  // namespace internal
class RenderFrameMetadataObserver_ReportAllRootScrollsForAccessibility_ParamsDataView {
 public:
  RenderFrameMetadataObserver_ReportAllRootScrollsForAccessibility_ParamsDataView() {}

  RenderFrameMetadataObserver_ReportAllRootScrollsForAccessibility_ParamsDataView(
      internal::RenderFrameMetadataObserver_ReportAllRootScrollsForAccessibility_Params_Data* data,
      mojo::internal::SerializationContext* context)
      : data_(data) {}

  bool is_null() const { return !data_; }
  bool enabled() const {
    return data_->enabled;
  }
 private:
  internal::RenderFrameMetadataObserver_ReportAllRootScrollsForAccessibility_Params_Data* data_ = nullptr;
};

class RenderFrameMetadataObserver_ReportAllFrameSubmissionsForTesting_ParamsDataView {
 public:
  RenderFrameMetadataObserver_ReportAllFrameSubmissionsForTesting_ParamsDataView() {}

  RenderFrameMetadataObserver_ReportAllFrameSubmissionsForTesting_ParamsDataView(
      internal::RenderFrameMetadataObserver_ReportAllFrameSubmissionsForTesting_Params_Data* data,
      mojo::internal::SerializationContext* context)
      : data_(data) {}

  bool is_null() const { return !data_; }
  bool enabled() const {
    return data_->enabled;
  }
 private:
  internal::RenderFrameMetadataObserver_ReportAllFrameSubmissionsForTesting_Params_Data* data_ = nullptr;
};

class RenderFrameMetadataObserverClient_OnRenderFrameMetadataChanged_ParamsDataView {
 public:
  RenderFrameMetadataObserverClient_OnRenderFrameMetadataChanged_ParamsDataView() {}

  RenderFrameMetadataObserverClient_OnRenderFrameMetadataChanged_ParamsDataView(
      internal::RenderFrameMetadataObserverClient_OnRenderFrameMetadataChanged_Params_Data* data,
      mojo::internal::SerializationContext* context)
      : data_(data), context_(context) {}

  bool is_null() const { return !data_; }
  uint32_t frame_token() const {
    return data_->frame_token;
  }
  inline void GetMetadataDataView(
      RenderFrameMetadataDataView* output);

  template <typename UserType>
  WARN_UNUSED_RESULT bool ReadMetadata(UserType* output) {
    auto* pointer = data_->metadata.Get();
    return mojo::internal::Deserialize<::content::mojom::RenderFrameMetadataDataView>(
        pointer, output, context_);
  }
 private:
  internal::RenderFrameMetadataObserverClient_OnRenderFrameMetadataChanged_Params_Data* data_ = nullptr;
  mojo::internal::SerializationContext* context_ = nullptr;
};

class RenderFrameMetadataObserverClient_OnFrameSubmissionForTesting_ParamsDataView {
 public:
  RenderFrameMetadataObserverClient_OnFrameSubmissionForTesting_ParamsDataView() {}

  RenderFrameMetadataObserverClient_OnFrameSubmissionForTesting_ParamsDataView(
      internal::RenderFrameMetadataObserverClient_OnFrameSubmissionForTesting_Params_Data* data,
      mojo::internal::SerializationContext* context)
      : data_(data) {}

  bool is_null() const { return !data_; }
  uint32_t frame_token() const {
    return data_->frame_token;
  }
 private:
  internal::RenderFrameMetadataObserverClient_OnFrameSubmissionForTesting_Params_Data* data_ = nullptr;
};






inline void RenderFrameMetadataObserverClient_OnRenderFrameMetadataChanged_ParamsDataView::GetMetadataDataView(
    RenderFrameMetadataDataView* output) {
  auto pointer = data_->metadata.Get();
  *output = RenderFrameMetadataDataView(pointer, context_);
}



}  // namespace mojom
}  // namespace content

#if defined(__clang__)
#pragma clang diagnostic pop
#elif defined(_MSC_VER)
#pragma warning(pop)
#endif

#endif  // CONTENT_COMMON_RENDER_FRAME_METADATA_MOJOM_PARAMS_DATA_H_