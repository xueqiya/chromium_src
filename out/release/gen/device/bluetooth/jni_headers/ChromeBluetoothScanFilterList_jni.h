// Copyright 2014 The Chromium Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.


// This file is autogenerated by
//     base/android/jni_generator/jni_generator.py
// For
//     org/chromium/device/bluetooth/ChromeBluetoothScanFilterList

#ifndef org_chromium_device_bluetooth_ChromeBluetoothScanFilterList_JNI
#define org_chromium_device_bluetooth_ChromeBluetoothScanFilterList_JNI

#include <jni.h>

#include "../../../../../../base/android/jni_generator/jni_generator_helper.h"


// Step 1: Forward declarations.

JNI_REGISTRATION_EXPORT extern const char
    kClassPath_org_chromium_device_bluetooth_ChromeBluetoothScanFilterList[];
const char kClassPath_org_chromium_device_bluetooth_ChromeBluetoothScanFilterList[] =
    "org/chromium/device/bluetooth/ChromeBluetoothScanFilterList";
// Leaking this jclass as we cannot use LazyInstance from some threads.
JNI_REGISTRATION_EXPORT std::atomic<jclass>
    g_org_chromium_device_bluetooth_ChromeBluetoothScanFilterList_clazz(nullptr);
#ifndef org_chromium_device_bluetooth_ChromeBluetoothScanFilterList_clazz_defined
#define org_chromium_device_bluetooth_ChromeBluetoothScanFilterList_clazz_defined
inline jclass org_chromium_device_bluetooth_ChromeBluetoothScanFilterList_clazz(JNIEnv* env) {
  return base::android::LazyGetClass(env,
      kClassPath_org_chromium_device_bluetooth_ChromeBluetoothScanFilterList,
      &g_org_chromium_device_bluetooth_ChromeBluetoothScanFilterList_clazz);
}
#endif


// Step 2: Constants (optional).


// Step 3: Method stubs.
namespace device {


static std::atomic<jmethodID>
    g_org_chromium_device_bluetooth_ChromeBluetoothScanFilterList_create(nullptr);
static base::android::ScopedJavaLocalRef<jobject> Java_ChromeBluetoothScanFilterList_create(JNIEnv*
    env) {
  jclass clazz = org_chromium_device_bluetooth_ChromeBluetoothScanFilterList_clazz(env);
  CHECK_CLAZZ(env, clazz,
      org_chromium_device_bluetooth_ChromeBluetoothScanFilterList_clazz(env), NULL);

  jni_generator::JniJavaCallContextChecked call_context;
  call_context.Init<
      base::android::MethodID::TYPE_STATIC>(
          env,
          clazz,
          "create",
          "()Lorg/chromium/device/bluetooth/ChromeBluetoothScanFilterList;",
          &g_org_chromium_device_bluetooth_ChromeBluetoothScanFilterList_create);

  jobject ret =
      env->CallStaticObjectMethod(clazz,
          call_context.base.method_id);
  return base::android::ScopedJavaLocalRef<jobject>(env, ret);
}

static std::atomic<jmethodID>
    g_org_chromium_device_bluetooth_ChromeBluetoothScanFilterList_addFilter(nullptr);
static void Java_ChromeBluetoothScanFilterList_addFilter(JNIEnv* env, const
    base::android::JavaRef<jobject>& obj, const base::android::JavaRef<jobject>& filter) {
  jclass clazz = org_chromium_device_bluetooth_ChromeBluetoothScanFilterList_clazz(env);
  CHECK_CLAZZ(env, obj.obj(),
      org_chromium_device_bluetooth_ChromeBluetoothScanFilterList_clazz(env));

  jni_generator::JniJavaCallContextChecked call_context;
  call_context.Init<
      base::android::MethodID::TYPE_INSTANCE>(
          env,
          clazz,
          "addFilter",
          "(Landroid/bluetooth/le/ScanFilter;)V",
          &g_org_chromium_device_bluetooth_ChromeBluetoothScanFilterList_addFilter);

     env->CallVoidMethod(obj.obj(),
          call_context.base.method_id, filter.obj());
}

static std::atomic<jmethodID>
    g_org_chromium_device_bluetooth_ChromeBluetoothScanFilterList_getList(nullptr);
static base::android::ScopedJavaLocalRef<jobject> Java_ChromeBluetoothScanFilterList_getList(JNIEnv*
    env, const base::android::JavaRef<jobject>& obj) {
  jclass clazz = org_chromium_device_bluetooth_ChromeBluetoothScanFilterList_clazz(env);
  CHECK_CLAZZ(env, obj.obj(),
      org_chromium_device_bluetooth_ChromeBluetoothScanFilterList_clazz(env), NULL);

  jni_generator::JniJavaCallContextChecked call_context;
  call_context.Init<
      base::android::MethodID::TYPE_INSTANCE>(
          env,
          clazz,
          "getList",
          "()Ljava/util/ArrayList;",
          &g_org_chromium_device_bluetooth_ChromeBluetoothScanFilterList_getList);

  jobject ret =
      env->CallObjectMethod(obj.obj(),
          call_context.base.method_id);
  return base::android::ScopedJavaLocalRef<jobject>(env, ret);
}

}  // namespace device

// Step 4: Generated test functions (optional).


#endif  // org_chromium_device_bluetooth_ChromeBluetoothScanFilterList_JNI
