// Copyright 2014 The Chromium Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.


// This file is autogenerated by
//     base/android/jni_generator/jni_generator.py
// For
//     org/chromium/device/bluetooth/ChromeBluetoothRemoteGattCharacteristic

#ifndef org_chromium_device_bluetooth_ChromeBluetoothRemoteGattCharacteristic_JNI
#define org_chromium_device_bluetooth_ChromeBluetoothRemoteGattCharacteristic_JNI

#include <jni.h>

#include "../../../../../../base/android/jni_generator/jni_generator_helper.h"


// Step 1: Forward declarations.

JNI_REGISTRATION_EXPORT extern const char
    kClassPath_org_chromium_device_bluetooth_ChromeBluetoothRemoteGattCharacteristic[];
const char kClassPath_org_chromium_device_bluetooth_ChromeBluetoothRemoteGattCharacteristic[] =
    "org/chromium/device/bluetooth/ChromeBluetoothRemoteGattCharacteristic";
// Leaking this jclass as we cannot use LazyInstance from some threads.
JNI_REGISTRATION_EXPORT std::atomic<jclass>
    g_org_chromium_device_bluetooth_ChromeBluetoothRemoteGattCharacteristic_clazz(nullptr);
#ifndef org_chromium_device_bluetooth_ChromeBluetoothRemoteGattCharacteristic_clazz_defined
#define org_chromium_device_bluetooth_ChromeBluetoothRemoteGattCharacteristic_clazz_defined
inline jclass org_chromium_device_bluetooth_ChromeBluetoothRemoteGattCharacteristic_clazz(JNIEnv*
    env) {
  return base::android::LazyGetClass(env,
      kClassPath_org_chromium_device_bluetooth_ChromeBluetoothRemoteGattCharacteristic,
      &g_org_chromium_device_bluetooth_ChromeBluetoothRemoteGattCharacteristic_clazz);
}
#endif


// Step 2: Constants (optional).


// Step 3: Method stubs.
namespace device {

JNI_GENERATOR_EXPORT void Java_J_N_MZCKcdTH(
    JNIEnv* env,
    jclass jcaller,
    jlong nativeBluetoothRemoteGattCharacteristicAndroid,
    jobject caller,
    jbyteArray value) {
  BluetoothRemoteGattCharacteristicAndroid* native =
      reinterpret_cast<BluetoothRemoteGattCharacteristicAndroid*>(nativeBluetoothRemoteGattCharacteristicAndroid);
  CHECK_NATIVE_PTR(env, jcaller, native, "OnChanged");
  return native->OnChanged(env, base::android::JavaParamRef<jobject>(env, caller),
      base::android::JavaParamRef<jbyteArray>(env, value));
}

JNI_GENERATOR_EXPORT void Java_J_N_Mn9Gzi_00024d(
    JNIEnv* env,
    jclass jcaller,
    jlong nativeBluetoothRemoteGattCharacteristicAndroid,
    jobject caller,
    jint status,
    jbyteArray value) {
  BluetoothRemoteGattCharacteristicAndroid* native =
      reinterpret_cast<BluetoothRemoteGattCharacteristicAndroid*>(nativeBluetoothRemoteGattCharacteristicAndroid);
  CHECK_NATIVE_PTR(env, jcaller, native, "OnRead");
  return native->OnRead(env, base::android::JavaParamRef<jobject>(env, caller), status,
      base::android::JavaParamRef<jbyteArray>(env, value));
}

JNI_GENERATOR_EXPORT void Java_J_N_M3TCxDs5(
    JNIEnv* env,
    jclass jcaller,
    jlong nativeBluetoothRemoteGattCharacteristicAndroid,
    jobject caller,
    jint status) {
  BluetoothRemoteGattCharacteristicAndroid* native =
      reinterpret_cast<BluetoothRemoteGattCharacteristicAndroid*>(nativeBluetoothRemoteGattCharacteristicAndroid);
  CHECK_NATIVE_PTR(env, jcaller, native, "OnWrite");
  return native->OnWrite(env, base::android::JavaParamRef<jobject>(env, caller), status);
}

JNI_GENERATOR_EXPORT void Java_J_N_MkqvrLoV(
    JNIEnv* env,
    jclass jcaller,
    jlong nativeBluetoothRemoteGattCharacteristicAndroid,
    jobject caller,
    jstring instanceId,
    jobject descriptorWrapper,
    jobject chromeBluetoothDevice) {
  BluetoothRemoteGattCharacteristicAndroid* native =
      reinterpret_cast<BluetoothRemoteGattCharacteristicAndroid*>(nativeBluetoothRemoteGattCharacteristicAndroid);
  CHECK_NATIVE_PTR(env, jcaller, native, "CreateGattRemoteDescriptor");
  return native->CreateGattRemoteDescriptor(env, base::android::JavaParamRef<jobject>(env, caller),
      base::android::JavaParamRef<jstring>(env, instanceId),
      base::android::JavaParamRef<jobject>(env, descriptorWrapper),
      base::android::JavaParamRef<jobject>(env, chromeBluetoothDevice));
}


static std::atomic<jmethodID>
    g_org_chromium_device_bluetooth_ChromeBluetoothRemoteGattCharacteristic_onBluetoothRemoteGattCharacteristicAndroidDestruction(nullptr);
static void
    Java_ChromeBluetoothRemoteGattCharacteristic_onBluetoothRemoteGattCharacteristicAndroidDestruction(JNIEnv*
    env, const base::android::JavaRef<jobject>& obj) {
  jclass clazz = org_chromium_device_bluetooth_ChromeBluetoothRemoteGattCharacteristic_clazz(env);
  CHECK_CLAZZ(env, obj.obj(),
      org_chromium_device_bluetooth_ChromeBluetoothRemoteGattCharacteristic_clazz(env));

  jni_generator::JniJavaCallContextChecked call_context;
  call_context.Init<
      base::android::MethodID::TYPE_INSTANCE>(
          env,
          clazz,
          "onBluetoothRemoteGattCharacteristicAndroidDestruction",
          "()V",
&g_org_chromium_device_bluetooth_ChromeBluetoothRemoteGattCharacteristic_onBluetoothRemoteGattCharacteristicAndroidDestruction);

     env->CallVoidMethod(obj.obj(),
          call_context.base.method_id);
}

static std::atomic<jmethodID>
    g_org_chromium_device_bluetooth_ChromeBluetoothRemoteGattCharacteristic_create(nullptr);
static base::android::ScopedJavaLocalRef<jobject>
    Java_ChromeBluetoothRemoteGattCharacteristic_create(JNIEnv* env, jlong
    nativeBluetoothRemoteGattCharacteristicAndroid,
    const base::android::JavaRef<jobject>& characteristicWrapper,
    const base::android::JavaRef<jstring>& instanceId,
    const base::android::JavaRef<jobject>& chromeDevice) {
  jclass clazz = org_chromium_device_bluetooth_ChromeBluetoothRemoteGattCharacteristic_clazz(env);
  CHECK_CLAZZ(env, clazz,
      org_chromium_device_bluetooth_ChromeBluetoothRemoteGattCharacteristic_clazz(env), NULL);

  jni_generator::JniJavaCallContextChecked call_context;
  call_context.Init<
      base::android::MethodID::TYPE_STATIC>(
          env,
          clazz,
          "create",
"(JLorg/chromium/device/bluetooth/Wrappers$BluetoothGattCharacteristicWrapper;Ljava/lang/String;Lorg/chromium/device/bluetooth/ChromeBluetoothDevice;)Lorg/chromium/device/bluetooth/ChromeBluetoothRemoteGattCharacteristic;",
          &g_org_chromium_device_bluetooth_ChromeBluetoothRemoteGattCharacteristic_create);

  jobject ret =
      env->CallStaticObjectMethod(clazz,
          call_context.base.method_id, nativeBluetoothRemoteGattCharacteristicAndroid,
              characteristicWrapper.obj(), instanceId.obj(), chromeDevice.obj());
  return base::android::ScopedJavaLocalRef<jobject>(env, ret);
}

static std::atomic<jmethodID>
    g_org_chromium_device_bluetooth_ChromeBluetoothRemoteGattCharacteristic_getUUID(nullptr);
static base::android::ScopedJavaLocalRef<jstring>
    Java_ChromeBluetoothRemoteGattCharacteristic_getUUID(JNIEnv* env, const
    base::android::JavaRef<jobject>& obj) {
  jclass clazz = org_chromium_device_bluetooth_ChromeBluetoothRemoteGattCharacteristic_clazz(env);
  CHECK_CLAZZ(env, obj.obj(),
      org_chromium_device_bluetooth_ChromeBluetoothRemoteGattCharacteristic_clazz(env), NULL);

  jni_generator::JniJavaCallContextChecked call_context;
  call_context.Init<
      base::android::MethodID::TYPE_INSTANCE>(
          env,
          clazz,
          "getUUID",
          "()Ljava/lang/String;",
          &g_org_chromium_device_bluetooth_ChromeBluetoothRemoteGattCharacteristic_getUUID);

  jstring ret =
      static_cast<jstring>(env->CallObjectMethod(obj.obj(),
          call_context.base.method_id));
  return base::android::ScopedJavaLocalRef<jstring>(env, ret);
}

static std::atomic<jmethodID>
    g_org_chromium_device_bluetooth_ChromeBluetoothRemoteGattCharacteristic_getProperties(nullptr);
static jint Java_ChromeBluetoothRemoteGattCharacteristic_getProperties(JNIEnv* env, const
    base::android::JavaRef<jobject>& obj) {
  jclass clazz = org_chromium_device_bluetooth_ChromeBluetoothRemoteGattCharacteristic_clazz(env);
  CHECK_CLAZZ(env, obj.obj(),
      org_chromium_device_bluetooth_ChromeBluetoothRemoteGattCharacteristic_clazz(env), 0);

  jni_generator::JniJavaCallContextChecked call_context;
  call_context.Init<
      base::android::MethodID::TYPE_INSTANCE>(
          env,
          clazz,
          "getProperties",
          "()I",
          &g_org_chromium_device_bluetooth_ChromeBluetoothRemoteGattCharacteristic_getProperties);

  jint ret =
      env->CallIntMethod(obj.obj(),
          call_context.base.method_id);
  return ret;
}

static std::atomic<jmethodID>
    g_org_chromium_device_bluetooth_ChromeBluetoothRemoteGattCharacteristic_readRemoteCharacteristic(nullptr);
static jboolean Java_ChromeBluetoothRemoteGattCharacteristic_readRemoteCharacteristic(JNIEnv* env,
    const base::android::JavaRef<jobject>& obj) {
  jclass clazz = org_chromium_device_bluetooth_ChromeBluetoothRemoteGattCharacteristic_clazz(env);
  CHECK_CLAZZ(env, obj.obj(),
      org_chromium_device_bluetooth_ChromeBluetoothRemoteGattCharacteristic_clazz(env), false);

  jni_generator::JniJavaCallContextChecked call_context;
  call_context.Init<
      base::android::MethodID::TYPE_INSTANCE>(
          env,
          clazz,
          "readRemoteCharacteristic",
          "()Z",
&g_org_chromium_device_bluetooth_ChromeBluetoothRemoteGattCharacteristic_readRemoteCharacteristic);

  jboolean ret =
      env->CallBooleanMethod(obj.obj(),
          call_context.base.method_id);
  return ret;
}

static std::atomic<jmethodID>
    g_org_chromium_device_bluetooth_ChromeBluetoothRemoteGattCharacteristic_writeRemoteCharacteristic(nullptr);
static jboolean Java_ChromeBluetoothRemoteGattCharacteristic_writeRemoteCharacteristic(JNIEnv* env,
    const base::android::JavaRef<jobject>& obj, const base::android::JavaRef<jbyteArray>& value) {
  jclass clazz = org_chromium_device_bluetooth_ChromeBluetoothRemoteGattCharacteristic_clazz(env);
  CHECK_CLAZZ(env, obj.obj(),
      org_chromium_device_bluetooth_ChromeBluetoothRemoteGattCharacteristic_clazz(env), false);

  jni_generator::JniJavaCallContextChecked call_context;
  call_context.Init<
      base::android::MethodID::TYPE_INSTANCE>(
          env,
          clazz,
          "writeRemoteCharacteristic",
          "([B)Z",
&g_org_chromium_device_bluetooth_ChromeBluetoothRemoteGattCharacteristic_writeRemoteCharacteristic);

  jboolean ret =
      env->CallBooleanMethod(obj.obj(),
          call_context.base.method_id, value.obj());
  return ret;
}

static std::atomic<jmethodID>
    g_org_chromium_device_bluetooth_ChromeBluetoothRemoteGattCharacteristic_setCharacteristicNotification(nullptr);
static jboolean Java_ChromeBluetoothRemoteGattCharacteristic_setCharacteristicNotification(JNIEnv*
    env, const base::android::JavaRef<jobject>& obj, jboolean enabled) {
  jclass clazz = org_chromium_device_bluetooth_ChromeBluetoothRemoteGattCharacteristic_clazz(env);
  CHECK_CLAZZ(env, obj.obj(),
      org_chromium_device_bluetooth_ChromeBluetoothRemoteGattCharacteristic_clazz(env), false);

  jni_generator::JniJavaCallContextChecked call_context;
  call_context.Init<
      base::android::MethodID::TYPE_INSTANCE>(
          env,
          clazz,
          "setCharacteristicNotification",
          "(Z)Z",
&g_org_chromium_device_bluetooth_ChromeBluetoothRemoteGattCharacteristic_setCharacteristicNotification);

  jboolean ret =
      env->CallBooleanMethod(obj.obj(),
          call_context.base.method_id, enabled);
  return ret;
}

static std::atomic<jmethodID>
    g_org_chromium_device_bluetooth_ChromeBluetoothRemoteGattCharacteristic_createDescriptors(nullptr);
static void Java_ChromeBluetoothRemoteGattCharacteristic_createDescriptors(JNIEnv* env, const
    base::android::JavaRef<jobject>& obj) {
  jclass clazz = org_chromium_device_bluetooth_ChromeBluetoothRemoteGattCharacteristic_clazz(env);
  CHECK_CLAZZ(env, obj.obj(),
      org_chromium_device_bluetooth_ChromeBluetoothRemoteGattCharacteristic_clazz(env));

  jni_generator::JniJavaCallContextChecked call_context;
  call_context.Init<
      base::android::MethodID::TYPE_INSTANCE>(
          env,
          clazz,
          "createDescriptors",
          "()V",
&g_org_chromium_device_bluetooth_ChromeBluetoothRemoteGattCharacteristic_createDescriptors);

     env->CallVoidMethod(obj.obj(),
          call_context.base.method_id);
}

}  // namespace device

// Step 4: Generated test functions (optional).


#endif  // org_chromium_device_bluetooth_ChromeBluetoothRemoteGattCharacteristic_JNI
