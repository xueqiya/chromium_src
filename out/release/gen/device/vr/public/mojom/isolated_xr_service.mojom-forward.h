// device/vr/public/mojom/isolated_xr_service.mojom-forward.h is auto generated by mojom_bindings_generator.py, do not edit

// Copyright 2019 The Chromium Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.

#ifndef DEVICE_VR_PUBLIC_MOJOM_ISOLATED_XR_SERVICE_MOJOM_FORWARD_H_
#define DEVICE_VR_PUBLIC_MOJOM_ISOLATED_XR_SERVICE_MOJOM_FORWARD_H_



#include "mojo/public/cpp/bindings/struct_forward.h"

#include "mojo/public/cpp/bindings/deprecated_interface_types_forward.h"


#include "mojo/public/interfaces/bindings/native_struct.mojom-forward.h"






namespace device {
namespace mojom {
class XRRuntimeSessionOptionsDataView;

class XRRuntimeSessionOptions;
using XRRuntimeSessionOptionsPtr = mojo::StructPtr<XRRuntimeSessionOptions>;

class XRSessionController;

using XRSessionControllerPtr = mojo::InterfacePtr<XRSessionController>;
using XRSessionControllerPtrInfo = mojo::InterfacePtrInfo<XRSessionController>;
using ThreadSafeXRSessionControllerPtr =
    mojo::ThreadSafeInterfacePtr<XRSessionController>;

using XRSessionControllerRequest = mojo::InterfaceRequest<XRSessionController>;

using XRSessionControllerAssociatedPtr =
    mojo::AssociatedInterfacePtr<XRSessionController>;
using ThreadSafeXRSessionControllerAssociatedPtr =
    mojo::ThreadSafeAssociatedInterfacePtr<XRSessionController>;
using XRSessionControllerAssociatedPtrInfo =
    mojo::AssociatedInterfacePtrInfo<XRSessionController>;

using XRSessionControllerAssociatedRequest =
    mojo::AssociatedInterfaceRequest<XRSessionController>;

class XRRuntimeEventListener;

using XRRuntimeEventListenerPtr = mojo::InterfacePtr<XRRuntimeEventListener>;
using XRRuntimeEventListenerPtrInfo = mojo::InterfacePtrInfo<XRRuntimeEventListener>;
using ThreadSafeXRRuntimeEventListenerPtr =
    mojo::ThreadSafeInterfacePtr<XRRuntimeEventListener>;

using XRRuntimeEventListenerRequest = mojo::InterfaceRequest<XRRuntimeEventListener>;

using XRRuntimeEventListenerAssociatedPtr =
    mojo::AssociatedInterfacePtr<XRRuntimeEventListener>;
using ThreadSafeXRRuntimeEventListenerAssociatedPtr =
    mojo::ThreadSafeAssociatedInterfacePtr<XRRuntimeEventListener>;
using XRRuntimeEventListenerAssociatedPtrInfo =
    mojo::AssociatedInterfacePtrInfo<XRRuntimeEventListener>;

using XRRuntimeEventListenerAssociatedRequest =
    mojo::AssociatedInterfaceRequest<XRRuntimeEventListener>;

class XRRuntime;

using XRRuntimePtr = mojo::InterfacePtr<XRRuntime>;
using XRRuntimePtrInfo = mojo::InterfacePtrInfo<XRRuntime>;
using ThreadSafeXRRuntimePtr =
    mojo::ThreadSafeInterfacePtr<XRRuntime>;

using XRRuntimeRequest = mojo::InterfaceRequest<XRRuntime>;

using XRRuntimeAssociatedPtr =
    mojo::AssociatedInterfacePtr<XRRuntime>;
using ThreadSafeXRRuntimeAssociatedPtr =
    mojo::ThreadSafeAssociatedInterfacePtr<XRRuntime>;
using XRRuntimeAssociatedPtrInfo =
    mojo::AssociatedInterfacePtrInfo<XRRuntime>;

using XRRuntimeAssociatedRequest =
    mojo::AssociatedInterfaceRequest<XRRuntime>;

class ImmersiveOverlay;

using ImmersiveOverlayPtr = mojo::InterfacePtr<ImmersiveOverlay>;
using ImmersiveOverlayPtrInfo = mojo::InterfacePtrInfo<ImmersiveOverlay>;
using ThreadSafeImmersiveOverlayPtr =
    mojo::ThreadSafeInterfacePtr<ImmersiveOverlay>;

using ImmersiveOverlayRequest = mojo::InterfaceRequest<ImmersiveOverlay>;

using ImmersiveOverlayAssociatedPtr =
    mojo::AssociatedInterfacePtr<ImmersiveOverlay>;
using ThreadSafeImmersiveOverlayAssociatedPtr =
    mojo::ThreadSafeAssociatedInterfacePtr<ImmersiveOverlay>;
using ImmersiveOverlayAssociatedPtrInfo =
    mojo::AssociatedInterfacePtrInfo<ImmersiveOverlay>;

using ImmersiveOverlayAssociatedRequest =
    mojo::AssociatedInterfaceRequest<ImmersiveOverlay>;

class XRCompositorHost;

using XRCompositorHostPtr = mojo::InterfacePtr<XRCompositorHost>;
using XRCompositorHostPtrInfo = mojo::InterfacePtrInfo<XRCompositorHost>;
using ThreadSafeXRCompositorHostPtr =
    mojo::ThreadSafeInterfacePtr<XRCompositorHost>;

using XRCompositorHostRequest = mojo::InterfaceRequest<XRCompositorHost>;

using XRCompositorHostAssociatedPtr =
    mojo::AssociatedInterfacePtr<XRCompositorHost>;
using ThreadSafeXRCompositorHostAssociatedPtr =
    mojo::ThreadSafeAssociatedInterfacePtr<XRCompositorHost>;
using XRCompositorHostAssociatedPtrInfo =
    mojo::AssociatedInterfacePtrInfo<XRCompositorHost>;

using XRCompositorHostAssociatedRequest =
    mojo::AssociatedInterfaceRequest<XRCompositorHost>;

class IsolatedXRRuntimeProviderClient;

using IsolatedXRRuntimeProviderClientPtr = mojo::InterfacePtr<IsolatedXRRuntimeProviderClient>;
using IsolatedXRRuntimeProviderClientPtrInfo = mojo::InterfacePtrInfo<IsolatedXRRuntimeProviderClient>;
using ThreadSafeIsolatedXRRuntimeProviderClientPtr =
    mojo::ThreadSafeInterfacePtr<IsolatedXRRuntimeProviderClient>;

using IsolatedXRRuntimeProviderClientRequest = mojo::InterfaceRequest<IsolatedXRRuntimeProviderClient>;

using IsolatedXRRuntimeProviderClientAssociatedPtr =
    mojo::AssociatedInterfacePtr<IsolatedXRRuntimeProviderClient>;
using ThreadSafeIsolatedXRRuntimeProviderClientAssociatedPtr =
    mojo::ThreadSafeAssociatedInterfacePtr<IsolatedXRRuntimeProviderClient>;
using IsolatedXRRuntimeProviderClientAssociatedPtrInfo =
    mojo::AssociatedInterfacePtrInfo<IsolatedXRRuntimeProviderClient>;

using IsolatedXRRuntimeProviderClientAssociatedRequest =
    mojo::AssociatedInterfaceRequest<IsolatedXRRuntimeProviderClient>;

class IsolatedXRRuntimeProvider;

using IsolatedXRRuntimeProviderPtr = mojo::InterfacePtr<IsolatedXRRuntimeProvider>;
using IsolatedXRRuntimeProviderPtrInfo = mojo::InterfacePtrInfo<IsolatedXRRuntimeProvider>;
using ThreadSafeIsolatedXRRuntimeProviderPtr =
    mojo::ThreadSafeInterfacePtr<IsolatedXRRuntimeProvider>;

using IsolatedXRRuntimeProviderRequest = mojo::InterfaceRequest<IsolatedXRRuntimeProvider>;

using IsolatedXRRuntimeProviderAssociatedPtr =
    mojo::AssociatedInterfacePtr<IsolatedXRRuntimeProvider>;
using ThreadSafeIsolatedXRRuntimeProviderAssociatedPtr =
    mojo::ThreadSafeAssociatedInterfacePtr<IsolatedXRRuntimeProvider>;
using IsolatedXRRuntimeProviderAssociatedPtrInfo =
    mojo::AssociatedInterfacePtrInfo<IsolatedXRRuntimeProvider>;

using IsolatedXRRuntimeProviderAssociatedRequest =
    mojo::AssociatedInterfaceRequest<IsolatedXRRuntimeProvider>;

class XRDeviceService;

using XRDeviceServicePtr = mojo::InterfacePtr<XRDeviceService>;
using XRDeviceServicePtrInfo = mojo::InterfacePtrInfo<XRDeviceService>;
using ThreadSafeXRDeviceServicePtr =
    mojo::ThreadSafeInterfacePtr<XRDeviceService>;

using XRDeviceServiceRequest = mojo::InterfaceRequest<XRDeviceService>;

using XRDeviceServiceAssociatedPtr =
    mojo::AssociatedInterfacePtr<XRDeviceService>;
using ThreadSafeXRDeviceServiceAssociatedPtr =
    mojo::ThreadSafeAssociatedInterfacePtr<XRDeviceService>;
using XRDeviceServiceAssociatedPtrInfo =
    mojo::AssociatedInterfacePtrInfo<XRDeviceService>;

using XRDeviceServiceAssociatedRequest =
    mojo::AssociatedInterfaceRequest<XRDeviceService>;




}  // namespace mojom
}  // namespace device

#endif  // DEVICE_VR_PUBLIC_MOJOM_ISOLATED_XR_SERVICE_MOJOM_FORWARD_H_